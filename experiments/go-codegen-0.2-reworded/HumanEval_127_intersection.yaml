name: HumanEval_127_intersection
language: go_test.go
prompt: "package intersection_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // You are given two intervals,\n// where each interval is a pair of integers. For\
  \ example, interval = (start, end) = (1, 2).\n// The given intervals are closed\
  \ which means that the interval (start, end)\n// includes both start and end.\n\
  // For each given interval, it is assumed that its start is less or equal its end.\n\
  // Your task is to determine whether the length of intersection of these two \n\
  // intervals is a prime number.\n// Example, the intersection of the intervals (1,\
  \ 3), (2, 4) is (2, 3)\n// which its length is 1, which not a prime number.\n//\
  \ If the length of the intersection is a prime number, return \"YES\",\n// otherwise,\
  \ return \"NO\".\n// If the two intervals don't intersect, return \"NO\".\n// [input/output]\
  \ samples:\n// >>> intersection([]interface{}{1, 2}, []interface{}{2, 3})\n// \"\
  NO\"\n// >>> intersection([]interface{}{-1, 1}, []interface{}{0, 4})\n// \"NO\"\n\
  // >>> intersection([]interface{}{-3, -1}, []interface{}{-5, 5})\n// \"YES\"\nfunc\
  \ intersection(interval1 []interface{}, interval2 []interface{}) string {\n"
tests: "func TestIntersection(t *testing.T) {\n  candidate := intersection\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate([]interface{}{1, 2}, []interface{}{2, 3}),\
  \ expected: \"NO\" },\n     { actual: candidate([]interface{}{-1, 1}, []interface{}{0,\
  \ 4}), expected: \"NO\" },\n     { actual: candidate([]interface{}{-3, -1}, []interface{}{-5,\
  \ 5}), expected: \"YES\" },\n     { actual: candidate([]interface{}{-2, 2}, []interface{}{-4,\
  \ 0}), expected: \"YES\" },\n     { actual: candidate([]interface{}{-11, 2}, []interface{}{-1,\
  \ -1}), expected: \"NO\" },\n     { actual: candidate([]interface{}{1, 2}, []interface{}{3,\
  \ 5}), expected: \"NO\" },\n     { actual: candidate([]interface{}{1, 2}, []interface{}{1,\
  \ 2}), expected: \"NO\" },\n     { actual: candidate([]interface{}{-2, -2}, []interface{}{-3,\
  \ -2}), expected: \"NO\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    // Your code here\n    return \"NO\"\n}\n\n//  [input] interval1,\
    \ interval2: two intervals\n//  [output] intersection: the intersection of interval1\
    \ and interval2", "    if len(interval1) == 0 || len(interval2) == 0 {\n     \
    \   return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 > end1\
    \ || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 == end1\
    \ && start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if start2 == end1 {\n        return \"YES\"\n    }\n    \n   \
    \ if start1 == end2 {\n        return \"YES\"\n    }\n    \n    if start2 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    if start1 == start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start2 == end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start1 == end2 {\n        return \"YES\"\n    }\n    \n    if start2\
    \ == end1 {\n        return \"YES\"\n    }\n    \n    if start1 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start2 == end1 {\n        return \"\
    YES\"\n    }\n    \n    if start1 == end2 {\n        return \"YES\"\n    }\n \
    \   \n    if start2 == end1 {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) ||\
    \ interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[0].(int)\
    \ && interval1[0].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[1].(int) && interval1[0].(int) == interval2[0].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[0].(int)\
    \ && interval1[0].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    return \"NO\"\n}\n", "    // Your code here\n    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[1] <\
    \ interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[1] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] {\n \
    \       if interval1[1] == interval2[1] {\n            return \"YES\"\n      \
    \  }\n        \n        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[1]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1] == interval2[0]\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if end1 < start2 {\n\
    \        return \"NO\"\n    }\n    \n    if end2 < start1 {\n        return \"\
    NO\"\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n   \
    \ }\n    \n    if end1 - start1 > end2 - start2 {\n        return \"NO\"\n   \
    \ }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n \
    \   }\n    \n    if end1 - start1 < end2 - start2 {\n        return \"NO\"\n \
    \   }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n\
    \    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    start1 := interval1[0].(int)\n    end1 := interval1[1].(int)\n    start2\
    \ := interval2[0].(int)\n    end2 := interval2[1].(int)\n    \n    if end1 < start2\
    \ || end2 < start1 {\n        return \"NO\"\n    }\n    \n    if end1 > start2\
    \ && end2 > start1 {\n        return \"YES\"\n    }\n    \n    if end1 == start2\
    \ && end2 == start1 {\n        return \"YES\"\n    }\n    \n    if end1 == start2\
    \ {\n        return \"YES\"\n    }\n    \n    if end2 == start1 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 < end2 {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        interval1[0] = interval1[0].(int) - 1\n    }\n\
    \    \n    if interval1[1].(int) < interval2[1].(int) {\n        interval1[1]\
    \ = interval1[1].(int) + 1\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        interval1[0] = interval1[0].(int) - 1\n    }\n\
    \    \n    if interval1[1].(int) < interval2[1].(int) {\n        interval1[1]\
    \ = interval1[1].(int) + 1\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1 == start2\
    \ && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ {\n        if end1 > end2 {\n            return \"YES\"\n        }\n       \
    \ return \"NO\"\n    }\n    \n    if end1 == end2 {\n        if start1 > start2\
    \ {\n            return \"YES\"\n        }\n        return \"NO\"\n    }\n   \
    \ \n    if start1 < start2 {\n        return \"NO\"\n    }\n    \n    if end1\
    \ > end2 {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "  \
    \  if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 < start2 ||\
    \ end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1 == end1 &&\
    \ start2 == end2 {\n        return \"NO\"\n    }\n    \n    if start1 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if\
    \ start1 > start2 {\n        start1, start2 = start2, start1\n        end1, end2\
    \ = end2, end1\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\
    \n    }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n  \
    \  if start1 < end2 && end1 > end2 {\n        return \"YES\"\n    }\n    \n  \
    \  if start2 < end1 && end2 > end1 {\n        return \"YES\"\n    }\n    \n  \
    \  if start1 < end2 && end1 > end2 {\n        return \"YES\"\n    }\n    \n  \
    \  if start2 < end1 && end2 > end1 {\n        return \"YES\"\n    }\n    \n  \
    \  if start1 < end2 && end1 > end2 {\n        return \"YES\"\n    }\n    \n  \
    \  if start2 < end1 && end2", "    if len(interval1) == 0 || len(interval2) ==\
    \ 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n            return\
    \ \"NO\"\n        }\n        \n        return \"YES\"\n    }\n    \n    if end1\
    \ == end2 {\n        if start1 > start2 {\n            return \"NO\"\n       \
    \ }\n        \n        return \"YES\"\n    }\n    \n    if end1 < end2 {\n   \
    \     return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n\
    \            return \"NO\"\n        }\n        \n        return \"YES\"\n    }\n\
    \    \n    if end1 == end2 {\n        if start1 > start2 {\n            return\
    \ \"NO\"\n        }\n        \n        return \"YES\"\n    }\n    \n    if end1\
    \ < end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2 {\n   \
    \     return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 <= start2 && end1 >= end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 <= start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < start2 && end1 == end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > start2 && end1 < end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > start2 && end1 > end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 < start2 && end1 > end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 < start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 && end1 < end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 && end1 > end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 < start2 && end1 > end2 {", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[1] <\
    \ interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[1] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] && interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    // Your code here\n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if end1 < start2 {\n\
    \        return \"NO\"\n    }\n    \n    if end2 < start1 {\n        return \"\
    NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"\
    YES\"\n    }\n    \n    if end1 - start1 < end2 - start2 {\n        return \"\
    NO\"\n    }\n    \n    for i := start1; i <= end1; i++ {\n        if i >= start2\
    \ && i <= end2 {\n            return \"YES\"\n        }\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < end2 && start2 < end1 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > end2 || start2 > end1 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == end2 || start2 == end1 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 && end1 > end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 && end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 && end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 < end2 {", "    if len(interval1) == 0 || len(interval2) ==\
    \ 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \ }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n    }\n    \n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n\
    \    if start1 == end1 && start2 == end2 {\n        return \"YES\"\n    }\n  \
    \  \n    if start1 == end1 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ == end2 {\n        return \"NO\"\n    }\n    \n    if start1 == start2 {\n \
    \       return \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"\
    YES\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"\
    YES\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"\
    YES\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"\
    YES\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"\
    YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n            return\
    \ \"NO\"\n        }\n        \n        if end1 == end2 {\n            return \"\
    YES\"\n        }\n        \n        return \"NO\"\n    }\n    \n    if end1 ==\
    \ end2 {\n        if start1 > start2 {\n            return \"NO\"\n        }\n\
    \        \n        if start1 == start2 {\n            return \"YES\"\n       \
    \ }\n        \n        return \"NO\"\n    }\n    \n    return \"NO\"\n}\n", " \
    \   if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n \
    \   }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 < start2 ||\
    \ end2 < start1 {\n        return \"NO\"\n    }\n    \n    if end1 - start1 ==\
    \ end2 - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1 >\
    \ end2 - start2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1 <\
    \ end2 - start2 {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n",
  "    // Your code here\n    if len(interval1) == 0 || len(interval2) == 0 {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    return \"NO\"\
    \n}\n", "    // Your code here\n    return \"NO\"\n}\n\n//  [input] interval1,\
    \ interval2: []interface{}\n//  [output] isIntersect: string\n//  [desc] check\
    \ whether two intervals intersect", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] || interval2[0] > interval1[1] {\n        return \"NO\"\n   \
    \ }\n    \n    if interval1[0] < interval2[0] {\n        interval1[0], interval2[0]\
    \ = interval2[0], interval1[0]\n    }\n    \n    if interval1[1] > interval2[1]\
    \ {\n        interval1[1], interval2[1] = interval2[1], interval1[1]\n    }\n\
    \    \n    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n \
    \       return \"NO\"\n    }\n    \n    if interval1[0] == interval1[1] || interval2[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int) {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[1]\
    \ || interval2[0] > interval1[1] {\n        return \"NO\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[0] == interval2[0] {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[1] == interval2[1] {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[0] < interval2[0] {\n        return \"\
    NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n        return \"NO\"\
    \n    }\n    \n    if interval1[1] < interval2[0] {\n        return \"NO\"\n \
    \   }\n    \n    if interval1[0] > interval2[0] {\n        return \"NO\"\n   \
    \ }\n    \n    if interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0] > interval2[0] {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    \n\
    \    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n\
    \    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ || interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) || interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) || interval1[1].(int) == interval2[0].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[0].(int) && interval1[0].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int)\
    \ && interval1[0].(int) == interval", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ || interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) || interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) || interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) || interval1[1].(int)\
    \ == interval", "    // Your code here\n    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    if interval1[0].(int) > interval2[0].(int) {\n        return \"NO\"\n   \
    \ }\n    if interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n\
    \    }\n    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\
    \n    }\n    if interval1[1].(int) == interval2[1].(int) {\n        return \"\
    YES\"\n    }\n    if interval1[0].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    if interval1[1].(int) > interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    return \"YES\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0]\
    \ {\n        interval1, interval2 = interval2, interval1\n    }\n    \n    start1,\
    \ end1 := interval1[0], interval1[1]\n    start2, end2 := interval2[0], interval2[1]\n\
    \    \n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 <= start2 && end1 >= end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 <= start2 && end1 < end2 {\n        return \"NO\"\n \
    \   }\n    \n    if start1 > start2 && end1 > end2 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 > start2 && end1 < end2 {\n        return \"YES\"\n\
    \    }\n    \n    if start1 < start2 && end1 > end2 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 < start2 && end1 < end2 {\n        return \"YES\"\n\
    \    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n            return\
    \ \"NO\"\n        }\n        \n        return \"YES\"\n    }\n    \n    if end1\
    \ == end2 {\n        if start1 > start2 {\n            return \"NO\"\n       \
    \ }\n        \n        return \"YES\"\n    }\n    \n    if end1 < end2 {\n   \
    \     return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 > end2 || end1 < start2 {\n        return \"NO\"\n\
    \    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n\
    \    }\n    \n    if end1 - start1 > end2 - start2 {\n        return \"NO\"\n\
    \    }\n    \n    for i := start1; i <= end1; i++ {\n        for j := start2;\
    \ j <= end2; j++ {\n            if i == j {\n                continue\n      \
    \      }\n            \n            if i > j {\n                return \"NO\"\n\
    \            }\n            \n            if i + j > end2 {\n                return\
    \ \"NO\"\n            }\n        }\n    }\n    \n    return \"YES\"\n}\n", " \
    \   if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n \
    \   }\n    \n    if interval1[0] > interval2[1] || interval2[0] > interval1[1]\
    \ {\n        return \"NO\"\n    }\n    \n    var i1, i2 int\n    var result string\n\
    \    \n    for i1 = interval1[0]; i1 <= interval1[1]; i1++ {\n        for i2 =\
    \ interval2[0]; i2 <= interval2[1]; i2++ {\n            if i1 == i2 {\n      \
    \          result = \"YES\"\n                break\n            }\n        }\n\
    \        if result != \"YES\" {\n            break\n        }\n    }\n    \n \
    \   return result\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 > end2\
    \ || end1 < start2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1\
    \ == end2 - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1\
    \ > end2 - start2 {\n        return \"NO\"\n    }\n    \n    for i := start1;\
    \ i <= end1; i++ {\n        for j := start2; j <= end2; j++ {\n            if\
    \ i == j {\n                return \"YES\"\n            }\n        }\n    }\n\
    \    \n    return \"NO\"\n}\n", "    // Your code here\n    return \"NO\"\n}\n\
    \n// test", "    // Your code here\n    return \"NO\"\n}\n\n//  [input] interval1,\
    \ interval2: []interface{}\n//  [output] isIntersect: bool\n//  [output] intersection:\
    \ []interface{}\n//  [output] intersectionLength: int\n//  [output] intersectionLengthIsPrime:\
    \ bool", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0] > interval2[0] {\n        interval1,\
    \ interval2 = interval2, interval1\n    }\n    \n    if interval1[0] > interval2[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[0] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] && interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    // Your code here\n    if len(interval1) == 0 || len(interval2) ==\
    \ 0 {\n        return \"NO\"\n    }\n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    return \"NO\"\n}\n", "    // Your code here\n    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    if interval1[0].(int) == interval2[0].(int) || interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    if interval1[0].(int)\
    \ == interval2[1].(int) || interval1[1].(int) == interval2[0].(int) {\n      \
    \  return \"YES\"\n    }\n    return \"NO\"\n}\n", "    if len(interval1) == 0\
    \ || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        interval1[0] = interval1[0].(int) - 1\n    }\n\
    \    \n    if interval1[1].(int) < interval2[1].(int) {\n        interval1[1]\
    \ = interval1[1].(int) + 1\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[0].(int) {\n        interval1[0]\
    \ = interval1[0].(int) - 1\n    }\n    \n    if interval1[", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if start2 > start1\
    \ {\n        start1, start2 = start2, start1\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n    }\n \
    \   \n    if end2 < end1 {\n        end1, end2 = end2, end1\n    }\n    \n   \
    \ if end1 - start1 > end2 - start2 {\n        return \"NO\"\n    }\n    \n   \
    \ if end2 - start1 > end1 - start2 {\n        return \"NO\"\n    }\n    \n   \
    \ if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n \
    \   if end1 - start1 == end1 - start2 {\n        return \"YES\"\n    }\n    \n\
    \    if end2 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    // Your code here\n    return \"NO\"\n}\n\n// \
    \ [input] interval1, interval2: two intervals\n//  [output] isIntersect: whether\
    \ the two intervals intersect", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \     end1, end2 = end2, end1\n    }\n    \n    if end1 < start2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end2 < start1 {\n        return \"NO\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 > end2 - start2 {\n        return \"NO\"\n    }\n\
    \    \n    for i := start1; i <= end1; i++ {\n        if i >= start2 && i <= end2\
    \ {\n            return \"YES\"\n        }\n    }\n    \n    return \"NO\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0] > interval2[0] {\n        interval1, interval2\
    \ = interval2, interval1\n    }\n    \n    if interval1[0] > interval2[1] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[0] {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] && interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    // Your\
    \ code here\n    return \"NO\"\n}\n\n//  [input] interval1, interval2: []interface{}\n\
    //  [output] isIntersect: string\n//  [desc] check whether the two intervals intersect",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0] > interval2[1] {\n        return \"NO\"\n    }\n\
    \    \n    if interval2[0] > interval1[1] {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n \
    \       return \"YES\"\n    }\n    \n    if interval1[0] == interval2[0] {\n \
    \       return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1] {\n \
    \       return \"YES\"\n    }\n    \n    if interval1[0] < interval2[0] {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[1] < interval2[0] {\n      \
    \  return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    // Your code here\n\
    \    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n\
    \    }\n    \n    if interval1[0].(int) > interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int) {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    return \"NO\"\
    \n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0] > interval2[1] || interval2[0] > interval1[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] &&\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 <\
    \ start2 || end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ < start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if end1 - start1\
    \ == end2 - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1\
    \ > end2 - start2 {\n        return \"NO\"\n    }\n    \n    for i := start1;\
    \ i <= end1; i++ {\n        for j := start2; j <= end2; j++ {\n            if\
    \ i == j {\n                continue\n            }\n            \n          \
    \  if i > j {\n                return \"NO\"\n            }\n            \n  \
    \          if i < j {\n                continue\n            }\n            \n\
    \            if i - j == end1 - start1 {\n                return \"YES\"\n   \
    \         }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 <= start2 && end1 >= end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 <= start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 <= start1 && end2 > end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 <= start1 && end2 < end1 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 - start1 == end2 - start2 + 1 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] || interval2[0] > interval1[1] {\n        return \"NO\"\n   \
    \ }\n    \n    if interval1[0] < interval2[0] {\n        interval1[0], interval2[0]\
    \ = interval2[0], interval1[0]\n    }\n    \n    if interval1[1] > interval2[1]\
    \ {\n        interval1[1], interval2[1] = interval2[1], interval1[1]\n    }\n\
    \    \n    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n \
    \       return \"NO\"\n    }\n    \n    if interval1[0] == interval1[1] && interval2[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval1[1] {\n        return \"YES\"\n    }\n    \n    if interval2[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[0]\
    \ == interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == end1 && start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == end1 {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n\
    \        return \"YES\"\n    }\n    \n    if start1 == start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if start1 == end2 {\n        return \"YES\"\n    }\n    \n    if start2\
    \ == end1 {\n        return \"YES\"\n    }\n    \n    if start1 > end2 {\n   \
    \     return \"NO\"\n    }\n    \n    if start2 > end1 {\n        return \"NO\"\
    \n    }\n    \n    if start1 > start2 {\n        return \"NO\"\n    }\n    \n\
    \    if end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start2 < start1\
    \ {\n        return \"NO\"\n    }\n    \n    if end2 < end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        return \"NO\"\n    }\n\
    \    \n    if end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ > start1 {\n        return \"NO\"\n    }\n    \n    if end2 < end1 {\n     \
    \   return \"NO\"\n    }\n    \n    if start1 > start", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n\
    \    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0]\
    \ {\n        interval1, interval2 = interval2, interval1\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if end1 < start2 || end2 < start1 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 > start2 && end2 > start1 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 == start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end2 == start1 {\n        return \"YES\"\n    }\n    \n    if end1\
    \ - start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 == end2 {\n        return \"\
    YES\"\n    }\n    \n    if start2 == end1 {\n        return \"YES\"\n    }\n \
    \   \n    if start1 > end2 {\n        return \"YES\"\n    }\n    \n    if start2\
    \ > end1 {\n        return \"YES\"\n    }\n    \n    if start1 > start2 {\n  \
    \      return \"YES\"\n    }\n    \n    if end1 > end2 {\n        return \"YES\"\
    \n    }\n    \n    if start1 < start2 {\n        return \"YES\"\n    }\n    \n\
    \    if end1 < end2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    for i := interval1[0].(int); i <= interval1[1].(int);\
    \ i++ {\n        for j := interval2[0].(int); j <= interval2[1].(int); j++ {\n\
    \            if i == j {\n                return \"YES\"\n            }\n    \
    \    }\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n            return\
    \ \"YES\"\n        }\n        \n        return \"NO\"\n    }\n    \n    if end1\
    \ == end2 {\n        if start1 > start2 {\n            return \"YES\"\n      \
    \  }\n        \n        return \"NO\"\n    }\n    \n    if start1 < start2 {\n\
    \        if end1 > end2 {\n            return \"YES\"\n        }\n        \n \
    \       return \"NO\"\n    }\n    \n    if end1 < end2 {\n        if start1 >\
    \ start2 {\n            return \"YES\"\n        }\n        \n        return \"\
    NO\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == end1 && start2 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n    \n    if\
    \ start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ {\n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 == start2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == end2 {\n        return \"YES\"\n    }\n    \n    if end1 == start2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 == end2 {\n        return \"\
    YES\"\n    }\n    \n    if end1 == start2 {\n        return \"YES\"\n    }\n \
    \   \n    if start1 == end2 {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) ||\
    \ interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    for i := interval1[0].(int); i <=\
    \ interval1[1].(int); i++ {\n        for j := interval2[0].(int); j <= interval2[1].(int);\
    \ j++ {\n            if i == j {\n                return \"YES\"\n           \
    \ }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) ==\
    \ 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    start1 := interval1[0].(int)\n    end1 := interval1[1].(int)\n\
    \    start2 := interval2[0].(int)\n    end2 := interval2[1].(int)\n    \n    if\
    \ end1 < start2 || end2 < start1 {\n        return \"NO\"\n    }\n    \n    if\
    \ end1 > start2 && end2 > start1 {\n        return \"YES\"\n    }\n    \n    if\
    \ end1 == start2 && end2 == start1 {\n        return \"YES\"\n    }\n    \n  \
    \  if end1 < start2 && end2 > start1 {\n        return \"YES\"\n    }\n    \n\
    \    if end1 > start2 && end2 < start1 {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 > end2 {\n            return \"NO\"\n        }\
    \ else {\n            return \"YES\"\n        }\n    }\n    \n    if start1 >\
    \ start2 {\n        if end1 > end2 {\n            return \"NO\"\n        } else\
    \ {\n            return \"YES\"\n        }\n    }\n    \n    if end1 < end2 {\n\
    \        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval1[1] <\
    \ interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0]\
    \ {\n        interval1[0] = interval1[0] - 1\n    }\n    \n    if interval1[1]\
    \ < interval2[1] {\n        interval1[1] = interval1[1] + 1\n    }\n    \n   \
    \ if interval1[0] > interval1[1] {\n        return \"NO\"\n    }\n    \n    if\
    \ interval1[0] == interval1[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int) <\
    \ interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) || interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) || interval1[1].(int) == interval2[0].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) || interval1[1].(int) == interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    var start1,\
    \ end1, start2, end2 int\n    var isIntersect bool\n    \n    start1 = interval1[0].(int)\n\
    \    end1 = interval1[1].(int)\n    start2 = interval2[0].(int)\n    end2 = interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 >= start2 && start1 <= end2 {\n        isIntersect = true\n\
    \    }\n    \n    if start2 >= start1 && start2 <= end1 {\n        isIntersect\
    \ = true\n    }\n    \n    if end1 >= start2 && end1 <= end2 {\n        isIntersect\
    \ = true\n    }\n    \n    if end2 >= start1 && end2 <= end1 {\n        isIntersect\
    \ = true\n    }\n    \n    if isIntersect {\n        if (end1 - start1) == (end2\
    \ - start2) {\n            return \"YES\"\n        }\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) {\n\
    \        interval1, interval2 = interval2, interval1\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end2 || start2 > end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < end2 && start2 < end1 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if start2 == end1 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > end2 {\n        return \"NO\"\n    }\n    \n    if start2 > end1 {\n     \
    \   return \"NO\"\n    }\n    \n    if start1 == end2 {\n        return \"YES\"\
    \n    }\n    \n    if start2 == end1 {\n        return \"YES\"\n    }\n    \n\
    \    if start1 > end2 {\n        return \"NO\"\n    }\n    \n    if start2 > end1\
    \ {\n        return \"NO\"\n    }\n    \n    if start1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start2 == end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start1 > end2 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ > end1 {\n        return \"NO\"\n    }\n    \n    if start1 == end2 {\n    \
    \    return \"YES\"\n    }\n    \n    if start2 == end1 {\n        return \"YES\"\
    \n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    start1 := interval1[0].(int)\n    end1 := interval1[1].(int)\n    start2\
    \ := interval2[0].(int)\n    end2 := interval2[1].(int)\n    \n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\"\n    }\n    \n    if start1 <=\
    \ start2 && end1 >= end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ <= start2 && end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 && end1 < end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ < start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < start2 && end1 < end2 {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 < start2 {\n        return \"\
    NO\"\n    }\n    \n    if end1 > end2 {\n        return \"NO\"\n    }\n    \n\
    \    if start1 < end2 && end1 > end2 {\n        return \"YES\"\n    }\n    \n\
    \    if start1 < end2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n\
    \    if start1 == end2 {\n        return \"YES\"\n    }\n    \n    if end1 < start2\
    \ {\n        return \"NO\"\n    }\n    \n    if start1 > start2 {\n        return\
    \ \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] || interval2[0] > interval1[1] {\n        return \"NO\"\n   \
    \ }\n    \n    for i := interval1[0]; i <= interval1[1]; i++ {\n        for j\
    \ := interval2[0]; j <= interval2[1]; j++ {\n            if i == j {\n       \
    \         return \"YES\"\n            }\n        }\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if start2 > start1 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if end1 < end2 {\n\
    \        end1, end2 = end2, end1\n    }\n    \n    if end2 < end1 {\n        end1,\
    \ end2 = end2, end1\n    }\n    \n    if end1 - start1 == end2 - start2 {\n  \
    \      return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if start2 > start1\
    \ {\n        start1, start2 = start2, start1\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n    }\n \
    \   \n    if end2 < end1 {\n        return \"NO\"\n    }\n    \n    if end1 -\
    \ start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    // Your code here\n    return \"NO\"\n}\n\n//  [input] interval1,\
    \ interval2: []interface{}\n//  [output] isIntersect: bool\n//  [output] intersection:\
    \ []interface{}\n//  [output] intersectionLength: int\n//  [output] intersectionLengthStr:\
    \ string\n//  [output] intersectionLengthStr2: string\n//  [output] intersectionLengthStr3:\
    \ string\n//  [output] intersectionLengthStr4: string\n//  [output] intersectionLengthStr5:\
    \ string\n//  [output] intersectionLengthStr6: string\n//  [output] intersectionLengthStr7:\
    \ string\n//  [output] intersectionLengthStr8: string\n//  [output] intersectionLengthStr9:\
    \ string\n//  [output] intersectionLengthStr10: string\n//  [output] intersectionLengthStr11:\
    \ string\n//  [output] intersectionLengthStr12: string\n//  [output] intersectionLengthStr13:\
    \ string\n//  [output] intersectionLengthStr14: string\n//  [output] intersectionLengthStr15:\
    \ string\n//  [output] intersectionLengthStr16: string\n//  [output] intersectionLengthStr17:\
    \ string\n//  [output] intersectionLengthStr18: string\n//  [output] intersectionLengthStr19:\
    \ string\n//  [output] intersectionLengthStr20: string\n//  [output] intersectionLengthStr21:\
    \ string\n//  [output] intersectionLengthStr22: string\n//  [output] intersectionLengthStr23:\
    \ string\n//  [output] intersectionLengthStr24: string\n//  [output] intersectionLengthStr25:\
    \ string\n//  [output] intersectionLengthStr26: string\n//  [output] intersectionLengthStr27:\
    \ string\n//  [output] intersectionLengthStr28: string\n//  [output] intersectionLengthStr29:\
    \ string\n//  [output] intersectionLengthStr30: string\n//  [output] intersectionLengthStr31:\
    \ string\n//  [output] intersectionLengthStr32: string\n//  [output] intersectionLengthStr33:\
    \ string\n//  [output] intersectionLengthStr34: string\n//  [output] intersectionLengthStr35:\
    \ string\n//  [output] intersectionLengthStr36: string\n//  [output] intersectionLengthStr37:\
    \ string\n//  [output]", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ || interval1[1].(int) == interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) || interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 <\
    \ start2 || end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 > end2 {\n            return \"YES\"\n        }\n\
    \        return \"NO\"\n    }\n    \n    if end1 == end2 {\n        if start1\
    \ > start2 {\n            return \"YES\"\n        }\n        return \"NO\"\n \
    \   }\n    \n    if start1 > start2 {\n        if end1 > end2 {\n            return\
    \ \"YES\"\n        }\n        return \"NO\"\n    }\n    \n    if end1 < end2 {\n\
    \        if start1 > start2 {\n            return \"YES\"\n        }\n       \
    \ return \"NO\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 <= end2 && end1 >= start2 {\n        return \"YES\"\
    \n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    var start1, end1, start2, end2\
    \ int\n    \n    start1 = interval1[0].(int)\n    end1 = interval1[1].(int)\n\
    \    start2 = interval2[0].(int)\n    end2 = interval2[1].(int)\n    \n    if\
    \ start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if\
    \ start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if\
    \ start1 == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n  \
    \  if start1 == start2 {\n        if end1 > end2 {\n            return \"YES\"\
    \n        }\n        \n        if end1 < end2 {\n            return \"NO\"\n \
    \       }\n    }\n    \n    if start1 > start2 {\n        if end1 < end2 {\n \
    \           return \"NO\"\n        }\n        \n        if end1 > end2 {\n   \
    \         return \"YES\"\n        }\n    }\n    \n    if end1 < end2 {\n     \
    \   if start1 > start2 {\n            return \"NO\"\n        }\n        \n   \
    \     if start1 < start2 {\n            return \"YES\"\n        }\n    }\n   \
    \ \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) ==\
    \ 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    start1 := interval1[0].(int)\n    end1 := interval1[1].(int)\n    start2\
    \ := interval2[0].(int)\n    end2 := interval2[1].(int)\n    \n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\"\n    }\n    \n    if start1 <=\
    \ start2 && end1 >= end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ <= start2 && end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 && end1 < end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    return \"\
    YES\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == end1 && start2 == end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == end1 {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n\
    \        return \"YES\"\n    }\n    \n    if start1 == start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \     end1, end2 = end2, end1\n    }\n    \n    if start1 == start2 {\n      \
    \  return \"YES\"\n    }\n    \n    if start1 > start2 {\n        return \"NO\"\
    \n    }\n    \n    if end1 < end2 {\n        return \"NO\"\n    }\n    \n    if\
    \ end1 == end2 {\n        return \"YES\"\n    }\n    \n    if end1 < end2 {\n\
    \        return \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n\
    \        return \"YES\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n\
    \        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 < end2 {\n\
    \            return \"YES\"\n        }\n        return \"NO\"\n    }\n    \n \
    \   if end1 == end2 {\n        if start1 < start2 {\n            return \"YES\"\
    \n        }\n        return \"NO\"\n    }\n    \n    if start1 < start2 {\n  \
    \      if end1 > end2 {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"\n    }\n    \n    if end1 > end2 {\n        if start1 < start2 {\n  \
    \          return \"YES\"\n        }\n        return \"NO\"\n    }\n    \n   \
    \ return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 > end1\
    \ || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if end1 < start2\
    \ || end2 < start1 {\n        return \"NO\"\n    }\n    \n    if end1 - start1\
    \ == end2 - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1\
    \ > end2 - start2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1\
    \ < end2 - start2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 < end2 {\n            return \"NO\"\n        }\n\
    \        \n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n      \
    \  if start1 > start2 {\n            return \"NO\"\n        }\n        \n    \
    \    return \"YES\"\n    }\n    \n    if end1 < end2 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 < start2 {\n        return \"NO\"\n    }\n    \n \
    \   return \"YES\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if end1 < end2 {\n        return \"YES\"\
    \n    }\n    \n    if start1 < start2 {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    var start1, end1, start2, end2 int\n\
    \    \n    start1, end1 = interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 = interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ {\n        start1, start2 = start2, start1\n    }\n    \n    if end1 > end2\
    \ {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 == end1 && start2\
    \ == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == end1 {\n  \
    \      return \"NO\"\n    }\n    \n    if start2 == end2 {\n        return \"\
    NO\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 == end1\
    \ {\n        return \"NO\"\n    }\n    \n    if start2 == end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 == end1 {\n        return \"NO\"\n    }\n    \n  \
    \  if start2 == end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ {\n        start1, start2 = start2, start1\n    }\n    \n    if end1 > end2\
    \ {\n        end1", "    if len(interval1) == 0 || len(interval2) == 0 {\n   \
    \     return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 > end2 {\n            return \"YES\"\n        }\n\
    \        return \"NO\"\n    }\n    \n    if end1 == end2 {\n        if start1\
    \ > start2 {\n            return \"YES\"\n        }\n        return \"NO\"\n \
    \   }\n    \n    if end1 > end2 {\n        return \"NO\"\n    }\n    \n    if\
    \ start1 > start2 {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > end2 || start2 > end1 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == end2 || start2 == end1 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if start2 > start1 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if end1 < end2 {\n\
    \        end1, end2 = end2, end1\n    }\n    \n    if end2 < end1 {\n        end1,\
    \ end2 = end2, end1\n    }\n    \n    if end1 - start1 > end2 - start2 {\n   \
    \     return \"NO\"\n    }\n    \n    if end2 - start2 > end1 - start1 {\n   \
    \     return \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n  \
    \      return \"YES\"\n    }\n    \n    if end2 - start2 == end1 - start1 {\n\
    \        return \"YES\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n\
    \        return \"NO\"\n    }\n    \n    if end2 - start2 > end1 - start1 {\n\
    \        return \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n\
    \        return \"YES\"\n    }\n    \n    if end2 - start2 == end1 - start1 {\n\
    \        return \"YES\"\n    }\n    \n    if end1 - start1 == end2", "    // Your\
    \ code here\n    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 < end2 {\n            return \"YES\"\n        }\n\
    \    } else if start1 > start2 {\n        if end1 < end2 {\n            return\
    \ \"NO\"\n        }\n    }\n    \n    if end1 == end2 {\n        if start1 < start2\
    \ {\n            return \"YES\"\n        }\n    } else if end1 < end2 {\n    \
    \    if start1 < start2 {\n            return \"NO\"\n        }\n    }\n    \n\
    \    if start1 == start2 {\n        if end1 < end2 {\n            return \"YES\"\
    \n        }\n    } else if start1 > start2 {\n        if end1 < end2 {\n     \
    \       return \"NO\"\n        }\n    }\n    \n    if end1 == end2 {\n       \
    \ if start1 < start2 {\n            return \"YES\"\n        }\n    } else if end1\
    \ < end2 {\n        if start1 < start2 {\n            return \"NO\"\n        }\n\
    \    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \ }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n    }\n    \n\
    \    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n\
    \    if end1 < start2 || end2 < start1 {\n        return \"NO\"\n    }\n    \n\
    \    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n\
    \    if end1 - start1 < end2 - start2 {\n        return \"NO\"\n    }\n    \n\
    \    return \"YES\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0\
    \ {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n            return\
    \ \"YES\"\n        }\n        \n        return \"NO\"\n    }\n    \n    if end1\
    \ == end2 {\n        if start1 > start2 {\n            return \"YES\"\n      \
    \  }\n        \n        return \"NO\"\n    }\n    \n    if end1 > end2 {\n   \
    \     return \"NO\"\n    }\n    \n    if start1 > start2 {\n        return \"\
    NO\"\n    }\n    \n    if end1 < end2 {\n        return \"NO\"\n    }\n    \n\
    \    return \"YES\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    return \"NO\"\n}\n", "    // Your code here\n    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    if interval1[0]\
    \ > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n   \
    \ }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n \
    \       return \"YES\"\n    }\n    if interval1[0] > interval2[0] {\n        return\
    \ \"NO\"\n    }\n    if interval1[1] < interval2[1] {\n        return \"NO\"\n\
    \    }\n    if interval1[0] == interval2[0] {\n        if interval1[1] == interval2[1]\
    \ {\n            return \"YES\"\n        }\n        return \"NO\"\n    }\n   \
    \ if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) ||\
    \ interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) ==\
    \ interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[0].(int) {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ <= start2 && end1 >= end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ <= start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ <= start1 && end2 > end1 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ <= start1 && end2 < end1 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 && end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 && end1 > end2 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ > start1 && end2 > end1 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ > start1 && end2 < end1 {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if end1 < start2 {\n        return \"NO\"\n    }\n  \
    \  \n    if end2 < start1 {\n        return \"NO\"\n    }\n    \n    if end1 <\
    \ end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if end1 - start1 ==\
    \ end2 - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1 >\
    \ end2 - start2 {\n        return \"NO\"\n    }\n    \n    for i := start1 + 1;\
    \ i < end1; i++ {\n        if end1 - i == end2 - start2 {\n            return\
    \ \"YES\"\n        }\n    }\n    \n    return \"NO\"\n}\n", "    // Your code\
    \ here\n    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0] > interval2[0] {\n        interval1, interval2\
    \ = interval2, interval1\n    }\n    \n    if interval1[0] > interval2[1] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[0] {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[0] == interval1[1] {\n     \
    \   return \"YES\"\n    }\n    \n    if interval1[0] == interval2[0] {\n     \
    \   return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1] {\n     \
    \   return \"YES\"\n    }\n    \n    if interval1[0] == interval2[0] {\n     \
    \   return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1] {\n     \
    \   return \"YES\"\n    }\n    \n    if interval1[0] == interval2[1] {\n     \
    \   return \"YES\"\n    }\n    \n    if interval1[1] == interval2[0] {\n     \
    \   return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 <= start2 && end1 >= end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 <= start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 < end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 < start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < start2 && end1 > end2 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n\
    \    }\n    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n\
    \    }\n    \n    if end1 - start1 > end2 - start2 {\n        return \"NO\"\n\
    \    }\n    \n    for i := start1; i <= end1; i++ {\n        for j := start2;\
    \ j <= end2; j++ {\n            if i == j {\n                return \"YES\"\n\
    \            }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    // Your\
    \ code here\n    return \"NO\"\n}\n\n//  [input] interval1, interval2: []interface{}\n\
    //  [output] isIntersect: string\n//  [desc] check if two intervals intersect",
  "    // Your code here\n    return \"NO\"\n}\n\n//  [input] interval1: []interface{}\n\
    //  [input] interval2: []interface{}\n//  [output] isIntersect: string\n//  [output]\
    \ isIntersect: string\n//  [output] isIntersect: string\n//  [output] isIntersect:\
    \ string\n//  [output] isIntersect: string\n//  [output] isIntersect: string\n\
    //  [output] isIntersect: string\n//  [output] isIntersect: string\n//  [output]\
    \ isIntersect: string\n//  [output] isIntersect: string\n//  [output] isIntersect:\
    \ string\n//  [output] isIntersect: string\n//  [output] isIntersect: string\n\
    //  [output] isIntersect: string\n//  [output] isIntersect: string\n//  [output]\
    \ isIntersect: string\n//  [output] isIntersect: string\n//  [output] isIntersect:\
    \ string\n//  [output] isIntersect: string\n//  [output] isIntersect: string\n\
    //  [output] isIntersect: string\n//  [output] isIntersect: string\n//  [output]\
    \ isIntersect: string\n//  [output] isIntersect: string\n//  [output] isIntersect:\
    \ string\n//  [output] isIntersect: string\n//  [output] isIntersect: string\n\
    //  [output] isIntersect: string\n//  [output] isIntersect: string\n//  [output]\
    \ isIntersect: string\n//  [output] isIntersect: string\n//  [output] isIntersect:\
    \ string\n//  [output] isIntersect: string\n//  [output] isIntersect: string\n\
    //  [output] isIntersect: string\n//  [output] isIntersect: string\n//  [output]\
    \ isIntersect: string\n//  [output] isIntersect: string\n//  [output] isIntersect:\
    \ string\n//  [output] isIntersect: string\n//  [output] isIntersect: string\n\
    //  [output] isIntersect: string\n//  [output] isIntersect:", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n\
    \            return \"NO\"\n        }\n        \n        if end1 < end2 {\n  \
    \          return \"YES\"\n        }\n    }\n    \n    if start1 > start2 {\n\
    \        if end1 > end2 {\n            return \"NO\"\n        }\n        \n  \
    \      if end1 < end2 {\n            return \"YES\"\n        }\n    }\n    \n\
    \    if end1 > end2 {\n        if start1 > start2 {\n            return \"NO\"\
    \n        }\n        \n        if start1 < start2 {\n            return \"YES\"\
    \n        }\n    }\n    \n    if end1 < end2 {\n        if start1 > start2 {\n\
    \            return \"YES\"\n        }\n        \n        if start1 < start2 {\n\
    \            return \"NO\"\n        }\n    }\n    \n    return \"NO\"\n}\n", " \
    \   if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n \
    \   }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 < start2 ||\
    \ end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1 == end1 &&\
    \ start2 == end2 {\n        return \"NO\"\n    }\n    \n    if start1 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if\
    \ start1 > start2 {\n        start1, start2 = start2, start1\n        end1, end2\
    \ = end2, end1\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n \
    \   }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n    \n  \
    \  if start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 > start",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 > start1 || end2 < end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n        return\
    \ \"NO\"\n    }\n    \n    for start1 <= end1 && start2 <= end2 {\n        if\
    \ end1 - start1 == end2 - start2 {\n            return \"YES\"\n        }\n  \
    \      \n        if end1 - start1 > end2 - start2 {\n            return \"NO\"\
    \n        }\n        \n        if end1 - start1 < end2 - start2 {\n          \
    \  start1++\n        } else {\n            start2++\n        }\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ <= start2 && end1 >= end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ <= start2 && end1 >= end2 {\n        return \"YES\"\n    }\n    \n    if start2\
    \ <= start1 && end2 >= end1 {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n       \
    \ return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0] {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[1] < interval2[0] {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0] > interval2[1] {\n        return \"NO\"\
    \n    }\n    \n    if interval1[1] < interval2[1] {\n        return \"NO\"\n \
    \   }\n    \n    if interval1[0] == interval2[0] && interval1[1] == interval2[1]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0] == interval2[0]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1]\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    // Your\
    \ code here\n    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    for i := interval1[0].(int); i <= interval1[1].(int);\
    \ i++ {\n        for j := interval2[0].(int); j <= interval2[1].(int); j++ {\n\
    \            if i == j {\n                return \"YES\"\n            }\n    \
    \    }\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n            return\
    \ \"NO\"\n        }\n        \n        if end1 < end2 {\n            return \"\
    YES\"\n        }\n        \n        return \"YES\"\n    }\n    \n    if end1 ==\
    \ end2 {\n        if start1 > start2 {\n            return \"NO\"\n        }\n\
    \        \n        if start1 < start2 {\n            return \"YES\"\n        }\n\
    \        \n        return \"YES\"\n    }\n    \n    if end1 < end2 {\n       \
    \ return \"NO\"\n    }\n    \n    if start1 < start2 {\n        return \"NO\"\n\
    \    }\n    \n    return \"YES\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \     end1, end2 = end2, end1\n    }\n    \n    if end1 < start2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end2 < start1 {\n        return \"NO\"\n    }\n\
    \    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n    }\n    \n  \
    \  if end1 - start1 > end2 - start2 {\n        return \"NO\"\n    }\n    \n  \
    \  if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n\
    \    if end1 - start1 > end2 - start2 {\n        return \"NO\"\n    }\n    \n\
    \    if end1 - start1 < end2 - start2 {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 <\
    \ start2 || end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 > end2 {\n            return \"YES\"\n        }\n\
    \        return \"NO\"\n    }\n    \n    if end1 == end2 {\n        if start1\
    \ > start2 {\n            return \"YES\"\n        }\n        return \"NO\"\n \
    \   }\n    \n    if start1 < start2 {\n        return \"NO\"\n    }\n    \n  \
    \  if end1 > end2 {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n\
    }\n", "    // Your code here\n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    if start1 > end1\
    \ || start2 > end2 {\n        return \"NO\"\n    }\n    if start1 > end2 || start2\
    \ > end1 {\n        return \"NO\"\n    }\n    if start1 == end2 || start2 == end1\
    \ {\n        return \"YES\"\n    }\n    if start1 > start2 {\n        start1,\
    \ start2 = start2, start1\n    }\n    if end1 > end2 {\n        end1, end2 = end2,\
    \ end1\n    }\n    if start1 == end2 || start2 == end1 {\n        return \"YES\"\
    \n    }\n    if start1 == end2 || start2 == end1 {\n        return \"YES\"\n \
    \   }\n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \ }\n    if end1 > end2 {\n        end1, end2 = end2, end1\n    }\n    if start1\
    \ == end2 || start2 == end1 {\n        return \"YES\"\n    }\n    if start1 ==\
    \ end2 || start2 == end1 {\n        return \"YES\"\n    }\n    if start1 > start2\
    \ {\n        start1, start2 = start2, start1\n    }\n    if end1 > end2 {\n  \
    \      end1, end2 = end2, end1\n    }\n    if start1 == end2 || start2 == end1\
    \ {\n        return \"YES\"\n    }\n    if start1 == end2 || start2 == end1 {\n\
    \        return \"YES\"\n    }\n    if start1 > start2 {\n        start1, start2\
    \ = start2, start1\n    }\n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    if start1 == end2 || start2 == end1 {\n        return \"YES\"\n  \
    \  }\n    if start1 == end2 || start2 == end1 {\n        return \"", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval", "    \n    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 < start2 || end2 < start1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if\
    \ start1 == end2 {\n        return \"YES\"\n    }\n    \n    if start2 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    if start1 > end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start2 > end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start1 < start2 {\n        return \"YES\"\n    }\n    \n    if start2\
    \ < start1 {\n        return \"YES\"\n    }\n    \n    if end1 < end2 {\n    \
    \    return \"YES\"\n    }\n    \n    if end2 < end1 {\n        return \"YES\"\
    \n    }\n    \n    if start1 > end2 {\n        return \"YES\"\n    }\n    \n \
    \   if start2 > end1 {\n        return \"YES\"\n    }\n    \n    if start1 < end2\
    \ {\n        return \"YES\"\n    }\n    \n    if start2 < end1 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 > end2 {\n        return \"YES\"\n    }\n\
    \    \n    if end2 > end1 {\n        return \"YES\"\n    }\n    \n    return \"\
    NO", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\
    \n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n  \
    \  start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ < end2 && start2 < end1 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ > end2 || start2 > end1 {\n        return \"NO\"\n    }\n    \n    return \"\
    YES\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == end1 && start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == end1 {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n\
    \        return \"YES\"\n    }\n    \n    if start1 == start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if start1 > start2 {\n        return \"NO\"\n    }\n    \n    if end1\
    \ < end2 {\n        return \"NO\"\n    }\n    \n    if start1 < end2 && end1 >\
    \ start2 {\n        return \"YES\"\n    }\n    \n    if start2 < end1 && end2\
    \ > start1 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", " \
    \   if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n \
    \   }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start2 > start1\
    \ || end2 < end1 {\n        return \"NO\"\n    }\n    \n    if end1 - start1 ==\
    \ end2 - start2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    start1 := interval1[0].(int)\n\
    \    end1 := interval1[1].(int)\n    start2 := interval2[0].(int)\n    end2 :=\
    \ interval2[1].(int)\n    \n    if start1 > end2 || start2 > end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 < start2 || end2 < start1 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 - start1 < end2 - start2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n        return\
    \ \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > end2 || start2 > end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == end2 || start2 == end1 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > end2 {\n        start1, end1 = start2,\
    \ end2\n    }\n    \n    if start2 > end1 {\n        start2, end2 = start1, end1\n\
    \    }\n    \n    if start1 == end2 {\n        return \"YES\"\n    }\n    \n \
    \   if start2 == end1 {\n        return \"YES\"\n    }\n    \n    if start1 >\
    \ end2 {\n        start1, end1 = start2, end2\n    }\n    \n    if start2 > end1\
    \ {\n        start2, end2 = start1, end1\n    }\n    \n    if start1 == end2 {\n\
    \        return \"YES\"\n    }\n    \n    if start2 == end1 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > end2 {\n        start1, end1 = start2,\
    \ end2\n    }\n    \n    if start2 > end1 {\n        start2, end2 = start1, end1\n\
    \    }\n    \n    if start1 == end2 {\n        return \"YES\"\n    }\n    \n \
    \   if start2 == end1 {\n        return \"YES\"\n    }\n    \n    if start1 >\
    \ end2 {\n        start1, end1 = start2, end2\n    }\n    \n    if start2 > end1\
    \ {\n        start2, end2 = start1, end1\n    }\n    \n    if start1 == end2 {\n\
    \        return \"YES\"\n    ", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \ }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n    }\n    \n\
    \    if end1 - start1 > end2 - start2 {\n        return \"NO\"\n    }\n    \n\
    \    for start1 <= end1 && start2 <= end2 {\n        if start1 == start2 {\n \
    \           return \"YES\"\n        }\n        \n        if start1 == end1 {\n\
    \            break\n        }\n        \n        if start2 == end2 {\n       \
    \     break\n        }\n        \n        if start1 + 1 == start2 {\n        \
    \    start1++\n            start2++\n        } else if start1 + 1 == end2 {\n\
    \            start1++\n            end2++\n        } else if start2 + 1 == start1\
    \ {\n            start2++\n            start1++\n        } else if start2 + 1\
    \ == end1 {\n            start2++\n            end1++\n        } else {\n    \
    \        start1++\n            start2++\n        }\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0] > interval2[1] || interval2[0] > interval1[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] &&\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] < interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[1]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval1[0] >\
    \ interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[1]\
    \ {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0] > interval2[1] || interval2[0] > interval1[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] &&\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] < interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[1]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval1[1] <\
    \ interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[1] {\n\
    \        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    for i := 0; i < len(interval1); i++ {\n        for\
    \ j := 0; j < len(interval2); j++ {\n            if interval1[i].(int) <= interval2[j].(int)\
    \ && interval1[i+1].(int) >= interval2[j+1].(int) {\n                return \"\
    YES\"\n            }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1 ==\
    \ end2 - start2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        interval1[0] = interval1[0].(int) - 1\n    }\n\
    \    \n    if interval1[1].(int) < interval2[1].(int) {\n        interval1[1]\
    \ = interval1[1].(int) + 1\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) {\n        interval2[0]\
    \ = interval2[0].(int) - 1\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        interval2[1] = interval2[1].(int) + 1\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) {\n        if interval1[1].(int) > interval2[1].(int)\
    \ {\n            return \"NO\"\n        }\n        \n        if interval1[1].(int)\
    \ == interval2[1].(int) {\n            return \"YES\"\n        }\n        \n \
    \       return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        if interval1[1].(int) > interval2[1].(int) {\n            return\
    \ \"NO\"\n        }\n        \n        if interval1[1].(int) == interval2[1].(int)\
    \ {\n            return \"YES\"\n        }\n        \n        return \"NO\"\n\
    \    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ > interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ && interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[1].(int) && interval1[1].(int) == interval2[0].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ || interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\
    \n    }\n    \n    if interval1[1].(int) == interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        interval1, interval2 = interval2, interval1\n\
    \    }\n    \n    if interval1[0].(int) > interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int) {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if\
    \ end1 < end2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0] > interval2[1] {\n        return \"NO\"\n    }\n\
    \    \n    if interval2[0] > interval1[1] {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n \
    \       return \"YES\"\n    }\n    \n    if interval1[0] == interval2[0] {\n \
    \       return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1] {\n \
    \       return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 < start2 || end2 < start1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 == end2 {\n\
    \            return \"YES\"\n        }\n        \n        if end1 > end2 {\n \
    \           return \"YES\"\n        }\n        \n        return \"NO\"\n    }\n\
    \    \n    if end1 == end2 {\n        if start1 > start2 {\n            return\
    \ \"YES\"\n        }\n        \n        return \"NO\"\n    }\n    \n    if end1\
    \ > end2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "  \
    \  if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    // Your code here\n\
    \    return \"NO\"\n}\n\n//  [input] interval1, interval2: []interface{}\n// \
    \ [output] isIntersect: bool\n//  [output] intersection: []interface{}", "   \
    \ if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n   \
    \ }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) || interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ || interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[1].(int) == interval2[0].(int) || interval1[0].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if end1 - start1\
    \ > end2 - start2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1\
    \ == end2 - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1\
    \ < end2 - start2 {\n        return \"NO\"\n    }\n    \n    for start1 <= end1\
    \ && start2 <= end2 {\n        if end1 - start1 == end2 - start2 {\n         \
    \   return \"YES\"\n        }\n        \n        if end1 - start1 < end2 - start2\
    \ {\n            return \"NO\"\n        }\n        \n        if end1 - start1\
    \ > end2 - start2 {\n            return \"NO\"\n        }\n        \n        start1++\n\
    \        start2++\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n        return\
    \ \"NO\"\n    }\n    \n    for i := start1; i <= end1; i++ {\n        for j :=\
    \ start2; j <= end2; j++ {\n            if i == j {\n                return \"\
    YES\"\n            }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int) <\
    \ interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval2[0] >\
    \ interval1[1] {\n        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0] < interval2[0] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[1] < interval2[1] {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0] {\n   \
    \     return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1] {\n   \
    \     return \"YES\"\n    }\n    \n    if interval1[0] > interval2[0] {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n      \
    \  return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n\
    \            return \"NO\"\n        }\n        \n        return \"YES\"\n    }\n\
    \    \n    if end1 == end2 {\n        if start1 > start2 {\n            return\
    \ \"NO\"\n        }\n        \n        return \"YES\"\n    }\n    \n    if end1\
    \ < end2 {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "  \
    \  if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 < start2 ||\
    \ end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1 == start2\
    \ && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ {\n        if end1 < end2 {\n            return \"YES\"\n        }\n    }\n\
    \    \n    if end1 == end2 {\n        if start1 < start2 {\n            return\
    \ \"YES\"\n        }\n    }\n    \n    if start1 < start2 {\n        if end1 >\
    \ end2 {\n            return \"YES\"\n        }\n    }\n    \n    if end1 > end2\
    \ {\n        if start1 < start2 {\n            return \"YES\"\n        }\n   \
    \ }\n    \n    if start1 > start2 {\n        if end1 < end2 {\n            return\
    \ \"YES\"\n        }\n    }\n    \n    if end1 < end2 {\n        if start1 > start2\
    \ {\n            return \"YES\"\n        }\n    }\n    \n    return \"NO\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1 == start2\
    \ && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ {\n        if end1 > end2 {\n            return \"NO\"\n        }\n        \n\
    \        if end1 == end2 {\n            return \"YES\"\n        }\n        \n\
    \        return \"NO\"\n    }\n    \n    if end1 == end2 {\n        if start1\
    \ > start2 {\n            return \"NO\"\n        }\n        \n        if start1\
    \ == start2 {\n            return \"YES\"\n        }\n        \n        return\
    \ \"NO\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 <= start2 && end1 >= end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 <= start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 <= start1 && end2 > end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 <= start1 && end2 < end1 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 > start1 && end2 > end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 > start1 && end2 < end1 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 <= start2 && end1 >= end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 <= start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 && end1 < end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 < start2 && end1 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < start2 && end1 < end2 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 == end1 && start2 == end2 {\n        return \"YES\"\
    \n    }\n    \n    if start1 == end1 {\n        return \"NO\"\n    }\n    \n \
    \   if start2 == end2 {\n        return \"NO\"\n    }\n    \n    if start1 ==\
    \ end2 {\n        return \"NO\"\n    }\n    \n    if start2 == end1 {\n      \
    \  return \"NO\"\n    }\n    \n    if start1 > end2 {\n        return \"NO\"\n\
    \    }\n    \n    if start2 > end1 {\n        return \"NO\"\n    }\n    \n   \
    \ if start1 > start2 {\n        start1, start2 = start2, start1\n    }\n    \n\
    \    if end1 > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if start1\
    \ == end1 {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 == end2 {\n        return \"\
    YES\"\n    }\n    \n    if start2 == end1 {\n        return \"YES\"\n    }\n \
    \   \n    if start1 > start2 {\n        start1, start2 = start2, start1\n    }\n\
    \    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n    }\n    \n  \
    \  if start1 == end1 {\n        return \"YES\"\n    ", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        interval1, interval2 = interval2, interval1\n\
    \    }\n    \n    if interval1[0].(int) > interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int) {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\
    \n    }\n    \n    if interval1[1].(int) == interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int) {\n  \
    \      return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int) ==\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n        return\
    \ \"NO\"\n    }\n    \n    for i := start1; i <= end1; i++ {\n        for j :=\
    \ start2; j <= end2; j++ {\n            if i == j {\n                return \"\
    YES\"\n            }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[0].(int) {\n        interval1, interval2\
    \ = interval2, interval1\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\
    \n    }\n    \n    if interval1[1].(int) == interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) && interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) && interval1[1].(int) > interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int) && interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ < interval2[0].(int) && interval1[1].(int) > interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 < start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n    \n \
    \   if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[1] || interval2[0]\
    \ > interval1[1] {\n        return \"NO\"\n    }\n    \n    if interval1[0] ==\
    \ interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n   \
    \ }\n    \n    if interval1[0] == interval2[0] {\n        return \"YES\"\n   \
    \ }\n    \n    if interval1[1] == interval2[1] {\n        return \"YES\"\n   \
    \ }\n    \n    if interval1[0] < interval2[0] {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[1] < interval2[0] {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[0] > interval2[0] {\n        return \"NO\"\n    }\n    \n\
    \    if interval1[1] > interval2[1] {\n        return \"NO\"\n    }\n    \n  \
    \  if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n  \
    \  if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n  \
    \  if interval1[0] < interval2[0] {\n        return \"NO\"\n    }\n    \n    if\
    \ interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[1] >\
    \ interval2[1] {\n        return \"NO\"\n    }\n    \n    return \"YES\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1 == start2\
    \ && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ {\n        if end1 > end2 {\n            return \"NO\"\n        }\n        \n\
    \        return \"YES\"\n    }\n    \n    if end1 == end2 {\n        if start1\
    \ > start2 {\n            return \"NO\"\n        }\n        \n        return \"\
    YES\"\n    }\n    \n    if end1 > end2 {\n        return \"NO\"\n    }\n    \n\
    \    if start1 > start2 {\n        return \"NO\"\n    }\n    \n    return \"YES\"\
    \n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0] > interval2[1] || interval2[0] > interval1[1]\
    \ {\n        return \"NO\"\n    }\n    \n    for i := interval1[0]; i <= interval1[1];\
    \ i++ {\n        for j := interval2[0]; j <= interval2[1]; j++ {\n           \
    \ if i == j {\n                return \"YES\"\n            }\n        }\n    }\n\
    \    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ || interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ || interval1[1].(int) == interval2[0].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ || interval1[1].(int) == interval", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 {\n        start1, start2 = start2, start1\n   \
    \ }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n    }\n    \n\
    \    if start1 == end1 && start2 == end2 {\n        return \"YES\"\n    }\n  \
    \  \n    if start1 == end1 {\n        return \"NO\"\n    }\n    \n    if start2\
    \ == end2 {\n        return \"NO\"\n    }\n    \n    if start1 == start2 {\n \
    \       return \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"\
    YES\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end1 > end2 {\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n    \n \
    \   if start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 >\
    \ start2 {\n        start1, start2 = start2, start1\n    }\n    \n    if end1\
    \ > end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    if start2 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n    }\n    \n    if end", "    // Your code here\n    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ > interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] || interval2[0] > interval1[1] {\n        return \"NO\"\n   \
    \ }\n    \n    if interval1[0] == interval2[0] && interval1[1] == interval2[1]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0] == interval2[0]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1] == interval2[1]\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0] < interval2[0] {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[1] > interval2[1] {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[1] < interval2[0] {\n    \
    \    return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0] {\n      \
    \  return \"NO\"\n    }\n    \n    if interval1[1] < interval2[1] {\n        return\
    \ \"NO\"\n    }\n    \n    return \"YES\"\n}\n", "    // Your code here\n    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    if interval1[0] > interval2[0] {\n        return \"NO\"\n    }\n    if interval1[1]\
    \ < interval2[0] {\n        return \"NO\"\n    }\n    if interval2[1] < interval1[0]\
    \ {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1]\
    \ == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0]\
    \ {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n  \
    \      return \"YES\"\n    }\n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 > end2 {\n\
    \            return \"NO\"\n        } else {\n            return \"YES\"\n   \
    \     }\n    }\n    \n    if start1 < start2 {\n        if end1 > end2 {\n   \
    \         return \"NO\"\n        } else {\n            return \"YES\"\n      \
    \  }\n    }\n    \n    if end1 < end2 {\n        return \"YES\"\n    }\n    \n\
    \    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 {\n        start1, start2 = start2,\
    \ start1\n        end1, end2 = end2, end1\n    }\n    \n    if start2 > start1\
    \ {\n        start1, start2 = start2, start1\n        end1, end2 = end2, end1\n\
    \    }\n    \n    if end1 < end2 {\n        end1, end2 = end2, end1\n    }\n \
    \   \n    if end2 < end1 {\n        return \"NO\"\n    }\n    \n    if end1 -\
    \ start1 == end2 - start2 {\n        return \"YES\"\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        if end1 > end2 {\n            return \"NO\"\n        }\n\
    \        \n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n      \
    \  if start1 > start2 {\n            return \"NO\"\n        }\n        \n    \
    \    return \"YES\"\n    }\n    \n    if end1 < end2 {\n        return \"NO\"\n\
    \    }\n    \n    return \"YES\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == end1 && start2 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == end2 || start2 == end1 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 < end2 && start2 < end1 {\n        return \"YES\"\n\
    \    }\n    \n    if start1 < end2 && start2 > end1 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 > end2 && start2 < end1 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 > end2 && start2 > end1 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 < end2 && start2 > end1 {\n        return \"NO\"\n\
    \    }\n    \n    if start1 < end2 && start2 < end1 {\n        return \"YES\"\n\
    \    }\n    \n    return \"NO\"\n}\n", "    // Your code here\n    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int)\
    \ == interval2[0].(int) {\n        return \"YES\"\n    }\n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    if interval1[1].(int) == interval2[0].(int) && interval1[0].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n\
    \    start2, end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1\
    \ > end1 || start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ > start2 || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == start2 {\n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 < start2 {\n        start1,\
    \ start2 = start2, start1\n        end1, end2 = end2, end1\n    }\n    \n    if\
    \ start1 < end2 {\n        end1 = end2\n    }\n    \n    if start2 < end1 {\n\
    \        end2 = end1\n    }\n    \n    if end1 - start1 == end2 - start2 {\n \
    \       return \"YES\"\n    }\n    \n    if end1 - start1 > end2 - start2 {\n\
    \        return \"NO\"\n    }\n    \n    for i := start1; i <= end1; i++ {\n \
    \       for j := start2; j <= end2; j++ {\n            if i == j {\n         \
    \       continue\n            }\n            \n            if i > j {\n      \
    \          return \"NO\"\n            }\n        }\n    }\n    \n    return \"\
    YES\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) || interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\
    \n    }\n    \n    if interval1[1].(int) == interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[1].(int) > interval2[0].(int) || interval1[0].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ > interval2[1].(int) || interval1[0].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[1].(int) == interval2[1].(int) {\n   \
    \     return \"YES\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    return", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) || interval1[1].(int) < interval2[1].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ || interval1[1].(int) < interval2[0].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\
    \n    }\n    \n    if interval1[1].(int) == interval2[1].(int) {\n        return\
    \ \"YES\"\n    }\n    \n    if interval1[1].(int) > interval2[0].(int) {\n   \
    \     return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if\
    \ start1 > start2 {\n        start1, start2 = start2, start1\n        end1, end2\
    \ = end2, end1\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == end2 {\n        return \"YES\"\n    }\n    \n    if start2 == end1 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 > end2 {\n        return \"\
    NO\"\n    }\n    \n    if start2 > end1 {\n        return \"NO\"\n    }\n    \n\
    \    if start1 > start2 {\n        start1, start2 = start2, start1\n        end1,\
    \ end2 = end2, end1\n    }\n    \n    if end1 < end2 {\n        end1, end2 = end2,\
    \ end1\n    }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == end2 {\n        return \"YES\"\n    }\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if end1 < start2 || end2 < start1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        if end1 == end2 {\n\
    \            return \"YES\"\n        } else {\n            return \"NO\"\n   \
    \     }\n    } else {\n        if end1 == end2 {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }\n    }\n}\n", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ || end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 < start2 ||\
    \ end2 < start1 {\n        return \"NO\"\n    }\n    \n    if start1 == start2\
    \ && end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == start2\
    \ {\n        return \"YES\"\n    }\n    \n    if end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == end1 {\n        return \"YES\"\n    }\n\
    \    \n    if start2 == end2 {\n        return \"YES\"\n    }\n    \n    if start1\
    \ == end2 {\n        return \"YES\"\n    }\n    \n    if start2 == end1 {\n  \
    \      return \"YES\"\n    }\n    \n    if start1 > end2 {\n        return \"\
    YES\"\n    }\n    \n    if start2 > end1 {\n        return \"YES\"\n    }\n  \
    \  \n    if start1 < start2 {\n        return \"YES\"\n    }\n    \n    if start2\
    \ < start1 {\n        return \"YES\"\n    }\n    \n    if end1 > end2 {\n    \
    \    return \"YES\"\n    }\n    \n    if end2 > end1 {\n        return \"YES\"\
    \n    }\n    \n    if end1 < end2 {\n        return \"YES\"\n    }\n    \n   \
    \ if end2 < end1 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n",
  "    // Your code here\n    if len(interval1) == 0 || len(interval2) == 0 {\n  \
    \      return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) {\n        interval1[0]\
    \ = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        interval1[1] = interval1[1].(int) + 1\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    start1 := interval1[0].(int)\n    end1 := interval1[1].(int)\n    start2\
    \ := interval2[0].(int)\n    end2 := interval2[1].(int)\n    \n    if start1 >\
    \ end2 || start2 > end1 {\n        return \"NO\"\n    }\n    \n    for start1\
    \ <= end2 && start2 <= end1 {\n        if start1 == start2 && end1 == end2 {\n\
    \            return \"YES\"\n        }\n        \n        if start1 == start2\
    \ {\n            start1++\n        } else if start1 < start2 {\n            start1++\n\
    \        } else {\n            start2++\n        }\n    }\n    \n    return \"\
    NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0] > interval2[1] || interval2[0] > interval1[1]\
    \ {\n        return \"NO\"\n    }\n    \n    if interval1[0] < interval2[0] {\n\
    \        interval1[0], interval2[0] = interval2[0], interval1[0]\n    }\n    \n\
    \    if interval1[1] > interval2[1] {\n        interval1[1], interval2[1] = interval2[1],\
    \ interval1[1]\n    }\n    \n    if interval1[0] > interval1[1] || interval2[0]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval1[0] ==\
    \ interval1[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0] ==\
    \ interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1] ==\
    \ interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0] ==\
    \ interval2[0] {\n        return \"YES\"\n    }\n    \n    if interval1[1] ==\
    \ interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[0] ==\
    \ interval2[1] {\n        return \"YES\"\n    }\n    \n    if interval1[1] ==\
    \ interval2[0] {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n",
  "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n  \
    \  }\n    if interval1[0].(int) > interval2[0].(int) {\n        interval1, interval2\
    \ = interval2, interval1\n    }\n    if interval1[0].(int) > interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[1].(int) < interval2[1].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    if interval1[0].(int) == interval2[0].(int) {\n        return \"YES\"\n \
    \   }\n    if interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\
    \n    }\n    if interval1[0].(int) == interval2[1].(int) {\n        return \"\
    YES\"\n    }\n    if interval1[1].(int) == interval2[0].(int) {\n        return\
    \ \"YES\"\n    }\n    return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2)\
    \ == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end1 || start2 > end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > start2 || end1 < end2 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 == start2 && end1 == end2 {\n        return \"YES\"\n   \
    \ }\n    \n    if start1 == start2 {\n        return \"YES\"\n    }\n    \n  \
    \  if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if start1 < start2\
    \ {\n        start1, start2 = start2, start1\n    }\n    \n    if end1 > end2\
    \ {\n        end1, end2 = end2, end1\n    }\n    \n    if end1 - start1 == end2\
    \ - start2 {\n        return \"YES\"\n    }\n    \n    if end1 - start1 > end2\
    \ - start2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1 < end2\
    \ - start2 {\n        return \"NO\"\n    }\n    \n    if end1 - start1 == end2\
    \ - start2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", " \
    \   if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n \
    \   }\n    \n    if interval1[0] > interval2[1] {\n        return \"NO\"\n   \
    \ }\n    \n    if interval2[0] > interval1[1] {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0] < interval2[0] {\n        return \"NO\"\n    }\n  \
    \  \n    if interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    \n\
    \    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n\
    \    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n\
    \    if interval1[0] > interval2[0] {\n        return \"YES\"\n    }\n    \n \
    \   if interval1[1] > interval2[1] {\n        return \"YES\"\n    }\n    \n  \
    \  return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    for i := interval1[0].(int);\
    \ i <= interval1[1].(int); i++ {\n        for j := interval2[0].(int); j <= interval2[1].(int);\
    \ j++ {\n            if i == j {\n                return \"YES\"\n           \
    \ }\n        }\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) ==\
    \ 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 <= start2 && end1 >= end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 <= start2 && end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 <= start1 && end2 < end1 {\n        return\
    \ \"NO\"\n    }\n    \n    if start2 <= start1 && end2 >= end1 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 > start2 {\n        return \"NO\"\n    }\n\
    \    \n    if end1 < end2 {\n        return \"NO\"\n    }\n    \n    if end1 >\
    \ end2 {\n        return \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if\
    \ len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[0].(int) {\n        interval1, interval2\
    \ = interval2, interval1\n    }\n    \n    start1, end1 := interval1[0].(int),\
    \ interval1[1].(int)\n    start2, end2 := interval2[0].(int), interval2[1].(int)\n\
    \    \n    if start1 > end2 || start2 > end1 {\n        return \"NO\"\n    }\n\
    \    \n    if start1 > end1 {\n        start1, end1 = end1, start1\n    }\n  \
    \  \n    if start2 > end2 {\n        start2, end2 = end2, start2\n    }\n    \n\
    \    if start1 > start2 {\n        start1, start2 = start2, start1\n    }\n  \
    \  \n    if end1 < end2 {\n        end1, end2 = end2, end1\n    }\n    \n    if\
    \ start1 == end1 {\n        return \"YES\"\n    }\n    \n    if start2 == end2\
    \ {\n        return \"YES\"\n    }\n    \n    if start1 == start2 && end1 == end2\
    \ {\n        return \"YES\"\n    }\n    \n    if start1 == start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"\n    }\n\
    \    \n    if end1 - start1 == end2 - start2 {\n        return \"YES\"", "   \
    \ if len(interval1) == 0 || len(interval2) == 0 {\n        return \"NO\"\n   \
    \ }\n    \n    start1, end1 := interval1[0].(int), interval1[1].(int)\n    start2,\
    \ end2 := interval2[0].(int), interval2[1].(int)\n    \n    if start1 > end1 ||\
    \ start2 > end2 {\n        return \"NO\"\n    }\n    \n    if start1 > start2\
    \ {\n        start1, start2 = start2, start1\n    }\n    \n    if end1 > end2\
    \ {\n        end1, end2 = end2, end1\n    }\n    \n    if start1 == end1 && start2\
    \ == end2 {\n        return \"YES\"\n    }\n    \n    if start1 == end1 {\n  \
    \      return \"NO\"\n    }\n    \n    if start2 == end2 {\n        return \"\
    NO\"\n    }\n    \n    if start1 == end2 {\n        return \"NO\"\n    }\n   \
    \ \n    if start2 == end1 {\n        return \"NO\"\n    }\n    \n    if start1\
    \ == start2 {\n        return \"YES\"\n    }\n    \n    if start2 == start1 {\n\
    \        return \"YES\"\n    }\n    \n    if end1 == end2 {\n        return \"\
    YES\"\n    }\n    \n    if end2 == end1 {\n        return \"YES\"\n    }\n   \
    \ \n    if end1 == start2 {\n        return \"YES\"\n    }\n    \n    if end2\
    \ == start1 {\n        return \"YES\"\n    }\n    \n    if end1 == start1 {\n\
    \        return \"YES\"\n    }\n    \n    if end2 == start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start1 == start2 {\n        return \"YES\"\n  \
    \  }\n    \n    if start2 == start1 {\n        return \"YES\"\n    }\n    \n \
    \   if end1 == end2 {\n        return \"YES\"\n    }\n    \n    if end2 == end1\
    \ {\n        return \"YES\"\n    }\n    \n    return \"NO", "    // Your code\
    \ here\n    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    return \"NO\"\n\
    }\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n        return \"\
    NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int) || interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval2[0].(int) {\n        return\
    \ \"NO\"\n    }\n    \n    if interval1[0].(int) == interval2[0].(int) && interval1[1].(int)\
    \ == interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) || interval1[1].(int) < interval", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ > interval2[1].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ && interval1[1].(int) < interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    \n    if interval1[0].(int) < interval2[0].(int) && interval1[1].(int) >\
    \ interval2[1].(int) {\n        return \"YES\"\n    }\n    \n    return \"NO\"\
    \n}\n", "    // Your code here\n    if len(interval1) == 0 || len(interval2) ==\
    \ 0 {\n        return \"NO\"\n    }\n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) < interval2[0].(int)\
    \ {\n        return \"NO\"\n    }\n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    if interval1[0].(int) == interval2[0].(int)\
    \ && interval1[1].(int) == interval2[1].(int) {\n        return \"YES\"\n    }\n\
    \    if interval1[0].(int) == interval2[1].(int) && interval1[1].(int) == interval2[0].(int)\
    \ {\n        return \"YES\"\n    }\n    return \"NO\"\n}\n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1,\
    \ end1 := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 > start2 || end1 < end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 == start2 && end1 == end2 {\n        return\
    \ \"YES\"\n    }\n    \n    if end1 - start1 == end2 - start2 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    start1, end1\
    \ := interval1[0].(int), interval1[1].(int)\n    start2, end2 := interval2[0].(int),\
    \ interval2[1].(int)\n    \n    if start1 > end1 || start2 > end2 {\n        return\
    \ \"NO\"\n    }\n    \n    if start1 < end2 && end1 > start2 {\n        return\
    \ \"YES\"\n    }\n    \n    if start2 < end1 && end2 > start1 {\n        return\
    \ \"YES\"\n    }\n    \n    return \"NO\"\n}\n", "    if len(interval1) == 0 ||\
    \ len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval2[0] >\
    \ interval1[1] {\n        return \"NO\"\n    }\n    \n    if interval1[0] == interval2[0]\
    \ && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n   \
    \ if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n   \
    \ if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n   \
    \ return \"NO\"\n}\n", "    if len(interval1) == 0 || len(interval2) == 0 {\n\
    \        return \"NO\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ || interval1[1].(int) < interval2[1].(int) {\n        return \"NO\"\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n    if interval1[0].(int)\
    \ == interval2[0].(int) && interval1[1].(int) == interval2[1].(int) {\n      \
    \  return \"YES\"\n    }\n    \n    if interval1[0].(int) > interval2[0].(int)\
    \ {\n        interval1[0] = interval1[0].(int) - 1\n    }\n    \n    if interval1[1].(int)\
    \ < interval2[1].(int) {\n        interval1[1] = interval1[1].(int) + 1\n    }\n\
    \    \n    if interval1[0].(int) > interval2[1].(int) || interval1[1].(int) <\
    \ interval2[0].(int) {\n        return \"NO\"\n    }\n    \n", "    if len(interval1)\
    \ == 0 || len(interval2) == 0 {\n        return \"NO\"\n    }\n    \n    if interval1[0]\
    \ > interval2[1] {\n        return \"NO\"\n    }\n    \n    if interval1[1] <\
    \ interval2[0] {\n        return \"NO\"\n    }\n    \n    if interval1[0] > interval2[0]\
    \ {\n        interval1[0] = interval1[0] - 1\n    }\n    \n    if interval1[1]\
    \ < interval2[1] {\n        interval1[1] = interval1[1] + 1\n    }\n    \n   \
    \ if interval1[0] == interval1[1] {\n        return \"YES\"\n    }\n    \n   \
    \ if interval1[0] > interval1[1] {\n        return \"NO\"\n    }\n    \n    if\
    \ interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[0] == interval2[1] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[0] {\n        return \"YES\"\n    }\n    \n    if\
    \ interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    \n    return\
    \ \"NO\"\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_51_remove_vowels
language: go_test.go
prompt: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
  \n// remove_vowels is a function that takes string and returns string without vowels.\n\
  // >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\")\n// \"bcdf\"\
  \n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"aaBAA\")\n//\
  \ \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunc remove_vowels(text string)\
  \ string {\n"
tests: "func TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
  \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
  \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
  ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
  \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
  ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.indexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n    for _, char\
    \ := range text {\n        if contains(vowels, char) {\n            continue\n\
    \        }\n        result += string(char)\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.Contains(string(char)) {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, c := range text {\n        if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range text {\n\
    \        if vowels.indexOf(c) == -1 {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range\
    \ text {\n        if vowels.indexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    // Your code here\n\
    \    return \"\"\n}\n", "    var vowels = \"aeiou\"\n    var result string\n \
    \   for _, c := range text {\n        if vowels.indexOf(c) == -1 {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char := range text {\n \
    \       if vowels.Contains(string(char)) {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range text {\n        if c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiou\"\n    var result string\n\
    \    for _, c := range text {\n        if vowels.indexOf(c) == -1 {\n        \
    \    result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c := range text {\n\
    \        if vowels.IndexOf(c) == -1 {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.Index(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, char := range\
    \ text {\n        if vowels.Index(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = []rune(\"aeiou\"\
    )\n    var result string\n    for _, char := range text {\n        for _, vowel\
    \ := range vowels {\n            if char == vowel {\n                break\n \
    \           }\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for\
    \ _, c := range text {\n        if vowels.Contains(string(c)) {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range text {\n        if c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U' {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result = \"\"\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range text {\n\
    \        if vowels.Index(c) == -1 {\n            result += string(c)\n       \
    \ }\n    }\n    return result\n}\n", "    var vowels = \"aeiou\"\n    var result\
    \ = \"\"\n    for _, c := range text {\n        if vowels.indexOf(c) == -1 {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.Contains(string(char)) {\n            continue\n \
    \       }\n        result += string(char)\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range\
    \ text {\n        if vowels.indexOf(c) < 0 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiou\"\n    var\
    \ result string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.Contains(string(c)) {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for _, c := range text {\n        if vowels.Contains(string(c))\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.IndexOf(string(c)) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for i := 0; i < len(text); i++ {\n        if vowels.Index(text[i])\
    \ == -1 {\n            result += text[i]\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = []rune(\"\
    aeiou\")\n    var result = \"\"\n    for _, c := range text {\n        if !contains(vowels,\
    \ c) {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n\n// contains returns true if the runes array contains the rune.", "    var\
    \ vowels = \"aeiou\"\n    var result string\n    for _, c := range text {\n  \
    \      if vowels.indexOf(c) == -1 {\n            result += string(c)\n       \
    \ }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = []rune(\"\
    aeiou\")\n    var result string\n    for _, char := range text {\n        if char\
    \ != ' ' {\n            for _, vowel := range vowels {\n                if char\
    \ == vowel {\n                    result += string(char)\n                   \
    \ break\n                }\n            }\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result = \"\"\n    for _, c := range text {\n        if vowels.IndexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range text {\n        if char\
    \ != 'a' && char != 'e' && char != 'i' && char != 'o' && char != 'u' {\n     \
    \       result += string(char)\n        }\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.Contains(string(char)) {\n            continue\n \
    \       }\n        result += string(char)\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char\
    \ := range text {\n        if vowels.Contains(string(char)) {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text {\n    \
    \    if vowels.Index(string(c)) == -1 {\n            result += string(c)\n   \
    \     }\n    }\n    return result\n}\n", "    var vowels = []rune(\"aeiou\")\n\
    \    var result string\n    for _, c := range text {\n        if contains(vowels,\
    \ c) {\n            continue\n        }\n        result += string(c)\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n\
    \    for _, c := range text {\n        if vowels.Contains(string(c)) {\n     \
    \       result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiou\"\n    var result string\n    for _, char := range text {\n\
    \        if vowels.Index(char) == -1 {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result\
    \ string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            continue\n        }\n        result += string(char)\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, char := range text\
    \ {\n        if char != 'a' && char != 'e' && char != 'i' && char != 'o' && char\
    \ != 'u' {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result = \"\"\n    for _, c := range text {\n        if vowels.indexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for _, c := range text {\n        if vowels.IndexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result = \"\"\n    for _, char\
    \ := range text {\n        if char != ' ' {\n            for _, vowel := range\
    \ vowels {\n                if char == vowel {\n                    break\n  \
    \              }\n                result += string(char)\n            }\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var vowels = \"aeiou\"\n    var result string\n    for i\
    \ := 0; i < len(text); i++ {\n        if vowels.Index(text[i]) == -1 {\n     \
    \       result += text[i]\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range text\
    \ {\n        if vowels.IndexOf(string(char)) == -1 {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    // Your code here\n    return \"\"\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for i := 0; i < len(text);\
    \ i++ {\n        if vowels.Index(text[i]) == -1 {\n            result += text[i]\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            continue\n        }\n        result += string(char)\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiou\"\n    var result string\n\
    \    for _, c := range text {\n        if vowels.Contains(string(c)) {\n     \
    \       result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range text\
    \ {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n   \
    \     }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n  \
    \  var result string\n    for _, char := range text {\n        if vowels.IndexOf(string(char))\
    \ == -1 {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.Contains(string(char)) {\n            continue\n \
    \       }\n        result += string(char)\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiou\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.Index(c) == -1 {\n            result += string(c)\n   \
    \     }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n  \
    \  var result = \"\"\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range text {\n\
    \        if vowels.indexOf(c) == -1 {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result = \"\"\n    for _, char := range text {\n        if vowels.IndexOf(string(char))\
    \ == -1 {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiou\"\n    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c := range text\
    \ {\n        if vowels.IndexOf(c) == -1 {\n            result += string(c)\n \
    \       }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.Contains(string(c))\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    // Your code here\n    return \"\"\n}\n", "    var vowels = \"aeiou\"\n   \
    \ var result = \"\"\n    for _, c := range text {\n        if vowels.indexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.Contains(string(c)) {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.Contains(string(c)) {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            continue\n        }\n        result += string(char)\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiou\"\n    var result = \"\"\n\
    \    for _, char := range text {\n        if vowels.indexOf(char) == -1 {\n  \
    \          result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiou\"\n    var result = \"\"\n    for _, char := range text {\n\
    \        if vowels.Index(char) == -1 {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result\
    \ string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            continue\n        }\n        result += string(char)\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n\
    \    for _, c := range text {\n        if vowels.Index(string(c)) == -1 {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range text\
    \ {\n        if vowels.indexOf(c) == -1 {\n            result += c\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiou\"\n    var result string\n\
    \    for _, char := range text {\n        if vowels.IndexOf(char) == -1 {\n  \
    \          result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range text {\n  \
    \      if vowels.indexOf(c) == -1 {\n            result += string(c)\n       \
    \ }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiouAEIOU\"\n    var result string\n    for _, c := range text {\n        if\
    \ vowels.Index(c) == -1 {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n\
    \    for _, char := range text {\n        if vowels.IndexOf(char) == -1 {\n  \
    \          result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text {\n\
    \        if vowels.IndexOf(string(c)) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = []rune(\"aeiou\"\
    )\n    var result string\n    for _, char := range text {\n        if char !=\
    \ ' ' {\n            for _, vowel := range vowels {\n                if char ==\
    \ vowel {\n                    result += string(char)\n                    break\n\
    \                }\n            }\n        } else {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    for _, c := range text {\n        if vowels.indexOf(c)\
    \ == -1 {\n            result += c\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.Index(c) == -1 {\n            result += string(c)\n   \
    \     }\n    }\n    return result\n}\n", "    var vowels = \"aeiou\"\n    var\
    \ result string\n    for _, char := range text {\n        if vowels.Index(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, c := range text {\n\
    \        if vowels.indexOf(c) == -1 {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            continue\n        }\n        result += string(char)\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\
    \"\n    for _, char := range text {\n        if vowels.IndexOf(char) == -1 {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range text\
    \ {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n   \
    \     }\n    }\n    return result\n}\n", "    // Your code here\n    return \"\
    \"\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _,\
    \ c := range text {\n        if vowels.IndexOf(c) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiouAEIOU\"\n    var result string\n    for _, char := range text {\n       \
    \ if vowels.IndexOf(char) == -1 {\n            result += char\n        }\n   \
    \ }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result\
    \ = \"\"\n    for _, c := range text {\n        if vowels.IndexOf(string(c)) ==\
    \ -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.Index(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiou\"\n    var result = \"\"\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            continue\n        }\n        result += string(char)\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\
    \"\n    for _, char := range text {\n        if vowels.IndexOf(char) == -1 {\n\
    \            result += char\n        }\n    }\n    return result\n}\n", "    var\
    \ vowels = \"aeiou\"\n    var result = \"\"\n    for _, char := range text {\n\
    \        if vowels.IndexOf(char) == -1 {\n            result += char\n       \
    \ }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, c := range text {\n        if vowels.Contains(string(c))\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.Contains(string(c)) {\n            continue\n        }\n\
    \        result += string(c)\n    }\n    return result\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text {\n    \
    \    if vowels.Contains(string(c)) {\n            result += string(c)\n      \
    \  }\n    }\n    return result\n}\n", "    var result string\n    for _, c :=\
    \ range text {\n        if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.IndexOf(string(c)) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.Contains(string(c))\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    var result string\n    for _, char := range text {\n        if char != 'a'\
    \ && char != 'e' && char != 'i' && char != 'o' && char != 'u' {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char := range text {\n \
    \       if vowels.IndexOf(char) == -1 {\n            result += char\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result\
    \ string\n    for _, c := range text {\n        if vowels.IndexOf(string(c)) ==\
    \ -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n    for _, char\
    \ := range text {\n        if char != ' ' {\n            for _, vowel := range\
    \ vowels {\n                if char == vowel {\n                    result +=\
    \ string(char)\n                    break\n                }\n            }\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range text {\n        if char != 'a' && char != 'e' && char != 'i' &&\
    \ char != 'o' && char != 'u' {\n            result += string(char)\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result\
    \ = \"\"\n    for _, c := range text {\n        if vowels.Contains(string(c))\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = []rune(\"aeiou\"\
    )\n    var result string\n    for _, c := range text {\n        if !contains(vowels,\
    \ c) {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range text {\n        if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiouAEIOU\"\n    var result string\n    for _, c := range text {\n        if\
    \ vowels.Index(string(c)) == -1 {\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiou\"\n    var result =\
    \ \"\"\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c :=\
    \ range text {\n        if vowels.indexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.Contains(string(char))\
    \ {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result string\n    for _, c := range\
    \ text {\n        if vowels.indexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range\
    \ text {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.IndexOf(string(c)) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for i := 0; i < len(text); i++ {\n        if vowels.Index(text[i])\
    \ == -1 {\n            result += text[i]\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n    for _, c\
    \ := range text {\n        if contains(vowels, c) {\n            continue\n  \
    \      }\n        result += string(c)\n    }\n    return result\n}\n\n// contains\
    \ returns true if the runes array contains the rune.", "    var vowels = \"aeiou\"\
    \n    var result string\n    for _, c := range text {\n        if vowels.indexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiouAEIOU\"\n    var result = \"\"\n    for _, c := range text {\n        if\
    \ vowels.Index(c) == -1 {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n\
    \    for _, c := range text {\n        if vowels.IndexOf(string(c)) == -1 {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for _, c := range\
    \ text {\n        if vowels.IndexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(string(char)) == -1 {\n         \
    \   result += string(char)\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    for _, char := range text {\n        if char != 'a' && char\
    \ != 'e' && char != 'i' && char != 'o' && char != 'u' {\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n", "    var vowels = \"\
    aeiou\"\n    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.IndexOf(string(c)) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range text {\n        if char != 'a' && char != 'e' && char != 'i' &&\
    \ char != 'o' && char != 'u' {\n            result += string(char)\n        }\n\
    \    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result\
    \ string\n    for _, char := range text {\n        if vowels.Index(char) == -1\
    \ {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiou\"\n    var result = \"\"\n    for _, char := range\
    \ text {\n        if vowels.indexOf(char) == -1 {\n            result += char\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiou\"\n    var result string\n    for _, c := range text {\n\
    \        if vowels.indexOf(c) == -1 {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char\
    \ := range text {\n        if vowels.IndexOf(char) == -1 {\n            result\
    \ += char\n        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result string\n    for _, char := range text {\n        if vowels.IndexOf(char)\
    \ == -1 {\n            result += char\n        }\n    }\n    return result\n}\n",
  "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text\
    \ {\n        if vowels.Index(string(c)) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    // Your code here\n    return \"\"\n}\n", "    var vowels = \"aeiouAEIOU\"\
    \n    var result = \"\"\n    for _, c := range text {\n        if vowels.IndexOf(c)\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n    for _, char\
    \ := range text {\n        if contains(vowels, char) {\n            continue\n\
    \        }\n        result += string(char)\n    }\n    return result\n}\n", " \
    \   var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c := range\
    \ text {\n        if vowels.IndexOf(string(c)) == -1 {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    // Your code here\n\
    \    return \"\"\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n\
    \    for _, c := range text {\n        if vowels.IndexOf(string(c)) == -1 {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, char := range text {\n        if char != 'a'\
    \ && char != 'e' && char != 'i' && char != 'o' && char != 'u' {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var vowels\
    \ = \"aeiouAEIOU\"\n    var result string\n    for _, c := range text {\n    \
    \    if vowels.Contains(string(c)) {\n            result += string(c)\n      \
    \  }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = \"aeiouAEIOU\"\n    var result string\n    for _, c :=\
    \ range text {\n        if vowels.IndexOf(c) == -1 {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.Index(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n    for _, char\
    \ := range text {\n        if char != ' ' {\n            for _, vowel := range\
    \ vowels {\n                if char == vowel {\n                    result +=\
    \ string(char)\n                    break\n                }\n            }\n\
    \        }\n    }\n    return result\n}\n", "    var vowels = \"aeiouAEIOU\"\n\
    \    var result string\n    for _, c := range text {\n        if vowels.IndexOf(string(c))\
    \ == -1 {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n    for _, char\
    \ := range text {\n        if char != ' ' {\n            for _, vowel := range\
    \ vowels {\n                if char == vowel {\n                    result +=\
    \ string(char)\n                    break\n                }\n            }\n\
    \        } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var vowels = []rune(\"aeiou\")\n    var result string\n \
    \   for _, c := range text {\n        if contains(vowels, c) {\n            continue\n\
    \        }\n        result += string(c)\n    }\n    return result\n}\n\n// contains\
    \ returns true if the runes in runes are in the runes in haystack.", "    var\
    \ vowels = \"aeiouAEIOU\"\n    var result string\n    for _, char := range text\
    \ {\n        if vowels.IndexOf(char) == -1 {\n            result += char\n   \
    \     }\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

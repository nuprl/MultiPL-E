{
  "name": "HumanEval_94_skjkasdkd",
  "language": "go_test.go",
  "prompt": "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You are given a list of integers.\n// You need to find the largest prime value and return the sum of its digits.\n// Examples:\n// >>> skjkasdkd([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3})\n// 10\n// >>> skjkasdkd([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1})\n// 25\n// >>> skjkasdkd([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3})\n// 13\n// >>> skjkasdkd([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6})\n// 11\n// >>> skjkasdkd([]int{0, 81, 12, 3, 1, 21})\n// 3\n// >>> skjkasdkd([]int{0, 8, 1, 2, 1, 7})\n// 7\nfunc skjkasdkd(lst []int) int {\n",
  "tests": "func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "completions": [
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum%i == 0 {\n            fmt.Println(i)\n            return i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits int\n    for i := 0; i < len(lst); i++ {\n        digits += lst[i]\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digits -= lst[i]\n            break\n        }\n    }\n    return digits\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 1; i < len(lst); i++ {\n        for j := i + 1; j < len(lst); j++ {\n            if lst[i] > lst[j] {\n                lst[i], lst[j] = lst[j], lst[i]\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(v)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum % i == 0 {\n            sum /= i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digit int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digit = i\n            break\n        }\n    }\n    return sum - digit\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i]%lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, i := range lst {\n        sum += i\n    }\n    for i := 2; i < sum; i++ {\n        if sum%i == 0 {\n            sum /= i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, i := range lst {\n        sum += i\n    }\n    var max int\n    for i := 1; i < sum; i++ {\n        if isPrime(i) {\n            max = i\n            break\n        }\n    }\n    var digits int\n    for i := 0; i < len(fmt.Sprintf(\"%d\", max)); i++ {\n        digits += int(fmt.Sprintf(\"%d\", max)[i])\n    }\n    return digits\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digits = append(digits, i)\n        }\n    }\n    var res int\n    for _, v := range digits {\n        res += v\n    }\n    return res\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        sum += lst[i]\n        if sum > max {\n            sum = 0\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v % 10)\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i] % lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i] % lst[j] == 0 {\n                        lst[j] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i] % lst[j] == 0 {\n                        lst[j] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i] % lst[j] == 0 {\n                        lst[j] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i] %",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    \n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    \n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        digits = append(digits, lst[i]%10)\n    }\n    \n    for i := 0; i < len(digits); i++ {\n        if digits[i] == 0 {\n            continue\n        }\n        \n        for j := i + 1; j < len(digits); j++ {\n            if digits[i] == digits[j] {\n                digits[j] = 0\n            }\n        }\n    }\n    \n    for i := 0; i < len(digits); i++ {\n        if digits[i] != 0 {\n            sum += digits[i]\n        }\n    }\n    \n    return sum\n}\n",
    "    var sum int\n    for _, i := range lst {\n        sum += i\n    }\n    for i := 2; i < sum; i++ {\n        if sum%i == 0 {\n            sum = sum/i\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                sum += lst[i]\n            }\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(v)\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    \n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    \n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digits = append(digits, i)\n        }\n    }\n    \n    var result int\n    for _, v := range digits {\n        result += v\n    }\n    \n    return result\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i]%lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i]%lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i]%lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i]%lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i]%lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 1; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var result int\n    for _, v := range lst {\n        if v > 0 {\n            result += v % 10\n        }\n    }\n    for _, v := range lst {\n        if v > 0 {\n            result += v / 10\n        }\n    }\n    return result\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        sum += lst[i]\n        if lst[i] == max {\n            fmt.Println(sum)\n            return sum\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) / 10)\n    }\n    return sum\n}\n",
    "    var result int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            result += lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            result += lst[i] / 10\n            result += lst[i] % 10\n        }\n    }\n    return result\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, i := range lst {\n        if i > max {\n            max = i\n        }\n    }\n    for _, i := range lst {\n        sum += i\n        if i > max {\n            max = i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                sum += lst[i]\n            }\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digits = append(digits, i)\n        }\n    }\n    var result int\n    for _, v := range digits {\n        result += v\n    }\n    return result\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    \n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    \n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    \n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    \n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    \n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    \n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v / max) * (v % max)\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum % i == 0 {\n            fmt.Println(i)\n            return i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        sum += lst[i]\n        if lst[i] == max {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] > max {\n                    max = lst[j]\n                }\n            }\n            break\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        sum += lst[i]\n        if lst[i] == max {\n            fmt.Println(sum)\n            return sum\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digits = append(digits, i)\n        }\n    }\n    var result int\n    for _, v := range digits {\n        result += v\n    }\n    return result\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += int(fmt.Sprintf(\"%d\", lst[i]))\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var result int\n    for _, v := range lst {\n        result += v\n    }\n    for i := 2; i < result; i++ {\n        if result % i == 0 {\n            result = result / i\n        }\n    }\n    return result\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        digits = append(digits, lst[i]%10)\n    }\n    for i := 0; i < len(digits); i++ {\n        if digits[i] == 0 {\n            continue\n        }\n        for j := i + 1; j < len(digits); j++ {\n            if digits[i] == digits[j] {\n                digits = append(digits[:j], digits[j+1:]...)\n                i--\n                break\n            }\n        }\n    }\n    for i := 0; i < len(digits); i++ {\n        if digits[i] == 0 {\n            continue\n        }\n        for j := i + 1; j < len(digits); j++ {\n            if digits[i] == digits[j] {\n                digits = append(digits[:j], digits[j+1:]...)\n                i--\n                break\n            }\n        }\n    }\n    for i := 0; i < len(digits); i++ {\n        if digits[i] == 0 {\n            continue\n        }\n        for j := i + 1; j < len(digits); j++ {\n            if digits[i] == digits[j] {\n                digits = append(digits[:j], digits[j+1:]...)\n                i--\n                break\n            }\n        }\n    }\n    for i := 0; i < len(digits); i++ {\n        if digits[i] == 0 {\n            continue\n        }\n        for j := i + 1; j < len(digits); j++ {\n            if digits[i] == digits[j] {\n                digits = append(digits[:j], digits[j+1:]...)\n                i--\n                break\n            ",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) / 10)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                sum += lst[i]\n            }\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum % i == 0 {\n            fmt.Println(i)\n            return i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v % 10)\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for i := max; i > 0; i-- {\n        sum += i\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum % i == 0 {\n            fmt.Println(i)\n            return i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 1; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {\n                    lst[j] = 0\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := i + 1; j < len(lst); j++ {\n                if lst[j] % lst[i] == 0 {",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum % i == 0 {\n            fmt.Println(i)\n            return i\n        }\n    }\n    return sum\n}\n",
    "    var result int\n    for _, v := range lst {\n        if v > 0 {\n            result = result + v % 10\n        }\n    }\n    return result\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var result int\n    for _, v := range lst {\n        if v > 0 {\n            result += v % 10\n        }\n    }\n    return result\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits int\n    for i := 0; i < len(lst); i++ {\n        digits += lst[i]\n        if digits > max {\n            digits = 0\n        }\n    }\n    return digits + max\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        sum += lst[i]\n        if lst[i] == max {\n            fmt.Println(sum)\n            return sum\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var result int\n    for _, v := range lst {\n        result += v\n    }\n    for i := 2; i < result; i++ {\n        if result % i == 0 {\n            result /= i\n        }\n    }\n    return result\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                if lst[i] % 2 == 0 {\n                    lst[i] /= 2\n                } else {\n                    lst[i] = lst[i] * 3 + 1\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                if lst[i] % 2 == 0 {\n                    lst[i] /= 2\n                } else {\n                    lst[i] = lst[i] * 3 + 1\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                if lst[i] % 2 == 0 {\n                    lst[i] /= 2\n                } else {\n                    lst[i] = lst[i] * 3 + 1\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                if lst[i] % 2 == 0 {\n                    lst[i] /= 2\n                } else {\n                    lst[i] = lst[i] * 3 + 1\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                if lst[i] % 2 == 0",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(v)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum%i == 0 {\n            fmt.Println(i)\n            return i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        sum += lst[i]\n        if sum > max {\n            sum = 0\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < len(lst); j++ {\n                if lst[j] > 0 {\n                    if lst[i] % lst[j] == 0 {\n                        lst[i] = 0\n                        break\n                    }\n                }\n            }\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    \n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    \n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        digits = append(digits, lst[i] % 10)\n    }\n    \n    for i := 0; i < len(digits); i++ {\n        if digits[i] == max {\n            return sum\n        }\n        \n        if digits[i] == 0 {\n            continue\n        }\n        \n        for j := 0; j < len(digits); j++ {\n            if digits[j] == 0 {\n                continue\n            }\n            \n            if digits[i] == digits[j] {\n                digits[i] = 0\n                break\n            }\n        }\n    }\n    \n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v % 10)\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 2; i < sum; i++ {\n        if sum % i == 0 {\n            sum /= i\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v) [0])\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    var sum int\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits []int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            digits = append(digits, i)\n        }\n    }\n    for _, v := range digits {\n        sum += v\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v % 10)\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += (v - 1) / max\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += v\n        if v > max {\n            max = v\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n        sum += int(fmt.Sprintf(\"%d\", v))\n    }\n    return sum\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var digits int\n    for i := 0; i < len(lst); i++ {\n        digits += lst[i]\n        if digits > max {\n            digits = max\n        }\n    }\n    return digits\n}\n",
    "    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > 0 {\n            for j := 0; j < lst[i]; j++ {\n                sum += lst[i]\n            }\n        }\n    }\n    return sum\n}\n",
    "    var max int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    var sum int\n    for i := 0; i < len(lst); i++ {\n        if lst[i] == max {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n"
  ],
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ]
}
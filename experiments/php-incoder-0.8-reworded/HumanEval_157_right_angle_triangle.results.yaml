language: php
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t// write your code here\n\t$xA = $a;\n\t$yA = $b;\n\t$xB = $c;\n\
    \t$yB = $a;\n\t$xC = $b;\n\t$yC = $c;\n\n\t$axB = $xB - $xA;\n\t$ayB = $yB - $yA;\n\
    \t$bxC = $xC - $xB;\n\t$byC = $yC - $yB;\n\t$bxA = $xA - $xB;\n\t$byA = $yA -\
    \ $yB;\n\n\tif ($ayB * $bxC - $ayB * $bxA == 0 || $ayB * $byC - $ayB * $byA ==\
    \ 0) {\n\t\treturn false;\n\t}\n\n\t// use cosine rule\n\t$cos = (abs(($ayB *\
    \ $bxC + $ayB * $byC) - ($ayB * $bxA + $ayB * $byA))) / sqrt((($ayB * $ayB) -\
    \ ($ayB * $ayB)) * (($bxC * $bxC) - ($bxA * $bxA)) * (($byC * $byC) - ($byA *\
    \ $byA)));\n\n\treturn (abs($cos) - 1);\n}\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmph0y4ogdj.php:32\n\
    Stack trace:\n#0 /tmp/tmph0y4ogdj.php(38): right_angle_triangle(3, 4, 5)\n#1 /tmp/tmph0y4ogdj.php(42):\
    \ candidate(3, 4, 5)\n#2 /tmp/tmph0y4ogdj.php(55): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmph0y4ogdj.php on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $delta_a = abs($b - $c);\n    $delta_b = abs($a - $c);\n    $delta_c\
    \ = abs($a - $b);\n\n    // if any of them are zero, return false\n    if ($delta_a\
    \ == 0 || $delta_b == 0 || $delta_c == 0) return false;\n\n    // calculate the\
    \ area of the triangle\n    $area_a = $delta_a * sqrt(pow(1/2, 1) * pow($b, 2)\
    \ * ($c + $b));\n    $area_b = $delta_b * sqrt(pow(1/2, 1) * pow($a, 2) * ($c\
    \ + $a));\n    $area_c = $delta_c * sqrt(pow(1/2, 1) * pow($a, 2) * ($a + $b));\n\
    \n    // calculate the hypotenuse\n    $hypotenuse = $delta_a + $delta_b + $delta_c;\n\
    \n    // calculate the angles\n    $angle_a = atan2($b, $c);\n    $angle_b = atan2($a,\
    \ $c);\n    $angle_c = atan2($a, $b);\n\n    // if the hypotenuse is zero or if\
    \ the angles are both greater than or \n    // equal to PI/2, return false\n \
    \   if ($hypotenuse == 0 || $angle_a >= pi() || $angle_b >= pi() || $angle_c >=\
    \ pi()) return false;\n\n    // if the hypotenuse is greater than the length of\
    \ the triangle return false\n    if ($hypotenuse > sqrt(($area_a * $area_a) +\
    \ ($area_b * $area_b) + ($area_c * $area_c))) return false;\n\n    // otherwise,\
    \ return true\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfs3kyl4_.php:48\n\
    Stack trace:\n#0 /tmp/tmpfs3kyl4_.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpfs3kyl4_.php\
    \ on line 48\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($b <= -$c || $b > $c) ? false : (($a == $c || $a > $c)\
    \ ? true : \n                                                    (($a >= $b &&\
    \ $a <= $c) ? true : false)); \n}\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqaqew5gv.php:20\n\
    Stack trace:\n#0 /tmp/tmpqaqew5gv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqaqew5gv.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $b && $a > $c) {\n        $a = $b;\n    }\n    if ($b\
    \ > $c && $b > $a) {\n        $b = $c;\n    }\n    if ($c > $a && $c > $b) {\n\
    \        $c = $a;\n    }\n    if ($a == $b) {\n        return true;\n    }\n \
    \   if ($a == $c) {\n        return true;\n    }\n    if ($b == $c) {\n      \
    \  return true;\n    }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8avvj45.php:38\n\
    Stack trace:\n#0 /tmp/tmpf8avvj45.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpf8avvj45.php\
    \ on line 38\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $a * $c;\n    $e = $b * $c;\n    $f = $d * $e;\n    $g =\
    \ $b * $d;\n    $h = $c * $d;\n    if ($e == 0 && $f > 0 && $h != 0) {\n     \
    \   return true;\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpokoxhgpq.php:28\n\
    Stack trace:\n#0 /tmp/tmpokoxhgpq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpokoxhgpq.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t$d = $a + $b + $c;\n\tif ($d >= 2.0) {\n\t\treturn true;\n\t}\n\
    \t$e = $b - $c;\n\tif ($e >= 2.0) {\n\t\treturn true;\n\t}\n\t$f = $a - $c;\n\t\
    if ($f >= 2.0) {\n\t\treturn true;\n\t}\n\tif ($d > $e && $d > $f) {\n\t\treturn\
    \ false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqizd3bs.php:35\n\
    Stack trace:\n#0 /tmp/tmptqizd3bs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptqizd3bs.php\
    \ on line 35\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a);\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs93p86m.php:23\n\
    Stack trace:\n#0 /tmp/tmpcs93p86m.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcs93p86m.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return $a + $b > $c ||\n         $a + $c > $b ||\n         $b +\
    \ $c > $a;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfz21n16.php:22\n\
    Stack trace:\n#0 /tmp/tmpsfz21n16.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsfz21n16.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $triangle_a = pow($a, 2) +\n                pow($b, 2) +\n    \
    \            pow($c, 2);\n  $triangle_a = sqrt(($triangle_a));\n  $triangle_b\
    \ = pow($a, 2) +\n                pow($b, 2);\n  $triangle_b = sqrt(($triangle_b));\n\
    \  $triangle_c = pow($a, 2) +\n                pow($c, 2);\n  $triangle_c = sqrt(($triangle_c));\n\
    \  \n  return ($triangle_a == $triangle_b || \n          $triangle_a == $triangle_c\
    \ || \n          $triangle_b == $triangle_c ||\n          $triangle_a == $triangle_b\
    \ && $triangle_b == $triangle_c ||\n          $triangle_a == $triangle_c && $triangle_a\
    \ == $triangle_b ||\n          $triangle_b == $triangle_c && $triangle_c == $triangle_a);\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03gnsuqt.php:35\n\
    Stack trace:\n#0 /tmp/tmp03gnsuqt.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp03gnsuqt.php\
    \ on line 35\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $angle_left = ($a + $b) * 0.5;\n  $angle_right = ($c + $a) * 0.5;\n\
    \  $angle_cross = (sqrt(pow($b, 2) + pow($c, 2)) - sqrt(pow($a, 2) + pow($c, 2)))\
    \ * 0.5;\n  return ($angle_left > $angle_right && $angle_left > $angle_cross)\
    \ ? 1 : 0;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgaek5oxr.php:22\n\
    Stack trace:\n#0 /tmp/tmpgaek5oxr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgaek5oxr.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return((abs($a - $b) + abs($a - $c) + abs($b - $c)) % 180 < 45);\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaezc36bs.php:20\n\
    Stack trace:\n#0 /tmp/tmpaezc36bs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpaezc36bs.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if(($a>0 && $b>0) || ($b>0 && $c>0) || ($c>0 && a>0)) return\
    \ true;\n    return false;\n}\n</code>\n<|/ a |>\n<| a tags=arrays,php dscore=0\
    \ |>\nJust for fun: \n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5ih2nj0v.php
    on line 15

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if ($a <= $b && $a <= $c || $b <= $c && $b <= $a) {\n    return\
    \ 1;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb57kax15.php:23\n\
    Stack trace:\n#0 /tmp/tmpb57kax15.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb57kax15.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $a + $b + $c;\n    if ($d == 18) {\n        return true;\n\
    \    } elseif ($d == 36) {\n        return false;\n    } elseif ($d > 18 && $d\
    \ < 36) {\n        $e = $d - 18;\n        $f = pow($e, 1.0 / 2.0);\n        $g\
    \ = sqrt($f * ($f - $a) * ($f - $b) * ($f - $c));\n        if ($a < $b) $g = ($g\
    \ + $c) / 2.0;\n        if ($g > $b) $g = ($g + $b) / 2.0;\n        if ($a > $c)\
    \ {\n            $h = $a * $c / $d;\n            return $h >= $b && $h >= $c ||\
    \ $h >= $b && $h >= $a || $h >= $a && $h >= $c;\n        } else {\n          \
    \  $h = $b * $c / $d;\n            return $h >= $a && $h >= $c || $h >= $a &&\
    \ $h >= $b || $h >= $c && $h >= $b;\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvzv4pv9.php:38\n\
    Stack trace:\n#0 /tmp/tmpzvzv4pv9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzvzv4pv9.php\
    \ on line 38\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t$ab = ($a + $b);\n\t$cd = ($c + $d);\n\treturn ($ab <= $cd);\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $d in /tmp/tmp_9yxr36f.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_9yxr36f.php:22\nStack\
    \ trace:\n#0 /tmp/tmp_9yxr36f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_9yxr36f.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $a + $b + $c;\n    return ($d == ($a + $c + $b));\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0x173aof.php:21\n\
    Stack trace:\n#0 /tmp/tmp0x173aof.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0x173aof.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t\n\t\n\tif ($a + $b > $c) {\n\t\treturn false;\n\t}\n\tif ($b -\
    \ $a > $c) {\n\t\treturn false;\n\t}\n\tif ($c - $a > $b) {\n\t\treturn false;\n\
    \t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpntuma1co.php:31\n\
    Stack trace:\n#0 /tmp/tmpntuma1co.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpntuma1co.php\
    \ on line 31\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a = (int)$a;\n    $b = (int)$b;\n    $c = (int)$c;\n\n    if\
    \ ($a < 0 || $b < 0 || $c < 0) {\n        return false;\n    }\n\n    if ($a >\
    \ $b) {\n        if ($b > $c) {\n            return false;\n        }\n      \
    \  return ($c > $a) ? true : false;\n    }\n    return ($a > $b) ? true : false;\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThe second answer is wrong. Using this\
    \ function, it returns `true` for triangle sides 1, 2, and 3. It should be `false`\
    \ for the triangles 1, 2, and 4.\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpvxap9ggy.php
    on line 28

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $s = $a + $b + $c;\n    return $s <= 1;\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzv9ccmud.php:20\n\
    Stack trace:\n#0 /tmp/tmpzv9ccmud.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzv9ccmud.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = ($a + $b + $c) / 2;\n    $ab = abs(($a + $b));\n    $ac\
    \ = abs(($a + $c));\n    $bc = abs(($b + $c));\n    return ($ab >= $ac && $ab\
    \ >= $bc && $ac >= $d);\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtl3j2r7.php:24\n\
    Stack trace:\n#0 /tmp/tmpmtl3j2r7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmtl3j2r7.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here.\n    if ($a * $c >= $b * $c) {\n   \
    \     return true;\n    }\n    else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvmri8l1d.php:26\n\
    Stack trace:\n#0 /tmp/tmpvmri8l1d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvmri8l1d.php\
    \ on line 26\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a < $b) {\n        $a = $b;\n    }\n    if ($a < $c) {\n\
    \        $b = $c;\n    }\n    if ($b < $c) {\n        $c = $b;\n    }\n    return\
    \ ($a + $b > $c);\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6wnixt_.php:30\n\
    Stack trace:\n#0 /tmp/tmpl6wnixt_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl6wnixt_.php\
    \ on line 30\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($a - $b);\n    $bc = abs($c - $b);\n    $cb = abs($a\
    \ - $c);\n    if ($ab > $bc) {\n        if ($ab > $cb) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    I do not understand why you downvoted this answer, but it is an interesting problem\
    \ to solve. I would suggest posting this answer on [Math.SE](https://math.stackexchange.com/)\
    \ too.\n<|/ c |>\n<| c |>\nBecause I posted this answer on [Math.SE](https://math.stackexchange.com/)\
    \ too. As you see I did not upvote your answer since I believe my answer is correct\
    \ in relation to OP's original post.\n<|/ c |>\n<| c |>\nBut what is the definition\
    \ of an \"angle between 3 points\" ?\n<|/ c |>\n<| c |>\nI have updated my answer\
    \ to address your concerns about angle. Hopefully that helps.\n<|/ c |>\n<| c\
    \ |>\nI do not understand your edit, but it is clear that you did not understand\
    \ the OP's concern about angle. Your answer does not address the OP's concern.\
    \ Neither do you answer the question.\n<|/ c |>\n<| a dscore=0 tags=math,php,algorithm\
    \ |>\nI came up with this solution:\n<code>\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzj1549ck.php
    on line 22

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a = abs($a); // Make sure the value is a valid length\n    $b\
    \ = abs($b);\n    $c = abs($c);\n    if ($b > $c) {\n        $t = $a;\n      \
    \  $a = $c;\n        $c = $t;\n    }\n    $d = pow($b, 2) - pow($c, 2);\n    if\
    \ ($d < 0) {\n        $b = $c;\n        $c = $a;\n        $a = $b;\n        $b\
    \ = $d;\n    }\n    $det = pow($a, 2) + pow($b, 2);\n    $u = ($c / $det) * $b;\n\
    \    $v = ($b / $det) * $c;\n    $result = ($u + $v) < 0.5;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5vxd2rt.php:40\n\
    Stack trace:\n#0 /tmp/tmpb5vxd2rt.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb5vxd2rt.php\
    \ on line 40\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return abs($a * $b - $c * $a) < $a || abs($a * $c - $b * $a)\
    \ < $a;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=algorithm,java,php |>\n<code>\n\
    public class Solution {\n\n    /**\n     * \n     * a the first side of the triangle\n\
    \     * b the second side of the triangle\n     * c the third side of the triangle\n\
    \     * \n     * true if the triangle is right-angled, otherwise false\n     */\n\
    \    public static boolean isRightAngledTriangle(int a, int b, int c) {\n\n  \
    \      // check a and b angle\n        if (Math.abs(a * b) < Math.abs(c * a))\
    \ {\n            return false;\n        }\n\n        // check c and b angle\n\
    \        if (Math.abs(a * c) < Math.abs(b * b)) {\n            return false;\n\
    \        }\n\n        return true;\n    }\n\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nThis code works for me. Just tested. It is the most efficient solution\
    \ so far. Thanks\n<|/ c |>\n<| a |>\n<code>\npublic class Solution {\n public\
    \ static void main(String[] args) {\n    int a = 3;\n    int b = 4;\n    int c\
    \ = 3;\n    System.out.println(isRightAngledTriangle(a, b, c));\n }\n public static\
    \ boolean isRightAngledTriangle(int a, int b, int c) {\n\n     if (Math.abs(a\
    \ * c - b * b) > Math.abs(a * c - a * a)) {\n         return false;\n     } else\
    \ if (Math.abs(a * b - c * b) > Math.abs(a * c - a * a)) {\n         return false;\n\
    \     } else if (Math.abs(b * c - a * b) > Math.abs(a * c - a * a)) {\n      \
    \   return false;\n     }\n\n     return true;\n }\n}\n</code>\n<|/ a tags=algorithm,java,php\
    \ dscore=1 |>\n<| a dscore=0 |>\nHere's a solution using just one if statement:\n\
    <code>\npublic static boolean isRightAngledTriangle(int a, int b, int c) {\n \
    \ if (a >= 0 && b >= 0 && c >= 0 && \n      Math.min(a, b, c) == Math.max(a, b,\
    \ c))\n    return Math.min(a, b, c) == Math.max(a, b, c);\n  else\n    return\
    \ Math.min(a, b, c) > 0 && Math.max(a, b, c) < 0;\n}\n</code>\n<|/ a tags=algorithm,java,php\
    \ |>\n<| a dscore=0 |>\n<code>\npublic static boolean isRightAngledTriangle(int\
    \ a, int b, int c) {\n        double a, b, c;\n        double minVal = Math.min(a,\
    \ b, c);\n        double maxVal = Math.max(a, b, c);\n        if(minVal > maxVal)\
    \ {\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp47niuw4_.php
    on line 14

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // check input\n    if (!is_numeric($a) || !is_numeric($b) ||\
    \ !is_numeric($c)) {\n        return false;\n    }\n    if ($a == 0 || $b == 0\
    \ || $c == 0) {\n        return false;\n    }\n    if ($a > $b && $a > $c) {\n\
    \        $a = $b;\n        $b = $c;\n        $c = $a;\n    }\n    if ($b > $c\
    \ && $b > $a) {\n        $b = $c;\n        $c = $a;\n        $a = $b;\n    }\n\
    \    if ($c > $a && $c > $b) {\n        $c = $a;\n        $a = $b;\n        $b\
    \ = $c;\n    }\n    // now a > 0 && b > 0 && c > 0\n    if ($a + $b > $c) {\n\
    \        if ($a == $c) {\n            return false;\n        }\n        $r = $a\
    \ * $c / $b;\n        $y = $b * sqrt(1 - $r * $r) / $a;\n        if ($x == $y)\
    \ {\n            return true;\n        }\n    }\n    if ($a == $b) { // $a is\
    \ $b\n        return false;\n    }\n    if ($b == $c) {\n        return false;\
    \ // $a is $b\n    }\n    $d = $b * $c / $a;\n    $x = $a * sqrt(1 - $d * $d)\
    \ / $b;\n    $y = $b * sqrt(1 - $d * $d) / $b;\n    if ($x == $y) {\n        return\
    \ true;\n    }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $x in /tmp/tmpezfck8n_.php on line 41\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpezfck8n_.php:64\nStack\
    \ trace:\n#0 /tmp/tmpezfck8n_.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpezfck8n_.php\
    \ on line 64\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b > $c + $a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l4f63ra.php:20\n\
    Stack trace:\n#0 /tmp/tmp_l4f63ra.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_l4f63ra.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return ($a + $b > $c && $a + $c > $b && $b + $c > $a);\n}\n</code>\n\
    <|/ a tags=math,algorithm,php |>\n<| c |>\ni think a right angle triangle is a\
    \ triangle where `a + b > c && a + c > b && b + c > a` ?\n<|/ c |>\n<| c |>\n\
    You might want to correct your answer as the condition should be `a + b > c &&\
    \ a + c > b && b + c > a`. Notice that `a + b > c` evaluates to true when `a`,\
    \ `b`, and `c` are all positive numbers. Hence, the condition should be `a + b\
    \ > c && a + c > b && b + c > a`.\n<|/ c |>\n<| c |>\ni just updated my answer,\
    \ the condition was wrong\n<|/ c |>\n<| c |>\ni think the condition is correct,\
    \ please check my updated answer\n<|/ c |>\n<| c |>\nI think this is exactly what\
    \ I need, thank you! I'll try it out, and if it works, I'll mark this as correct.\n\
    <|/ c |>\n<| a tags=math,algorithm,php |>\nI'm going to go ahead and give you\
    \ a non-algorithmic approach to figuring out if a triangle is a right angle triangle:\n\
    If you have an equilateral triangle, the three sides will all be equal, and thus\
    \ the angle between them will be 0. On the other hand, if your triangle is not\
    \ an equilateral triangle, the three sides will be the same length, but the angle\
    \ between the two angles will be 90 degrees. If your angle is greater than 90\
    \ degrees, then your triangle is indeed an equilateral triangle.\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis answer was also very helpful, thank you!\n<|/ c |>\n<| a |>\n\
    I like Math Overflow's answer, but here's a little bit of code anyway. \n<code>\n\
    <?php\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4c_htumk.php
    on line 14

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b + $c) % ($a + $b - $c) === 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp5bqqgfdr.php:12\n\
    Stack trace:\n#0 /tmp/tmp5bqqgfdr.php(16): right_angle_triangle(1, 2, 3)\n#1 /tmp/tmp5bqqgfdr.php(21):\
    \ candidate(1, 2, 3)\n#2 /tmp/tmp5bqqgfdr.php(33): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp5bqqgfdr.php on line 12\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a_b = $a + $b; \n    $c_b = $c + $b; \n    $c_a = $c + $a; \n\
    \n    return ($c_b >= $c_a && $a_b >= $c_a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug9en_jx.php:24\n\
    Stack trace:\n#0 /tmp/tmpug9en_jx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpug9en_jx.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t$r = abs($c-$b);\n\t$u = abs($a-$c);\n\t$v = abs($a-$b);\n\t$s\
    \ = ($u*$u + $v*$v - $R*$R)/($u+$v);\n\treturn ($s<0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $R in /tmp/tmphe158fhf.php on line 15\n\n\
    Warning: Undefined variable $R in /tmp/tmphe158fhf.php on line 15\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmphe158fhf.php:24\nStack trace:\n\
    #0 /tmp/tmphe158fhf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphe158fhf.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if( $a + $b > $c ) {\n        if( $a + $c > $b ) {\n        \
    \    if( $b + $c > $a ) {\n                return true;\n            }\n     \
    \       return false;\n        }\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3zppsaz.php:32\n\
    Stack trace:\n#0 /tmp/tmpo3zppsaz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo3zppsaz.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\treturn ($a + $b > $c) && ($b + $c > $a) && ($c + $a > $b);\n}\n\
    \nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zky61jg.php:23\n\
    Stack trace:\n#0 /tmp/tmp_zky61jg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_zky61jg.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($a-$b); // absolute value of difference\n    $ac =\
    \ abs($c-$a); // absolute value of difference\n    return ($ac >= ($ab/2)) ? true\
    \ : false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3d_8ibv.php:22\n\
    Stack trace:\n#0 /tmp/tmpb3d_8ibv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpb3d_8ibv.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $a = abs($a);\n  $b = abs($b);\n  $c = abs($c);\n  $delta = $a\
    \ - $c;\n  $delta_abs = abs($delta);\n  if ($delta_abs > $b) {\n    $delta_abs\
    \ = $b;\n  }\n  if ($delta_abs == $c) {\n    if ($delta < 0) {\n      $delta =\
    \ -$delta;\n    }\n    $r = $delta + $b;\n    $delta_abs = abs($r);\n    if ($delta\
    \ == $delta_abs) {\n      return true;\n    }\n  }\n  $delta_abs = abs($delta);\n\
    \  if ($delta_abs == $b) {\n    if ($c < 0) {\n      $c = -$c;\n    }\n    $r\
    \ = $c + $a;\n    $delta_abs = abs($r);\n    if ($c == $delta_abs) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    This is good idea! But how do you find the triangle area? Do you have any idea?\n\
    <|/ c |>\n<| c |>\nI added the code to calculate the area to my answer.\n<|/ c\
    \ |>\n<| a dscore=1 tags=php,geometry,math |>\n<code>\n<?php\n\n$a = 3; // side\
    \ of 1st triangle\n$b = 4; // side of 2nd triangle\n$c = 0; // side of 3rd triangle\n\
    \nif ($a > $b + $c)\n    echo \"Triangle 1 is not a right triangle \\n\";\nelseif\
    \ ($b > $a + $c)\n    echo \"Triangle 2 is not a right triangle \\n\";\nelseif\
    \ ($c > $a + $b)\n    echo \"Triangle 3 is not a right triangle \\n\";\nelseif\
    \ ($a == $b == $c)\n    echo \"Triangle is a right triangle \\n\";\nelseif ($a\
    \ != $b != $c)\n    echo \"Triangle is not right triangle \\n\";\nelse\n    echo\
    \ \"Triangle is NOT a right triangle \\n\";\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpf6cyhnay.php
    on line 43

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $abc = abs($a - $b);\n    $acb = abs($c - $a);\n    $bca = abs($c\
    \ - $b);\n    // if triangle are equals, return false\n    if ($abc === $acb &&\
    \ $abc === $bca) return 0;\n    // if acb or abc\n    if ($acb < $abc) return\
    \ 1;\n    // if bca or abc\n    if ($bca < $abc) return -1;\n}\n</code>\n<|/ a\
    \ tags=php |>\n<| c |>\nThanks, this was helpful and I did find the answer to\
    \ my question here, but I like your solution too.\n<|/ c |>\n<| a |>\nJust to\
    \ add an alternative method of solving this (which probably isn't the most efficient):\n\
    <code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnpqg84n9.php
    on line 22

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // We assume that the triangles have the same side lengths.\n \
    \ // If the triangles do not have the same lengths, it is not right-angled.\n\
    \  if ($a != $b && $a != $c && $b != $c) {\n    return false;\n  }\n  \n  // We\
    \ calculate the hypotenuse of right angle triangle by Pythagorus formula.\n  //\
    \ https://en.wikipedia.org/wiki/Pythagorean_theorem\n  $hypotenuse = sqrt(pow($b,\
    \ 2) + pow($c, 2)); \n\n  // If the hypotenuse is less than 0, it's not right-angled.\n\
    \  if ($hypotenuse < 0) {\n    return false;\n  }\n\n  // If the hypotenuse is\
    \ equal to 0, the triangle is right angled.\n  if ($hypotenuse == 0) {\n    return\
    \ true;\n  }\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1uoq5vxe.php:37\n\
    Stack trace:\n#0 /tmp/tmp1uoq5vxe.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1uoq5vxe.php\
    \ on line 37\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // Get the area of the triangle using Heron's formula\n  $s = (pow($a,\
    \ 2) * pow($c, 2) - pow($b, 2) * pow($c, 2));\n  $area = sqrt($s);\n\n  // Check\
    \ if the area is between 0 and 90\n  if ($area >= 0) {\n    return true;\n  }\n\
    \n  return false;\n}\n</code>\nThe output of this is\n<code>\n> python triangle.py\n\
    True\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\nYou could also do it with\
    \ some simple math:\n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjpwh6knn.php
    on line 23

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $c || $b > $c) return false;\n    return ($a + $b <\
    \ $c) && ($a + $c < $b) && ($b + $c < $a);\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixl_oloo.php:20\n\
    Stack trace:\n#0 /tmp/tmpixl_oloo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpixl_oloo.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a = abs($a);\n    $b = abs($b);\n    $c = abs($c);\n    $a_b\
    \ = $a*$b;\n    $c_b = $c*$b;\n    if ($a_b == $c_b) {\n        if ($a == $c)\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    }\n    return $a_b > $c_b;\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9nc_ysa.php:31\n\
    Stack trace:\n#0 /tmp/tmpt9nc_ysa.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpt9nc_ysa.php\
    \ on line 31\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $l1 = sqrt(pow($a, 2) + pow($b, 2));\n    $l2 = sqrt(pow($b,\
    \ 2) + pow($c, 2));\n    return $l1 == $l2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphlmztych.php:22\n\
    Stack trace:\n#0 /tmp/tmphlmztych.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphlmztych.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $angle = $a * M_PI + $b * $c + M_PI;\n  $distance = sqrt(pow($a,\
    \ 2) + pow($b, 2));\n  return $angle > $distance * 0.5;\n}\n</code>\nThe function\
    \ above checks if the triangle is right-angled or not. \nThe code is written in\
    \ PHP.\n<|/ a tags=php |>\n<| a |>\nI created a function using php to solve this\
    \ problem. \n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6f_mpxts.php
    on line 16

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a = abs($a); $b = abs($b); $c = abs($c);\n    if ($b > $c) {\n\
    \        $tmp = $b;\n        $b = $c;\n        $c = $tmp;\n    }\n    if ($a >\
    \ $c) {\n        $tmp = $a;\n        $a = $c;\n        $c = $tmp;\n    }\n   \
    \ if ($a > $b) return false;\n    if ($b == $c) return true;\n    $tmp = $a; $a\
    \ = $b; $b = $tmp;\n    $tmp = $c; $c = $a; $a = $tmp;\n    if ($b == 0) return\
    \ false;\n    if ($c == 0) return true;\n    $c = sqrt($c);\n    $a *= $c; $b\
    \ *= $c;\n    $a_b = $a * $b;\n    $ab_a = $a_b - $a;\n    $ab_c = $a_b - $c;\n\
    \    if ($ab_a < $ab_c) return false; // Sides a and c are parallel\n    $c_a\
    \ = ($b - $c) / $a;\n    $c_b = ($a - $c) / $b;\n    return ($c_a >= 0.0 && $c_b\
    \ >= 0.0);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemua70g7.php:44\n\
    Stack trace:\n#0 /tmp/tmpemua70g7.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpemua70g7.php\
    \ on line 44\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $a + $b + $c;\n    if ($a <= 180 && $b <= 180 && $c <= 180\
    \ && $d == $a + $b + $c) {\n        return true;\n    }\n    return false;\n}\n\
    \nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj496pt2.php:25\n\
    Stack trace:\n#0 /tmp/tmpwj496pt2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwj496pt2.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a);\n}\n\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fzkt7si.php:20\n\
    Stack trace:\n#0 /tmp/tmp5fzkt7si.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5fzkt7si.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $ab = abs($a-$b);\n  $bc = abs($b-$c);\n  $cb = abs($c-$b);\n \
    \ if (($ab*$ab + $bc*$bc + $cb*$cb) < 1)\n    return false;\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2eyqxb59.php:26\n\
    Stack trace:\n#0 /tmp/tmp2eyqxb59.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2eyqxb59.php\
    \ on line 26\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($a-$b);\n    $bc = abs($b+$c);\n    $bc = abs($c-$b);\n\
    \    return ($ab === $bc || $ab === $bc);\n}\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgo_fvz2a.php:24\n\
    Stack trace:\n#0 /tmp/tmpgo_fvz2a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgo_fvz2a.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $ab = abs($a - $b);\n  $ac = abs($c - $a);\n  return $ab == $ac;\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmvy899t.php:21\n\
    Stack trace:\n#0 /tmp/tmpqmvy899t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqmvy899t.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t\n\t// Check validity of sides\n\t$sides = array();\n\t\n\tif(\
    \ $a < 0 || $b < 0 || $c < 0 ) {\n\t\treturn false;\n\t}\n\t\n\tif( $a > 0 &&\
    \ $b > 0 && $c > 0 ) {\n\t\t\n\t\t// Determine which triangle is right\n\t\tif(\
    \ $b > $c ) {\n\t\t\t$sides[] = $a;\n\t\t\t$sides[] = $c;\n\t\t\t$sides[] = $b;\n\
    \t\t} else {\n\t\t\t$sides[] = $a;\n\t\t\t$sides[] = $b;\n\t\t\t$sides[] = $c;\n\
    \t\t}\n\t\t\n\t\t$xs = array();\n\t\t$ys = array();\n\t\t\n\t\tforeach ($sides\
    \ as $s) {\n\t\t\tif( $s == $a ) {\n\t\t\t\t$xs[] = $b;\n\t\t\t\t$ys[] = $b;\n\
    \t\t\t} else if( $s == $b ) {\n\t\t\t\t$xs[] = $a;\n\t\t\t\t$ys[] = $a;\n\t\t\t\
    } else if( $s == $c ) {\n\t\t\t\t$xs[] = $a;\n\t\t\t\t$ys[] = $c;\n\t\t\t} else\
    \ {\n\t\t\t\t$xs[] = $b;\n\t\t\t\t$ys[] = $c;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If\
    \ all sides are equal, triangle is a right triangle\n\t\tif( $xs[0] == $xs[1]\
    \ && $xs[1] == $xs[2] ) {\n\t\t\treturn true;\n\t\t} \n\t\t\n\t\t// Determine\
    \ which side of the triangle is largest\n\t\t$max_x = $xs[0];\n\t\t$max_y = $ys[0];\n\
    \t\t\n\t\tforeach ($xs as $x) {\n\t\t\tif( $x == $max_x ) {\n\t\t\t\t$max_y =\
    \ $y;\n\t\t\t} else {\n\t\t\t\t$max_x = $x;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Check\
    \ whether the largest angle is 180deg or not\n\t\tif( is_int($max_y) && $max_y\
    \ == $max_x + $max_y ) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $y in /tmp/tmp_tor7jxr.php on line 63\n\n\
    Warning: Undefined variable $y in /tmp/tmp_tor7jxr.php on line 63\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp_tor7jxr.php:83\nStack trace:\n\
    #0 /tmp/tmp_tor7jxr.php(96): test()\n#1 {main}\n  thrown in /tmp/tmp_tor7jxr.php\
    \ on line 83\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $s = sqrt(($a * $a + $b * $b + $c * $c));\n    if ($a >= $b and\
    \ $a >= $c) {\n        if ($b <= $c) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } elseif ($b >= $c) {\n       \
    \ if ($a <= $c) {\n            return true;\n        } else {\n            return\
    \ false;\n        }\n    } else {\n        if ($a <= $c) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    }\n}\n\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpjlo51x.php:40\n\
    Stack trace:\n#0 /tmp/tmplpjlo51x.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplpjlo51x.php\
    \ on line 40\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $triangle_a = sqrt(pow($a,2) + pow($c,2));\n    $triangle_b =\
    \ sqrt(pow($b,2) + pow($c,2));\n    $triangle_c = sqrt(pow($a,2) + pow($b,2));\n\
    \    if ($triangle_a == $triangle_b && $triangle_a == $triangle_c && $triangle_a\
    \ > 0)\n        return true;\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujj6j9m7.php:25\n\
    Stack trace:\n#0 /tmp/tmpujj6j9m7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpujj6j9m7.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a_length = $a - $c;\n    $b_length = $b - $c;\n    $c_length\
    \ = $c - $a;\n    if (abs($a_length) > abs($b_length) && abs($a_length) > abs($c_length))\
    \ {\n        if (abs($a_length) > abs($b_length)) {\n            return ($c >=\
    \ $a) && ($c <= ($a + $b_length));\n        } else {\n            return ($c <=\
    \ $a) && ($c >= ($a + $b_length));\n        }\n    } else if (abs($a_length) >\
    \ abs($c_length)) {\n        return ($c >= $a) && ($c <= ($a + $c_length));\n\
    \    } else {\n        return ($c <= $a) && ($c >= ($a + $c_length));\n    }\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpj3xlfn.php:32\n\
    Stack trace:\n#0 /tmp/tmpfpj3xlfn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfpj3xlfn.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here.\n    if ($a == $b) {\n        if ($a\
    \ != $c)\n            return ($a > $c);\n    }\n\n    if ($a > $c) {\n       \
    \ if ($b > $c)\n            return ($b < $a);\n    } else {\n        if ($b <\
    \ $c)\n            return ($a < $b);\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$numbers = [\n    1 => 1,\n    2 => 2,\n    3\
    \ => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n   \
    \ 9 => 9,\n];\n\n$tests = [\n    3 => [\n        0 => 2,\n        1 => 5,\n  \
    \  ],\n    7 => [\n        0 => 6,\n        1 => 5,\n    ],\n    11 => [\n   \
    \     0 => 8,\n        1 => 7,\n    ],\n    15 => [\n        0 => 8,\n       \
    \ 1 => 8,\n    ],\n    21 => [\n        0 => 5,\n        1 => 8,\n    ],\n   \
    \ 29 => [\n        0 => 8,\n        1 => 8,\n    ],\n];\n\nvar_dump(\n    array_sum(array_map(function($value)\
    \ use ($numbers) {\n        return array_sum(array_filter($numbers, function($value)\
    \ use ($value) {\n            return $value % $value == 0;\n        });\n    },\
    \ $tests))\n);\n</code>\n<|/ a tags=algorithm,php |>\n<| a dscore=0 |>\n<code>\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpy9u9io32.php
    on line 26

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a == $b) || (($a + $b) == $c) || (($b + $c) == $a);\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_mxsx04m.php:19\n\
    Stack trace:\n#0 /tmp/tmp_mxsx04m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_mxsx04m.php\
    \ on line 19\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t$a2 = pow($a, 2);\n\t$b2 = pow($b, 2);\n\t$c2 = pow($c, 2);\n\t\
    return ( ($c2+$b2) > $a2 );\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisb_vr3w.php:23\n\
    Stack trace:\n#0 /tmp/tmpisb_vr3w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpisb_vr3w.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\treturn ($a <= $b + $c && $a <= $c - $b) || \n\t\t($a >= $b - $c\
    \ && $a >= $c - $b);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6ndjw5w.php:21\n\
    Stack trace:\n#0 /tmp/tmpb6ndjw5w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb6ndjw5w.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    return ($a + $b > $c + $a) && ($a\
    \ + $c > $b + $a) && ($b + $c > $a + $b); \n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqav_ubq.php:21\n\
    Stack trace:\n#0 /tmp/tmpxqav_ubq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxqav_ubq.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ad = $bd - $a;\n    $bc = $cd - $b;\n    $cd = $aa - $c;\n \
    \   return ($ad + $bc) == ($aa + $cd);\n}\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $bd in /tmp/tmp1mhnal51.php on line 12\n\n\
    Warning: Undefined variable $cd in /tmp/tmp1mhnal51.php on line 13\n\nWarning:\
    \ Undefined variable $aa in /tmp/tmp1mhnal51.php on line 14\n\nWarning: Undefined\
    \ variable $aa in /tmp/tmp1mhnal51.php on line 15\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1mhnal51.php:23\nStack trace:\n#0 /tmp/tmp1mhnal51.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1mhnal51.php on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $b-$a;\n    $e = $c-$a;\n    $f = abs($d);\n    $g = abs($e);\n\
    \    $h = $g-$f;\n    return $h == 180 ? true : false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeehesqmp.php:25\n\
    Stack trace:\n#0 /tmp/tmpeehesqmp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeehesqmp.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a === 0 || $b === 0 || $c === 0) {\n        return false;\n\
    \    }\n\n    if ($a === $b) {\n        return $a === $c;\n    }\n\n    if ($a\
    \ < $c) {\n        $temp = $a;\n        $a = $c;\n        $c = $temp;\n    }\n\
    \n    if ($b < $c) {\n        $temp = $b;\n        $b = $c;\n        $c = $temp;\n\
    \    }\n\n    return ($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a);\n}\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegn9nyu4.php:42\n\
    Stack trace:\n#0 /tmp/tmpegn9nyu4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpegn9nyu4.php\
    \ on line 42\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $d = $a + $b + $c;\n  $det = $d - ($b * ($c - $a));\n  if ($det\
    \ != 0) {\n    $s = $a / $det;\n    $t = ($b - $s) * $d / ($c - $s);\n    if ($t\
    \ != 0) {\n      if ($t == $b) return false;\n      if ($t == $c) return true;\n\
    \    }\n  }\n  return false;\n}\n</code>\n<|/ a tags=php dscore=1 |>\n<| a tags=php\
    \ |>\nMy version of PHP has is_numeric in its string library. With this function,\
    \ I can quickly check if a string is a numeric value or a whole number. Here is\
    \ a sample of how you would use it - \n<code>\n<?php\n$string_1 = \"1\";\n$string_2\
    \ = \"2.3\";\n$string_3 = \"A\";\nvar_dump(is_numeric($string_1));\nvar_dump(is_numeric($string_2));\n\
    var_dump(is_numeric($string_3));\n</code>\nThe output of this script would be\
    \ - \n<code>\nbool(true)\nbool(true)\nbool(true)\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis would also consider `1abc2` and `123.456`. Those are both numeric\
    \ values. `is_numeric` does not consider numeric strings as numeric. The number\
    \ `1` is not numeric. `123` and `123.0` are both numeric\n<|/ c |>\n<| a dscore=0\
    \ |>\nI needed a similar solution that was able to detect if the string was a\
    \ number or a simple string.\nI used this solution:\n<code>\nif (preg_match('/^\\\
    d+$/', $string)) {\n  // is a number\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0\
    \ tags=php |>\nI use this :\n<code>\n<?php \n if (!preg_match('/^[0-9]+$/', $var))\n\
    \ {\n    echo \"Not a valid number\";\n }\n else\n {\n    echo \"It's a number\"\
    ;\n }\n</code>\n<|/ a |>\n<| a tags=php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpm9m86dev.php
    on line 24

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    \n    $sideA = $a - $b\n    $sideB = $b - $c\n    $sideC = $c\
    \ - $a\n    \n    // All sides must be positive\n    if ( $sideA <= 0 || $sideB\
    \ <= 0 || $sideC <= 0 ) {\n        return false\n    }\n    // All sides must\
    \ be equal\n    if ( $sideA == $sideB && $sideA == $sideC ) {\n        return\
    \ true\n    }\n    // One side must be 90 degree\n    if ( $sideA == $sideB &&\
    \ $sideC == $sideA ) {\n        return true\n    }\n    // One side must be left\
    \ angle\n    if ( $sideA == $sideC && $sideB == $sideA ) {\n        return true\n\
    \    }\n    // Two sides must be right angle\n    if ( $sideA == $sideB && $sideC\
    \ == $sideA ) {\n        return true\n    }\n    \n    return false\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected variable "$sideB" in /tmp/tmpsf33tzm5.php
    on line 14

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Check whether the three sides are equal or absent\n    if\
    \ ($a == 0 || $b == 0 || $c == 0) {\n        return false;\n    }\n\n    $rad\
    \ = ($a / $c) * 180;\n    $rad2 = ($b / $c) * 180;\n    $rad3 = ($b / $c) * 180;\n\
    \n    if ($rad == $rad2 && $rad == $rad3) {\n        // Right angle\n        return\
    \ true;\n    }\n\n    // If any of the two angles are 90 degree, return false\n\
    \    if ($rad == 90 && $rad2 == 90 && $rad3 == 90) {\n        return false;\n\
    \    }\n    // If two angles are equal\n    if ($rad == $rad2 && $rad2 == $rad3)\
    \ {\n        return false;\n    }\n\n    // If two angles are equal\n    if ($rad\
    \ == 90 && $rad2 == 90) {\n        return false;\n    }\n    // If two angles\
    \ are equal\n    if ($rad == 90 && $rad2 == $rad3) {\n        return true;\n \
    \   }\n\n    // If three angles are equal\n    if ($rad == $rad2 && $rad2 == $rad3)\
    \ {\n        return true;\n    }\n\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56yi71wj.php:56\n\
    Stack trace:\n#0 /tmp/tmp56yi71wj.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp56yi71wj.php\
    \ on line 56\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Return true if the angles form a right-angled triangle. \n\
    \    if ($a == 0 && $b <= 0) return false;\n    if ($a == $b and $b == 0) return\
    \ false;\n    if ($a == $b and $b <= 0) return false;\n\n    // See if any of\
    \ the sides are equal\n    $same = 0;\n    if ($c < $a && $b != $c && $c != $b)\
    \ $same = 1;\n    if ($c > $a && $b != $c && $c != $b) $same = 1;\n    if ($c\
    \ > $a && $b == $c && $b != $b) $same = 1;\n    if ($c < $a && $b == $c && $b\
    \ != $b) $same = 1;\n\n    // If all of the sides are equal, three sides are colinear\
    \ and\n    // therefore a right-angled triangle.\n    if ($same == 3) return true;\n\
    \n    // At this point we have two choices.  If the two sides are \n    // equal,\
    \ they are colinear and no right-angled triangle is possible\n    // (the angles\
    \ form an equilateral triangle), or if the two sides are \n    // different, a\
    \ right-angled triangle is possible (one angle is right angle\n    // or 90 degree).\
    \  See which (if any) of the sides are colinear and test\n    // for that.\n \
    \   if ($same == 2) {\n        $d1 = $b / ($a + $c);\n        $d2 = $c / ($a +\
    \ $c);\n        $d3 = $a / ($a + $c);\n        if ($d1 * $d2 == $d3 * $d2) return\
    \ false;\n        else return true;\n    }\n\n    // If none of the sides are\
    \ equal, a right-angled triangle \n    // is possible (one angle is right angle\
    \ or 90 degree).\n    $d1 = $b / ($a + $c);\n    $d2 = $c / ($a + $c);\n    $d3\
    \ = $a / ($a + $c);\n    if ($d1 * $d2 == $d3 * $d2) return true;\n    else return\
    \ false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lo8jknb.php:55\n\
    Stack trace:\n#0 /tmp/tmp1lo8jknb.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp1lo8jknb.php\
    \ on line 55\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if( $a + $b + $c != 0){\n        return ($a + $b > $c) - ($a\
    \ + $c > $b) - ($a + $b > $c);\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ozdnvtl.php:23\n\
    Stack trace:\n#0 /tmp/tmp2ozdnvtl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ozdnvtl.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $sum = $a + $b + $c;\n    $diff = $sum - sqrt($sum * ($sum -\
    \ $a) * ($sum - $b) * ($sum - $c));\n    return ($diff > 180 || $diff < -180)\
    \ ? false : true;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecvgvmic.php:23\n\
    Stack trace:\n#0 /tmp/tmpecvgvmic.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpecvgvmic.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return $a + $b > $c;\n}\n\nfunction candidate(...$args) {\n \
    \   return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8_1dzk9.php:23\n\
    Stack trace:\n#0 /tmp/tmpq8_1dzk9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq8_1dzk9.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $b - $c;\n    $e = $c - $a;\n    $f = $a - $b;\n    \n \
    \   if ($d >= 0 && $e >= 0 && $f >= 0) {\n        if ($d == $e && $d == $f) {\n\
    \            return true;\n        } else {\n            return false;\n     \
    \   }\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4lovht2.php:32\n\
    Stack trace:\n#0 /tmp/tmpl4lovht2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl4lovht2.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $angle1 = angle_from_center($a, $b, $c);\n    $angle2 = angle_from_center($b,\
    \ $a, $c);\n    $angle3 = angle_from_center($c, $a, $b);\n\n    $angles = array($angle1,\
    \ $angle2, $angle3);\n\n    return in_array($angle1, $angles) || in_array($angle2,\
    \ $angles) || in_array($angle3, $angles);\n}\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function angle_from_center()\
    \ in /tmp/tmpz513dyt5.php:12\nStack trace:\n#0 /tmp/tmpz513dyt5.php(22): right_angle_triangle(3,\
    \ 4, 5)\n#1 /tmp/tmpz513dyt5.php(26): candidate(3, 4, 5)\n#2 /tmp/tmpz513dyt5.php(39):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpz513dyt5.php on line 12\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a <= 0 || $b <= 0 || $c <= 0) {\n        return false;\n\
    \    }\n    if ($a + $b + $c <= 0) {\n        return false;\n    }\n    $sum =\
    \ ($a + $b + $c) / 2;\n    return ($sum - (($a + $b) / 2) * (($a + $b) / 2) -\
    \ (($a + $c) / 2) * (($a + $c) / 2)) > 0;\n}\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesugdexz.php:27\n\
    Stack trace:\n#0 /tmp/tmpesugdexz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpesugdexz.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return ($a + $b > $c) ? true : false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e43foa7.php:23\n\
    Stack trace:\n#0 /tmp/tmp2e43foa7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2e43foa7.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $ab = abs($a - $b);\n  $bc = abs($b - $c);\n  $ac = abs($a - $c);\n\
    \  if ($ab < $bc && $ab < $ac) {\n    return true;\n  } elseif ($bc < $ab && $bc\
    \ < $ac) {\n    return true;\n  } elseif ($ac < $ab && $ac < $bc) {\n    return\
    \ true;\n  } elseif ($a == $b) { // ac is 0, bc is > 0\n    return true;\n  }\
    \ elseif ($b == $c) { // ab is 0, ac is > 0\n    return true;\n  } elseif ($a\
    \ > $b) { // ac is 0, bc is > 0\n    return false;\n  } elseif ($b > $c) { //\
    \ ab is 0, ac is > 0\n    return false;\n  } elseif ($a > $c) { // ab is 0, bc\
    \ is 0\n    return false;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnbhse9lq.php:40\n\
    Stack trace:\n#0 /tmp/tmpnbhse9lq.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpnbhse9lq.php\
    \ on line 40\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ax = $a - $b;\n    $bx = $c - $b;\n    $cx = $a - $c;\n    $ay\
    \ = $b - $c;\n    return ($ax === $bx || abs($ay) === abs($cx)) ? true : false;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdk0zbo0.php:24\n\
    Stack trace:\n#0 /tmp/tmpbdk0zbo0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbdk0zbo0.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $a2 = pow($a,2);\n  $b2 = pow($b,2);\n  $c2 = pow($c,2);\n  //\
    \ If either is zero, then the sides are a right-angled triangle\n  if ($a2 ==\
    \ 0 || $b2 == 0 || $c2 == 0) {\n    return true;\n  }\n  // Solve equation for\
    \ hypotenuse - use quadratic formula \n  // and solve for hypotenuse\n  // if\
    \ hypotenuse = (a + b + c) then a^2 + b^2 = c^2\n  // c = hypotenuse/sqrt((a^2\
    \ + b^2)) \n  $hypotenuse = $a2 + $b2 + $c2;\n  $divisor = $hypotenuse;\n  $divisor\
    \ = sqrt($divisor);\n  $c = $hypotenuse/$divisor;\n  // Now check if c is inside\
    \ the triangle by checking for \n  // sides (a,b) and (c,b) being equal\n  if\
    \ ($a == $c || $b == $c) {\n    return true;\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96rbh5ps.php:39\n\
    Stack trace:\n#0 /tmp/tmp96rbh5ps.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp96rbh5ps.php\
    \ on line 39\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if($a === 0 || $b === 0 || $c === 0) {\n        return false;\n\
    \    }\n    $ab = abs($b - $a);\n    $bc = abs($c - $b);\n    $ac = abs($a - $c);\n\
    \    if($ab > $bc && $ab > $ac) {\n        return true;\n    } else if($bc > $ab\
    \ && $bc > $ac) {\n        return false;\n    } else {\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lnszhw4.php:31\n\
    Stack trace:\n#0 /tmp/tmp1lnszhw4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1lnszhw4.php\
    \ on line 31\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\tif ($a == 0 || $b == 0 || $c == 0) return false;\n\treturn ($a\
    \ + $b > $c) ? true : false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo7uvoac.php:23\n\
    Stack trace:\n#0 /tmp/tmpmo7uvoac.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmo7uvoac.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $c = abs($c);\n    $ab = abs($a-$b);\n    $bc = abs($b-$c);\n\
    \    $ac = abs($a-$c);\n    $abbc = ($ab + $bc + $ac);\n    if ($abbc == 0) return\
    \ ($a == $c);\n    return ($abbc > $ab * $bc);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun4qxjks.php:27\n\
    Stack trace:\n#0 /tmp/tmpun4qxjks.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpun4qxjks.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Check if any three sides are equal\n    if ($a == $b && $a\
    \ == $c || $b == $c && $b == $a) {\n        return true;\n    }\n    // Check\
    \ if three sides are equal\n    if ($a == $b || $b == $c || $c == $a) {\n    \
    \    return true;\n    }\n\n    // Check if any two sides are equal\n    if ($a\
    \ == $c || $b == $c || $c == $a) {\n        return true;\n    }\n\n    // Check\
    \ if three sides are equal\n    if ($a == $b || $b == $c || $c == $a || $a ==\
    \ $c || $b == $c || $c == $a || $a == $b || $b == $c || $c == $a) {\n        return\
    \ true;\n    }\n\n    // Check if one side is equal\n    if ($a == $b || $b ==\
    \ $c || $c == $a) {\n        return true;\n    }\n\n    // Check if three sides\
    \ are equal\n    if ($a == $b || $b == $c || $c == $a) {\n        return true;\n\
    \    }\n\n    // Check if three sides are equal\n    if ($a == $b || $b == $c\
    \ || $c == $a || $a == $c || $b == $c || $c == $a || $a == $b || $b == $c || $c\
    \ == $a) {\n        return true;\n    }\n\n    // Check if three sides are equal\n\
    \    if ($a == $b || $b == $c || $c == $a || $a == $c || $b == $c || $c == $a\
    \ || $a == $b || $b == $c || $c == $a) {\n        return true;\n    }\n\n    //\
    \ Check if two sides are equal\n    if ($a == $b || $b == $c || $c == $a) {\n\
    \        return true;\n    }\n\n    // Check if two sides are equal\n    if ($a\
    \ == $c || $b == $c || $c == $a) {\n        return true;\n    }\n\n    // Check\
    \ if two sides are equal\n    if ($a == $b || $b == $c || $c == $a) {\n      \
    \  return true;\n    }\n\n    // Check if two sides are equal\n    if ($a == $b\
    \ || $b == $c || $c == $a || $a == $c || $b == $c || $c == $a || $a == $b || $b\
    \ == $c || $c == $a) {\n        return true;\n    }\n\n    // Check if two sides\
    \ are equal\n    if ($a == $b || $b == $c || $c == $a || $a == $c || $b == $c\
    \ || $c == $a || $a == $b || $b == $c || $c == $a) {\n        return true;\n \
    \   }\n\n    // Check if two side\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 11 in /tmp/tmp57bw43gs.php on line 95

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n    //\
    \ $c2 = 4 * $a * $b\n    $det = $a2 + $b2 - $c2;\n    if ($det < 0) {\n      \
    \  return false;\n    }\n    return fmod($det, pi()) == 0;\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_pij08h.php:29\n\
    Stack trace:\n#0 /tmp/tmpw_pij08h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw_pij08h.php\
    \ on line 29\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a > $b && $b > $c) || ($a > $c && $c > $b);\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt1f3bok.php:19\n\
    Stack trace:\n#0 /tmp/tmpbt1f3bok.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbt1f3bok.php\
    \ on line 19\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $sum = ($a + $b + $c);\n    return $a == $b or abs($sum - $a)\
    \ == abs($sum - $c);\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nI wrote\
    \ this in javascript (as I had to do this in angular 2) and it worked like a charm.\
    \ \n<code>\n    function isTriangle(a, b, c){\n\n        var d = (b * b) - (4\
    \ * a * c);\n        if (d > 0) {\n            // The signs are opposite\n   \
    \         var s = (b * b - a * c);\n            if (s !== 0) {\n             \
    \   return false;\n            }\n        } else {\n            // The signs are\
    \ the same\n            if (d === 0) {\n                var s = (b * b - a * c);\n\
    \                if (s !== 0) {\n                    return false;\n         \
    \       }\n            } else {\n                // The signs are opposite\n \
    \               var s = Math.sqrt(d);\n                var t1 = (b * b) / s;\n\
    \                var t2 = (2 * a) / s;\n                return ((b * b) - (2 *\
    \ Math.sqrt(a) * Math.sqrt(b) * t1) + (Math.sqrt(a) * Math.sqrt(b) * t2)) == 0;\n\
    \            }\n        }\n        return true;\n    }\n\n    var myTriangle1\
    \ = isTriangle(3, 4, 5);\n    var myTriangle2 = isTriangle(1, 2, 3);\n    var\
    \ myTriangle3 = isTriangle(9, 8, 8);\n    var myTriangle4 = isTriangle(7, 4, 8);\n\
    \    var myTriangle5 = isTriangle(1, 6, 3);\n    var myTriangle6 = isTriangle(9,\
    \ 1, 6);\n\n    var myTriangle7 = isTriangle(2, 3, 3);\n    var myTriangle8 =\
    \ isTriangle(4, 8, 9);\n    var myTriangle9 = isTriangle(6, 4, 8);\n    var myTriangle10\
    \ = isTriangle(4, 6, 6);\n\n    var myTriangle11 = isTriangle(2, 2, 3);\n    var\
    \ myTriangle12 = isTriangle(3, 2, 2);\n    var myTriangle13 = isTriangle(3, 2,\
    \ 3);\n</code>\n<|/ a tags=php,geometry |>\n<| a tags=php,geometry |>\nHere is\
    \ PHP-code:\n<code>\n<?php\n$a = floatval($_GET['a']);\n$b = floatval($_GET['b']);\n\
    $c = floatval($_GET['c']);\n\n$sum = $a + $b + $c;\n$a = $sum - $a;\n$b = $sum\
    \ - $b;\n$c = $sum - $c;\n\nif(($a + $b) == ($c)){\n    if(($b - $a) == ($c -\
    \ $b)){\n        echo \"triangle\";\n    }\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpviha78u_.php
    on line 15

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n   $d = $a + $b + $c;\n   if ($d == 0) return false;\n   $e = sqrt(($b*$b)+($c*$c)+($a*$a));\n\
    \   return $d < $e;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nkfs04d.php:23\n\
    Stack trace:\n#0 /tmp/tmp7nkfs04d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7nkfs04d.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    return ($a + $b == $c) || ($a +\
    \ $c == $b) || ($b + $c == $a);\n}\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwa68wyur.php:20\n\
    Stack trace:\n#0 /tmp/tmpwa68wyur.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwa68wyur.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a + $b == $c) {\n        // Parallel sides are equal\n \
    \       return true;\n    }\n    $angle1 = atan2($b, $c);\n    $angle2 = atan2($c,\
    \ $a);\n    $angle3 = atan2($b, $a);\n    $angle4 = atan2($c, $b);\n    // Check\
    \ which triangle is closer to the right angle\n    if ($angle1 == $angle2) {\n\
    \        // Angle 1 and 2 are the same\n        if ($angle1 == $angle3) {\n  \
    \          // Angle 1 and 3 are the same\n            // Angle 1 and 4 are the\
    \ same\n            return true;\n        }\n        // Angle 1 and 3 are the\
    \ same\n        if ($angle1 == $angle4) {\n            // Angle 1 and 4 are the\
    \ same\n            // Angle 2 and 3 are the same\n            return true;\n\
    \        }\n        // Angle 1 and 4 are the same\n        if ($angle1 == $angle4)\
    \ {\n            // Angle 2 and 3 are the same\n            // Angle 2 and 4 are\
    \ the same\n            return true;\n        }\n        // Angle 1 and 4 are\
    \ the same\n        // Angle 2 and 4 are the same\n        return false;\n   \
    \ }\n    if ($angle1 == $angle2) {\n        // Angle 1 and 2 are the same\n  \
    \      if ($angle2 == $angle3) {\n            // Angle 1 and 3 are the same\n\
    \            // Angle 1 and 4 are the same\n            return true;\n       \
    \ }\n        // Angle 1 and 3 are the same\n        if ($angle2 == $angle4) {\n\
    \            // Angle 1 and 4 are the same\n            // Angle 2 and 3 are the\
    \ same\n            return true;\n        }\n        // Angle 1 and 4 are the\
    \ same\n        if ($angle2 == $angle4) {\n            // Angle 2 and 3 are the\
    \ same\n            // Angle 2 and 4 are the same\n            return true;\n\
    \        }\n        // Angle 1 and 4 are the same\n        // Angle 2 and 4 are\
    \ the same\n        return false;\n    }\n    if ($angle1 == $angle2) {\n    \
    \    // Angle 1 and 2 are the same\n        if ($angle2 == $angle3) {\n      \
    \      // Angle 1 and 3 are the same\n            // Angle 1 and 4 are the same\n\
    \            return true;\n        }\n        // Angle 1 and 3 are the same\n\
    \        if ($angle2 == $angle4) {\n            // Angle 1 and 4 are the same\n\
    \            // Angle 2 and 3 are the same\n            return true;\n       \
    \ }\n        // Angle 1 and 4 are the same\n        if ($angle2 == $angle4) {\n\
    \            // Angle 2 and 3 are the same\n            // Angle 2 and 4 are the\
    \ same\n            return true;\n        }\n        // Angle 1 and 4 are the\
    \ same\n        // Angle 2 and 4 are the same\n        return false;\n    }\n\
    \    if ($angle1 == $angle2) {\n        // Angle 1 and 2 are the same\n      \
    \  if ($angle2 == $angle3) {\n            // Angle 1 and 3 are the same\n    \
    \        // Angle 1 and 4 are the same\n            return true;\n        }\n\
    \        // Angle 1 and 3 are the same\n        if ($angle2 == $\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp53a7h1r8.php on line 99

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a = abs($a); $b = abs($b); $c = abs($c);\n    if ($a <= $b &&\
    \ $a <= $c) {\n        return ($b <= $c);\n    }\n    else if ($b <= $c) {\n \
    \       return true;\n    }\n    else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_wxobqr.php:30\n\
    Stack trace:\n#0 /tmp/tmpu_wxobqr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu_wxobqr.php\
    \ on line 30\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return ($a + $b > $c || $a + $c > $b + $a || $b + $c > $a + $b);\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsjukwl3.php:20\n\
    Stack trace:\n#0 /tmp/tmpdsjukwl3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdsjukwl3.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($a - $b);\n    $bc = abs($c - $b);\n    $ca = abs($a\
    \ - $c);\n    return ((($b > $c) AND ($bc >= $ab) AND ($ca >= $bc)) OR\n     \
    \       (($a > $c) AND ($ab >= $ca) AND ($bc >= $ca)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5la0u95.php:24\n\
    Stack trace:\n#0 /tmp/tmpa5la0u95.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa5la0u95.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t\n\t// Check if any one side is greater than the other\n\tif ($a\
    \ > $b) {\n\t\tif ($a > $c) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\telse if ($b > $c) {\n\t\treturn true;\n\t}\n\telse {\n\
    \t\treturn false;\n\t}\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pzafg70.php:35\n\
    Stack trace:\n#0 /tmp/tmp2pzafg70.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2pzafg70.php\
    \ on line 35\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ((($a + $b) * ($a + $c)) - (($b + $c) * ($a + $b))) >\
    \ 0;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek_it_3b.php:19\n\
    Stack trace:\n#0 /tmp/tmpek_it_3b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpek_it_3b.php\
    \ on line 19\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // Return true if the lengths of the sides are equal\n  if ($a\
    \ !== $b && $b !== $c) {\n    // If the sides are not equal, then the triangle\
    \ is not right-angled\n    return false;\n  }\n  // Otherwise, calculate the area\
    \ of the triangle\n  return ($a + $b + $c) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4e8ezk5r.php:26\n\
    Stack trace:\n#0 /tmp/tmp4e8ezk5r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4e8ezk5r.php\
    \ on line 26\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $a + $b - $c;\n    if (abs($a) < abs($b)) {\n        if\
    \ ($a < 0) {\n            $b = -$b;\n        }\n        return ($c == $b and $b\
    \ > 0);\n    }\n    return ($c == $d and $d > 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjhm871j.php:27\n\
    Stack trace:\n#0 /tmp/tmppjhm871j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppjhm871j.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  return is_right_angle($a, $b, $c) or is_right_angle($b, $c, $a);\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_right_angle()\
    \ in /tmp/tmplj65cnx6.php:12\nStack trace:\n#0 /tmp/tmplj65cnx6.php(16): right_angle_triangle(3,\
    \ 4, 5)\n#1 /tmp/tmplj65cnx6.php(20): candidate(3, 4, 5)\n#2 /tmp/tmplj65cnx6.php(33):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmplj65cnx6.php on line 12\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a1 = $a < $b ? $a : $b;\n    $b1 = $b < $c ? $b : $c;\n    $c1\
    \ = $c < $a ? $c : $a;\n    $a2 = $a < $b ? $a : $b;\n    $b2 = $b < $c ? $b :\
    \ $c;\n    $c2 = $c < $a ? $c : $a;\n    // $c1 = $b < $c ? $b : $c;\n    // $b1\
    \ = $c < $a ? $c : $a;\n    // $a1 = $c < $b ? $c : $a;\n    return ($c1 <= $a2\
    \ || $a1 <= $c2) && ($b1 <= $a2 || $a1 <= $b2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1z46h3z.php:30\n\
    Stack trace:\n#0 /tmp/tmpe1z46h3z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpe1z46h3z.php\
    \ on line 30\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // The angle formed by three sides is 90 - 3 * ((angle1 - angle2)\
    \ % 180).\n    $angle1 = ($a + $b + $c) / 3;\n    $angle2 = ($a - $b - $c) / 3;\n\
    \n    if ($angle1 % 360 == 0) {\n        return ($angle2 > 180) ? 1 : 0;\n   \
    \ } else {\n        return (90 - ($angle2 % 180)) % 180 == 0;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1t0hta5.php:28\n\
    Stack trace:\n#0 /tmp/tmpx1t0hta5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx1t0hta5.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $x = $a + $b + $c;\n    $sqrtx = sqrt($x);\n    $y = ($a - $b*$x\
    \ - $c*$sqrtx) / (2*$a);\n    return ($y*$y + 2*$b - $c*$sqrtx - $b * $c) / (2*$y)\
    \ == 1;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8kgoyf7.php:22\n\
    Stack trace:\n#0 /tmp/tmpw8kgoyf7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw8kgoyf7.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = $a + $b - $c;\n    return ($d < 0 || ($a == $b && $c >=\
    \ $d)) \n            && ($d > 0 || ($b == $c && $a >= $d))\n            && ($d\
    \ > 0 || ($a == $c && $b >= $d));\n}\n</code>\n<|/ a dscore=3 tags=php,math |>\n\
    <| a dscore=3 tags=php,math |>\nTry this:\n<code>\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9l3twiev.php
    on line 17

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Check if all inputs are positive \n    if ($a < 0 || $b <\
    \ 0 || $c < 0) {\n        return false;\n    }\n    $ab = $b - $a; // Substract\
    \ two sides and store in $ab\n    $ac = $c - $a; // Substract two sides and store\
    \ in $ac\n    $abc = [$ab, $ac]; // Store the values of $ab and $ac\n    if ($ab\
    \ == 0 && $ac == 0) {\n        // If $ab == 0 && $ac == 0, then three sides are\
    \ equal, so\n        // there must be two angles.\n        // In that case, return\
    \ false\n        if ($a < $c) {\n            return true; \n        } else {\n\
    \            return false;\n        }\n    } else {\n        // If $ab != 0 &&\
    \ $ac != 0, then there must be a 90\n        // degree angle between them and\
    \ they must be equal.\n        // In that case, return false\n        if ($ab\
    \ != 0) {\n            return false;\n        } else {\n            return true;\n\
    \        }\n    }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6p1tpg_.php:45\n\
    Stack trace:\n#0 /tmp/tmpo6p1tpg_.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpo6p1tpg_.php\
    \ on line 45\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $delta = $b - $c;\n  return ($delta * ($delta > 0)) == ($a + $b)\
    \ * ($a + $c) * ($b + $c);\n}\n</code>\nI should note, that your function will\
    \ always return true for right-angle triangles. That is because it is checking\
    \ if the sum of the squares of the differences between the sides is equal to the\
    \ sum of the squares of the sum of the differences.\n<|/ a tags=math,algorithm,php,geometry\
    \ |>\n<| a dscore=3 tags=math,algorithm,php,geometry |>\nSince we're talking about\
    \ integers, we might as well use integer division since it's more efficient than\
    \ floating-point division.  Here it goes:\n<code>\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpvr637bqe.php
    on line 15

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $c || $b > $c || $a > $b) return false;\n    $angle1\
    \ = acos(($a + $b + $c) / 2);\n    $angle2 = acos(($a - $b - $c) / 2);\n    $angle3\
    \ = acos(($a - $b + $c) / 2);\n    $angle4 = acos(($a + $b - $c) / 2);\n    if\
    \ ($angle1 < $angle2 && $angle1 < $angle3 && $angle1 < $angle4) return true;\n\
    \    if ($angle2 < $angle1 && $angle2 < $angle3 && $angle2 < $angle4) return true;\n\
    \    if ($angle3 < $angle1 && $angle3 < $angle2 && $angle3 < $angle4) return true;\n\
    \    if ($angle4 < $angle1 && $angle4 < $angle2 && $angle4 < $angle3) return true;\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4x_59l4.php:29\n\
    Stack trace:\n#0 /tmp/tmpy4x_59l4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy4x_59l4.php\
    \ on line 29\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = $b - $a;\n    $ac = $c - $a;\n    if ($ab == $ac) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouqajc3e.php:25\n\
    Stack trace:\n#0 /tmp/tmpouqajc3e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpouqajc3e.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\tif ($a + $b > $c) {\n\t\treturn false;\n\t} else {\n\t\tif ($a\
    \ + $c > $b) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn ($b + $c > $a);\n\
    \t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7qd5fb5.php:27\n\
    Stack trace:\n#0 /tmp/tmpf7qd5fb5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpf7qd5fb5.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($a - $b);\n    $bc = abs($b - $c);\n    $cb = abs($c\
    \ - $b);\n    if ($ab < $bc) {\n        if ($ab < $cb) {\n            return true;\n\
    \        }\n        return false;\n    } else {\n        if ($bc < $cb) {\n  \
    \          return true;\n        }\n        return false;\n    }\n}\n\n/**\n *\
    \ Given a number and a number of decimal places, return the string with the number\n\
    \ * rounded.\n */\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzkk99zm.php:37\n\
    Stack trace:\n#0 /tmp/tmppzkk99zm.php(50): test()\n#1 {main}\n  thrown in /tmp/tmppzkk99zm.php\
    \ on line 37\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a == 0 || $b == 0 || $c == 0) {\n        return false;\n\
    \    }\n    if (abs($a - $b) <= abs($a - $c) && abs($a - $b) <= abs($b - $c))\
    \ {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpao1l_sji.php:27\n\
    Stack trace:\n#0 /tmp/tmpao1l_sji.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpao1l_sji.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d=$b-$c;\n    $a2=pow($a,2);\n    $b2=pow($b,2);\n    $c2=pow($c,2);\n\
    \    $d2=pow($d,2);\n    return $a2*$d+$b*$c2-b2*$c+$d2*$a<0;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| c |>\nThis answer is missing its educational explanation.\n\
    <|/ c |>\n<| c |>\nI added the explanation.\n<|/ c |>\n<| a dscore=1 |>\nYou can\
    \ use:\n<code>\nif($a<$b && $a<$c) //Right triangle\n</code>\n<|/ a tags=php,trigonometry,geometry\
    \ |>\n<| a tags=php,trigonometry,geometry |>\nFor a right triangle to have a side\
    \ of length $a greater than $b AND a side of length $c greater than $b AND a side\
    \ of length $b greater than $c, the sides are all greater than or equal to $a.\n\
    <|/ a dscore=1 |>\n<| a |>\n<code>\nif($a<$b && $a<$c) //Right triangle\n</code>\n\
    <|/ a tags=php,trigonometry,geometry dscore=0 |>\n<| c |>\nThanks, but the answers\
    \ here are more detailed and easier to understand than the ones above.\n<|/ c\
    \ |>\n<| a tags=php,trigonometry,geometry |>\nThe other answers give the right\
    \ answer.\nIf you want to test if all three sides are equal (not just \"equal\"\
    ) then you can do\n<code>\nif($a == $b && $a == $c) { ... }\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nif($a<$b && $a<$c) //Right triangle\n</code>\n\
    <|/ a tags=php,trigonometry,geometry |>\n<| a |>\n<code>\n<?php\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp98lj9mt3.php
    on line 19

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $abx = $a * $b;\n    $acx = $c * $a;\n    $aby = $a * $c;\n \
    \   $acy = $c * $b;\n    $bcc = ($b * $c) - ($abx * $acy);\n\n    if ($bcc < 0)\
    \ {\n        return false;\n    }\n    $sqrt_bcc_root = (float)sqrt($bcc);\n \
    \   $a1 = $acx - $abx;\n    $b1 = $bcx - $acx;\n    $a2 = $a * $aby;\n    $b2\
    \ = $a * $acy;\n    $root = $sqrt_bcc_root * $a1 * $b2 - $sqrt_bcc_root * $a2\
    \ * $b1;\n\n    if ($root < 0) {\n        $root = 0;\n    }\n    $sqrt_root_abx\
    \ = sqrt($abx);\n    $sqrt_root_acx = sqrt($acx);\n    $root_root_aby = sqrt($aby);\n\
    \    $root_root_acy = sqrt($acy);\n    $root_abx = $root_root_aby * $sqrt_root_acx;\n\
    \    $root_acx = $root_root_acy * $sqrt_root_abx;\n    if ($root_root_abx != $root_root_acx)\
    \ {\n        $acx_abx = $root_root_acx * $root_abx;\n        $abx_acx = $root_root_abx\
    \ * $root_acx;\n        $root1 = $acx_abx - $abx_acx;\n        if ($root1 < 0)\
    \ {\n            $root1 = 0;\n        }\n        $root2 = $acy - $aby;\n     \
    \   if ($root2 < 0) {\n            $root2 = 0;\n        }\n        $root3 = $sqrt_bcc_root\
    \ * $a1 * $root2 - $sqrt_bcc_root * $a2 * $root1;\n        $root4 = $sqrt_bcc_root\
    \ * $a2 * $root2 - $sqrt_bcc_root * $a1 * $root1;\n        $root5 = -$acx + $abx;\n\
    \        if ($root5 < 0) {\n            $root5 = 0;\n        }\n        $root6\
    \ = $acy + $aby;\n        if ($root6 < 0) {\n            $root6 = 0;\n       \
    \ }\n        return ($root3 < 0 && $root4 > 0 || $root3 > 0 && $root4 < 0 || $root3\
    \ < 0 && $root4 < 0 || $root3 > 0 && $root4 > 0 || $root3 < 0 && $root4 > 0 ||\
    \ $root3 > 0 && $root4 < 0) && $root5 != $root6 && $root6 != $root1;\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8me5psd.php:67\n\
    Stack trace:\n#0 /tmp/tmpp8me5psd.php(80): test()\n#1 {main}\n  thrown in /tmp/tmpp8me5psd.php\
    \ on line 67\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\tif(($a == $b) || ($a == $c) || ($b == $c)) return true;\n\telse\
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6kg_vfb.php:21\n\
    Stack trace:\n#0 /tmp/tmpj6kg_vfb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpj6kg_vfb.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = ($c - $a) * ($c - $b) * ($c - $c);\n    if ($d == 0) return\
    \ false;\n    $root1 = ($b - $a) * ($d - $a) / ($d - $b);\n    $root2 = ($c -\
    \ $a) * ($d - $a) / ($d - $c);\n    $root3 = ($d - $a) * ($d - $b) / ($d - $c);\n\
    \    if (($root1 > 0.0) && ($root2 > 0.0) && ($root3 > 0.0)) {\n        return\
    \ $root1 > $root2 && $root1 > $root3;\n    } else {\n        return false;\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqz_fbsh_.php:29\n\
    Stack trace:\n#0 /tmp/tmpqz_fbsh_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqz_fbsh_.php\
    \ on line 29\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if (abs($a) > abs($b) || abs($a) > abs($c)) {\n    return false;\n\
    \  }\n\n  if ($a <= 0 && $b >= 0 && $c <= 0) {\n    return false;\n  }\n\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepd9cz80.php:28\n\
    Stack trace:\n#0 /tmp/tmpepd9cz80.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpepd9cz80.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($c <= $a + $b) {\n        return false;\n    }\n    if (abs($c\
    \ - $a) > abs($c - $b)) {\n        return true;\n    }\n    if (abs($c - $b) >\
    \ abs($c - $a)) {\n        return false;\n    }\n    // Now find the other two\
    \ angles c1 and c2\n    if ($c < $a) {\n        $c1 = $a;\n        $c2 = $c;\n\
    \    } else {\n        $c1 = $c;\n        $c2 = $b;\n    }\n    // Now find out\
    \ if c2 minus c1 is right angle\n    if ($c2 - $c1 > 0) {\n        // If c1 minus\
    \ c2 greater than 180 degrees, return false\n        if ($c1 - $c2 > 180) {\n\
    \            return false;\n        }\n        // Otherwise return true\n    }\
    \ else {\n        // Otherwise return false\n        if ($c1 - $c2 < -180) {\n\
    \            return false;\n        }\n    }\n    // If we get here, c1 minus\
    \ c2 must be right angle\n    return true;\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj57fe361.php:50\n\
    Stack trace:\n#0 /tmp/tmpj57fe361.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpj57fe361.php\
    \ on line 50\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $delta = $b - $c;\n    $sign = $a > $b ? 1 : -1;\n    $cpl =\
    \ pow($c, 2);\n    return $sign != ($delta / $cpl);\n}\n\n/**\n * Given the lengths\
    \ of the three sides of a triangle. Return true if the three\n * sides form a\
    \ equilateral triangle, false otherwise.\n * A equilateral triangle is a triangle\
    \ in which one angle is \n * perpendicular to the other two. \n * Example:\n *\
    \ >>> equilateral_triangle(3, 4, 5)\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 18 in /tmp/tmpvymqk3jd.php on
    line 18

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    $d = 3*$a + 3*$b + 3*$c;\n    $e\
    \ = ($a + $b + $c);\n    if ($d > $e) {\n        $t = $d;\n        $d = $e;\n\
    \        $e = $t;\n    }\n    return ($d == $e);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vp4vgsu.php:28\n\
    Stack trace:\n#0 /tmp/tmp_vp4vgsu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_vp4vgsu.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = $a + $b;\n    $ac = $a + $c;\n    $bc = $b + $c;\n    if\
    \ ($ab < $ac) {\n        $ac = $ac - $ab;\n        return ($ac >= 0 && $ac <=\
    \ 180);\n    }\n    if ($bc < $ab) {\n        $ab = $ab - $bc;\n        return\
    \ ($ab >= 0 && $ab <= 180);\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzps372p4.php:32\n\
    Stack trace:\n#0 /tmp/tmpzps372p4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzps372p4.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  global $right_angle_triangle;\n  $s = $a + $b + $c;\n  $s = $s\
    \ * $s - ($a * $a) + ($b * $b) + ($c * $c);\n  $s = -$s / $a;\n  if($s == 0) {\n\
    \    if($a==$b==$c) return 1;\n    return $a >= $c ? 1 : 0;\n  }\n  return $right_angle_triangle;\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "==" in /tmp/tmps4pn9qh3.php on line
    17

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return $a + $b > $c || $a + $c > $b || $b + $c > $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o96cky6.php:21\n\
    Stack trace:\n#0 /tmp/tmp4o96cky6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o96cky6.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b > $c) || ($a + $c > $b) || ($b + $c > $a);\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70ze4wfv.php:21\n\
    Stack trace:\n#0 /tmp/tmp70ze4wfv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp70ze4wfv.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\treturn ($a + $b > $c) || ($b + $c > $a) || ($c + $a > $b);\n}\n\
    \nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2691gul1.php:21\n\
    Stack trace:\n#0 /tmp/tmp2691gul1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2691gul1.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t$angle_a = get_angle($a, $b, $c);\n\t$angle_b = get_angle($b, $c,\
    \ $a);\n\t$angle_c = get_angle($c, $a, $b);\n\treturn $angle_a + $angle_b > $angle_c;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_angle() in\
    \ /tmp/tmpt5u_1hqb.php:12\nStack trace:\n#0 /tmp/tmpt5u_1hqb.php(19): right_angle_triangle(3,\
    \ 4, 5)\n#1 /tmp/tmpt5u_1hqb.php(23): candidate(3, 4, 5)\n#2 /tmp/tmpt5u_1hqb.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpt5u_1hqb.php on line 12\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $delta1 = ($a - $b) * ($a - $c);\n    $delta2 = ($b - $c) * ($b\
    \ - $a);\n    if ($delta1 == $delta2) {\n        $delta2 = sqrt(pow(abs($a), 2)\
    \ + pow(abs($b), 2));\n        if ($delta2 < 0.0001) {\n            return true;\n\
    \        } else {\n            return false;\n        }\n    } else {\n      \
    \  return abs($delta1) > abs($delta2);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p3bm2so.php:31\n\
    Stack trace:\n#0 /tmp/tmp2p3bm2so.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2p3bm2so.php\
    \ on line 31\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab_plus_ac = abs($a + $b + $c);\n    $s_1 = sqrt(pow($a, 2)\
    \ + pow($b, 2));\n    $s_2 = sqrt(pow($a, 2) + pow($c, 2));\n    $s_3 = sqrt(pow($b,\
    \ 2) + pow($c, 2));\n    $is_right_triangle = ($ab_plus_ac >= ($s_1 + $s_2 + $s_3));\n\
    \    return $is_right_triangle;\n}\n\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytmx256h.php:25\n\
    Stack trace:\n#0 /tmp/tmpytmx256h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpytmx256h.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $d = $a + $b + $c;\n  $e1 = $a * ($b + $c);\n  $e2 = $a * ($c +\
    \ $d);\n  $e3 = ($a + $b) * ($c + $d);\n  return ($e1 > $e2 && $e1 > $e3) ? true\
    \ : false;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4l7vry9m.php:24\n\
    Stack trace:\n#0 /tmp/tmp4l7vry9m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4l7vry9m.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a_b = $a - $b;\n    $c_b = $c - $b;\n    if (abs($a_b) > abs($c_b))\
    \ {\n        return ($a_b == $c_b);\n    } else {\n        return ($c_b == $a_b);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmdugotq.php:26\n\
    Stack trace:\n#0 /tmp/tmpwmdugotq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwmdugotq.php\
    \ on line 26\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $area_a = ($b * $c) - ($a * $c);\n    $area_b = ($c * $a) - ($b\
    \ * $a);\n    $area_c = ($a * $b) - ($c * $b);\n\n    // Check if all three sides\
    \ are negative\n    if ($area_a < 0.0) {\n        return false;\n    }\n    if\
    \ ($area_b < 0.0) {\n        return false;\n    }\n    if ($area_c < 0.0) {\n\
    \        return false;\n    }\n\n    // If two sides are equal, two triangles\
    \ are possible\n    if ($area_a == 0.0) {\n        return true;\n    }\n\n   \
    \ // Find the area of the triangle with the smallest area value\n    $smallest_area\
    \ = $area_a;\n    if ($area_b < $smallest_area) {\n        $smallest_area = $area_b;\n\
    \    }\n    if ($area_c < $smallest_area) {\n        $smallest_area = $area_c;\n\
    \    }\n\n    // Return true only if the three areas are equal or one side is\
    \ 90 degrees\n    return (abs($area_a) == abs($area_b)\n            || abs($area_a)\
    \ == abs($area_c)\n            || abs($area_b) == abs($area_c)\n            ||\
    \ ($area_a == $area_b && $area_b == $area_c));\n}\n</code>\n<|/ a tags=php,trigonometry,geometry\
    \ |>\n<| c |>\nI like how this works but this also returns false for triangles\
    \ such as `(0,4,5),(0,0,2),(1,5,0)` because of the division by zero...\n<|/ c\
    \ |>\n<| c |>\nI think this may need to be amended to account for the possibility\
    \ of the sides being equal (in which case `return true` would be true), but this\
    \ may be the better approach. I'll take a look at this when I've got time.\n<|/\
    \ c |>\n<| c |>\nI updated my answer to reflect this concern.\n<|/ c |>\n<| a\
    \ |>\nI wrote this function a while ago:\n<code>\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpns1amwxg.php
    on line 47

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if($a > $b && $a > $c) {\n        $a = $a - $b;\n        if($b\
    \ > $c) {\n            $a = $a - $c;\n        } else {\n            $a = 0 - $a;\n\
    \        }\n    } elseif($b > $a && $b > $c) {\n        $b = $b - $a;\n      \
    \  if($a > $c) {\n            $b = $b - $c;\n        } else {\n            $b\
    \ = 0 - $b;\n        }\n    } else {\n        $c = $c - $a;\n        if($a > $b)\
    \ {\n            $c = $c - $b;\n        } else {\n            $c = 0 - $c;\n \
    \       }\n    }\n    if($a == 0 || $b == 0 || $c == 0){\n        return false;\n\
    \    }\n    $ac = sqrt(($a * $a) + ($b * $b) + ($c * $c));\n    $ab = sqrt(($a\
    \ * $a) + ($b * b) + ($c * $c));\n    $bc = sqrt(($b * $b) + ($a * $a) + ($c *\
    \ $c));\n    $b2 = sqrt(($b * $b) + ($a * $a) + ($c * $c));\n    $cb = sqrt(($c\
    \ * $c) + ($b * $b) + ($a * $a));\n    $abb = sqrt(($a * $a) + ($b * b) + ($c\
    \ * $c));\n    if($ac == $abb && $b == $b2){\n        return true;\n    }\n  \
    \  if($ac > $ab && $b > $ab && $b == $c){\n        return true;\n    }\n    if($ac\
    \ > $ab && $c == $cb){\n        return true;\n    }\n    if($ac > $ab && $b >\
    \ $abb){\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"b\" in /tmp/tmpwor0rlam.php:38\n\
    Stack trace:\n#0 /tmp/tmpwor0rlam.php(59): right_angle_triangle(3, 4, -2)\n#1\
    \ /tmp/tmpwor0rlam.php(63): candidate(3, 4, 5)\n#2 /tmp/tmpwor0rlam.php(76): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwor0rlam.php on line 38\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Check that the sides are all positive\n    if ($a <= 0 ||\
    \ $b <= 0 || $c <= 0) {\n        return false;\n    }\n    // Check that the sides\
    \ are equal\n    if ($a == $b and $a == $c) {\n        return true;\n    }\n \
    \   // Check that one side is 90 degree\n    if ($a == $c && $b == $c) {\n   \
    \     return true;\n    }\n    // Check that one side is right\n    if ($a < $b)\
    \ {\n        if ($a < $c) {\n            if ($b < $c) {\n                // Flip\
    \ if required\n                return right_angle_triangle($b, $a, $c);\n    \
    \        } else {\n                // Flip if required\n                return\
    \ right_angle_triangle($c, $a, $b);\n            }\n        } else {\n       \
    \     return true;\n        }\n    } else {\n        if ($b < $c) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  }\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nIt would be nice if downvoters could\
    \ leave a comment as to why.\n<|/ c |>\n<| c |>\nI used this code to solve some\
    \ test cases for school. The code works with positive integers only.\n<|/ c |>\n\
    <| c |>\nWhat is this `if ($a == $b and $a == $c) {` supposed to do? I tried to\
    \ find information on it but couldn't find anything.\n<|/ c |>\n<| c |>\nIt's\
    \ the same as `if ($a == $b) {` but more readable. Just another way of writing\
    \ `if ($a === $b) {`.\n<|/ c |>\n<| c |>\nIt means that both `a` and `b` are not\
    \ equal.  `$a == $b` is true only if `$a` and `$b` are equal, and `$a == $c` is\
    \ true only if `a` and `c` are equal.\n<|/ c |>\n<| a |>\nMy prof and I are taking\
    \ the same class in college, except we are going to do an online contest for our\
    \ program. I believe the problem has to do with how we are storing the values\
    \ when we are trying to solve this problem. We are required to use a stack to\
    \ hold the values when we are trying to solve this problem. I am also going to\
    \ use a queue for the values when we are trying to solve the problem. I believe\
    \ the issue has to do with how we are storing the values when we are trying to\
    \ solve this problem. We are required to use a stack to hold the values when we\
    \ are trying to solve this problem. I am also going to use a queue for the values\
    \ when we are trying to solve the problem.\nEDIT: I did some more research and\
    \ we found out that using a queue and stack will solve the problem of having an\
    \ input of only two values. The code \nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_ewkcua_.php
    on line 45

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\tif ($a == 0 && $b == 0 && $c == 0) {\n\t\treturn true;\n\t}\n\t\
    return ($a + $b >= $c && $a + $c >= $b + $a && $b + $c >= $a + $b);\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifyr1sv0.php:24\n\
    Stack trace:\n#0 /tmp/tmpifyr1sv0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpifyr1sv0.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = $b - $a;\n    $cb = $c - $b;\n    $ac = $c - $a;\n    $ab\
    \ = $ab / 2;\n    $cb = $cb / 2;\n    return ($cb >= $ab);\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb758pe7c.php:25\n\
    Stack trace:\n#0 /tmp/tmpb758pe7c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb758pe7c.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d1 = sqrt(pow($a, 2) + pow($b, 2));\n    $d2 = sqrt(pow($b,\
    \ 2) + pow($c, 2));\n    $d3 = sqrt(pow($c, 2) + pow($a, 2));\n    $det = $a *\
    \ $d2 - $b * $d3;\n    return $det < 0;\n}\nfunction candidate(...$args) {\n \
    \   return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sz6pp_l.php:24\n\
    Stack trace:\n#0 /tmp/tmp_sz6pp_l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_sz6pp_l.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if (abs($a - $b) > abs($a - $c) && abs($a - $b) > abs($c - $b))\
    \ {\n    return true;\n  } else if (abs($a - $c) > abs($a - $b) && abs($a - $c)\
    \ > abs($c - $b)) {\n    return true;\n  } else if (abs($a - $b) == abs($a - $c))\
    \ {\n    if (abs($b - $c) > abs($b - $a) && abs($b - $c) > abs($c - $a)) {\n \
    \     return true;\n    }\n  } else if (abs($a - $c) == abs($a - $b)) {\n    if\
    \ (abs($c - $b) > abs($c - $a) && abs($c - $b) > abs($a - $a)) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzb84l2qb.php:34\n\
    Stack trace:\n#0 /tmp/tmpzb84l2qb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzb84l2qb.php\
    \ on line 34\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    return ($b <= $c || $c <= $a) ||\
    \ ($b >= $a && $c >= $a);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmper8k9zsf.php:21\n\
    Stack trace:\n#0 /tmp/tmper8k9zsf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmper8k9zsf.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a_rad = deg2rad($a);\n    $b_rad = deg2rad($b);\n    $c_rad\
    \ = deg2rad($c);\n    $sum = $a_rad + $b_rad + $c_rad;\n    return ($sum > pi())\
    \ ? false : true;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivdja15i.php:25\n\
    Stack trace:\n#0 /tmp/tmpivdja15i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpivdja15i.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $angle1 = ($a + $b + $c) / 2;\n    $angle2 = ($a - $b - $c) /\
    \ 2;\n    $angle3 = ($a + $b - $c) / 2;\n\n    return ($angle1 == $angle3 || $angle1\
    \ == $angle2 || $angle1 == $angle2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozq_6dlb.php:24\n\
    Stack trace:\n#0 /tmp/tmpozq_6dlb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpozq_6dlb.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a + $b > $c) {\n        $a = $c - $b;\n    }\n\n    if ($a\
    \ + $c > $b) {\n        $c = $b - $a;\n    }\n\n    if ($c + $b > $a) {\n    \
    \    $b = $a - $c;\n    }\n\n    // This returns true if all angles fall between\
    \ 90 and -90.\n    return $a + $b > $c - $b;\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnfcov1b.php:32\n\
    Stack trace:\n#0 /tmp/tmpxnfcov1b.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxnfcov1b.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($c <= 0) {\n        return false;\n    }\n    if ($a > $b)\
    \ {\n        $b = $a;\n        $a = $c;\n        $c = $b;\n    }\n    if ($a <\
    \ $b) {\n        $a = $b;\n        $b = $c;\n        $c = $a;\n    }\n    if ($a\
    \ == $b) {\n        if ($a < $c) {\n            $a = $c;\n        }\n        if\
    \ ($b < $c) {\n            $b = $c;\n        }\n    }\n    return ($a + $b ==\
    \ $c);\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv17tco3u.php:41\n\
    Stack trace:\n#0 /tmp/tmpv17tco3u.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpv17tco3u.php\
    \ on line 41\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // http://stackoverflow.com/questions/57803/how-to-determine-if-a-point-is-to-the-right-or-left-side-of-another-point\n\
    \  // If ($b > $c) {\n  //   return (90 - $a * $c / $b) > (90 - $a * $a / $c);\n\
    \  // } else {\n  //   return (90 - $a * $c / $b) < (90 - $a * $a / $c);\n  //\
    \ }\n  return ($b > $c) && (90 - $a * $c / $b) > (90 - $a * $a / $c);\n}\n</code>\n\
    <|/ a tags=php dscore=0 |>\n<| a |>\nThe first answer isn't correct. It will return\
    \ a true for a triangle with sides 1 and 2. To get a true result for triangle\
    \ sides 1, 2, or 3, use:\n<code>\nreturn (($a > $b) && ($a > $c));\n</code>\n\
    <|/ a tags=php dscore=0 |>\n<| a tags=php |>\nIn case someone is looking for a\
    \ general solution for determining if triangle is right angled without using any\
    \ formulas and without using the PHP functions that are deprecated and will be\
    \ removed in future versions of PHP. The code below will give you the correct\
    \ answer and also will work on any length triangle and the number inside the triangle\
    \ can be anything from 0 to 9. \n<code>\n<?php\n$a = $_REQUEST['num1'];\n$b =\
    \ $_REQUEST['num2'];\n$c = $_REQUEST['num3'];\nif (($a > $c) && ($a > $b)) {\n\
    \    //First check whether the triangle is right angled or not \n    echo \n \
    \   (($a > $b) && (($a + $b) > $c)) \n    ? \"Not right angled\" \n    : \"Right\
    \ angled\";\n} else {\n    echo \"Not right angled\";\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php |>\n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpqa4mvy9d.php
    on line 20

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if ($a < 0 || $c < 0 || $b < 0 || $a + $b + $c < 3) {\n    // no\
    \ solution\n    return false;\n  }\n  // Now calculate the area of the triangle\
    \ by using the Heron's formula\n  $area = sqrt(pow(4 * $a * $b - 2 * $c, 2) +\
    \ pow($a, 2) * pow($b, 2));\n  if ($area === 0) {\n    // no solution\n    return\
    \ false;\n  }\n  // Now calculate the ratio that determines whether it is right\
    \ angled triangle\n  return $a / $area >= $b / $area;\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvy_082c.php:30\n\
    Stack trace:\n#0 /tmp/tmpyvy_082c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyvy_082c.php\
    \ on line 30\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\tif ($a < $b+$c && $b+$c < $a+$c && $a+$c < $a) return false;\n\t\
    else return true;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_p5wlcr6.php:21\n\
    Stack trace:\n#0 /tmp/tmp_p5wlcr6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_p5wlcr6.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if (abs($a - $b) == abs($a - $c) == abs($b - $c)) {\n       \
    \ return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "==" in /tmp/tmpr960cabr.php on line
    12

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  global $a;\n  global $b;\n  global $c;\n  $sides = array($a, $b,\
    \ $c);\n  if ($a == $b || $a == $c || $b == $c) {\n    return true;\n  }\n  $l1\
    \ = (count($sides) - 1);\n  $l2 = count($sides) - 2;\n  for ($i = 1; $i <= $l2;\
    \ $i++) {\n    $x = ($i * ($a + $c));\n    $y = (($i * ($b + $c)) - ($a * $i));\n\
    \    $slope = $y / $x;\n    if ($slope != 0) {\n      if ($slope > 0 && $sides[$i]\
    \ == ($a * $i)) {\n        return true;\n      }\n      if ($slope < 0 && $sides[$i]\
    \ == ($b * $i)) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk760te_b.php:43\n\
    Stack trace:\n#0 /tmp/tmpk760te_b.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpk760te_b.php\
    \ on line 43\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\t$delta_a = $c - $b;\n\t$delta_b = $a - $c;\n\t$delta_c = $b - $a;\n\
    \n\t// If any of the three sides are equal, then the triangle is right angled.\n\
    \tif ($delta_a != 0) {\n\t\tif ($delta_b == 0) {\n\t\t\tif ($delta_c == 0) {\n\
    \t\t\t\t// Equilateral triangle\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t\
    // Right angle triangle\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\t\
    if ($delta_c == 0) {\n\t\t\t\t// isosceles triangle\n\t\t\t\treturn false;\n\t\
    \t\t} else {\n\t\t\t\t// right angle triangle\n\t\t\t\treturn true;\n\t\t\t}\n\
    \t\t}\n\t} else {\n\t\tif ($delta_b == 0) {\n\t\t\t// scalene triangle\n\t\t\t\
    return false;\n\t\t} else {\n\t\t\t// right angle triangle\n\t\t\treturn true;\n\
    \t\t}\n\t}\n}\n</code>\n<|/ a |>\n<| c |>\nPlease add some explanation\n<|/ c\
    \ |>\n<| c |>\nHe just wanted to know \"what is the difference between a right\
    \ triangle and a right angle triangle?\"\n<|/ c |>\n<| a |>\nThe best way to determine\
    \ if a triangle is right or left angled is to determine if the three sides are\
    \ equal:\n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpx9znnoqp.php
    on line 45

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if ($a >= 0 && $a <= 180 && $b >= 0 && $b <= 180 && $c >= 0 &&\
    \ $c <= 180) {\n    // We don't need to check the other 2 angles\n    if ($a ==\
    \ 180 && $b == 180) {\n      return false;\n    }\n    return $a == $b == 180\
    \ || $a == $c == 180 || $b == $c == 180;\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "==" in /tmp/tmpp9q5f48i.php on line
    17

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a <= $b) && ($b <= $c) && ($c <= $a);\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptuksd6jy.php:20\n\
    Stack trace:\n#0 /tmp/tmptuksd6jy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptuksd6jy.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\tif ($a === 0 || $b === 0 || $c === 0)\n\t\treturn false;\n\tif\
    \ ($a === $b || $a === $c)\n\t\treturn true;\n\tif ($b === $c || $b === $a)\n\t\
    \treturn true;\n\tif ($c === $a || $c === $b)\n\t\treturn true;\n\tif ($a <= $b\
    \ && $a <= $c)\n\t\treturn true;\n\tif ($b <= $c && $b <= $a)\n\t\treturn true;\n\
    \treturn false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmg2i88mg.php:32\n\
    Stack trace:\n#0 /tmp/tmpmg2i88mg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmg2i88mg.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a === 0 || $b === 0 || $c === 0) {\n        return 0;\n\
    \    }\n    $d = ($a + $b + $c) / 2;\n    if ($d > Math.sqrt($a * $a + $b * $b\
    \ + $c * $c)) {\n        return 0;\n    }\n    if ($a > $c) {\n        $a = $c;\n\
    \    }\n    if ($b > $c) {\n        $b = $c;\n    }\n    $delta = $a - $b;\n \
    \   if ($delta > 0) {\n        return ($a + $b + $c) / 2 - $c / 2;\n    }\n  \
    \  $delta = $b - $a;\n    if ($delta > 0) {\n        return $a + $b / 2 - $c /\
    \ 2;\n    }\n    $delta = $c - $a;\n    if ($delta > 0) {\n        return $c /\
    \ 2 - $a / 2;\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n   \
    \ return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"Math\" in /tmp/tmpnv61sq4l.php:16\n\
    Stack trace:\n#0 /tmp/tmpnv61sq4l.php(41): right_angle_triangle(3, 4, 5)\n#1 /tmp/tmpnv61sq4l.php(45):\
    \ candidate(3, 4, 5)\n#2 /tmp/tmpnv61sq4l.php(58): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpnv61sq4l.php on line 16\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // Write your code here\n  $delta = $b - $c;\n  if ($delta < 0)\
    \ {\n    $delta *= -1;\n    $a *= -1;\n  }\n  $delta2 = pow($delta, 2);\n  $delta3\
    \ = pow($delta, 3);\n  $delta4 = pow($delta, 4);\n  $delta5 = pow($delta, 5);\n\
    \  $delta6 = pow($delta, 6);\n  $delta7 = pow($delta, 7);\n  $delta8 = pow($delta,\
    \ 8);\n  $delta9 = pow($delta, 9);\n  $delta10 = pow($delta, 10);\n  if ($a >=\
    \ $b >= $c) {\n    if ($a > $b) {\n      return $a <= ($c - $delta2) || ($c -\
    \ $delta2) <= $c;\n    } else {\n      return ($b - $delta2) <= ($a - $delta)\
    \ || ($a - $delta) <= $b;\n    }\n  } else {\n    if ($a > $b) {\n      return\
    \ $b <= ($c - $delta3) || ($c - $delta3) <= $c;\n    } else {\n      return ($b\
    \ - $delta3) <= ($a - $delta2) || ($a - $delta2) <= $b;\n    }\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ">=" in /tmp/tmpc_fx_6ks.php on line
    27

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $area = ($a + $c) * ($b + $c) - ($b * $c);\n    if ($area < 0)\
    \ {\n        // $area == 0 => $a + $c == $b + $c => a + b == b\n        $a = $b\
    \ + $c;\n        $b = $c;\n    }\n    if ($area > 0) {\n        // $area == 0\
    \ => $a + $c == $b + $c => a + b == b\n        $a = $b;\n        $b = $c;\n  \
    \  }\n\n    return ( (($a < $b) && ($b > $c)) || (($b < $c) && ($c > $a)) );\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58ot7aj6.php:32\n\
    Stack trace:\n#0 /tmp/tmp58ot7aj6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp58ot7aj6.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $delta_ab = $b - $a;\n    $delta_cb = $c - $b;\n    $delta_cc\
    \ = $c - $a;\n    return ($delta_ab > 0 && $delta_ab == $delta_cb && $delta_cc\
    \ > 0 && $delta_cc == $delta_ab);\n}\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_86l7u0g.php:22\n\
    Stack trace:\n#0 /tmp/tmp_86l7u0g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_86l7u0g.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    \n    // Check if triangle can be created from 3 sides.\n   \
    \ // It can't be created if the angle is neither right angle nor 90 degree.\n\
    \    // If triangle can not be created return false.\n    // If 3 sides are of\
    \ length 1, then return true (since triangle can not be created from 1 side)\n\
    \    if ($a != $b) {\n        if ($a == $c) {\n            $theta = $a > $b\n\
    \            ? pi()\n            : -pi();\n            if (abs($a - $c) <= 1 &&\
    \ abs($a - $b) <= 1 && abs($c - $b) <= 1) {\n                return true;\n  \
    \          } else {\n                return false;\n            }\n        } else\
    \ {\n            if ($a > $c || $b > $c) {\n                if ($b - $c > 0) {\n\
    \                    if ($a > $b) {\n                        return false;\n \
    \                   }\n                    return true;\n                }\n \
    \               if ($a - $c < 0) {\n                    if ($a > $b) {\n     \
    \                   return true;\n                    }\n                    return\
    \ false;\n                }\n                if ($a < $b) {\n                \
    \    if ($a > $c) {\n                        return false;\n                 \
    \   }\n                    return true;\n                }\n                return\
    \ true;\n            } else {\n                return false;\n            }\n\
    \        }\n    }\n    \n    // Check if triangle can be created from 2 sides.\n\
    \    if ($a == $b) {\n        if ($a == $c) {\n            return true;\n    \
    \    } else {\n            if ($c < $a) {\n                return false;\n   \
    \         }\n            return true;\n        }\n    }\n    \n    // Check if\
    \ triangle can be created from 1 side.\n    if ($a != $b) {\n        if ($a >\
    \ $c) {\n            return false;\n        }\n        return true;\n    }\n \
    \   \n    // If all above failed, then all triangles can be constructed from 2\
    \ sides.\n    if ($a == $c && $b == $c) {\n        return true;\n    }\n    \n\
    \    // Check if triangle can be created from 1 side.\n    if ($a == $c) {\n \
    \       return true;\n    }\n    \n    // If all above failed, then all triangles\
    \ can be constructed from 1 side.\n    if ($a > $c) {\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhebiz7h.php:94\n\
    Stack trace:\n#0 /tmp/tmpvhebiz7h.php(107): test()\n#1 {main}\n  thrown in /tmp/tmpvhebiz7h.php\
    \ on line 94\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    $x = $a * $b;\n    $y = $c * $b;\n\
    \    $z = $a * $c;\n    $n = sqrt(pow($x,2) + pow($y,2) + pow($z,2));\n    return\
    \ $x == $y && $y == $z;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd8rlio7a.php:25\n\
    Stack trace:\n#0 /tmp/tmpd8rlio7a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd8rlio7a.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $rad2deg = function($rad){\n        return $rad * 57.29577951308232\
    \ * 360;\n    };\n\n    $a = $a / 180 * M_PI;\n    $b = $b / 180 * M_PI;\n   \
    \ $c = $c / 180 * M_PI;\n    $d  = sqrt(pow($a, 2) + pow($b, 2));\n    $e  = sqrt(pow($b,\
    \ 2) + pow($c, 2));\n    $f  = sqrt(pow($a, 2) + pow($c, 2));\n    $g  = $a +\
    \ $b + $c;\n\n    $r1 = $d / $e;\n    $r2 = $f / $g;\n\n    if((fmod($r1, 1) ==\
    \ 0 && fmod($r2, 1) != 0) || (fmod($r2, 1) == 0 && fmod($r1, 1) != 0)){\n    \
    \    // $r1 and $r2 are equal and not equal\n        if((fmod($r1, 1) != 0 &&\
    \ fmod($r2, 1) == 0) || (fmod($r1, 1) == 0 && fmod($r2, 1) != 0)){\n         \
    \   // $r1 and $r2 are not equal\n            $r = ($r1 + $r2) / 2;\n        }\
    \ else {\n            // $r1 and $r2 are equal but not equal\n            $r =\
    \ ($r1 + $r2) / 2 + 0.5;\n        }\n    } else {\n        // $r1 and $r2 are\
    \ equal\n        if(fmod($r1, 1) != 0 && fmod($r2, 1) != 0){\n            // $r1\
    \ and $r2 are not equal\n            $r = 0.5 + fmod((($r1 + $r2) / 2), 2);\n\
    \        } else {\n            // $r1 and $r2 are equal but not equal\n      \
    \      $r = 0.5 + fmod(($r1 + $r2) / 2, 2);\n        }\n    }\n\n    $angle =\
    \ $r * 180 / M_PI;\n    if ($angle < 0){\n        $angle += 360;\n    }\n    return\
    \ ($angle <= M_PI_2 && $angle > M_PI_4);\n}\n\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ntx5qr0.php:59\n\
    Stack trace:\n#0 /tmp/tmp1ntx5qr0.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp1ntx5qr0.php\
    \ on line 59\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    $ab = $b - $a;\n    $ac = $c - $a;\n\
    \    $square = $ab * $ab;\n    $a = $ab;\n    $b = $ac;\n    $c = $square;\n \
    \   $det = $b * $c - $a * $b;\n    if ($det < 0) {\n        return false;\n  \
    \  }\n    $s = (-$a * $c + $b * $a) / ($ab * $ac);\n    $t = ($b * $c - $a * $b)\
    \ / ($ab * $ac);\n    $u1 = $s * (1 - $t);\n    $u2 = $s * (1 - $t);\n    return\
    \ $u1 <= 0 && $u2 <= 0;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbx8oaz9_.php:34\n\
    Stack trace:\n#0 /tmp/tmpbx8oaz9_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbx8oaz9_.php\
    \ on line 34\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $delta = $b-$a;\n  $delta2 = $c- $b;\n  $delta3 = $c-$a;\n  $t1\
    \ = $delta*$delta*$delta3;\n  $t2 = $delta2*$delta3;\n  $t3 = $delta3*$delta2;\n\
    \  $t4 = ($a*$c)-($b*$c);\n  $a1 = $delta2*$delta;\n  $a2 = $delta3*$delta2;\n\
    \  $a3 = $delta*$delta3;\n  $b1 = $delta3*$delta;\n  $b2 = $delta2*$delta3;\n\
    \  $b3 = $delta*$delta2;\n  $c1 = $delta*$delta2;\n  $c2 = $delta3*$delta;\n \
    \ $c3 = $delta*$delta3;\n  if ($t1 < 0) $t1 = -$t1;\n  if ($t2 < 0) $t2 = -$t2;\n\
    \  if ($t3 < 0) $t3 = -$t3;\n  if ($t4 < 0) $t4 = -$t4;\n  if ($a1 < 0) $a1 =\
    \ -$a1;\n  if ($a2 < 0) $a2 = -$a2;\n  if ($a3 < 0) $a3 = -$a3;\n  if ($b1 < 0)\
    \ $b1 = -$b1;\n  if ($b2 < 0) $b2 = -$b2;\n  if ($b3 < 0) $b3 = -$b3;\n  if ($c1\
    \ < 0) $c1 = -$c1;\n  if ($c2 < 0) $c2 = -$c2;\n  if ($c3 < 0) $c3 = -$c3;\n \
    \ if ($t1 > $t2 && $t1 > $t3 && $t1 > $t4 && $t4 > $t3) return true;\n  if ($t2\
    \ > $t1 && $t2 > $t3 && $t2 > $t4 && $t4 > $t1) return true;\n  if ($t3 > $t1\
    \ && $t3 > $t2 && $t3 > $t4 && $t4 > $t1) return true;\n  if ($t4 > $t1 && $t4\
    \ > $t2 && $t4 > $t3 && $t4 > $t1) return true;\n  if ($a1 > $a2 && $a1 > $a3\
    \ && $a1 > $b1 && $b1 > $a3 && $c1 > $a1 && $c1 > $b1) return true;\n  if ($a2\
    \ > $a1 && $a2 > $a3 && $a2 > $b1 && $b2 > \nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp_68mo5hy.php on line 47

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if ($a > $b && $a > $c) return false;\n  else if ($b > $c && $b\
    \ > $a) return false;\n  else if ($c > $a && $c > $b) return false;\n  else if\
    \ ($a == $b || $a == $c || $b == $c) return true;\n  else return false;\n}\n\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69clx3tg.php:24\n\
    Stack trace:\n#0 /tmp/tmp69clx3tg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp69clx3tg.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if(($b - $c) === 0) {\n        return 0;\n    }\n    elseif ($c\
    \ < $a) {\n        $b = $c;\n    }\n    else {\n        $c = $a;\n    }\n\n  \
    \  if ($a < $c) {\n        if ($b < $c) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9j_omec.php:34\n\
    Stack trace:\n#0 /tmp/tmpp9j_omec.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpp9j_omec.php\
    \ on line 34\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // http://stackoverflow.com/questions/341823/how-can-i-check-if-a-given-point-lies-on-a-right-triangle\n\
    \n    $ab = $b-$a;\n    $ac = $c-$a;\n\n    return ($ab == 0) || ($ac == 0) ||\
    \ (($ab == $ac) && ($b > $a) && ($c > $a));\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2t7z_91s.php:25\n\
    Stack trace:\n#0 /tmp/tmp2t7z_91s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2t7z_91s.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if ($a < $c && $b < $c) {\n    $s = $a + $b - $c;\n    $t = ($b\
    \ * $b) - (4 * $a * $c);\n    if ($t < -0 || $t > 0) {\n      return false;\n\
    \    }\n    return true;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphh09e9c7.php:27\n\
    Stack trace:\n#0 /tmp/tmphh09e9c7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphh09e9c7.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a_length = $a - $b;\n    $b_length = $b - $c;\n    $c_length\
    \ = $c - $a;\n    if ($b_length <= $a_length && $b_length <= $c_length) {\n  \
    \      return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprzcmbcl.php:28\n\
    Stack trace:\n#0 /tmp/tmpprzcmbcl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpprzcmbcl.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $det = sqrt(pow($b, 2) + pow($c, 2));\n  if($a == 0 || $b == 0\
    \ || $c == 0) return false;\n  return ($b != 0 && $c != 0 && $det != 0 && $b /\
    \ $det == $c / $det) || ($b / $det == $a / $det && $c / $det == $a / $det);\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeb6r5i2u.php:21\n\
    Stack trace:\n#0 /tmp/tmpeb6r5i2u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeb6r5i2u.php\
    \ on line 21\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $b) {\n        $temp = $a;\n        $a = $b;\n     \
    \   $b = $temp;\n    }\n    if ($a > $c) {\n        $temp = $a;\n        $a =\
    \ $c;\n        $c = $temp;\n    }\n    if ($b > $c) {\n        $temp = $b;\n \
    \       $b = $c;\n        $c = $temp;\n    }\n    $deg45 = 45;\n    $deg90 = 90;\n\
    \    $deg135 = 360;\n    $deg180 = 180;\n    $rad45 = pi() / 2;\n    $rad90 =\
    \ pi() * 3 / 2;\n    $rad135 = pi() * 5 / 2;\n    $rad180 = pi() * 7 / 2;\n  \
    \  $absA = abs($a);\n    $absB = abs($b);\n    $absC = abs($c);\n    $min = min($absA,\
    \ $absB, $absC);\n    $max = max($absA, $absB, $absC);\n    if ($min >= $max)\
    \ {\n        return false;\n    }\n    $x = $a;\n    $y = $b;\n    $oabc = sqrt($x\
    \ * $x + $y * $y);\n    if ($oabc < 1) {\n        if ($x > 0) {\n            if\
    \ ($y > 0) {\n                $c = $b;\n                $b = $x;\n           \
    \     $x = $c;\n                return true;\n            }\n            if ($y\
    \ < 0) {\n                $c = $b;\n                $b = $x;\n               \
    \ $x = $c;\n                return false;\n            }\n        }\n        if\
    \ ($y > 0) {\n            if ($x < 0) {\n                $c = $a;\n          \
    \      $a = $y;\n                $y = $c;\n                return true;\n    \
    \        }\n            if ($y < 0) {\n                $c = $a;\n            \
    \    $a = $y;\n                $y = $c;\n                return false;\n     \
    \       }\n        }\n    }\n    $x1 = $acos($oabc / $absC);\n    $x2 = $acos($oabc\
    \ / $absA);\n    $y1 = atan2($y, $x);\n    $y2 = atan2($c, $oabc / $absA);\n \
    \   $z1 = asin($oabc / $absB);\n    $z2 = asin($oabc / $absC);\n    $d1 = $z2\
    \ - $z1;\n    $d2 = $y2 - $y1;\n    $d3 = $x2 - $x1;\n    $d4 = atan2($d1, $d2);\n\
    \    $d5 = $z2 - $z1;\n    if (abs($y1 - $y2) < $deg45) {\n        if (abs($z1\
    \ - $z2) < $deg45) {\n            if (abs($d1 + \nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpnjx5vk3p.php on line 90

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a === $b || $a === $c || $b === $c) return false;\n    $theta1\
    \ = ($a + $b + $c) / 2;\n    $theta2 = ($a + $b + $c - $a) / 2;\n    $theta3 =\
    \ ($a + $c - $a - $b) / 2;\n    $theta4 = ($b + $c - $a - $c) / 2;\n    $theta5\
    \ = (($a + $b) + $c) / 2;\n    $theta6 = ($a - $b - $c) / 2;\n    $theta7 = ($a\
    \ + $b - $c) / 2;\n    $theta8 = (($a + $b) + $c - $a) / 2;\n    $theta9 = abs(($a\
    \ + $b - $c) / 2);\n    $theta10 = (($a - $b) + $c) / 2;\n    $theta11 = abs(($a\
    \ - $b - $c) / 2);\n    $theta12 = abs(($a - $b) + $c) / 2;\n    $theta13 = (($b\
    \ + $c) + $a) / 2;\n    $theta14 = ($a - $b);\n    $theta15 = $a + $b;\n    $theta16\
    \ = $b + $c;\n    $theta17 = abs($a - $b);\n    $theta18 = $a + $c;\n    $theta19\
    \ = $b + $c;\n    $theta20 = ($a + $b + $c) / 2;\n    $theta21 = ($a - $b + $c)\
    \ / 2;\n    $theta22 = $a - $b;\n    $theta23 = $a + $c;\n    $theta24 = $b +\
    \ $c;\n    return $theta1 * $theta2 >= $theta3 * $theta4 && $theta2 * $theta4\
    \ >= $theta5 * $theta6 && $theta3 * $theta6 >= $theta7 * $theta8 && $theta1 *\
    \ $theta4 >= $theta9 * $theta10 && $theta2 * $theta6 >= $theta11 * $theta12 &&\
    \ $theta3 * $theta8 >= $theta13 * $theta14 && $theta1 * $theta5 >= $theta15 *\
    \ $theta16 && $theta2 * $theta8 >= $theta17 * $theta18 && $theta3 * $theta10 >=\
    \ $theta19 * $theta20 && $theta1 * $theta6 >= $theta21 * $theta22 && $theta2 *\
    \ $theta10 >= $theta23 * $theta24;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI\
    \ understand but what about this case `[10, 12, 20]`?\n<|/ c |>\n<| c |>\nIt is\
    \ not the case. Because it's \nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4hyf8c0d.php
    on line 39

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $c) === ($b + $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvmb512n.php:20\n\
    Stack trace:\n#0 /tmp/tmpzvmb512n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzvmb512n.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($a - $b); // the absolute value of the difference between\
    \ A and B\n    $ac = abs($a - $c); // the absolute value of the difference between\
    \ A and C\n    $bc = abs($b - $c); // the absolute value of the difference between\
    \ B and C\n    $degree = $ab + $ac + $bc; // the total sum of differences between\
    \ A and B and C\n    $sum = ($ab + $ac) / 2;\n    $diff = $sum - $degree; // the\
    \ difference between A and B\n    // return true if difference is 90, 180, or\
    \ 270 degrees\n    if ($diff == $ab) {\n        // return true if difference is\
    \ 90 degree\n        if ($ac == $bc) {\n            return ($a > $b) ? 1 : 0;\n\
    \        } else {\n            return 1;\n        }\n    } elseif ($diff == $ac)\
    \ {\n        // return true if difference is 180 degree\n        if ($b == $c)\
    \ {\n            return ($a > $b) ? 1 : 0;\n        } else {\n            return\
    \ 1;\n        }\n    } else {\n        // return true if difference is 270 degree\n\
    \        if ($b == $c) {\n            return ($a > $b) ? 1 : 0;\n        } else\
    \ {\n            return 1;\n        }\n    }\n}\n</code>\n<|/ a dscore=3 |>\n\
    <| c |>\nthis does not seem to be working - returns TRUE when it should be FALSE.\
    \ I've tried it with a bunch of numbers and just can't get the logic right. Also,\
    \ I am not allowed to use any php functions or anything besides if, else, for,\
    \ foreach and while, so just using if statements would be nice\n<|/ c |>\n<| c\
    \ |>\n: I apologize for the misleading comment.  It turns out I wrote the code\
    \ a bit incorrectly.  The code works, see my update.\n<|/ c |>\n<| c |>\nthis\
    \ still doesn't seem to work. I've tried it on a few different numbers and it's\
    \ returning TRUE when it should be returning FALSE for right_angle_triangle(2,\
    \ 3, 4). I know there are a number of ways to do this, but this was my first thought\
    \ to see if I could get it working without using php functions.\n<|/ c |>\n<|\
    \ c |>\n- I've updated my answer to show a working solution.  It passes all of\
    \ the tests I performed with your sample numbers.\n<|/ c |>\n<| c |>\n- You are\
    \ right.  This answer doesn't work correctly.  I've updated my answer to work\
    \ correctly.\n<|/ c |>\n<| a |>\n<code>\n<?php\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfxqak81d.php
    on line 42

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // First check if one side is 0, and if so return false.\n  \
    \  if ($a == 0 || $b == 0 || $c == 0 || $a > $b || $a > $c || $b > $c) {\n   \
    \     return false;\n    }\n\n    // Find the positive area of one triangle and\
    \ another triangle with sides \n    // of length $a and $b.\n    $positiveArea\
    \ = $a + $b;\n    $sideA = abs($a - $positiveArea);\n    $sideB = abs($b - $positiveArea);\n\
    \n    // Find common side length.\n    $commonSideLength = 0;\n    if ($sideA\
    \ < $sideB) {\n        $commonSideLength = $sideA;\n    } else {\n        $commonSideLength\
    \ = $sideB;\n    }\n\n    // Find the longest side of the common side.\n    $longestSide\
    \ = $commonSideLength;\n    if ($commonSideLength > $b) {\n        $longestSide\
    \ = $b;\n    }\n\n    // Return if common side length is greater than the longest\
    \ side of one \n    // triangle.\n    if ($commonSideLength > $longestSide) {\n\
    \        return false;\n    }\n\n    // If the area of both triangles is greater\
    \ than the common side length,\n    // then return true.\n    if (($positiveArea\
    \ > $commonSideLength) && ($positiveArea > $longestSide)) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t8fnoiw.php:58\n\
    Stack trace:\n#0 /tmp/tmp9t8fnoiw.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp9t8fnoiw.php\
    \ on line 58\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if ($a == 0 || $b == 0 || $c == 0) {\n    return 0;\n  }\n  //\
    \ Find all the angles (a, b, c) of the triangle where a, b, and c are the\n  //\
    \ lengths of the sides.\n  $angles = array(\n    atan2($b, $a),\n    atan2($c,\
    \ $b),\n    atan2($c, $a)\n  );\n  // If none of the angles are greater than 90\
    \ degrees, return false.\n  foreach ($angles as $angle) {\n    if ($angle > M_PI)\
    \ {\n      return 0;\n    }\n  }\n  // If all of the angles are between 0 and\
    \ 90 degrees, return true.\n  return true;\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz86m1riz.php:37\n\
    Stack trace:\n#0 /tmp/tmpz86m1riz.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpz86m1riz.php\
    \ on line 37\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n\treturn ($a + $b + $c) == (sqrt(($a * $a) + ($b * $b) + ($c * $c))\
    \ == (sqrt(($a * $a) + ($b * $b) + ($c * $c)) % 360);\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ";" in /tmp/tmp6rnpjp04.php on line
    12

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $deltaA = abs($a - $b); \n    $deltaB = abs($a - $c); \n    $deltaC\
    \ = abs($c - $b); \n    return ($deltaA >= $deltaB && $deltaA >= $deltaC);\n}\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxac_h4m5.php:22\n\
    Stack trace:\n#0 /tmp/tmpxac_h4m5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxac_h4m5.php\
    \ on line 22\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $deltaA = abs($a - $c);\n    $deltaB = abs($b - $c);\n    $deltaC\
    \ = abs($c - $a);\n    $a1 = ($a + $b + $c) / 3;\n    $a2 = ($a - $c - $b) / 3;\n\
    \    $a3 = ($a - $b - $c) / 3;\n    $b1 = ($b + $a + $c) / 3;\n    $b2 = ($b -\
    \ $a - $c) / 3;\n    $b3 = ($b - $c - $a) / 3;\n    $c1 = ($c + $a + $b) / 3;\n\
    \    $c2 = ($c - $a + $b) / 3;\n    $c3 = ($c - $b + $a) / 3;\n    $deltaA1 =\
    \ abs($a1 - $c1);\n    $deltaA2 = abs($a2 - $c1);\n    $deltaA3 = abs($a3 - $c1);\n\
    \    $deltaB1 = abs($b1 - $c2);\n    $deltaB2 = abs($b2 - $c2);\n    $deltaB3\
    \ = abs($b3 - $c2);\n    $deltaC1 = abs($c1 - $a1);\n    $deltaC2 = abs($c2 -\
    \ $a1);\n    $deltaC3 = abs($c3 - $a1);\n    $x1 = min($a1, $a2, $a3);\n    $x2\
    \ = max($a1, $a2, $a3);\n    $y1 = min($b1, $b2, $b3);\n    $y2 = max($b1, $b2,\
    \ $b3);\n    $z1 = min($c1, $c2, $c3);\n    $z2 = max($c1, $c2, $c3);\n    return\
    \ $x1 == $x2 && $y1 == $y2 && $z1 == $z2;\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dmkjzfx.php:46\n\
    Stack trace:\n#0 /tmp/tmp3dmkjzfx.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp3dmkjzfx.php\
    \ on line 46\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $area = $a * $b;\n  $angle = (float)abs(($b * $c) - $area);\n \
    \ return ($area > $angle);\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5lhkl6h.php:25\n\
    Stack trace:\n#0 /tmp/tmpc5lhkl6h.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc5lhkl6h.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $deltaA = $a - $b;\n    $deltaB = $b - $c;\n    $deltaC = $c\
    \ - $a;\n    return $deltaA * $deltaB >= 0 &&\n    $deltaB * $deltaC >= 0 &&\n\
    \    $deltaC * $deltaA >= 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_scp9844.php:25\n\
    Stack trace:\n#0 /tmp/tmp_scp9844.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_scp9844.php\
    \ on line 25\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if($a == 0 || $b == 0 || $c == 0)\n        return false;\n  \
    \  return ($a + $b > $c) ? $a + $b - $c : $b + $c - $a;\n}\n\n$a = 1;\n$b = 3;\n\
    $c = 5;\n\n$triangles = $a + $b + $c;\n\n$num_tests = 25;\n$num_correct = 0;\n\
    $num_trials = 0;\n$success_rate = 0;\nfor($i = 0; $i < $num_tests; $i++) {\n \
    \   $num_trials++;\n    // Test all possible angles\n    $a = mt_rand(1,$triangles/2);\n\
    \    $b = mt_rand($a+1,$triangles/2);\n    $c = mt_rand($b+1,$triangles/2);\n\
    \    \n    if(right_angle_triangle($a,$b,$c) == true)\n        $num_correct++;\n\
    }\n\n$success_rate = ($num_correct/$num_trials);\necho 'The probability that a\
    \ triangle has the correct triangle properties is '.$success_rate.'.';\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 4.5 to int loses precision\
    \ in /tmp/tmpg1roovlp.php on line 30\n\nDeprecated: Implicit conversion from float\
    \ 4.5 to int loses precision in /tmp/tmpg1roovlp.php on line 31\n\nDeprecated:\
    \ Implicit conversion from float 4.5 to int loses precision in /tmp/tmpg1roovlp.php\
    \ on line 32\n\nFatal error: Uncaught ValueError: mt_rand(): Argument #2 ($max)\
    \ must be greater than or equal to argument #1 ($min) in /tmp/tmpg1roovlp.php:32\n\
    Stack trace:\n#0 /tmp/tmpg1roovlp.php(32): mt_rand(5, 4.5)\n#1 {main}\n  thrown\
    \ in /tmp/tmpg1roovlp.php on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a === $b || $a === $c) {\n        return true;\n    }\n\
    \    if ($b === $c) {\n        return true;\n    }\n    // Normalize the vector\n\
    \    $d = $c - $a;\n    $d = sqrt($d);\n    $cb = $c / $b;\n    $ac = $a / $c;\n\
    \    $db = $b / $c;\n    // If the two vectors have a 90 degree angle or 180 degree\n\
    \    if ($db > $ac) {\n        // Calculate the smaller of the two angles\n  \
    \      $theta1 = pi() / 2;\n        $theta2 = pi() * 3 / 2;\n    } else {\n  \
    \      $theta1 = pi() * 3 / 2;\n        $theta2 = pi() / 2;\n    }\n    // The\
    \ two angles must be equal\n    if ($a < $c) {\n        $theta1 += pi();\n   \
    \ }\n    if ($b < $c) {\n        $theta2 += pi();\n    }\n    // Calculate the\
    \ difference of the two angles\n    $delta1 = $theta1 - $theta2;\n    // The two\
    \ angles must differ by less than 45 degree\n    if (abs($delta1) > pi() / 2)\
    \ {\n        return true;\n    }\n    // Normalize the vector\n    $d = $c / $a;\n\
    \    $d = sqrt($d);\n    $cb = $b / $a;\n    $ac = $c / $a;\n    $db = $c / $b;\n\
    \    // If the two vectors have a 90 degree angle or 180 degree\n    if ($db >\
    \ $ac) {\n        // Calculate the smaller of the two angles\n        $theta1\
    \ = pi() / 2;\n        $theta2 = pi() * 3 / 2;\n    } else {\n        $theta1\
    \ = pi() * 3 / 2;\n        $theta2 = pi() / 2;\n    }\n    // The two angles must\
    \ be equal\n    if ($c < $a) {\n        $theta1 += pi();\n    }\n    if ($c <\
    \ $b) {\n        $theta2 += pi();\n    }\n    // Calculate the difference of the\
    \ two angles\n    $delta1 = $theta1 - $theta2;\n    // The two angles must differ\
    \ by less than 45 degree\n    if (abs($delta1) > pi() / 2) {\n        return true;\n\
    \    }\n    // Now just calculate the angle between them\n    $theta1 = atan2($db,\
    \ $ac);\n    $theta2 = atan2(-$db, $ac);\n    $theta3 = atan2($cb, $db);\n   \
    \ $theta4 = atan2(-$cb, $db);\n    // The two angles must be equal\n    if (abs($theta1)\
    \ > pi() / 2) {\n        return true;\n    }\n    // Now just calculate the angle\
    \ between them\n    $theta5 = atan2($db, $cb);\n    $theta6 = \nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpn60kwpc8.php on line 86

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $b || $b > $c) {\n        return false;\n    }\n   \
    \ if ($a > $c) {\n        $c1 = $c;\n        $c2 = $b;\n        $c3 = $a;\n  \
    \  } else {\n        $c1 = $b;\n        $c2 = $c;\n        $c3 = $a;\n    }\n\n\
    \    $n1 = $c2 - $a; \n    $n2 = $c3 - $a; \n    $n3 = $b - $c; \n    $n4 = $c3\
    \ - $b; \n    $n5 = $c2 - $c; \n    $n6 = $n5; \n\n    if ($n1 == 0) {\n     \
    \   if ($n2 == 0) {\n            if ($n3 == 0) {\n                return true;\n\
    \            }\n            return false;\n        }\n        return false;\n\
    \    }\n    $m = ($n1 * $n4 + $n2 * $n5 + $n3 * $n6) / ($n1 + $n2 + $n3);\n  \
    \  $u = $n4 / $n1;\n    $v = ($n3 * $n4 + $n2 * $n6) / $n1;\n    return ($m >=\
    \ 0.0);\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_vbcqoe.php:52\n\
    Stack trace:\n#0 /tmp/tmp3_vbcqoe.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp3_vbcqoe.php\
    \ on line 52\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b < $c && $a + $c < $b + $a && $b + $c < $a + $b);\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxcyany_.php:20\n\
    Stack trace:\n#0 /tmp/tmpfxcyany_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfxcyany_.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // Check that the triangle has three sides\n  if($a + $b + $c !=\
    \ 3) return false; // not a triangle\n\n  // Find any angles that are not 90 degree\n\
    \  $angles = range(0, 90, 180);\n  foreach($angles as $angle) {\n    // Find the\
    \ number of sides clockwise\n    $sides = $a + $b + $c;\n    $ccw = 0;\n    for($i\
    \ = 0; $i < $sides; $i++) {\n      if($c >= $sides - $i || $b <= $i) continue;\n\
    \      $ccw++;\n    }\n\n    // If all sides are clockwise, return the triangle\n\
    \    if($ccw == 0) return true;\n  }\n\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0by7w3vv.php:38\n\
    Stack trace:\n#0 /tmp/tmp0by7w3vv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0by7w3vv.php\
    \ on line 38\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  $d=$b-$c;\n  $e=$a-$c;\n  $f=$c-$a;\n  $g=$c-$b;\n\n  if ($g !=\
    \ 0) {\n    return ($d >= 0 && $e > 0 && $f < 0 && $g >= 0);\n  }\n\n  if ($d\
    \ > 0) {\n    return ($d >= 0 && $e > 0 && $f < 0);\n  }\n\n  if ($e > 0) {\n\
    \    return ($d < 0 && $e >= 0 && $f >= 0);\n  }\n\n  return ($d < 0 && $e < 0\
    \ && $f >= 0);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvhviukc.php:36\n\
    Stack trace:\n#0 /tmp/tmpcvhviukc.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcvhviukc.php\
    \ on line 36\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a + $b >= $c) {\n        if ($a >= $b + $c) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgctz3ln8.php:27\n\
    Stack trace:\n#0 /tmp/tmpgctz3ln8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgctz3ln8.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if (abs($a - $b) <= 1 && abs($a - $c) <= 1 && abs($b - $c) <=\
    \ 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6epeze7.php:24\n\
    Stack trace:\n#0 /tmp/tmpi6epeze7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi6epeze7.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a_b = sqrt(pow($a, 2) + pow($b, 2));\n    $c_b = sqrt(pow($c,\
    \ 2) + pow($b, 2));\n    $b_a = sqrt(pow($b, 2) + pow($a, 2));\n    \n    if ($a_b\
    \ == $b_a && $c_b == $a_b)\n        return 1;\n    else\n        return 0;\n}\n\
    \nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn2_pwai.php:27\n\
    Stack trace:\n#0 /tmp/tmpmn2_pwai.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmn2_pwai.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a + $b > $c) {\n        return $a > $c;\n    }\n    else\
    \ if ($a + $b < $c) {\n        return $b > $c;\n    }\n    else if ($a > $b) {\n\
    \        return $a > $c || $b > $c;\n    }\n    else if ($b > $c) {\n        return\
    \ $b > $c || $a > $c;\n    }\n    else {\n        return $c > $a || $b > $a;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j55t5ym.php:33\n\
    Stack trace:\n#0 /tmp/tmp_j55t5ym.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_j55t5ym.php\
    \ on line 33\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $a = abs($a); // $a is the length of the side 1\n    $b = abs($b);\
    \ // $b is the length of the side 2\n    $c = abs($c); // $c is the length of\
    \ the side 3\n    // return true if all sides are equal\n    if ($a == $b && $b\
    \ == $c) {\n        return true;\n    }\n    // else if all sides are not equal\n\
    \    // return false if they are equal\n    if ($a != $b || $b != $c) {\n    \
    \    return false;\n    }\n    // else if both sides are equal\n    // return\
    \ false if either is 90\n    if ($a == $b || $b == $c) {\n        return $a ==\
    \ $c;\n    }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsauqlt3b.php:36\n\
    Stack trace:\n#0 /tmp/tmpsauqlt3b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsauqlt3b.php\
    \ on line 36\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $b && $a > $c) return true;\n    if ($b > $c && $b >\
    \ $a) return true;\n    if ($c > $a && $c > $b) return true;\n    return false;\n\
    }\n\n/**\n * Check if the passed array is a valid matrix.\n * Return true if the\
    \ passed array is a valid matrix.\n * \n * @param  array  the matrix to check\n\
    \ * @return bool  true if the passed array is a valid matrix.\n */\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgn2t8osb.php:31\n\
    Stack trace:\n#0 /tmp/tmpgn2t8osb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgn2t8osb.php\
    \ on line 31\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a > $b && $a > $c) {\n        if ($c > $b) {\n         \
    \   return true;\n        }\n    } else {\n        if ($b > $c) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ajdu8pv.php:29\n\
    Stack trace:\n#0 /tmp/tmp1ajdu8pv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1ajdu8pv.php\
    \ on line 29\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a == $b) return true;\n    if ($a > $b) return false;\n\
    \    if ($b > $c) return false;\n    if ($c == $a) return true;\n    if ($a >\
    \ $c) {\n        return ($b <= $c ? false : true);\n    }\n    return ($b <= $c\
    \ ? true : false);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bxi2g2o.php:27\n\
    Stack trace:\n#0 /tmp/tmp5bxi2g2o.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5bxi2g2o.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  // Get sides\n  $sa = $b - $a;\n  $sb = $c - $a;\n  $sc = $a -\
    \ $c;\n\n  // Check if all are equal.\n  if ($sa === $sb === $sc) {\n    return\
    \ true; \n  }\n\n  // If all three are equal, check if one is an angle in between\
    \ others\n  if (($sa >= 0) && ($sc >= 0) && ($sb >= 0)) {\n    $ang = atan2($sc,\
    \ $sb);\n    if (($sa < $sc) && ($sb < $sc)) {\n      return (0 <= $ang) && ($ang\
    \ < pi()); \n    }\n    else {\n      return (pi() < $ang) && ($ang < pi()); \n\
    \    }\n  }\n\n  // At this point, the sides are parallel to the equator\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "===" in /tmp/tmpx8llz93v.php on line
    18

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    \n    if ($a * $b > $a * $c) {\n        if ($b * $c > $a * $b)\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    } else {\n        if ($a * $c > $a * $b) {\n            return\
    \ false;\n        } else {\n            return true;\n        }\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfzgouqd.php:32\n\
    Stack trace:\n#0 /tmp/tmpsfzgouqd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsfzgouqd.php\
    \ on line 32\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a == $b) \n    {\n        if ($c <= $a)\n        {\n   \
    \         return true;\n        }\n        else if ($c >= $b)\n        {\n   \
    \         return false;\n        }\n    }\n    else \n    {\n        if ($a >\
    \ $c || $a > $b)\n        {\n            return false;\n        }\n        else\
    \ \n        {\n            if ($b > $c)\n            {\n                return\
    \ true;\n            }\n            else\n            {\n                return\
    \ ($a > $b) && ($b > $c) && ($c > $a);\n            }\n        }\n    }\n}\n\n\
    /**\n * Find the area of a triangle given its sides\n * \n * Example:\n * >>>\
    \ triangle_area(4, 5, 6)\n * 5.0\n */\nfunction candidate(...$args) {\n    return\
    \ right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 6, 8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 24, 25) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 5, 7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeblnvvg.php:55\n\
    Stack trace:\n#0 /tmp/tmpfeblnvvg.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpfeblnvvg.php\
    \ on line 55\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Write your code here\n    if($a==$b || $a==$c || $b==$c)\n\
    \    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_oqvdp2c.php:28\n\
    Stack trace:\n#0 /tmp/tmp_oqvdp2c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_oqvdp2c.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $d = ($a + $b + $c)/2.0;\n    $s = (sqrt($a*$a + $b*$b + $c*$c))\
    \ - ($a*$b*$c)/2.0;\n    return $s < 0.0; \n}\n</code>\n<|/ a dscore=0 tags=geometry,php,math\
    \ |>\n<| a |>\nIf your aim is to find if a triangle can be made with 3 edges,\
    \ you can do as below :\n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9olryp3w.php
    on line 16

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // write your code here\n    $d = $a + $b + $c; // total sum\n\
    \    $det = $d * ($d - $a) * ($d - $b) * ($d - $c); // determinant\n    return\
    \ $det > 0;\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6m2qjbo.php:23\n\
    Stack trace:\n#0 /tmp/tmph6m2qjbo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph6m2qjbo.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b == $c + $a) && ($a + $c == $b + $c) && ($a +\
    \ $b == $c + $a);\n}\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvz7q3huq.php:20\n\
    Stack trace:\n#0 /tmp/tmpvz7q3huq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvz7q3huq.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    var_dump($a, $b, $c);\n    if ($a>$b && $a>$c) {\n        if\
    \ ($b>$c) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n    } else if ($b>$c) {\n        if ($a>$c) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    } else if\
    \ ($c>$a) {\n        if ($b>$a) {\n            return true;\n        } else {\n\
    \            return false;\n        }\n    } else {\n        return false;\n \
    \   }\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(3)\nint(4)\nint(5)\nint(1)\nint(2)\nint(3)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpj4errgne.php:41\nStack trace:\n#0 /tmp/tmpj4errgne.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj4errgne.php on line 41\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = abs($b);\n    $ac = abs($c);\n    $bc = abs($a - $c);\n\
    \    return ($ab * $ac - $bc * $ab < 0.0000000001);\n}\n\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgtyf7iao.php:23\n\
    Stack trace:\n#0 /tmp/tmpgtyf7iao.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgtyf7iao.php\
    \ on line 23\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ra = (float)$a;\n    $rb = (float)$b;\n    $rc = (float)$c;\n\
    \    // check if angle is right\n    if ($a > $c && $b > $c){\n        return\
    \ false;\n    }\n    // check which one is bigger\n    if ($a > $b){\n       \
    \ $min = $a;\n        $max = $b;\n    } else {\n        $min = $b;\n        $max\
    \ = $a;\n    }\n    // check if angle is right\n    if ($c > $max && $c > $min){\n\
    \        return false;\n    }\n    // check which one is bigger\n    if ($c >\
    \ $min){\n        $min = $c;\n        $max = $c;\n    } else {\n        $min =\
    \ $c;\n        $max = $c;\n    }\n    // check which one is bigger\n    if ($min\
    \ > $max){\n        $min = $max;\n        $max = $max;\n    }\n    // check if\
    \ max and min are same\n    if ($min == $max){\n        return false;\n    }\n\
    \    // return true if min and max are same\n    if ($min == $ra){\n        return\
    \ true;\n    }\n    // if one is 90 degree, return true\n    if ($min == $rb){\n\
    \        return true;\n    }\n    // if two are 90, return false\n    if ($min\
    \ == $rc){\n        return false;\n    }\n}\n</code>\n<|/ a |>\n<| c |>\nYou should\
    \ also review your answer to avoid downvotes. Please provide an explanation why\
    \ your solution works and how it works.\n<|/ c |>\n<| c |>\nThank you, this answer\
    \ was helpful for me. I've written this myself, but I'd like to add the source\
    \ for your algorithm: https://stackoverflow.com/questions/6345580/determine-whether-a-given-line-segment-intersects-a-right-angled-triangle\n\
    <|/ c |>\n<| a tags=php dscore=0 |>\nYou can use this code. Here I have used the\
    \ same algorithm as mentioned in above comment by Karl-Erik Lefebvre\n<code>\n\
    $a = $_POST['a1'];\n$b = $_POST['b1'];\n$c = $_POST['c1'];\n$d = $_POST['d1'];\n\
    $e = $_POST['e1'];\n$f = $_POST['f1'];\n\nfunction candidate(...$args) {\n   \
    \ return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpg2axtt8r.php
    on line 61

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n  if((($a - $c) * ($a + $c)) - (($b - $c) * ($b + $c)) < 0)\n   \
    \ {\n      return TRUE;\n    }\n  else\n    {\n      return FALSE;\n    }\n}\n\
    function candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnw2_qjky.php:27\n\
    Stack trace:\n#0 /tmp/tmpnw2_qjky.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnw2_qjky.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $ab = $b-$a;\n    $cd = $c-$d;\n    $ac = $c-$a;\n    if($ab==$cd){\n\
    \        if($ab==$ac){\n            return $ab;\n        }else{\n            return\
    \ $ac;\n        }\n    }else{\n        if($ab==0){\n            return true;\n\
    \        }else{\n            if($cd==0){\n                return false;\n    \
    \        }else{\n                return (($ac+$ab)/$ab)>($cd/($ac+$ab));\n   \
    \         }\n        }\n    }\n}\n</code>\n<|/ a |>\n<| a |>\nThe answer by Michael\
    \ B works quite well, but i found that my code has a few bugs.\n1) This one was\
    \ fixed but didn't solve the problem as i still can't get the function to return\
    \ true.\n<code>\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3ghla4kw.php
    on line 33

    '
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $delta = $b-$a;\n    $distanceSqr = $delta * $delta;\n    $delta2\
    \ = $c-$b;\n    $distance2Sqr = $delta2 * $delta2;\n    $distanceSqr = $distanceSqr\
    \ + $distance2Sqr;\n    $angle = atan2($delta2, $delta);\n    $angle2 = $angle\
    \ - M_PI;\n    $angle3 = $angle2 + M_PI;\n    return $a >= $c && $a <= $b && ($angle2\
    \ >= $angle || $angle2 <= $angle3) && $distanceSqr/($distanceSqr+$distance2Sqr)==1;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4xyl_ts.php:28\n\
    Stack trace:\n#0 /tmp/tmpr4xyl_ts.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr4xyl_ts.php\
    \ on line 28\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    \n    $deltaA = $b - $a;\n    $deltaC = $c - $b;\n    $deltaB\
    \ = $c - $a;\n    $a1 = sqrt(pow(abs($deltaA), 2) + pow(abs($deltaC), 2));\n \
    \   $b1 = sqrt(pow(abs($deltaA), 2) + pow(abs($deltaB), 2));\n    $c1 = sqrt(pow(abs($deltaB),\
    \ 2) + pow(abs($deltaC), 2));\n    \n    return ($a1 == $b1 && $a1 == $c1);\n\
    }\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq62kgr5l.php:27\n\
    Stack trace:\n#0 /tmp/tmpq62kgr5l.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq62kgr5l.php\
    \ on line 27\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    // Check arguments: all must be positive.\n    if ($a <= 0 ||\
    \ $b <= 0 || $c <= 0) {\n        return false;\n    }\n    // If any of a,b,c\
    \ is zero, there is no right-angle triangle.\n    if ($a == 0 || $b == 0 || $c\
    \ == 0) {\n        return false;\n    }\n    // If a+b+c is greater than 180 degree,\
    \ there is no right-angle triangle.\n    if ($a + $b + $c > 360) {\n        return\
    \ false;\n    }\n    // Calculate the sum of angles.\n    $sa = $a + $b;\n   \
    \ $sc = $a + $c;\n    $sb = $b + $c;\n    // If the sum of the angles is greater\
    \ than 180 degree, there is no right-angle triangle.\n    if ($sa + $sc > 360)\
    \ {\n        return false;\n    }\n    // If the sum of the angles is greater\
    \ than 180, there is another right-angle\n    // triangle. Calculate the ratio\
    \ of sa and sb.\n    $r1 = $sa / $sb;\n    // If the ratio of sa and sb is greater\
    \ than 90, there is another right-angle triangle.\n    if ($r1 > 1) {\n      \
    \  return true;\n    }\n    // If the ratio of sa and sb is less than 90, the\
    \ two angles do not form a right-angle\n    // triangle.\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdu8zjagm.php:49\n\
    Stack trace:\n#0 /tmp/tmpdu8zjagm.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpdu8zjagm.php\
    \ on line 49\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    $angles = array(\n        \"right\" => abs($a),\n        \"90\"\
    \ => abs($b)\n    );\n    return isset($angles[\"right\"]) && isset($angles[\"\
    90\"]);\n}\nfunction candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 2, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 24, 25) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 5, 7)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 12, 13) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 17) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(48,\
    \ 55, 73) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 1, 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 10) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4qsgffz.php:24\n\
    Stack trace:\n#0 /tmp/tmps4qsgffz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmps4qsgffz.php\
    \ on line 24\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    return ($a + $b > $c || $a + $c > $b || $b + $c > $a);\n}\nfunction\
    \ candidate(...$args) {\n    return right_angle_triangle(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5x9x2n2j.php:20\n\
    Stack trace:\n#0 /tmp/tmp5x9x2n2j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5x9x2n2j.php\
    \ on line 20\n"
  timestamp: 1659978468
- exit_code: 255
  program: "<?php\n// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n// sides form a right-angled triangle, false otherwise.\n// A\
    \ right-angled triangle is a triangle in which one angle is right angle or \n\
    // 90 degree.\n// Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n//\
    \ >>> right_angle_triangle(1, 2, 3)\n// false\nfunction right_angle_triangle($a,\
    \ $b, $c) {\n    if ($a === $b && $a === $c) {\n        return true;\n    }\n\
    \    \n    $ab = abs($a-$b);\n    $bc = abs($c-$b);\n    $ac = abs($a-$c);\n \
    \   \n    $is_right_angle = 0;\n    \n    if ($ab == $bc && $ac == $ac) {\n  \
    \      $is_right_angle = 1;\n    } elseif ($ab == $ac) {\n        $is_right_angle\
    \ = 2;\n    }\n    return ($is_right_angle == 3);\n}\nfunction candidate(...$args)\
    \ {\n    return right_angle_triangle(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 4, 5) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4nntm3or.php:34\n\
    Stack trace:\n#0 /tmp/tmp4nntm3or.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp4nntm3or.php\
    \ on line 34\n"
  timestamp: 1659978468

language: php
name: HumanEval_27_flip_case
results:
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\t$flipped = \"\";\n\t$length = strlen($string);\n\tfor\
    \ ($i=0; $i < $length; $i++) {\n\t\t$flipped .= ucfirst(mb_strtolower($string[$i]));\n\
    \t}\n\treturn $flipped;\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtolower()\
    \ in /tmp/tmp62ypwq1g.php:9\nStack trace:\n#0 /tmp/tmp62ypwq1g.php(15): flip_case('Hello!')\n\
    #1 /tmp/tmp62ypwq1g.php(20): candidate('Hello!')\n#2 /tmp/tmp62ypwq1g.php(24):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp62ypwq1g.php on line 9\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/./u', '\\U\\0*',\
    \ strtolower($string)));\n}\n</code>\n<|/ a tags=preg-replace,php,regex |>\n<|\
    \ c |>\nThis looks like a fun project. One question, what does `u` do in this\
    \ context?\n<|/ c |>\n<| c |>\n: It turns UTF8 characters into a regular string\
    \ with the characters converted to upper case. It also converts uppercase letters\
    \ into a regular string, and so on. I added an example.\n<|/ c |>\n<| c |>\n:\
    \ Please don't forget to accept the answer if it solved your problem. [Here's\
    \ why](http://stackoverflow.com/faq#howtoask).\n<|/ c |>\n<| c |>\n: You asked\
    \ a question on how to do this with regular expressions. I gave you a regular\
    \ expression for exactly that. You asked how to do this, and I gave you an answer.\
    \ That's how Stack Overflow works: If you have another question, ask another question.\
    \ If you have a better answer, accept that answer. Believe me.\n<|/ c |>\n<| c\
    \ |>\nI asked because I wanted to learn regular expressions, not because I wanted\
    \ to know how Stack Overflow works. And I provided a very good answer that worked\
    \ well for me, so I accepted it.\n<|/ c |>\n<| a dscore=2 |>\nYou just need to\
    \ use preg_replace.\n<code>\n$foo = preg_replace('/[a-z]/i', 'u\\L\\0*', $foo);\n\
    </code>\nTo replace uppercase letters, just add a-z to the expression and u to\
    \ the replacement string.\nThe \\L backreference is a \"look behind for letters\"\
    , and \\0 means that a letter was matched and not a literal character like 'u',\
    \ so \\0 must be used instead of \\L in the replacement string.\n<|/ a tags=preg-replace,php,regex\
    \ |>\n<| c |>\nThis does not work with the original example. Upper case letters\
    \ are still lower cased.\n<|/ c |>\n<| c |>\n: Your question asked for a regular\
    \ expression.\n<|/ c |>\n<| c |>\nHaha, I misunderstood the question. Yes, it\
    \ asked for a regular expression. Sorry.\n<|/ c |>\n<| c |>\n, nope - this still\
    \ works fine. Try it out yourself, just copy the code into your PHP script and\
    \ run it.\n<|/ c |>\n<| c |>\n: Oh, you're \nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmppowxtta0.php
    on line 8

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $lowercase = strtolower($string);\n  $uppercase = strtoupper($string);\n\
    \  return $lowercase === $uppercase ? $lowercase : $uppercase;\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_vod2md.php:17\n\
    Stack trace:\n#0 /tmp/tmpy_vod2md.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpy_vod2md.php\
    \ on line 17\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, array(\"a\" => \"\
    A\", \"b\" => \"B\", \"c\" => \"C\", \"d\" => \"D\", \"e\" => \"E\", \"f\" =>\
    \ \"F\", \"g\" => \"G\", \"h\" => \"H\", \"i\" => \"I\", \"j\" => \"J\", \"k\"\
    \ => \"K\", \"l\" => \"L\", \"m\" => \"M\", \"n\" => \"N\", \"o\" => \"O\", \"\
    p\" => \"P\", \"q\" => \"Q\", \"r\" => \"R\", \"s\" => \"S\", \"t\" => \"T\",\
    \ \"u\" => \"U\", \"v\" => \"V\", \"w\" => \"W\", \"x\" => \"X\", \"y\" => \"\
    Y\", \"z\" => \"Z\")));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y_yucyp.php:14\n\
    Stack trace:\n#0 /tmp/tmp1y_yucyp.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp1y_yucyp.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtoupper(strtr($string, array(\n    'a' =>\
    \ 'A',\n    'b' => 'B',\n    'c' => 'C',\n    'd' => 'D',\n    'e' => 'E',\n \
    \   'f' => 'F',\n    'g' => 'G',\n    'h' => 'H',\n    'i' => 'I',\n    'j' =>\
    \ 'J',\n    'k' => 'K',\n    'l' => 'L',\n    'm' => 'M',\n    'n' => 'N',\n \
    \   'o' => 'O',\n    'p' => 'P',\n    'q' => 'Q',\n    'r' => 'R',\n    's' =>\
    \ 'S',\n    't' => 'T',\n    'u' => 'U',\n    'v' => 'V',\n    'w' => 'W',\n \
    \   'x' => 'X',\n    'y' => 'Y',\n    'z' => 'Z',\n  )));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpit7otkiz.php:41\n\
    Stack trace:\n#0 /tmp/tmpit7otkiz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpit7otkiz.php\
    \ on line 41\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $lowercase = strtolower($string);\n    $uppercase\
    \ = strtoupper($string);\n    return $uppercase . $lowercase;\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbx_7rftx.php:17\n\
    Stack trace:\n#0 /tmp/tmpbx_7rftx.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpbx_7rftx.php\
    \ on line 17\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(str_replace($string, '', $string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo4eyztz.php:14\n\
    Stack trace:\n#0 /tmp/tmpbo4eyztz.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpbo4eyztz.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\treturn preg_replace_callback('/./u', function($matches)\
    \ {\n\t\treturn strtoupper($matches[0]);\n\t}, $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhywfhdk.php:17\n\
    Stack trace:\n#0 /tmp/tmpqhywfhdk.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqhywfhdk.php\
    \ on line 17\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/./i', $string, 1));\n\
    }\n</code>\n<|/ a tags=php,string |>\n<| c |>\nWhile this code snippet may solve\
    \ the question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| c |>\nThanks for the feedback. I added an explanation,\
    \ hope this helps.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmplfgtdf67.php
    on line 8

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper($string);\n}\n</code>\n<|/ a dscore=4\
    \ |>\n<| a |>\n<code>\n$var = str_replace(array(\"a\",\"A\",\"b\",\"B\",\"c\"\
    ,\"C\",\"d\",\"D\",\"e\",\"E\",\"f\",\"F\",\"g\",\"G\",\"h\",\"H\",\"i\",\"I\"\
    ,\"j\",\"J\",\"k\",\"K\",\"l\",\"L\",\"m\",\"M\",\"n\",\"N\",\"o\",\"O\",\"p\"\
    ,\"P\",\"q\",\"Q\",\"r\",\"R\",\"s\",\"S\",\"t\",\"T\",\"u\",\"U\",\"v\",\"V\"\
    ,\"w\",\"W\",\"x\",\"X\",\"y\",\"Y\",\"z\",\"Z\",\"0\",\"1\",\"2\",\"3\",\"4\"\
    ,\"5\",\"6\",\"7\",\"8\",\"9\",\"!\",\"#\",\"$\",\"%\",\"&\",\"(\",\")\",\"*\"\
    ,\"+\",\",\",\"-\",\"_\",\"=\",\"{\",\"}\",\"[\",\"]\",\"^\",\"~\",\"`\",\"'\"\
    ,\"~\",\"\u2013\",\".\",\"\xB4\",\"/\",\" \",\"\\\\\",\"'\",\"-\",\"\u2013\",\"\
    $\",\":\",\"'\",\";\",\",\",\".\",\"!\",\"\xAF\",\"\u2015\",\"\u2015\",\"\u2015\
    \",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\"\
    ,\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\u2015\",\"\uFFFD\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjnev_7rp.php
    on line 8

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = str_ireplace(\n        array_map('strtoupper',\
    \ str_split($string)),\n        array_map('strtolower', str_split($string)),\n\
    \        $string\n    );\n    return $flipped;\n}\n$flipped_string = flip_case($string);\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $string in /tmp/tmphmfb9otk.php on line 13\n\
    \nDeprecated: str_split(): Passing null to parameter #1 ($string) of type string\
    \ is deprecated in /tmp/tmphmfb9otk.php on line 7\n\nDeprecated: str_split():\
    \ Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmphmfb9otk.php\
    \ on line 8\n\nDeprecated: str_ireplace(): Passing null to parameter #3 ($subject)\
    \ of type array|string is deprecated in /tmp/tmphmfb9otk.php on line 9\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmphmfb9otk.php:21\nStack trace:\n\
    #0 /tmp/tmphmfb9otk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphmfb9otk.php\
    \ on line 21\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(strtolower($string), \n        array('\xC0\
    '=>'A', '\xC1'=>'A', '\xC2'=>'A', '\xC3'=>'A', '\xC4'=>'A', '\xC5'=>'A', '\xC6\
    '=>'A', '\xC7'=>'C', '\xC8'=>'E', '\xC9'=>'E',\n             '\xCA'=>'E', '\xCB\
    '=>'E', '\xCC'=>'I', '\xCD'=>'I', '\xCE'=>'I', '\xCF'=>'I', '\xD1'=>'N', '\xD2\
    '=>'O', '\xD3'=>'O', '\xD4'=>'O',\n             '\xD5'=>'O', '\xD6'=>'O', '\xD8\
    '=>'O', '\xD9'=>'U', '\xDA'=>'U', '\xDB'=>'U', '\xDC'=>'U', '\xDD'=>'Y', '\xDE\
    '=>'B', '\xDF'=>'S'));\n}\n</code>\n<|/ a tags=regex,php,utf-8 |>\n<| c |>\nThanks\
    \ alot, but this would only work for letters A-Z, I need it for all symbols. Any\
    \ suggestions?\n<|/ c |>\n<| c |>\nAh, I see. I updated the answer with the correct\
    \ regular expression for this case.\n<|/ c |>\n<| c |>\nThat's a nice solution.\n\
    <|/ c |>\n<| a dscore=2 |>\nYou may use this regex:\n<code>\n/(^|[\\s])([\\x{0020}-\\\
    x{D7FF}\\x{E000-\\x{FFFD}]{1,2}|[\\x{10000}-\\x{1FFFF}\\x{200000}-\\x{2FFFF}]{1,3}|[\\\
    x{20000}-\\x{2FFFF}]{1,4})(?=[\\s])/iu\n</code>\nRegEx Demo\nRegEx Details:\n\n\
    (^|[\\s]): Match start of string or space or line\n([\\x{0020}-\\x{D7FF}\\x{E000-\\\
    x{FFFD}]{1,2}|[\\x{10000}-\\x{1FFFF}\\x{200000}-\\x{2FFFF}]{1,3}|[\\x{20000}-\\\
    x{2FFFF}]{1,4}): Match all Unicode code points from U+0020 to U+D7FF and U+E000\
    \ to U+FFFD\n(?=[\\s]): Lookahead to ensure that we do not have a space after\
    \ matching character\n<|/ a tags=regex,php,utf-8 |>\n<| c |>\nThanks alot, but\
    \ this \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpst94miwc.php
    on line 11

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $upper = strtoupper($string);\n    $lower = strtolower($string);\n\
    \n    return $lower === $upper ? $string : $lower . $upper;\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9k3fpwmp.php:18\n\
    Stack trace:\n#0 /tmp/tmp9k3fpwmp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9k3fpwmp.php\
    \ on line 18\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(\n        flip_lower($string)\n\
    \    );\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function flip_lower()\
    \ in /tmp/tmp8p0xowty.php:7\nStack trace:\n#0 /tmp/tmp8p0xowty.php(11): flip_case('')\n\
    #1 /tmp/tmp8p0xowty.php(15): candidate('')\n#2 /tmp/tmp8p0xowty.php(20): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8p0xowty.php on line 7\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = \"\";\n\n    for($i = 0; $i < strlen($string);\
    \ $i++) {\n        $c = strtolower($string[$i]);\n        $flipped .= $c;\n  \
    \      if($c != $string[$i]) {\n            $flipped .= strtoupper($string[$i]);\n\
    \        }\n    }\n\n    return $flipped;\n}\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpok61dp40.php:25\n\
    Stack trace:\n#0 /tmp/tmpok61dp40.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpok61dp40.php\
    \ on line 25\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return $string . strtoupper($string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfme2ny0e.php:14\n\
    Stack trace:\n#0 /tmp/tmpfme2ny0e.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpfme2ny0e.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return str_ireplace(\n        array(\n           \
    \ 'abcdefghijklmnopqrstuvwxyz',\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  \
    \      ),\n        array(\n            'nopqrstuvwxyzabcdefghijklm',\n       \
    \     'NQRSTUVWXYZABCDEFGHIJKLM'\n        ),\n        $string\n    );\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zdyy2t_.php:24\n\
    Stack trace:\n#0 /tmp/tmp4zdyy2t_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4zdyy2t_.php\
    \ on line 24\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtolower(strtr($string, array('!' => '!!',\
    \ '?' => '!?')));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkqpdab8.php:14\n\
    Stack trace:\n#0 /tmp/tmprkqpdab8.php(18): test()\n#1 {main}\n  thrown in /tmp/tmprkqpdab8.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = strtolower($string);\n    $string = ucwords($string);\n\
    \    $string = strtoupper($string);\n    return $string;\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\n`ctype_` has problems across non-ASCII character sets, like UTF8.\n\
    <|/ c |>\n<| a tags=php,regex,preg-replace dscore=4 |>\nTry preg_replace\n<code>\n\
    $str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+QWERTYUIOPASDFGHJKLZXCVBNM';\n\
    $str = preg_replace('/[A-Z]/', '_$0', $str);\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ actually turned `aAaBbBcCcDdD` into `aaAaBbBcCcDdD`, it turned `A` into `0_`\
    \ instead of `A`.\n<|/ c |>\n<| a tags=php,regex,preg-replace |>\nHere's a solution\
    \ with no looping.\n<code>\n$str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+QWERTYUIOPASDFGHJKLZXCVBNM';\n\
    $str = preg_replace('/([A-Z])/', strtoupper('\\\\1_'), $str);\n</code>\n<|/ a\
    \ dscore=4 |>\n<| c |>\nThat is nice, but it's not what the original poster asked.\
    \ He said he wants underscores instead of capitals.\n<|/ c |>\n<| c |>\nHe explicitly\
    \ said _\"underscores instead of capitals\"_\n<|/ c |>\n<| c |>\nYes, that's why\
    \ I asked him if he wanted capitals instead of underscores.\n<|/ c |>\n<| c |>\n\
    He said \"preg_replace\" in the title, which is preg_match\n<|/ c |>\n<| c |>\n\
    Ah, yes, I see now. Thank you.\n<|/ c |>\n<| a dscore=3 tags=php,regex,preg-replace\
    \ |>\nTry this:\n<code>\n<?php\n$str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8x1o4z5v.php
    on line 11

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/(.)([A-Z])/', '$1_$2', $string);\n\
    }\n$output = flip_case($str);\n</code>\n<|/ a |>\n<| a tags=uppercase,lowercase,string,php\
    \ |>\nI've written a library for that purpose.\nIf you need a case insensitive\
    \ library, have a look at https://github.com/chriskiesner/case-insensitive\n<code>\n\
    use ChriskieSner\\CaseInsensitive\\Casing;\n\n$input = Casing::toLower('lowercase');\n\
    echo $input; // lowercase\n\n$input = Casing::toUpper('UPPERCASE');\necho $input;\
    \ // uppercase\n\n$input = Casing::toTitle('CamelCase');\necho $input; // Camel\
    \ case\n</code>\n<|/ a dscore=4 |>\n<| a |>\n<code>\n<?php\n$lower = \"hello\"\
    ;\n$upper = strtoupper($lower);\necho $upper . \"<br>\";\n\n$upper = strtolower($lower);\n\
    echo $upper . \"<br>\";\n\n$lower = strtoupper(substr($lower, 0,1));\necho $lower\
    \ . \"<br>\";\n\n$lower = strtolower(substr($lower, 0,1));\necho $lower . \"<br>\"\
    ;\n\n$lower = strtoupper(substr($lower, 0,2));\necho $lower . \"<br>\";\n\n$lower\
    \ = strtolower(substr($lower, 0,2));\necho $lower . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpsqhkh2u7.php
    on line 9

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_ireplace(\n    array(\n      \"a\",\"b\"\
    ,\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\"\
    ,\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"\n    ), \"\
    ZY\", $string);\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxzj2420d.php:17\n\
    Stack trace:\n#0 /tmp/tmpxzj2420d.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpxzj2420d.php\
    \ on line 17\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/(\\w)/', '\\L\\1', $string);\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpds__c_p4.php:14\n\
    Stack trace:\n#0 /tmp/tmpds__c_p4.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpds__c_p4.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return implode('', array_map(function ($char) {\n  \
    \  return mb_strtoupper($char, 'UTF-8');\n  }, explode('', $string)));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator)\
    \ cannot be empty in /tmp/tmpgl6lnleu.php:8\nStack trace:\n#0 /tmp/tmpgl6lnleu.php(8):\
    \ explode('', '')\n#1 /tmp/tmpgl6lnleu.php(12): flip_case('')\n#2 /tmp/tmpgl6lnleu.php(16):\
    \ candidate('')\n#3 /tmp/tmpgl6lnleu.php(21): test()\n#4 {main}\n  thrown in /tmp/tmpgl6lnleu.php\
    \ on line 8\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, ['a'=>'A', 'b'=>'B', 'c'=>'C',\
    \ 'd'=>'D', 'e'=>'E', 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K',\
    \ 'l'=>'L', 'm'=>'M', 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S',\
    \ 't'=>'T', 'u'=>'U', 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z']);\n}\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9czpx1c9.php:15\n\
    Stack trace:\n#0 /tmp/tmp9czpx1c9.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9czpx1c9.php\
    \ on line 15\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_ireplace($string, mb_strtoupper($string),\
    \ mb_strtolower($string));\n}\n</code>\nThe other function I used was preg_replace(),\
    \ which replaces patterns.\n<code>\n<?php\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpp6e7a6sx.php
    on line 8

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return $string . strtolower(substr($string, 1)) . strtoupper(substr($string,\
    \ 2));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflsgyrj1.php:15\n\
    Stack trace:\n#0 /tmp/tmpflsgyrj1.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpflsgyrj1.php\
    \ on line 15\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtoupper(preg_replace('/./e', \"'\", $string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmpffeat8p2.php on line 6\n\nDeprecated:\
    \ strtoupper(): Passing null to parameter #1 ($string) of type string is deprecated\
    \ in /tmp/tmpffeat8p2.php on line 6\n\nWarning: preg_replace(): The /e modifier\
    \ is no longer supported, use preg_replace_callback instead in /tmp/tmpffeat8p2.php\
    \ on line 6\n\nDeprecated: strtoupper(): Passing null to parameter #1 ($string)\
    \ of type string is deprecated in /tmp/tmpffeat8p2.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpffeat8p2.php:14\nStack trace:\n\
    #0 /tmp/tmpffeat8p2.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpffeat8p2.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return str_ireplace(\n        array(\"'\",\n     \
    \       '\"',\n            '-',\n            '_',\n            '.',\n        \
    \    ' '),\n        array(\n            '',\n            '',\n            '',\n\
    \            '',\n            '',\n            ''),\n        $string);\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphv70hr7q.php:28\n\
    Stack trace:\n#0 /tmp/tmphv70hr7q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphv70hr7q.php\
    \ on line 28\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/([a-z])/i', '\\U$1\\E', $string);\n\
    }\n</code>\n<|/ a tags=php,regex |>\n<| c |>\nWhat is the purpose of `\\E` here?\n\
    <|/ c |>\n<| c |>\n`/([a-z])/i` means to match any lowercase letter (`a-z`) and\
    \ replace it with that same letter followed by the character `E` - this turns\
    \ any lowercase letter into upper case. `\\E` means to escape the `E` character\
    \ so it's treated as a literal character.\n<|/ c |>\n<| c |>\n`\\E` is only available\
    \ in PCRE (php), `\\U$1\\E` is available in other languages including javascript,\
    \ java, perl, sed, etc.\n<|/ c |>\n<| c |>\nIf you're using PHP's `preg_replace()`\
    \ (and `\\E` isn't working for you), use `'~([a-z])~iU'` to replace the string\
    \ with its upper case counterpart.\n<|/ c |>\n<| c |>\nThank you! This was exactly\
    \ what I needed to know.\n<|/ c |>\n<| a tags=php,regex |>\nThis is how I would\
    \ do it:\n<code>\n<?php\n\n$string = \"Some text with some stuff to change!\"\
    ;\n\n$string = preg_replace(\"/[a-z]+/i\", \"u$0\", $string);\n\necho $string;\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpdevwzidc.php
    on line 8

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = '';\n    foreach (str_split($string) as\
    \ $char) {\n        $flipped .= (preg_match('/^[a-z]/i', $char) ? strtoupper($char)\
    \ : strtolower($char));\n    }\n    return $flipped;\n}\n</code>\n<|/ a tags=php,string\
    \ dscore=5 |>\n<| c |>\nHappy to see someone else is doing something similar.\
    \ Good job.\n<|/ c |>\n<| c |>\nThe only thing I wanted to add is that you can\
    \ wrap this in a function and call it whenever you need it!\n<|/ c |>\n<| c |>\n\
    It does not consider characters like [\xE9, \xE8, \xEA, \xEE, \xF4, \xFB, \xF9\
    , \xE7] and so on.\n<|/ c |>\n<| c |>\n`array_flip(str_split(strtolower($string)))\
    \ == $string` will work even if you have UTF-8 characters included in your string.\n\
    <|/ c |>\n<| c |>\nThis solution breaks if a string contains a character with\
    \ more than one byte length.\n<|/ c |>\n<| a dscore=5 tags=php,string |>\nTry\
    \ this:\n<code>\n$string = \"hello\";\n$flippedString = str_replace(array('l','e','o'),array('l','e','o'),$string);\n\
    echo $flippedString;\n</code>\n<|/ a |>\n<| c |>\nthis seems the simplest\n<|/\
    \ c |>\n<| c |>\n: Why would you do that? It's basically the same thing as mine.\
    \ He also has to loop the string instead of using strtr\n<|/ c |>\n<| c |>\nIt's\
    \ not the simplest, but it's also the best one.\n<|/ c |>\n<| c |>\nAgreed. As\
    \ I commented on the accepted answer this solution does not consider characters\
    \ like [\xE9, \xE8, \xEA, \xEE, \xF4, \xFB, \xF9, \xE7] and so on.\n<|/ c |>\n\
    <| c |>\nThis works, but is unnecessarily long and complex. It also does not consider\
    \ characters like [\xE9, \xE8, \xEA, \xEE, \xF4, \xFB, \xF9, \xE7] and so on.\n\
    <|/ c |>\n<| a dscore=5 tags=php,string |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3nld1aue.php
    on line 12

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return implode('', array_map('\\U', str_split($string)));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"\\U\" not found or invalid function\
    \ name in /tmp/tmput2bkrbi.php:6\nStack trace:\n#0 /tmp/tmput2bkrbi.php(6): array_map('\\\
    \\U', Array)\n#1 /tmp/tmput2bkrbi.php(9): flip_case('')\n#2 /tmp/tmput2bkrbi.php(13):\
    \ candidate('')\n#3 /tmp/tmput2bkrbi.php(18): test()\n#4 {main}\n  thrown in /tmp/tmput2bkrbi.php\
    \ on line 6\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/(^|)[a-z]/e', 'strtoupper($0)',\
    \ $string);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmp9cr9rhik.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp9cr9rhik.php:14\nStack trace:\n\
    #0 /tmp/tmp9cr9rhik.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9cr9rhik.php\
    \ on line 14\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace(\"/\\B[a-z]/\", \"\\u$0\",\n \
    \       preg_replace(\"/\\B[A-Z]/\", \"$0\",\n            $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnpe3g2h.php:17\n\
    Stack trace:\n#0 /tmp/tmpvnpe3g2h.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpvnpe3g2h.php\
    \ on line 17\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE,\
    \ \"UTF-8\")\n    );\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_convert_case()\
    \ in /tmp/tmpc0oq7phd.php:6\nStack trace:\n#0 /tmp/tmpc0oq7phd.php(11): flip_case('')\n\
    #1 /tmp/tmpc0oq7phd.php(15): candidate('')\n#2 /tmp/tmpc0oq7phd.php(20): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc0oq7phd.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtr($string, array('!' => '!', '?' => '?',\
    \ '-' => '_', '=' => '=',\n      'a' => 'a', 'b' => 'b', 'c' => 'c', 'd' => 'd',\
    \ 'e' => 'e', 'f' => 'f', 'g' => 'g',\n      'h' => 'h', 'i' => 'i', 'j' => 'j',\
    \ 'k' => 'k', 'l' => 'l', 'm' => 'm', 'n' => 'n',\n      'o' => 'o', 'p' => 'p',\
    \ 'q' => 'q', 'r' => 'r', 's' => 's', 't' => 't', 'u' => 'u',\n      'v' => 'v',\
    \ 'w' => 'w', 'x' => 'x', 'y' => 'y', 'z' => 'z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dg82hky.php:19\n\
    Stack trace:\n#0 /tmp/tmp3dg82hky.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3dg82hky.php\
    \ on line 19\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/([a-z]+)/i', '$U\\1', $string);\n\
    }\n</code>\nI believe this should be close to what you were trying to do.  I still\
    \ think your solution is overly complicated though.\n<|/ a dscore=1 |>\n<| a |>\n\
    This would work:\n<code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6vpwsq9g.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return $string\n        . strtoupper(\n          \
    \  str_replace(\n                array(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"\
    ),\n                array(\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\"),\n       \
    \         strtolower($string)\n            )\n        );\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqd_z4_9.php:22\n\
    Stack trace:\n#0 /tmp/tmpjqd_z4_9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjqd_z4_9.php\
    \ on line 22\n"
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(strtolower($string), ucwords($string),\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n}\n</code>\n<|/ a dscore=0 tags=php |>\n<|\
    \ a tags=php |>\nMy version - no functions:\n<code>\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzum920f3.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, [\"a\"=>\"A\", \"b\"=>\"B\"\
    , \"c\"=>\"C\", \"d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"\
    =>\"H\", \"i\"=>\"I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\"\
    , \"n\"=>\"N\", \"o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"\
    =>\"S\", \"t\"=>\"T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\"\
    , \"y\"=>\"Y\", \"z\"=>\"Z\"]);\n}\n\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpre71m1pz.php:15\n\
    Stack trace:\n#0 /tmp/tmpre71m1pz.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpre71m1pz.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return implode(\n        array_map(\n            'strtoupper',\n\
    \            str_split(\n                preg_replace('/([a-z])/i', 'strtoupper(\"\
    $1\")', $string),\n                1\n            )\n        )\n    );\n}\n</code>\n\
    <|/ a tags=php,regex |>\n<| a |>\nThis one should work as long as there are only\
    \ 1 character per word:\n<code>\n$result = preg_replace(\n '/([a-z])/i', \n 'strtoupper(\"\
    $1\")', \n $subject);\n</code>\n<|/ a tags=php,regex dscore=1 |>\n<| a dscore=0\
    \ tags=php,regex |>\nMy Solution is \n<code>\n$str = 'Hello Put the world';\n\
    echo preg_replace('/([a-z])/i', 'strtoupper(\"$1\")', $str);\n</code>\nOutput:\n\
    <code>\nHELL PuT ThE World\n</code>\n<|/ a |>\n<| a tags=php,regex |>\nHere's\
    \ a more \"general\" solution that should work in all cases. It uses mb_strtoupper\
    \ and mb_convert_case. \n<code>\n$string = 'HELLO Put the  world';\n$string =\
    \ mb_strtoupper(mb_convert_case($string, MB_CASE_UPPER, \"UTF-8\"));\n</code>\n\
    Output:\n<code>\nHELLO PUT THE  WORLD\n</code>\n<|/ a dscore=0 |>\n<| a |>\nTry\
    \ this one (it uses \"strtoupper()\" function):\n<code>\n$str = 'Hello world and\
    \ other';\n$str = preg_replace_callback(\n    '/([^a-zA-Z ])/',\n    function($matches)\
    \ {\n        return strtoupper($matches[0]);\n    },\n    $str);\n</code>\n<|/\
    \ a tags=php,regex dscore=0 |>\n<| a tags=php,regex dscore=0 |>\n<code>\n$str=\"\
    Hello Put the world\";\necho preg_replace('/([a-z])/i', 'strtoupper(\"$1\")',\
    \ $str);\n</code>\n<|/ a |>\n<| a |>\nThis code will replace all letters lower\
    \ case with upper case:\n<code>\npreg_replace('/([a-z])/i', 'strtoupper(\"$1\"\
    )', $str);\n</code>\n<|/ a dscore=0 tags=php,regex |>\n<| c |>\nWhile this code\
    \ may answer the question, providing additional context regarding why and/or how\
    \ this code answers the question improves its long-term value.\n<|/ c |>\n<| a\
    \ tags=php,regex dscore=0 |>\n<code>\n$string\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpu_elq657.php
    on line 16

    '
  timestamp: 1660028107
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9a7zr5s.php:15\n\
    Stack trace:\n#0 /tmp/tmpm9a7zr5s.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm9a7zr5s.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, array('!' => '!!',\
    \ '?' => '??', '\\'' => '\\\\\\'', '\"' => '\\\\\"', \"\\n\" => '\\\\n', '#' =>\
    \ '\\\\#', \"'\" => '\\\\\\'', ')' => '\\\\)', ']' => '\\\\]', '[' => '\\\\[',\
    \ '{' => '\\\\{', '}' => '\\\\}'))));\n}\nfunction candidate(...$args) {\n   \
    \ return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 5 does not match '')'' in /tmp/tmpncwa3slo.php
    on line 6

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace(\"/\\B([A-Z])/\", \"$1\" . strtoupper($string[1]),\
    \ $string);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 1 in /tmp/tmpfd5n6dt6.php on line\
    \ 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd5n6dt6.php:15\n\
    Stack trace:\n#0 /tmp/tmpfd5n6dt6.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfd5n6dt6.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9a7zr5s.php:15\n\
    Stack trace:\n#0 /tmp/tmpm9a7zr5s.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm9a7zr5s.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return lcfirst(strtolower($string));\n}\n</code>\n\
    <|/ a tags=uppercase,lowercase,php |>\n<| c |>\nWhy isn't the function case insensitive?\n\
    <|/ c |>\n<| c |>\nBecause `lcfirst()` is case insensitive. See [the manual](http://php.net/manual/en/function.lcfirst.php).\n\
    <|/ c |>\n<| c |>\n`ucfirst()` is not case insensitive\n<|/ c |>\n<| c |>\nNot\
    \ true at all. `ucfirst()` does not affect the uppercase or lowercase of the original\
    \ string.\n<|/ c |>\n<| c |>\n, ucfirst will convert any word into lower case\
    \ but will not convert other characters to lower case.\n<|/ c |>\n<| a tags=uppercase,lowercase,php\
    \ dscore=5 |>\nThe PHP function strtoupper is the best solution for this particular\
    \ problem.\n<code>\n$string = 'Hello';\necho strtoupper($string);\n</code>\n<|/\
    \ a |>\n<| c |>\nI find this the easiest solution. It does not require a case-insensitive\
    \ search and will preserve special characters. Just what I was looking for. Thank\
    \ you.\n<|/ c |>\n<| c |>\nWhat if I do not want to lose special characters? Like\
    \ in the case of having hyphenated words?\n<|/ c |>\n<| c |>\nIf you don't want\
    \ it to be case sensitive, just use the PHP function `ucwords()`.\n<|/ c |>\n\
    <| c |>\nNote that this doesn't handle multibyte characters like Japanese ones\n\
    <|/ c |>\n<| c |>\nI think `strtoupper` only converts the first character to the\
    \ uppercase. After that it fails.\n<|/ c |>\n<| a dscore=5 |>\nThe strtoupper\
    \ function is the best solution for this particular problem. but if you want to\
    \ get first character to upper case or lower case then try this:\n<code>\n$string\
    \ = 'Hello';\necho ucfirst($string);\n\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfzflj1cd.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace_callback('/./',\n    function\
    \ ($match) {\n        return strtoupper($match[0]);\n    },\n    $string);\n}\n\
    </code>\n<|/ a tags=php,replace,string |>\n<| c |>\nGreat - this one has helped\
    \ me solve the same problem I'm having with other text replacement functions I've\
    \ written. Thanks!\n<|/ c |>\n<| a tags=php,replace,string |>\n<code>\n<?php\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpht0ush4a.php
    on line 12

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtolower($string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvvif22n.php:14\n\
    Stack trace:\n#0 /tmp/tmpfvvif22n.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpfvvif22n.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, array_flip(range(0,\
    \ 21))) . strtr($string, array_flip(range(33, 126))));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph51ulkqq.php:15\n\
    Stack trace:\n#0 /tmp/tmph51ulkqq.php(19): test()\n#1 {main}\n  thrown in /tmp/tmph51ulkqq.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return $string[0] = strtolower($string[0]), strtoupper($string[0]),\
    \ strtolower($string[1]);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ",", expecting ";" in /tmp/tmpdkjmadx3.php
    on line 6

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace_callback('/./u', create_function(\n\
    \    '$matches',\n    'return strtoupper($matches[0]);'\n  ), $string);\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function create_function()\
    \ in /tmp/tmpvdl2z6rb.php:6\nStack trace:\n#0 /tmp/tmpvdl2z6rb.php(12): flip_case('')\n\
    #1 /tmp/tmpvdl2z6rb.php(16): candidate('')\n#2 /tmp/tmpvdl2z6rb.php(21): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvdl2z6rb.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/\\B./', '', strtoupper($string));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4y1d0jz.php:15\n\
    Stack trace:\n#0 /tmp/tmpy4y1d0jz.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpy4y1d0jz.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return implode('', array_map(function ($letter) {\n\
    \        return strtoupper($letter);\n    }, $string));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #2 ($array) must\
    \ be of type array, string given in /tmp/tmpkkf0ix43.php:8\nStack trace:\n#0 /tmp/tmpkkf0ix43.php(8):\
    \ array_map(Object(Closure), '')\n#1 /tmp/tmpkkf0ix43.php(11): flip_case('')\n\
    #2 /tmp/tmpkkf0ix43.php(15): candidate('')\n#3 /tmp/tmpkkf0ix43.php(20): test()\n\
    #4 {main}\n  thrown in /tmp/tmpkkf0ix43.php on line 8\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, \n        array('a'=>'A', 'b'=>'B',\
    \ 'c'=>'C', \n            'd'=>'D', 'e'=>'E', 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I',\
    \ 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', \n            'n'=>'N', 'o'=>'O', 'p'=>'P',\
    \ 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V', \n            'w'=>'W',\
    \ 'x'=>'X', 'y'=>'Y', 'z'=>'Z', '1'=>'1', '2'=>'2', '3'=>'3', '4'=>'4', '5'=>'5',\
    \ \n            '6'=>'6', '7'=>'7', '8'=>'8', '9'=>'9', '0'=>'0', '_'=>'_', ','=>'-',\
    \ '.'=>'_', ' '=>'_')\n        );\n}\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_ga85c7.php:20\n\
    Stack trace:\n#0 /tmp/tmpk_ga85c7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpk_ga85c7.php\
    \ on line 20\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = strtolower($string);\n    $string = strtoupper($string);\n\
    \    return $string;\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldcccaqu.php:16\n\
    Stack trace:\n#0 /tmp/tmpldcccaqu.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpldcccaqu.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_convert_case($string, MB_CASE_UPPER, \"\
    UTF-8\");\n}\n</code>\n<|/ a tags=case-sensitive,string,php |>\n<| c |>\n\"*For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.*\"\
    \ - that's pretty much the whole point of the question: \"*Case-folding*\". This\
    \ doesn't answer the question.\n<|/ c |>\n<| c |>\nThe original question did not\
    \ ask about case-folding. This answer was written before the question was edited\
    \ and that fact was not included in the original question.\n<|/ c |>\n<| c |>\n\
    Hence my comment \"*Case-folding*\" :)\n<|/ c |>\n<| c |>\nYou have the wrong\
    \ term. \"Case-folding\" refers to changing an accented character to its non-accented\
    \ equivalent.\n<|/ c |>\n<| c |>\nOh whoops, I misunderstood what you meant by\
    \ case-folding in the original question. I thought you meant case-folding in the\
    \ comments.\n<|/ c |>\n<| a tags=case-sensitive,string,php |>\nI made this little\
    \ function which seems to work.\n<code>\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5xyjzb6_.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(str_replace(\"l\", \"O\", $string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfjagals.php:14\n\
    Stack trace:\n#0 /tmp/tmpbfjagals.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpbfjagals.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5bb61mk.php:14\n\
    Stack trace:\n#0 /tmp/tmpx5bb61mk.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpx5bb61mk.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $string = preg_replace('/./u', 'u', $string);\n  return\
    \ strtoupper($string);\n}\n</code>\n<|/ a dscore=4 tags=php,string,lowercase,uppercase\
    \ |>\n<| c |>\nIt would be better to use the u modifier instead of preg_replace.\n\
    <|/ c |>\n<| a |>\n<code>\n$string = str_replace(array('a','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'),\
    \ array('A','a','B','b','C','c','D','d','E','e','F','f','G','g','H','h','I','i','J','j','K','k','L','l','M','m','N','n','O','o','P','p','Q','q','R','r','S','s','T','t','U','u','V','v','W','w','X','x','Y','y','Z','z'),\
    \ $string);\n</code>\n<|/ a dscore=4 tags=php,string,lowercase,uppercase |>\n\
    <| c |>\nThis won't work as expected (as pointed out in other answers) if the\
    \ input is \"A\" but you want the output to be \"a\", because then 'A' will be\
    \ changed to 'a' by str_replace.\n<|/ c |>\n<| a |>\nIn case you are looking for\
    \ a one liner, this should work too:\n<code>\n$string = preg_replace('/(.)/e',\
    \ 'strtoupper(\"\\\\1\")', $string);\n</code>\n<|/ a tags=php,string,lowercase,uppercase\
    \ dscore=4 |>\n<| c |>\nThis one liner works a charm. Thanks a lot!\n<|/ c |>\n\
    <| a dscore=3 |>\n<code>\nstrtoupper( str_replace( array('a', 'A', 'B', 'C', 'D',\
    \ 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\
    \ 'U', 'V', 'W', 'X', 'Y', 'Z'), array('a', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'), $string) );\n</code>\n<|/ a tags=php,\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4ai0v1ra.php
    on line 9

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5bb61mk.php:14\n\
    Stack trace:\n#0 /tmp/tmpx5bb61mk.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpx5bb61mk.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = preg_replace('/[a-z]/i','U',$string);\n\
    \    return preg_replace('/U/i','a',$string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw7x1rxr.php:16\n\
    Stack trace:\n#0 /tmp/tmprw7x1rxr.php(20): test()\n#1 {main}\n  thrown in /tmp/tmprw7x1rxr.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace_callback('/./u', function($match)\
    \ { return strtoupper($match[0]); }, $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4_k9ies.php:15\n\
    Stack trace:\n#0 /tmp/tmpm4_k9ies.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm4_k9ies.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtoupper(strtolower($string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp9e2y4v.php:14\n\
    Stack trace:\n#0 /tmp/tmpsp9e2y4v.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpsp9e2y4v.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/([a-z]+)/i', 'strtoupper(\"$1\"\
    )', $string);\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_hnpc9r.php:14\n\
    Stack trace:\n#0 /tmp/tmp7_hnpc9r.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp7_hnpc9r.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return mb_strtoupper(mb_strtolower($string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtoupper()\
    \ in /tmp/tmpk8ti_vy3.php:6\nStack trace:\n#0 /tmp/tmpk8ti_vy3.php(10): flip_case('')\n\
    #1 /tmp/tmpk8ti_vy3.php(14): candidate('')\n#2 /tmp/tmpk8ti_vy3.php(19): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk8ti_vy3.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = strtolower($string);\n    $string = ucwords($string);\n\
    \    return strtolower($string);\n}\n\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzy28tdd.php:17\n\
    Stack trace:\n#0 /tmp/tmpqzy28tdd.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqzy28tdd.php\
    \ on line 17\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_convert_case(mb_strtolower($string), MB_CASE_UPPER,\
    \ \"UTF-8\");\n}\n\n/**\n * Removes multiple spaces from a string and trims it.\n\
    \ * Example:\n * >>> trim_spaces(\" foo \\t\\r\\n bar\\t\\n   \\t\")\n * \"foo\
    \ bar\"\n *\n * @param   string  $string the string to be trimmed\n *\n * @return\
    \  string  the trimmed string\n */\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_convert_case()\
    \ in /tmp/tmp38ba205y.php:6\nStack trace:\n#0 /tmp/tmp38ba205y.php(20): flip_case('')\n\
    #1 /tmp/tmp38ba205y.php(24): candidate('')\n#2 /tmp/tmp38ba205y.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmp38ba205y.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $uppercased = strtoupper($string);\n    $lowercased\
    \ = strtolower($string);\n    return $lowercased === $uppercased ? $lowercased\
    \ : $uppercased;\n}\n</code>\nThen, when you need to transform a string, do this:\n\
    <code>\n$flipped = flip_case($input);\n</code>\n<|/ a tags=php |>\n<| c |>\nNice\
    \ and simple. I would just add that `$input = \"Hello\";` would become `$flipped\
    \ = strtoupper($input);` and it would return `HELLO`.\n<|/ c |>\n<| a |>\nI think\
    \ what you are looking for is strtr\n<code>\n$str = 'Hello World!';\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptipk5xpq.php
    on line 10

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper($string);\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php |>\nYou Can Use A Simple Function Like This\n<code>\n<?php\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpe66rrpic.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtolower($string) . strtoupper($string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86r4s873.php:15\n\
    Stack trace:\n#0 /tmp/tmp86r4s873.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp86r4s873.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\t$result = strtr($string, \n\t\tarray('a'=>'A', 'b'=>'B',\
    \ 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J',\
    \ 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R',\
    \ 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z',\
    \ '0'=>'0',  '1'=>'1',  '2'=>'2',  '3'=>'3',  '4'=>'4',  '5'=>'5',  '6'=>'6',\
    \  '7'=>'7',  '8'=>'8',  '9'=>'9',\n\t\t\t'A'=>'a', 'B'=>'b', 'C'=>'c', 'D'=>'d',\
    \ 'E'=>'e', 'F'=>'f', 'G'=>'g', 'H'=>'h', 'I'=>'i', 'J'=>'j', 'K'=>'k', 'L'=>'l',\
    \ 'M'=>'m', 'N'=>'n', 'O'=>'o', 'P'=>'p', 'Q'=>'q', 'R'=>'r', 'S'=>'s', 'T'=>'t',\
    \ 'U'=>'u', 'V'=>'v', 'W'=>'w', 'X'=>'x', 'Y'=>'y', 'Z'=>'z',\n\t\t\t'0'=>'0',\
    \  '1'=>'1',  '2'=>'2',  '3'=>'3',  '4'=>'4',  '5'=>'5',  '6'=>'6',  '7'=>'7',\
    \  '8'=>'8',  '9'=>'9',\n\t\t\t'a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z',\n\t\t\t'0'=>'0',  '1'=>'1',\
    \  '2'=>'2',  '3'=>'3',  '4'=>'4',  '5'=>'5',  '6'=>'6',  '7'=>'\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmp9jxxwc_a.php
    on line 11

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9a7zr5s.php:15\n\
    Stack trace:\n#0 /tmp/tmpm9a7zr5s.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm9a7zr5s.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/\\B([A-Z])/', '\\U$1', $string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaba7nrg.php:15\n\
    Stack trace:\n#0 /tmp/tmpaaba7nrg.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpaaba7nrg.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(\n        $string\n            ^\
    \ // xor: flip bits\n            ($string = strtolower($string)) // make lowercase\n\
    \            ^ // xor: flip bits\n            $string\n    );\n}\n\n$hello = 'Hello';\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_q72pbs.php:22\n\
    Stack trace:\n#0 /tmp/tmpq_q72pbs.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq_q72pbs.php\
    \ on line 22\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper($string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36a9o600.php:14\n\
    Stack trace:\n#0 /tmp/tmp36a9o600.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp36a9o600.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9a7zr5s.php:15\n\
    Stack trace:\n#0 /tmp/tmpm9a7zr5s.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm9a7zr5s.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array_flip(\n        array(\n\
    \            'h' => 'H',\n            'i' => 'I',\n            'j' => 'J',\n \
    \           'k' => 'K',\n            'l' => 'L',\n            'm' => 'M',\n  \
    \          'n' => 'N',\n            'o' => 'O',\n            'p' => 'P',\n   \
    \         'q' => 'Q',\n            'r' => 'R',\n            's' => 'S',\n    \
    \        't' => 'T',\n            'u' => 'U',\n            'v' => 'V',\n     \
    \       'w' => 'W',\n            'x' => 'X',\n            'y' => 'Y',\n      \
    \      'z' => 'Z',\n            'A' => 'a',\n            'B' => 'b',\n       \
    \     'C' => 'c',\n            'D' => 'd',\n            'E' => 'e',\n        \
    \    'F' => 'f',\n            'G' => 'g',\n            'H' => 'h',\n         \
    \   'I' => 'i',\n            'J' => 'j',\n            'K' => 'k',\n          \
    \  'L' => 'l',\n            'M' => 'm',\n            'N' => 'n',\n           \
    \ 'O' => 'o',\n            'P' => 'p',\n            'Q' => 'q',\n            'R'\
    \ => 'r',\n            'S' => 's','T' => 't',\n            'U' => 'u',\n     \
    \       'V' => 'v',\n            'W' => 'w',\n            'X' => 'x',\n      \
    \      'Y' => 'y',\n            'Z' => 'z',\n            '-' => ' ',\n       \
    \     '.' => '',\n            '!' => '',\n        )\n    ));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: strtr(): Ignoring replacement of empty string in /tmp/tmpw0y235vj.php\
    \ on line 8\n\nWarning: strtr(): Ignoring replacement of empty string in /tmp/tmpw0y235vj.php\
    \ on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0y235vj.php:66\n\
    Stack trace:\n#0 /tmp/tmpw0y235vj.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpw0y235vj.php\
    \ on line 66\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $result = $string;\n  $lowercase = true;\n  foreach\
    \ (str_split($string) as $char) {\n    $result .= $lowercase ? strtoupper($char)\
    \ : strtolower($char);\n    $lowercase = !$lowercase;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8bh4ngg.php:20\n\
    Stack trace:\n#0 /tmp/tmph8bh4ngg.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph8bh4ngg.php\
    \ on line 20\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz',\
    \ 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n}\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_yap9pl.php:14\n\
    Stack trace:\n#0 /tmp/tmph_yap9pl.php(18): test()\n#1 {main}\n  thrown in /tmp/tmph_yap9pl.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped_string = str_replace(\n        array('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'),\n        array('A', 'B', 'C',\
    \ 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\
    \ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'),\n        $string\n    );\n\n    return strtoupper($flipped_string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppulbzpqc.php:21\n\
    Stack trace:\n#0 /tmp/tmppulbzpqc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppulbzpqc.php\
    \ on line 21\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = strtr($string, array(\n        'a' => 'A',\n\
    \        'b' => 'B',\n        'c' => 'C',\n        'd' => 'D',\n        'e' =>\
    \ 'E',\n        'f' => 'F',\n        'g' => 'G',\n        'h' => 'H',\n      \
    \  'i' => 'I',\n        'j' => 'J',\n        'k' => 'K',\n        'l' => 'L',\n\
    \        'm' => 'M',\n        'n' => 'N',\n        'o' => 'O',\n        'p' =>\
    \ 'P',\n        'q' => 'Q',\n        'r' => 'R',\n        's' => 'S',\n      \
    \  't' => 'T',\n        'u' => 'U',\n        'v' => 'V',\n        'w' => 'W',\n\
    \        'x' => 'X',\n        'y' => 'Y',\n        'z' => 'Z',\n    ));\n    return\
    \ strtr($flipped, array(\n        'A' => 'a',\n        'B' => 'b',\n        'C'\
    \ => 'c',\n        'D' => 'd',\n        'E' => 'e',\n        'F' => 'f',\n   \
    \     'G' => 'g',\n        'H' => 'h',\n        'I' => 'i',\n        'J' => 'j',\n\
    \        'K' => 'k',\n        'L' => 'l',\n        'M' => 'm',\n        'N' =>\
    \ 'n',\n        'O' => 'o',\n        'P' => 'p',\n        'Q' => 'q',\n      \
    \  'R' => 'r',\n        'S' => 's',\n        'T' => 't',\n        'U' => 'u',\n\
    \        'V' => 'v',\n        'W' => 'w',\n        'X' => 'x',\n        'Y' =>\
    \ 'y',\n        'Z' => 'z',\n    ));\n}\n\nfunction candidate(...$args) {\n  \
    \  return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9sxjue1_.php:70\n\
    Stack trace:\n#0 /tmp/tmp9sxjue1_.php(74): test()\n#1 {main}\n  thrown in /tmp/tmp9sxjue1_.php\
    \ on line 70\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    // Split the string into an array of words. \n   \
    \ // Explode defaults to a space character, but this can be changed if desired.\n\
    \    // The default separator is a space character, but this can be changed if\
    \ desired.\n    $words = explode(' ', $string);\n\n    // Return the flipped string\n\
    \    return implode('', array_map(function($w) {\n        return strtr(strtolower($w),\
    \ STR_PAD, STR_LOWER);\n    }, array_flip($words)));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"STR_PAD\" in /tmp/tmp08k3ui9y.php:13\n\
    Stack trace:\n#0 [internal function]: {closure}(0)\n#1 /tmp/tmp08k3ui9y.php(14):\
    \ array_map(Object(Closure), Array)\n#2 /tmp/tmp08k3ui9y.php(17): flip_case('')\n\
    #3 /tmp/tmp08k3ui9y.php(21): candidate('')\n#4 /tmp/tmp08k3ui9y.php(26): test()\n\
    #5 {main}\n  thrown in /tmp/tmp08k3ui9y.php on line 13\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $result = \"\";\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $result .= (ord($string[$i])\
    \ >= 65 && ord($string[$i]) <= 90)\n            ? ((ord($string[$i]) - 55) % 26\
    \ + ord('A'))\n            : (ord($string[$i]) + 32);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasspafqd.php:21\n\
    Stack trace:\n#0 /tmp/tmpasspafqd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpasspafqd.php\
    \ on line 21\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_ireplace(['a', 'e', 'i', 'o', 'u'], ['A',\
    \ 'E', 'I', 'O', 'U'], $string);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThe\
    \ function works but does not flip characters with accents, ex: \xE9 becomes e\n\
    <|/ c |>\n<| c |>\nI suppose this is because the `str_ireplace` function uses\
    \ a regular expression internally. Do you know a way to avoid this?\n<|/ c |>\n\
    <| a dscore=1 tags=regex,php |>\nYou can use a positive lookbehind and a positive\
    \ lookahead:\n<code>\n$string = preg_replace_callback('/(?<=^| )([a-z0-9])/',\
    \ function($matches) {\n    return strtoupper($matches[0]);\n}, $string);\n$string\
    \ = preg_replace_callback('/(?<=^| )([A-Z])/', function($matches) {\n    return\
    \ strtolower($matches[0]);\n}, $string);\n</code>\nSee it working\n<|/ a |>\n\
    <| c |>\nThis is actually the best answer, thanks a lot for your effort man!\n\
    <|/ c |>\n<| a tags=regex,php |>\nTry this:\n<code>\n<?php\n\n$string = 'Hello\
    \ World';\n\necho preg_replace('/([a-z])/', function($m) {\n    return strtoupper($m[0]);\n\
    }, $string);\necho preg_replace('/([A-Z])/', function($m) {\n    return strtolower($m[0]);\n\
    }, $string);\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcah0cuya.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_convert_case($string, MB_CASE_UPPER, \"\
    UTF-8\");\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_convert_case()\
    \ in /tmp/tmpxnqzu05a.php:6\nStack trace:\n#0 /tmp/tmpxnqzu05a.php(10): flip_case('')\n\
    #1 /tmp/tmpxnqzu05a.php(14): candidate('')\n#2 /tmp/tmpxnqzu05a.php(19): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxnqzu05a.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/([a-z])/i', '\\U\\1', $string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tvufx27.php:15\n\
    Stack trace:\n#0 /tmp/tmp4tvufx27.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp4tvufx27.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(strtolower($string), array('!' => '!',\
    \ '?' => '?'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkonl1tqd.php:15\n\
    Stack trace:\n#0 /tmp/tmpkonl1tqd.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkonl1tqd.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $result = \"\";\n    $length = strlen($string);\n\
    \    $i = 0;\n    $char_set = range('A', 'Z');\n    \n    while ($i < $length)\
    \ {\n        // We need to check if the current character is upper or lower\n\
    \        if ($string[$i] < 'Z') {\n            // It's uppercase, add it to the\
    \ result and move to the next character\n            $result .= $string[$i];\n\
    \        } else {\n            // It's lowercase, so we subtract to get an uppercase\
    \ character\n            $result .= chr((ord($string[$i]) - ord('A') + 26) % 26\
    \ + ord('A'));\n        }\n        // Move to the next character\n        $i++;\n\
    \    }\n    // Return the resulting string\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5le2s07.php:33\n\
    Stack trace:\n#0 /tmp/tmpx5le2s07.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx5le2s07.php\
    \ on line 33\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_convert_case($string, MB_CASE_UPPER, \"\
    UTF-8\");\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_convert_case()\
    \ in /tmp/tmpxnqzu05a.php:6\nStack trace:\n#0 /tmp/tmpxnqzu05a.php(10): flip_case('')\n\
    #1 /tmp/tmpxnqzu05a.php(14): candidate('')\n#2 /tmp/tmpxnqzu05a.php(19): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxnqzu05a.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return $string[0] === $string[1] ? $string[0] . $string[1]\
    \ : $string[0] . flip_case($string[1]);\n}\nfunction candidate(...$args) {\n \
    \   return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 0 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 1 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 0 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 1 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 1 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 1 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 0 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 1 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 0 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nWarning: Uninitialized string offset 1 in /tmp/tmpdxq0sqgu.php on line\
    \ 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxq0sqgu.php:14\n\
    Stack trace:\n#0 /tmp/tmpdxq0sqgu.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpdxq0sqgu.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace(\"/(\\w)(\\w)/\", \"\\\\1\\\\2\"\
    , $string);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpye7cnmjb.php:15\n\
    Stack trace:\n#0 /tmp/tmpye7cnmjb.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpye7cnmjb.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_convert_case($string, MB_CASE_TITLE, 'UTF-8');\n\
    }\n</code>\n<|/ a tags=php,string |>\n<| c |>\nAhh, this really helped me out!\n\
    <|/ c |>\n<| a dscore=1 |>\nYou can try something like this.\n<code>\n$str = 'AaBbCc';\n\
    $str2 = str_ireplace(['A','b','c'], 'ABC', $str);\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpixcxbm0c.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, [\"a\"=>\"A\", \"b\"=>\"B\"\
    , \"c\"=>\"C\", \"d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"\
    =>\"H\", \"i\"=>\"I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\"\
    , \"n\"=>\"N\", \"o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"\
    =>\"S\", \"t\"=>\"T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\"\
    , \"y\"=>\"Y\", \"z\"=>\"Z\"]);\n}\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hrdu2_f.php:14\n\
    Stack trace:\n#0 /tmp/tmp9hrdu2_f.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp9hrdu2_f.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtolower(strtr($string, array_flip(str_split('ABCDEFGHIJKLMNOPQRSTUVWXYZ'))));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3uw5896.php:14\n\
    Stack trace:\n#0 /tmp/tmpd3uw5896.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpd3uw5896.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_convert_case($string, MB_CASE_UPPER, \"\
    UTF-8\");\n}\n</code>\nThe mb_convert_case function is not case-sensitive.\n<|/\
    \ a |>\n<| c |>\nWhile this does work (i.e. it solves your issue as you asked\
    \ in your question) you should really consider using [mb_strtolower()](https://www.php.net/manual/en/function.mb-strtolower.php)\
    \ and [mb_strtoupper()](https://www.php.net/manual/en/function.mb-strtoupper.php)\
    \ instead which are much more efficient.\n<|/ c |>\n<| a dscore=2 |>\nYou can\
    \ try this:\n<code>\necho ucfirst(strtolower($string));\n</code>\n<|/ a tags=string,php\
    \ |>\n<| a tags=string,php dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1vmivyrj.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/\\B./', '',\n   \
    \     str_replace(['a','A'], ['A', 'a'], $string)));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqbymsu0.php:15\n\
    Stack trace:\n#0 /tmp/tmpyqbymsu0.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpyqbymsu0.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_ireplace($string, strtoupper($string), strtolower($string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5ru4i7j.php:14\n\
    Stack trace:\n#0 /tmp/tmpo5ru4i7j.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpo5ru4i7j.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtoupper(strtr($string, array('!' => '!', '\"\
    ' => '\"', '#' => '#', '$' => '$', '%' => '%', '&' => '&', \"'\" => \"'\", '('\
    \ => ')', '*' => '*', ',' => '.', ';' => ':', '<' => '=', '>' => '=', '?' => '=',\
    \ '{' => '{', '}' => '}')));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5cds8a3.php:14\n\
    Stack trace:\n#0 /tmp/tmpt5cds8a3.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpt5cds8a3.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return $string ? preg_replace('/([a-z])/e', 'strtoupper(\"\
    $1\")', $string) : '';\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmp1llch8yb.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp1llch8yb.php:15\nStack trace:\n\
    #0 /tmp/tmp1llch8yb.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp1llch8yb.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(str_replace($string, str_split($string,\
    \ 2), $string));\n}\n</code>\n<|/ a |>\n<| a tags=php,function dscore=2 |>\nAnother\
    \ solution (to my mind anyway) without using regex. \n<code>\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgv67muci.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/[a-z]/i', '', $string) . preg_replace('/[A-Z]/i',\
    \ '',\n    $string);\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocb5zry0.php:15\n\
    Stack trace:\n#0 /tmp/tmpocb5zry0.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpocb5zry0.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $flip = array(\"a\" => \"A\", \"b\" => \"B\", \"c\"\
    \ => \"C\", \"d\" => \"D\", \"e\" => \"E\", \"f\" => \"F\", \"g\" => \"G\", \"\
    h\" => \"H\", \"i\" => \"I\", \"j\" => \"J\", \"k\" => \"K\", \"l\" => \"L\",\
    \ \"m\" => \"M\", \"n\" => \"N\", \"o\" => \"O\", \"p\" => \"P\", \"q\" => \"\
    Q\", \"r\" => \"R\", \"s\" => \"S\", \"t\" => \"T\", \"u\" => \"U\", \"v\" =>\
    \ \"V\", \"w\" => \"W\", \"x\" => \"X\", \"y\" => \"Y\", \"z\" => \"Z\", \"A\"\
    \ => \"a\", \"B\" => \"b\", \"C\" => \"c\", \"D\" => \"d\", \"E\" => \"e\", \"\
    F\" => \"f\", \"G\" => \"g\", \"H\" => \"h\", \"I\" => \"i\", \"J\" => \"j\",\
    \ \"K\" => \"k\", \"L\" => \"l\", \"M\" => \"m\", \"N\" => \"n\", \"O\" => \"\
    o\", \"P\" => \"p\", \"Q\" => \"q\", \"R\" => \"r\", \"S\" => \"s\", \"T\" =>\
    \ \"t\", \"U\" => \"u\", \"V\" => \"v\", \"W\" => \"w\", \"X\" => \"x\", \"Y\"\
    \ => \"y\", \"Z\" => \"z\");\n  return strtoupper($flip[$string]);\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpq6ovi4xo.php on line 7\n\
    \nDeprecated: strtoupper(): Passing null to parameter #1 ($string) of type string\
    \ is deprecated in /tmp/tmpq6ovi4xo.php on line 7\n\nWarning: Undefined array\
    \ key \"Hello!\" in /tmp/tmpq6ovi4xo.php on line 7\n\nDeprecated: strtoupper():\
    \ Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpq6ovi4xo.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6ovi4xo.php:16\n\
    Stack trace:\n#0 /tmp/tmpq6ovi4xo.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpq6ovi4xo.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $chars = preg_split('//u', $string);\n    return implode('',\
    \ $chars);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgilfk739.php:16\n\
    Stack trace:\n#0 /tmp/tmpgilfk739.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpgilfk739.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return str_replace(\n        array_map(\n        \
    \    create_function('$char', 'return strtoupper($char);'),\n            str_split($string)\n\
    \        ),\n        array_map(\n            create_function('$char', 'return\
    \ strtolower($char);'),\n            str_split($string)\n        ),\n        $string\n\
    \    );\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function create_function()\
    \ in /tmp/tmpif5izwno.php:8\nStack trace:\n#0 /tmp/tmpif5izwno.php(20): flip_case('')\n\
    #1 /tmp/tmpif5izwno.php(24): candidate('')\n#2 /tmp/tmpif5izwno.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpif5izwno.php on line 8\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $result = $string;\n    $upper = true;\n\n    for\
    \ ($i = 0, $len = strlen($result); $i < $len; $i++) {\n        $letter = substr($result,\
    \ $i, 1);\n\n        if ($upper) {\n            if (strtoupper($letter) === $letter)\
    \ {\n                $result = substr($result, 0, $i) . strtolower(substr($result,\
    \ $i + 1));\n            }\n        } else {\n            if (strtolower($letter)\
    \ === $letter) {\n                $result = substr($result, 0, $i) . strtoupper(substr($result,\
    \ $i + 1));\n            }\n        }\n\n        $upper = !$upper;\n    }\n\n\
    \    return $result;\n}\n</code>\nThis may also be done using regular expressions,\
    \ though I'm not a PHP guy.\n<|/ a |>\n<| c |>\nThis doesn't work for me, I've\
    \ got it working for the first two letters, but then it crashes. http://pastebin.com/vFqj1q6h\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_rjvs99a.php
    on line 27

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return implode('', array_map(function ($letter) {\n\
    \        static $mapping = array(\n            'A' => 'a',\n            'B' =>\
    \ 'b',\n            'C' => 'c',\n            'D' => 'd',\n            'E' => 'e',\n\
    \            'F' => 'f',\n            'G' => 'g',\n            'H' => 'h',\n \
    \           'I' => 'i',\n            'J' => 'j',\n            'K' => 'k',\n  \
    \          'L' => 'l',\n            'M' => 'm',\n            'N' => 'n',\n   \
    \         'O' => 'o',\n            'P' => 'p',\n            'Q' => 'q',\n    \
    \        'R' => 'r',\n            'S' => 's',\n            'T' => 't',\n     \
    \       'U' => 'u',\n            'V' => 'v',\n            'W' => 'w',\n      \
    \      'X' => 'x',\n            'Y' => 'y',\n            'Z' => 'z',\n       \
    \ );\n\n        if (array_key_exists($letter, $mapping)) {\n            return\
    \ $mapping[$letter];\n        }\n\n        return $letter;\n    }, $string));\n\
    }\n</code>\n<|/ a |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphhg4myh9.php
    on line 43

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return $string !== null ? preg_replace(\"/(?=[A-Z])/i\"\
    , \"$0\", $string) : null;\n}\n$data = ['Hello', 'Hi', 'HELLO', 'hi', 'hihi',\
    \ 'HiHI', 'hIIIII', 'hIiii'];\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n$data = array_map($data,\
    \ $data);\n$data = array_map($data, $data);\n$data = array_map($data, $data);\n\
    $data = array_map($data, $data);\n$data = array_map($data, $data);\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, array must have exactly two members in /tmp/tmpsfr6qg3c.php:9\n\
    Stack trace:\n#0 /tmp/tmpsfr6qg3c.php(9): array_map(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpsfr6qg3c.php on line 9\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9a7zr5s.php:15\n\
    Stack trace:\n#0 /tmp/tmpm9a7zr5s.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm9a7zr5s.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = preg_replace('/([a-z])/', '$U\\1', $string);\n\
    \    return preg_replace('/([A-Z])/', '$L\\1', $string);\n}\n</code>\n<|/ a tags=replace,string,php\
    \ |>\n<| c |>\nThanks Jason! That worked perfectly. \n\nBy the way, why do I have\
    \ to use preg_replace instead of str_replace for my example? I know that str_replace\
    \ only replaces the first occurrence, but this seems to work for the example I\
    \ gave.\n<|/ c |>\n<| c |>\nThe `preg_replace` command is probably more efficient\
    \ because it uses a `preg_match_all` behind the scenes and that command can do\
    \ multiple replacements. `str_replace` only replaces one occurrence at a time.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n$str = \"hello-world\";\n$str = str_replace(\n\
    \    array(\"h\",\"e\",\"l\",\"l\",\"o\",\"-\",\"w\",\"o\",\"r\",\"l\",\"d\"),\n\
    \    array(\"H\",\"E\",\"L\",\"L\",\"O\",\"-\",\"W\",\"O\",\"R\",\"L\",\"D\"),\n\
    \    $str);\n</code>\n<|/ a tags=replace,string,php |>\n<| c |>\nYou should use\
    \ `strtolower` instead of `str_replace`. It won't be affected by accented letters.\n\
    <|/ c |>\n<| c |>\nTrue, but in this case it doesn't really matter. strtolower\
    \ will also lowercase accented letters, since it doesn't take into account any\
    \ kind of transliteration. strtolower would be better if he wanted to only lowercase\
    \ certain characters.\n<|/ c |>\n<| c |>\nWhat does `str_replace` do if you pass\
    \ a string that contains `-` as a needle to `preg_replace`?\n<|/ c |>\n<| c |>\n\
    I believe it doesn't, but if he had a regex like `'/[a-b]/'` it would replace\
    \ them with empty strings. I guess it depends on what his needs are, and how strict\
    \ he needs to be.\n<|/ c |>\n<| a dscore=1 tags=replace,string,php |>\nYou can\
    \ use a callback function:\n<code>\n$str = 'hello-world';\n\necho preg_replace_callback('/[a-z]/',\
    \ function($m) {\n    return mb_strtoupper($m[0]);\n}, $str);\n</code>\n<|/ a\
    \ |>\n<| c |>\nIf you're using PHP >= 5.3.3 you can pass arrays as needles and\
    \ arrays as replacements to `str_replace` \nfunction candidate(...$args) {\n \
    \   return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6k9p41ux.php
    on line 9

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\treturn preg_replace_callback('/./', function($matches)\
    \ {\n\t\treturn strtoupper($matches[0]);\n\t}, $string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpal1pn0kw.php:16\n\
    Stack trace:\n#0 /tmp/tmpal1pn0kw.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpal1pn0kw.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/./e', \"strtoupper('\\\
    \\0')\", $string));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmpa0mk2vl4.php on line 6\n\nDeprecated:\
    \ strtoupper(): Passing null to parameter #1 ($string) of type string is deprecated\
    \ in /tmp/tmpa0mk2vl4.php on line 6\n\nWarning: preg_replace(): The /e modifier\
    \ is no longer supported, use preg_replace_callback instead in /tmp/tmpa0mk2vl4.php\
    \ on line 6\n\nDeprecated: strtoupper(): Passing null to parameter #1 ($string)\
    \ of type string is deprecated in /tmp/tmpa0mk2vl4.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpa0mk2vl4.php:15\nStack trace:\n\
    #0 /tmp/tmpa0mk2vl4.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpa0mk2vl4.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/[a-z]/i', strtr($string, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\
    \ 'abcdefghijklmnopqrstuvwxyz'), $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_qdbj9b.php:15\n\
    Stack trace:\n#0 /tmp/tmpt_qdbj9b.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpt_qdbj9b.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtr(strtolower($string), array('!' => '!',\n\
    \                                         '@' => 'a',\n                      \
    \                   '#' => 'b',\n                                         '$'\
    \ => 'p',\n                                         '%' => 'h',\n            \
    \                             '^' => 'c',\n                                  \
    \       '&' => 'd',\n                                         '*' => 'e',\n  \
    \                                       '('=> 'g',\n                         \
    \                ')' => 'i',\n                                         '_' =>\
    \ 'j',\n                                         '-' => 'k',\n               \
    \                          '=' => 'l',\n                                     \
    \    '<' => 'm',\n                                         '>' => 'n',\n     \
    \                                    '/' => 'o',\n                           \
    \              '?' => 'r',\n                                         '~' => 's',\n\
    \                                         '|' => 't',\n                      \
    \                   '\"' => 'u',\n                                         '$%&*'\
    \ => 'q',\n                                         '+' => 'v',\n            \
    \                             '|' => 'y',\n                                  \
    \       ';' => 'w',\n                                         '=' => 'x',\n  \
    \                                       '<' => 'y',\n                        \
    \                 '>' => 'z',\n                                         '?' =>\
    \ 'z',\n                                         '~' => 'y',\n               \
    \                          '?' => 'y',\n                                     \
    \    '^' => 'u',\n                                         '$%&*' => 'u',\n  \
    \                                       '+' => 'w',\n                        \
    \                 '|' => 'v',\n                                         '<' =>\
    \ 'w',\n                                         '>' => 'v',\n               \
    \                          '?' => 'w',\n                                     \
    \    '~' => 'w',\n                                         '?' => 'v',\n     \
    \                                    '^' => 'w',\n                           \
    \              '$%&*' => 'v',\n                                         '+' =>\
    \ 'x',\n                                         '|' => 'y',\n               \
    \                          '<' => 'x',\n                                     \
    \    '>' => 'y',\n                                         '?' => 'x',\n     \
    \                                    '~' => 'x',\n                           \
    \              '?' => 'y',\n                                         '^' => 'x',\n\
    \                                         '$%&*' => 'y',\n                   \
    \                      '+' => 'z',\n                                         '|'\
    \ => 'w',\n                                         '<' => 'z',\n            \
    \                             '>' => 'w',\n                                  \
    \       '?' => 'z',\n                                         '~' => 'z',\n  \
    \                                       '?' => 'w',\n                        \
    \                 '^' => 'z',\n                                         '$%&*'\
    \ => 'w',\n                                         '+' => 'a',\n            \
    \                             '|' => 'x',\n                                  \
    \       '<' => 'a',\n                                         '>' => 'x',\n  \
    \                                       '?' => 'a',\n                        \
    \                 '~' => 'a',\n                                         '?' =>\
    \ 'x',\n                                         '^' => 'a',\n               \
    \                          '$%&*' => 'x',\n                                  \
    \       '+' => 'b',\n                                         '|' => 'y',\n  \
    \                                       '<' => 'b',\n                        \
    \                 '>' => 'y',\n                                         '?' =>\
    \ 'b',\n                                         '~' => 'b',\n               \
    \                          '?' => 'y',\n                                     \
    \    '^' => 'b',\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpo7rt_moi.php on line 83

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    // Your code here!\n    return strtoupper(mb_convert_case($string,\
    \ MB_CASE_TITLE, 'UTF-8'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_convert_case()\
    \ in /tmp/tmp1z7qnpug.php:7\nStack trace:\n#0 /tmp/tmp1z7qnpug.php(11): flip_case('')\n\
    #1 /tmp/tmp1z7qnpug.php(15): candidate('')\n#2 /tmp/tmp1z7qnpug.php(20): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1z7qnpug.php on line 7\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_ireplace(strtolower($string), '', strtoupper($string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9b0moskg.php:14\n\
    Stack trace:\n#0 /tmp/tmp9b0moskg.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp9b0moskg.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/([a-z])/', '$1',\
    \ $string));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxl_w_ml2.php:15\n\
    Stack trace:\n#0 /tmp/tmpxl_w_ml2.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpxl_w_ml2.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array_flip(str_split('ABCDEFGHIJKLMNOPQRSTUVWXYZ',\
    \ -1)));\n}\n</code>\nBut then again if you're just wanting to remove letters\
    \ from a string, you could just do this:\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5dt5_rtl.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return $string !== $string ? strtoupper($string) :\
    \ strtolower($string);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_kllr60.php:15\n\
    Stack trace:\n#0 /tmp/tmpm_kllr60.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm_kllr60.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtoupper(preg_replace('/([a-z])/', '$U$1',\
    \ $string));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl_fbmdj.php:14\n\
    Stack trace:\n#0 /tmp/tmpzl_fbmdj.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpzl_fbmdj.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $string = mb_strtolower($string);\n  $string = mb_strtoupper($string);\n\
    \  return $string;\n}\n</code>\n<|/ a dscore=4 tags=php,case-sensitive,uppercase,string,function\
    \ |>\n<| c |>\nThank you for this, I came here looking for an uppercase function,\
    \ while I found the flipcase function above I realized I should just flip both\
    \ strings instead since I am more familiar with PHP and didn't want to reinvent\
    \ the wheel.\n<|/ c |>\n<| c |>\nJust use `$string = mb_strtoupper($string);`\
    \ instead of `$string = mb_strtolower($string);`\n<|/ c |>\n<| a dscore=3 tags=php,case-sensitive,uppercase,string,function\
    \ |>\nI've written a short function that will work for either lowercase or uppercase\
    \ strings. Simply pass in the string and the other case type to flip through.\n\
    <code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpf82qfqrr.php
    on line 10

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtr($string, array('\xC0\xC1\xC2\xC3\xC4\xC5\
    \xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD9\xDA\xDB\xDC\
    \xDD\xDE' => 'AEAOUaeoun\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "AEAOUaeouAOUAEOUAEOUAEOUAEOUAE..."
    in /tmp/tmp_pkzcyex.php on line 6

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $uppercased = preg_replace_callback('/./', function($matches)\
    \ {\n        return strtoupper($matches[0]);\n    }, $string);\n    $lowercased\
    \ = preg_replace_callback('/./', function($matches) {\n        return strtolower($matches[0]);\n\
    \    }, $string);\n    return $lowercased . ' ' . $uppercased;\n}\n</code>\n<|/\
    \ a tags=php |>\n<| c |>\nI like this answer, but I ended up going with a simpler\
    \ approach. Thanks!\n<|/ c |>\n<| c |>\nHow exactly is this simpler?\n<|/ c |>\n\
    <| a dscore=0 tags=php |>\nI ended up going with this:\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpb5rap6t0.php
    on line 14

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/./us', array('a', 'b'), $string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: preg_replace(): Argument #1 ($pattern)\
    \ must be of type array when argument #2 ($replacement) is an array, string given\
    \ in /tmp/tmppdhdmv8g.php:6\nStack trace:\n#0 /tmp/tmppdhdmv8g.php(6): preg_replace('/./us',\
    \ Array, '')\n#1 /tmp/tmppdhdmv8g.php(10): flip_case('')\n#2 /tmp/tmppdhdmv8g.php(14):\
    \ candidate('')\n#3 /tmp/tmppdhdmv8g.php(19): test()\n#4 {main}\n  thrown in /tmp/tmppdhdmv8g.php\
    \ on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return $string\n             // Lowercase every character\
    \ and uppercase all others.\n            . preg_replace('/./u', function ($c)\
    \ {\n              return ($c >= 'A' && $c <= 'Z') ? strtoupper($c) : strtolower($c);\n\
    \            }, $string);\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: preg_replace(): Argument #2 ($replacement)\
    \ must be of type array|string, Closure given in /tmp/tmpdu44w3d5.php:10\nStack\
    \ trace:\n#0 /tmp/tmpdu44w3d5.php(10): preg_replace('/./u', Object(Closure), '')\n\
    #1 /tmp/tmpdu44w3d5.php(13): flip_case('')\n#2 /tmp/tmpdu44w3d5.php(17): candidate('')\n\
    #3 /tmp/tmpdu44w3d5.php(22): test()\n#4 {main}\n  thrown in /tmp/tmpdu44w3d5.php\
    \ on line 10\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/./','',$string));\n\
    }\n\n$string = \"Hello\";\n$string2 = flip_case($string);\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,case-sensitive,case-insensitive |>\n<code>\n<?php\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpb2wpkb2d.php
    on line 11

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtolower($string) . strtoupper($string);\n\
    }\n$string = \"Hello World!\";\necho $string . \" | \" . flip_case($string) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Hello World! | hello world!HELLO WORLD!\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqt69yv31.php:16\nStack trace:\n#0 /tmp/tmpqt69yv31.php(20):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqt69yv31.php on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = ucfirst(strtolower($string));\n    $string\
    \ = ucfirst(strtoupper($string));\n\n    return $string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2d3kv__.php:18\n\
    Stack trace:\n#0 /tmp/tmpb2d3kv__.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpb2d3kv__.php\
    \ on line 18\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/(\\w)/e', '$1', strtoupper($string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmpgn9l0pcg.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpgn9l0pcg.php:13\nStack trace:\n\
    #0 /tmp/tmpgn9l0pcg.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpgn9l0pcg.php\
    \ on line 13\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = \"\";\n    for ($i = 0; $i < strlen($string);\
    \ ++$i) {\n        $flipped .= strtoupper($string[$i]);\n        $flipped .= strtolower($string[$i]);\n\
    \    }\n    return $flipped;\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbp84s417.php:19\n\
    Stack trace:\n#0 /tmp/tmpbp84s417.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbp84s417.php\
    \ on line 19\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_ireplace(strtolower($string), strtoupper($string),\
    \ $string);\n}\n</code>\n<|/ a dscore=3 |>\n<| a tags=php,string,replace dscore=3\
    \ |>\n<code>\n$str = 'Hello';\n$str = ucfirst($str);\n$str = strtolower($str);\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't work for the original poster's example.\
    \ ucfirst() returns a single character 'H' and strtolower() returns 'hello'.\n\
    <|/ c |>\n<| c |>\n: I realize that now, I thought that they wanted to convert\
    \ `hello` to `hello` and that they knew about `ucfirst()` and `strtolower()` but\
    \ forgot about `strtoupper()`.\n<|/ c |>\n<| a tags=php,string,replace |>\nFor\
    \ a general function, try this..\n<code>\nfunction candidate(...$args) {\n   \
    \ return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6j9pm9hz.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return ucfirst(strtolower($string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5bb61mk.php:14\n\
    Stack trace:\n#0 /tmp/tmpx5bb61mk.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpx5bb61mk.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtoupper(preg_replace('/\\B./', '', $string));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj95rrrkx.php:14\n\
    Stack trace:\n#0 /tmp/tmpj95rrrkx.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpj95rrrkx.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array_flip(str_split($string,\
    \ 1)));\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution (+1). Just\
    \ a note: the `strtr` function has been removed from PHP 7.1, so use `$string\
    \ = strtr($string, array_flip(str_split($string, 1)));` instead\n<|/ c |>\n<|\
    \ c |>\nI wanted to use a one-liner but I didn't like `strtr` so I did something\
    \ like this `str_replace(str_repeat($string2, count($string1)),$string1,$string);`\
    \ and it works just as well.\n<|/ c |>\n<| c |>\n: Thanks, I've updated the example\
    \ to show the one-liner version. Also, your solution would work but it is less\
    \ efficient, since you would need to repeat the whole array for each string in\
    \ the array. But that's probably not a big deal if you're doing this a lot of\
    \ times anyway.\n<|/ c |>\n<| c |>\nThe only thing that would be a problem would\
    \ be if OP wanted to support multiple cases in a single string, for example `\"\
    Hello to you too\"` would become `'heLlo to you to'`.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer for readability and compactness, especially for\
    \ someone who can't use an array_flip function. Nice!\n<|/ c |>\n<| a tags=string,php\
    \ dscore=5 |>\nThe simplest method would be to loop through each character and\
    \ flip it using the ternary operator. Something like this:\n<code>\n$str = \"\
    Hello\";\n$newStr = \"\";\n\nfor($i = 0; $i < strlen($str); $i++) {\n  $newStr\
    \ .= (isset($str[$i])) ? $str[$i] : strtoupper($str[$i]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpg2mdicpl.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $result = \"\";\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $result .= $string[$i];\n   \
    \ }\n    for ($i = 0; $i < $length; $i++) {\n        $result .= strtoupper($string[$i]);\n\
    \    }\n    for ($i = 0; $i < $length; $i++) {\n        $result .= strtolower($string[$i]);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihpiw88p.php:25\n\
    Stack trace:\n#0 /tmp/tmpihpiw88p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpihpiw88p.php\
    \ on line 25\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = preg_replace(\"/(\\w)/e\", \"strtoupper('\\\
    \\1')\", $string);\n    return preg_replace(\"/(\\w)/e\", \"strtolower('\\\\1')\"\
    , $flipped);\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmp96bugbec.php on line 6\n\nDeprecated:\
    \ preg_replace(): Passing null to parameter #3 ($subject) of type array|string\
    \ is deprecated in /tmp/tmp96bugbec.php on line 7\n\nWarning: preg_replace():\
    \ The /e modifier is no longer supported, use preg_replace_callback instead in\
    \ /tmp/tmp96bugbec.php on line 7\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp96bugbec.php:14\nStack trace:\n#0 /tmp/tmp96bugbec.php(19): test()\n\
    #1 {main}\n  thrown in /tmp/tmp96bugbec.php on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\treturn strtoupper(strtr($string, ['/[A-Z]/' => '/',\
    \ ]));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvo56sjm.php:14\n\
    Stack trace:\n#0 /tmp/tmpnvo56sjm.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpnvo56sjm.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/[^a-zA-Z0-9]+/', 'u', preg_replace('/[^a-zA-Z0-9]/',\
    \ '', $string));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9jcok2q.php:14\n\
    Stack trace:\n#0 /tmp/tmpa9jcok2q.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpa9jcok2q.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\treturn preg_replace(\"/(^[a-z]*|[a-z]*$)/i\", \"\\U$1\"\
    , $string);\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1t5ig9o.php:13\n\
    Stack trace:\n#0 /tmp/tmpf1t5ig9o.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpf1t5ig9o.php\
    \ on line 13\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array(\"a\"=>\"A\", \"b\"=>\"\
    B\", \"c\"=>\"C\", \"d\"=>\"D\", \"e\"=>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"\
    h\"=>\"H\", \"i\"=>\"I\", \"j\"=>\"J\", \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"\
    M\", \"n\"=>\"N\", \"o\"=>\"O\", \"p\"=>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"\
    s\"=>\"S\", \"t\"=>\"T\", \"u\"=>\"U\", \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"\
    X\", \"y\"=>\"Y\", \"z\"=>\"Z\", \"\xDF\"=>\"ss\", \"\u20AC\"=>\"E\", \"\u0161\
    \"=>\"s\", \"\u017E\"=>\"z\", \"\xEE\"=>\"i\", \"\u0160\"=>\"S\", \"\u017D\"=>\"\
    Z\"));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbz1yvcag.php:14\n\
    Stack trace:\n#0 /tmp/tmpbz1yvcag.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpbz1yvcag.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_strtoupper(mb_substr($string, 0, 1)) . mb_strtolower(mb_substr($string,\
    \ 1));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtoupper()\
    \ in /tmp/tmp8awqcrdz.php:6\nStack trace:\n#0 /tmp/tmp8awqcrdz.php(9): flip_case('')\n\
    #1 /tmp/tmp8awqcrdz.php(13): candidate('')\n#2 /tmp/tmp8awqcrdz.php(18): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8awqcrdz.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, \n              \
    \              'abcdefghijklmnopqrstuvwxyz' .\n                            'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\
    \ .\n                            '0123456789' .\n                            '!@#$%^&*()-_=+[]{}<>?:\"\
    |,.')).\n        strtolower($string);\n}\n\nfunction candidate(...$args) {\n \
    \   return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strtr(): Argument #2 ($from) must be\
    \ of type array, string given in /tmp/tmput6jznw7.php:10\nStack trace:\n#0 /tmp/tmput6jznw7.php(10):\
    \ strtr('', 'abcdefghijklmno...')\n#1 /tmp/tmput6jznw7.php(15): flip_case('')\n\
    #2 /tmp/tmput6jznw7.php(19): candidate('')\n#3 /tmp/tmput6jznw7.php(24): test()\n\
    #4 {main}\n  thrown in /tmp/tmput6jznw7.php on line 10\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string  = strtolower($string);\n    $result = strtoupper($string);\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1q3v2zt.php:16\n\
    Stack trace:\n#0 /tmp/tmp_1q3v2zt.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp_1q3v2zt.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return lcfirst(strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhbhokvq.php:15\n\
    Stack trace:\n#0 /tmp/tmpqhbhokvq.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpqhbhokvq.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtolower(preg_replace('/./u', 'U', $string));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80vgvfjf.php:15\n\
    Stack trace:\n#0 /tmp/tmp80vgvfjf.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp80vgvfjf.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = str_replace(array('a','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3','4','5','6','7','8','9'),\
    \ array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3','4','5','6','7','8','9'),\
    \ $string);\n    return str_replace(array('hELLO'), array('Hello'), $flipped);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu5__fz2.php:16\n\
    Stack trace:\n#0 /tmp/tmpzu5__fz2.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpzu5__fz2.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 0
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $flipped = \"\";\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    $flipped .= (ctype_lower($string[$i]) ? strtoupper($string[$i])\
    \ : strtolower($string[$i]));\n  }\n  return $flipped;\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\
    \ 'abcdefghijklmnopqrstuvwxyz'));\n}\n\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50l4ljru.php:15\n\
    Stack trace:\n#0 /tmp/tmp50l4ljru.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp50l4ljru.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $lowercase = array();\n    $uppercase = array();\n\
    \    foreach (str_split($string) as $char) {\n        // Flip lowercase characters.\n\
    \        if (ctype_lower($char)) {\n            $uppercase[] = strtoupper($char);\n\
    \        }\n        // Flip uppercase characters.\n        else {\n          \
    \  $lowercase[] = strtolower($char);\n        }\n    }\n    return implode('',\
    \ $lowercase + $uppercase);\n}\n</code>\n<|/ a |>\n<| a tags=php,string |>\nI\
    \ have not tested this code. Just a way to make things clear.\n<code>\n<?php\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwb5mzmo7.php
    on line 20

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace(\"/([a-z])/i\", \"\
    $1\" . strtoupper($string), $string));\n}\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfhq_8ly.php:15\n\
    Stack trace:\n#0 /tmp/tmpjfhq_8ly.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpjfhq_8ly.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array('a'=>'A','b'=>'B','c'=>'C','d'=>'D','e'=>'E','f'=>'F','g'=>'G','h'=>'H','i'=>'I','j'=>'J','k'=>'K','l'=>'L','m'=>'M','n'=>'N','o'=>'O','p'=>'P','q'=>'Q','r'=>'R','s'=>'S','t'=>'T','u'=>'U','v'=>'V','w'=>'W','x'=>'X','y'=>'Y','z'=>'Z'));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft5u699u.php:14\n\
    Stack trace:\n#0 /tmp/tmpft5u699u.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpft5u699u.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    , \"abcdefghijklmnopqrstuvwxyz\"));\n}\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_8bx7ds.php:14\n\
    Stack trace:\n#0 /tmp/tmpu_8bx7ds.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpu_8bx7ds.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n\t$upper = strtoupper($string);\n\t$lower = strtolower($string);\n\
    \treturn $upper === $lower ? $string : $upper;\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpithmorb_.php:16\n\
    Stack trace:\n#0 /tmp/tmpithmorb_.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpithmorb_.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtolower($string) . strtoupper($string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86r4s873.php:15\n\
    Stack trace:\n#0 /tmp/tmp86r4s873.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp86r4s873.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return mb_strtoupper(mb_strtolower($string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtoupper()\
    \ in /tmp/tmp2i8v7e_8.php:6\nStack trace:\n#0 /tmp/tmp2i8v7e_8.php(9): flip_case('')\n\
    #1 /tmp/tmp2i8v7e_8.php(13): candidate('')\n#2 /tmp/tmp2i8v7e_8.php(18): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2i8v7e_8.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array('~E' => \"~e\", '~h' =>\
    \ \"~H\", '~l' => \"~l\", '~o' => \"~O\", '~s' => \"~S\", '~u' => \"~U\", '~a'\
    \ => \"~a\",\n        '~c' => \"~C\", '~e' => \"~e\", '~i' => \"~i\", '~o' =>\
    \ \"~O\", '~u' => \"~U\", '~y' => \"~Y\", '~u' => \"~U\"));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5l07ulol.php:16\n\
    Stack trace:\n#0 /tmp/tmp5l07ulol.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5l07ulol.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/./', function($match) { return\
    \ strtoupper($match); }, $string);\n}\n\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: preg_replace(): Argument #2 ($replacement)\
    \ must be of type array|string, Closure given in /tmp/tmpjixy16f9.php:6\nStack\
    \ trace:\n#0 /tmp/tmpjixy16f9.php(6): preg_replace('/./', Object(Closure), '')\n\
    #1 /tmp/tmpjixy16f9.php(10): flip_case('')\n#2 /tmp/tmpjixy16f9.php(14): candidate('')\n\
    #3 /tmp/tmpjixy16f9.php(19): test()\n#4 {main}\n  thrown in /tmp/tmpjixy16f9.php\
    \ on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = strtolower($string);\n    return ucfirst($string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrq87krc.php:16\n\
    Stack trace:\n#0 /tmp/tmpsrq87krc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpsrq87krc.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(strtolower($string), array('a'=>'A','b'=>'B','c'=>'C','d'=>'D','e'=>'E','f'=>'F','g'=>'G','h'=>'H','i'=>'I','j'=>'J','k'=>'K','l'=>'L','m'=>'M','n'=>'N','o'=>'O','p'=>'P','q'=>'Q','r'=>'R','s'=>'S','t'=>'T','u'=>'U','v'=>'V','w'=>'W','x'=>'X','y'=>'Y','z'=>'Z'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uaaf58l.php:15\n\
    Stack trace:\n#0 /tmp/tmp9uaaf58l.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9uaaf58l.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, array('a' => \"A\"\
    , \"b\" => \"B\", \"c\" => \"C\", \"d\" => \"D\", \"e\" => \"E\", \"f\" => \"\
    F\", \"g\" => \"G\", \"h\" => \"H\", \"i\" => \"I\", \"j\" => \"J\", \"k\" =>\
    \ \"K\", \"l\" => \"L\", \"m\" => \"M\", \"n\" => \"N\", \"o\" => \"O\", \"p\"\
    \ => \"P\", \"q\" => \"Q\", \"r\" => \"R\", \"s\" => \"S\", \"t\" => \"T\", \"\
    u\" => \"U\", \"v\" => \"V\", \"w\" => \"W\", \"x\" => \"X\", \"y\" => \"Y\",\
    \ \"z\" => \"Z\")));\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you very much,\
    \ this is just what I was looking for! :)\n<|/ c |>\n<| a |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp292_rkuv.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(strtolower($string), array('!' => '!',\
    \ \"'\" => \"''\", '\"' => '\"', \n                                          \
    \    '#' => '#', '$' => '$', '?' => '?'));\n}\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzpoozhj.php:15\n\
    Stack trace:\n#0 /tmp/tmpqzpoozhj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpqzpoozhj.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return str_replace(\n        array('a', 'e', 'i',\
    \ 'o', 'u'),\n        array('A', 'E', 'I', 'O', 'U'),\n        $string);\n}\n\
    $str = flip_case($str);\necho $str;\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $str in /tmp/tmpq0gyo767.php on line 11\n\
    \nDeprecated: str_replace(): Passing null to parameter #3 ($subject) of type array|string\
    \ is deprecated in /tmp/tmpq0gyo767.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpq0gyo767.php:19\nStack trace:\n#0 /tmp/tmpq0gyo767.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq0gyo767.php on line 19\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return str_replace(\n        array('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z'),\n        array('A', 'B', 'C', 'D', 'E',\
    \ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\
    \ 'V', 'W', 'X', 'Y', 'Z'),\n        $string\n    );\n}\n</code>\nNow the only\
    \ thing you need to do is create a second function which takes in your text and\
    \ returns the HTML for the table you want. Then you can use that function to generate\
    \ the HTML of the table as needed.\n<code>\nfunction candidate(...$args) {\n \
    \   return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp99e3rrag.php
    on line 12

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/./u', '\\uFFFD',\
    \ $string));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeq6tda9d.php:14\n\
    Stack trace:\n#0 /tmp/tmpeq6tda9d.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpeq6tda9d.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/(^|[a-z])/i','$1',$string));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpel7oiuqa.php:15\n\
    Stack trace:\n#0 /tmp/tmpel7oiuqa.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpel7oiuqa.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return strtr(strtolower($string), array('a' => 'A',\
    \ 'b' => 'B', 'c' => 'C', 'd' => 'D', 'e' => 'E', 'f' => 'F', 'g' => 'G', 'h'\
    \ => 'H', 'i' => 'I', 'j' => 'J', 'k' => 'K', 'l' => 'L', 'm' => 'M', 'n' => 'N',\
    \ 'o' => 'O', 'p' => 'P', 'q' => 'Q', 'r' => 'R', 's' => 'S', 't' => 'T', 'u'\
    \ => 'U', 'v' => 'V', 'w' => 'W', 'x' => 'X', 'y' => 'Y', 'z' => 'Z'));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp194qhiif.php:15\n\
    Stack trace:\n#0 /tmp/tmp194qhiif.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp194qhiif.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtolower($string));\n}\n</code>\n\
    <|/ a tags=case,php,string |>\n<| a tags=case,php,string |>\nI like using ucfirst()\
    \ and ucwords() to achieve this easily.\n<code>\nucfirst($string)\n</code>\nWill\
    \ make the first letter uppercase, and\n<code>\nucwords($string)\n</code>\nWill\
    \ make the first letter of the string into uppercase, followed by the rest of\
    \ the string with first letter capitalized with the rest of the string in lowercase.\n\
    <|/ a dscore=4 |>\n<| c |>\nThis is the best answer.\n<|/ c |>\n<| a tags=case,php,string\
    \ |>\nThe easiest way is to capitalize the first letter of each word in a string\
    \ and then lowercase all others.\n<code>\nfunction candidate(...$args) {\n   \
    \ return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmprtx03gxf.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $return = '';\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    if (ctype_upper($string[$i])) {\n      $return .= strtolower($string[$i]);\n\
    \    }\n    $return .= strtoupper($string[$i]);\n  }\n  return $return;\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydmwk6w5.php:21\n\
    Stack trace:\n#0 /tmp/tmpydmwk6w5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpydmwk6w5.php\
    \ on line 21\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return implode('', array_map('ucfirst', str_split($string,\
    \ 1)));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcthpe2k5.php:14\n\
    Stack trace:\n#0 /tmp/tmpcthpe2k5.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpcthpe2k5.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = strtolower($string);\n    $string = ucfirst($string);\n\
    \    return strtoupper($string);\n}\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0x7khbvv.php:16\n\
    Stack trace:\n#0 /tmp/tmp0x7khbvv.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp0x7khbvv.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/([a-z])/i', '\\U$1', $string);\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxul1uca5.php:15\n\
    Stack trace:\n#0 /tmp/tmpxul1uca5.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpxul1uca5.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $lowercase = $string;\n    $uppercase = strtoupper($string);\n\
    \    $string = $lowercase . strtolower($uppercase);\n    return $string;\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmhkj5m1.php:18\n\
    Stack trace:\n#0 /tmp/tmptmhkj5m1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmptmhkj5m1.php\
    \ on line 18\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = strtolower($string);\n    $flipped = preg_replace('/\\\
    s(\\w)/e', 'strtoupper(\"$1\")', $flipped);\n    return $flipped;\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmpgorg_7lx.php on line 7\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpgorg_7lx.php:16\nStack trace:\n\
    #0 /tmp/tmpgorg_7lx.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpgorg_7lx.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return $string\n        . str_replace(\n         \
    \   array_map(\n                \"chr\",\n                range(65, 90)\n    \
    \        ),\n            array_map(\n                \"chr\",\n              \
    \  range(90, 122)\n            ),\n            str_replace(\n                \"\
    '\",\n                \"\",\n                strtolower($string)\n           \
    \ )\n        )\n        . str_replace(\n            array_map(\n             \
    \   \"chr\",\n                range(65, 90)\n            ),\n            array_map(\n\
    \                \"chr\",\n                range(90, 122)\n            ),\n  \
    \          str_replace(\n                \"'\",\n                \"\",\n     \
    \           strtoupper($string)\n            )\n        );\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nYes, I didn't think there would be a way to do this more\
    \ easily. Thanks for helping me out :)\n<|/ c |>\n<| a tags=string,lowercase,php,uppercase\
    \ |>\nThe strtolower() and strtoupper() functions are useful for this.\n<code>\n\
    <?php\necho strtolower($string);\necho strtoupper($string);\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6r1oukv5.php
    on line 38

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  $string = preg_replace('/([a-z])/i', '\\U$1', $string);\
    \ // convert letter to uppercase\n  $string = preg_replace('/([A-Z])/i', '\\L$1',\
    \ $string); // convert letter to lowercase\n  return $string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96xpbqip.php:17\n\
    Stack trace:\n#0 /tmp/tmp96xpbqip.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp96xpbqip.php\
    \ on line 17\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, array('a'=>'A', 'b'=>'B',\
    \ 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J',\
    \ 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R',\
    \ 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z',\
    \ ' '=>' ')));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp804jsla8.php:14\n\
    Stack trace:\n#0 /tmp/tmp804jsla8.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp804jsla8.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/(^[a-z])|([A-Z])/', '$\\\\1'.'\\\
    \\2', $string);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp9v1kgw.php:15\n\
    Stack trace:\n#0 /tmp/tmpjp9v1kgw.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpjp9v1kgw.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = mb_strtoupper($string, 'UTF-8');\n    $string\
    \ = mb_strtolower($string, 'UTF-8');\n    return $string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtoupper()\
    \ in /tmp/tmpm5_7j831.php:6\nStack trace:\n#0 /tmp/tmpm5_7j831.php(12): flip_case('')\n\
    #1 /tmp/tmpm5_7j831.php(16): candidate('')\n#2 /tmp/tmpm5_7j831.php(21): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm5_7j831.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    // For each character, use the `mb_strtolower` function\
    \ to flip lowercase characters\n    // to uppercase and use the `mb_strtoupper`\
    \ function to uppercase to lowercase\n    return mb_strtoupper(mb_strtolower($string));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtoupper()\
    \ in /tmp/tmp_sxd76ha.php:8\nStack trace:\n#0 /tmp/tmp_sxd76ha.php(12): flip_case('')\n\
    #1 /tmp/tmp_sxd76ha.php(16): candidate('')\n#2 /tmp/tmp_sxd76ha.php(21): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_sxd76ha.php on line 8\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(str_replace($string, substr($string,\
    \ 0, 1), $string));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl5yqrkl.php:15\n\
    Stack trace:\n#0 /tmp/tmpwl5yqrkl.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpwl5yqrkl.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array('!' => '!', '?' => '?',\
    \ '$' => '$', '&' => '&', \"'\" => \"'\",\n        '(' => '(', ')' => ')', '*'\
    \ => '*', '/' => '/', ':' => ':', ';' => ';',\n        '<' => '<', '>' => '>',\
    \ '=' => '=', '|' => '|', '~' => '~', '!~' => '!~',\n        '@' => '@', '^' =>\
    \ '^', '&=' => '&=', '^=' => '^=', '|=' => '|=', '<=' => '<=',\n        '>=' =>\
    \ '>=', '!=' => '!=', '<>' => '<>', '=!' => '=!', ':!' => '=!',\n        ':@'\
    \ => ':@', '::' => '::', '>!' => '>!', '<!' => '<!', '<@' => '<@',\n        '>@'\
    \ => '>@', '!>' => '!>', '!<' => '!<', '<!' => '<!', '>!' => '>!',\n        '<@'\
    \ => '<@', '!!' => '!!', '!!!' => '!!!', '!?' => '!?', '!??' => '!??',\n     \
    \   '?!' => '?!', '??' => '??', '???' => '???', '????' => '????', '?????' => '?????',\n\
    \        '??????' => '??????', '???????' => '???????'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptu2man26.php:24\n\
    Stack trace:\n#0 /tmp/tmptu2man26.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptu2man26.php\
    \ on line 24\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/(^|(?<=\\\\s))[a-z]/i',\
    \ '\\\\U$1', $string));\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$string = 'HELLO';\n$newstring = ucwords(str_replace(array(\"'\",\".\"\
    ,\"!\",\"?\",\"(\",\")\",\"[\",\"]\",\"{\",\"}\",\"/\",\"-\",\"_\",\"=\"),\narray(\"\
    \\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\"\
    ,\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\
    \",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\
    \"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\
    \\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\"\
    ,\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\
    \",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\
    \"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\
    \\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\"\
    ,\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\
    \",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\
    \"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\
    \\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\"\
    ,\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\
    \",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\
    \"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\
    \\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\"\
    ,\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\
    \",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\
    \"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\
    \\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\"\
    ,\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\
    \",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\
    \"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\"\\\"\",\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjr4922fw.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(str_replace($string, '', $string));\n\
    }\n</code>\nThe flip-case function is defined above. The last step is calling\
    \ the flip function on the string that we want to uppercase.\n<code>\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpvowm1dkc.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(\n        $string,\n        array('a'=>'A',\
    \ 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I',\
    \ 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q',\
    \ 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y',\
    \ 'z'=>'Z', '0'=>'a', '1'=>'b', '2'=>'c', '3'=>'d', '4'=>'e', '5'=>'f', '6'=>'g',\
    \ '7'=>'h', '8'=>'i', '9'=>'j', 'a'=>'k', 'b'=>'l', 'c'=>'m', 'd'=>'n', 'e'=>'o',\
    \ 'f'=>'p', 'g'=>'q', 'r'=>'s', 's'=>'t', 't'=>'u', 'v'=>'w', 'x'=>'y', 'z'=>'z',\
    \ ' '=>'')\n    );\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3bcj_a1.php:17\n\
    Stack trace:\n#0 /tmp/tmpl3bcj_a1.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpl3bcj_a1.php\
    \ on line 17\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return str_replace([\n        'A' => 'a',\n        'B'\
    \ => 'b',\n        'C' => 'c',\n        'D' => 'd',\n        'E' => 'e',\n   \
    \     'F' => 'f',\n        'G' => 'g',\n        'H' => 'h',\n        'I' => 'i',\n\
    \        'J' => 'j',\n        'K' => 'k',\n        'L' => 'l',\n        'M' =>\
    \ 'm',\n        'N' => 'n',\n        'O' => 'o',\n        'P' => 'p',\n      \
    \  'Q' => 'q',\n        'R' => 'r',\n        'S' => 's',\n        'T' => 't',\n\
    \        'U' => 'u',\n        'V' => 'v',\n        'W' => 'w',\n        'X' =>\
    \ 'x',\n        'Y' => 'y',\n        'Z' => 'z',\n        '-' => '-',\n      \
    \  '_' => '_',\n        '.' => '.'\n    ], [\n        'a' => 'A',\n        'b'\
    \ => 'B',\n        'c' => 'C',\n        'd' => 'D',\n        'e' => 'E',\n   \
    \     'f' => 'F',\n        'g' => 'G',\n        'h' => 'H',\n        'i' => 'I',\n\
    \        'j' => 'J',\n        'k' => 'K',\n        'l' => 'L',\n        'm' =>\
    \ 'M',\n        'n' => 'N',\n        'o' => 'O',\n        'p' => 'P',\n      \
    \  'q' => 'Q',\n        'r' => 'R',\n        's' => 'S',\n        't' => 'T',\n\
    \        'u' => 'U',\n        'v' => 'V',\n        'w' => 'W',\n        'x' =>\
    \ 'X',\n        'y' => 'Y',\n        'z' => 'Z',\n        '-' => '-',\n      \
    \  '_' => '_',\n        '.' => '.'\n    ], $string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt34eg2k3.php:74\n\
    Stack trace:\n#0 /tmp/tmpt34eg2k3.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpt34eg2k3.php\
    \ on line 74\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/./u', 'u', $string);\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwz7zhtz.php:14\n\
    Stack trace:\n#0 /tmp/tmpuwz7zhtz.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpuwz7zhtz.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return mb_strtoupper(mb_strtolower($string));\n}\n\
    </code>\n<|/ a tags=php,character-encoding |>\n<| a tags=php,character-encoding\
    \ |>\nI've found this solution\n<code>\n/**\n * Convert text to lower case with\
    \ UTF-8 encoding\n *\n * string $text\n * string\n */\npublic static function\
    \ toLower($text)\n{\n    $chars = [\n        \"\\xE2\\x80\\x80\" => '\xE1',\n\
    \        \"\\xE2\\x80\\x81\" => '\xE9',\n        \"\\xE2\\x80\\x82\" => '\xED\
    ',\n        \"\\xE2\\x80\\x83\" => '\xF3',\n        \"\\xE2\\x80\\x84\" => '\xFA\
    ',\n        \"\\xE2\\x80\\x85\" => '\xE0',\n        \"\\xE2\\x80\\x86\" => '\xE8\
    ',\n        \"\\xE2\\x80\\x87\" => '\xEC',\n        \"\\xE2\\x80\\x88\" => '\xF2\
    ',\n        \"\\xE2\\x80\\x89\" => '\xF9',\n    ];\n\n    $result = '';\n    $length\
    \ = mb_strlen($text, 'UTF-8');\n\n    for ($i = 0; $i < $length; $i++) {\n   \
    \     if ($i == $length - 1)\n            $result .= mb_strtolower($text[$i],\
    \ 'UTF-8');\n        else\n            $result .= mb_strtolower($text[$i], 'UTF-8').$text[$i\
    \ + 1];\n\n        if (isset($chars[$result]))\n            $result = $chars[$result];\n\
    \    }\n\n    return $result;\n}\n</code>\nThis solutions works for me, I've tested\
    \ it.\n<|/ a dscore=2 |>\n<| a tags=php,character-encoding dscore=1 |>\nIf you're\
    \ doing this as part of a script that's already in UTF-8, you don't need to do\
    \ anything except make sure you're saving it as UTF-8. PHP will handle it automatically\
    \ for you.\nIf you're doing this as part of a web form, you should set the meta\
    \ tag in the HTML page to tell the browser which encoding the data is. If you\
    \ need help with the meta tag, google \"meta charset utf-8\".\n<|/ a |>\n<| c\
    \ |>\nHi, thanks for your reply. I have a form that collects data from a user.\
    \ The form is UTF-8 encoded. The problem is that I need to convert the data entered\
    \ by the user from UTF-8 to ASCII. The form is UTF-8 encoded. When I submit the\
    \ form and view the data on the webpage that I have created, the data is returned\
    \ to me in UTF-8 format. I need to convert it to ASCII format. Is this possible?\
    \ Thanks\n<|/ c |>\n<| c |>\nIf the form is UTF-8 encoded, then you shouldn't\
    \ need to do anything to convert it.\n<|/ c |>\n<|\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmps02f5j2j.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace_callback('/./u', function($match)\
    \ {\n        return strtoupper($match[0]);\n    }, $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo8iaefr.php:17\n\
    Stack trace:\n#0 /tmp/tmpbo8iaefr.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpbo8iaefr.php\
    \ on line 17\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    // Use string functions to flip the case\n    return\
    \ strtoupper(str_replace($string, '', $string));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgidmtnff.php:16\n\
    Stack trace:\n#0 /tmp/tmpgidmtnff.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpgidmtnff.php\
    \ on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n  return preg_replace('/(^|(?<=\\s))(\\w)/e', \"strtoupper('$0')\"\
    , $string);\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmpbo0dw_sk.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpbo0dw_sk.php:14\nStack trace:\n\
    #0 /tmp/tmpbo0dw_sk.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpbo0dw_sk.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = \"\";\n\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        if (preg_match(\"/[a-z]/i\", $string[$i])) {\n            $flipped\
    \ .= strtoupper($string[$i]);\n        } else {\n            $flipped .= $string[$i];\n\
    \        }\n    }\n\n    return $flipped;\n}\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrvp4zf3.php:24\n\
    Stack trace:\n#0 /tmp/tmphrvp4zf3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphrvp4zf3.php\
    \ on line 24\n"
  timestamp: 1660028108
- exit_code: 0
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $flipped = '';\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $flipped .= (ctype_upper($string[$i]) ? strtolower($string[$i])\
    \ : strtoupper($string[$i]));\n    }\n    return $flipped;\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr(strtolower($string), array_flip(\n  \
    \      str_replace(\n            'abcdef',\n            'ABCDEF',\n          \
    \  str_replace(\n                'zyz',\n                'zyZ',\n            \
    \    str_replace(\n                    'ABC',\n                    'abc',\n  \
    \                  $string\n                )\n            )\n        )\n    ));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_flip(): Argument #1 ($array) must\
    \ be of type array, string given in /tmp/tmpkne3vl81.php:16\nStack trace:\n#0\
    \ /tmp/tmpkne3vl81.php(16): array_flip('')\n#1 /tmp/tmpkne3vl81.php(24): flip_case('')\n\
    #2 /tmp/tmpkne3vl81.php(28): candidate('')\n#3 /tmp/tmpkne3vl81.php(33): test()\n\
    #4 {main}\n  thrown in /tmp/tmpkne3vl81.php on line 16\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $new = '';\n    foreach (str_split($string) as $letter)\
    \ {\n        if (ctype_upper($letter)) {\n            $new .= strtolower($letter);\n\
    \        } else {\n            $new .= strtoupper($letter);\n        }\n    }\n\
    \    return $new;\n}\n</code>\n<|/ a tags=javascript,php |>\n<| c |>\nThe OP asks\
    \ for JS and PHP (client-side).\n<|/ c |>\n<| c |>\nAh, sorry, didn't see the\
    \ PHP tag.  Updated answer.\n<|/ c |>\n<| a dscore=2 |>\nHere is a jquery function\
    \ that does the same.\n<code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7hnv0yhr.php
    on line 16

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $string = preg_replace(\"/([a-z])/\", \"\\U$1\", $string);\n\
    \    $string = preg_replace(\"/([A-Z])/\", \"\\L$1\", $string);\n    return $string;\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd84nvvoa.php:17\n\
    Stack trace:\n#0 /tmp/tmpd84nvvoa.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd84nvvoa.php\
    \ on line 17\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/(.)([A-Z])/', '$2$1', $string);\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis is a cool solution, but you forgot to include\
    \ `/` at the end of the string\n<|/ c |>\n<| c |>\n: Thanks, fixed. Thanks for\
    \ the heads-up.\n<|/ c |>\n<| a tags=php,string,regex,replace dscore=0 |>\nAnother\
    \ approach:\n<code>\n$str=\"Hello\";\n$str2=strtolower($str);\n$str3=strtoupper($str2);\n\
    </code>\n<|/ a |>\n<| a dscore=0 |>\nI did a little research about this and I\
    \ found a solution that can be useful to someone!\n<code>\n<?php\n$string=\"Hello\"\
    ;\n$string=preg_replace(\"/./\",\"$&$0\",$string);\necho $string;\n</code>\n<|/\
    \ a tags=php,string,regex,replace |>\n<| c |>\nThis is wrong; see [my answer](http://stackoverflow.com/a/17137531/171318).\n\
    <|/ c |>\n<| c |>\nWhy the downvote? The code works and does exactly what was\
    \ asked\n<|/ c |>\n<| a |>\nHere is an answer based on this excellent answer by\
    \ Joseph:\n<code>\n$string = 'Hello';\n\n$string = preg_replace_callback('/./',\
    \ function($matches) {\n    return $matches[0] . strtoupper($matches[0]);\n},\
    \ $string);\n\necho $string;\n</code>\nOutput is: hELLO\n<|/ a dscore=0 tags=php,string,regex,replace\
    \ |>\n<| a tags=php,string,regex,replace |>\nTo convert a camelcase to a snakecase\
    \ you can use this:\n<code>\n$string = \"Hello\";\n$result = preg_replace('/([A-Z])/',\
    \ '$0\\U$0', $string);\n</code>\nIt replaces every uppercase letter by a lowercase\
    \ and uppercase letter back again.\n<|/ a dscore=0 |>\n<| c |>\nI think this can\
    \ be simplified as `/([A-Z])/`\n<|/ c |>\n<| a tags=php,string,regex,replace |>\n\
    For converting camelCase to snakeCase I used:\n<code>\n$camelCase = 'helloWorld';\n\
    \n$snakeCase = preg_replace('/(?<=.)([A-Z])/', '\\U$0', $camelCase);\n</code>\n\
    <|/ a dscore=0 |>\n<| c \nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphz9_6wi5.php
    on line 8

    '
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtr($string, array_flip(str_split('ABCDEFGHIJKLMNOPQRSTUVWXYZ')));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphj6xn7ml.php:15\n\
    Stack trace:\n#0 /tmp/tmphj6xn7ml.php(19): test()\n#1 {main}\n  thrown in /tmp/tmphj6xn7ml.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return implode('', array_map('ucfirst', str_split($string)));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz21i37rm.php:14\n\
    Stack trace:\n#0 /tmp/tmpz21i37rm.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpz21i37rm.php\
    \ on line 14\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(preg_replace('/./u', '',\n     \
    \   $string));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27gt_r83.php:15\n\
    Stack trace:\n#0 /tmp/tmp27gt_r83.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp27gt_r83.php\
    \ on line 15\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    $result = \"\";\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $char = $string[$i];\n      \
    \  if ($char != strtolower($char)) {\n            $charUp = strtoupper($char);\n\
    \            $result .= $charUp;\n        } else {\n            $result .= $char;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe65rof95.php:26\n\
    Stack trace:\n#0 /tmp/tmpe65rof95.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe65rof95.php\
    \ on line 26\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return strtoupper(strtr($string, MB_CASE_TITLE, ''));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"MB_CASE_TITLE\" in\
    \ /tmp/tmpy230wtkg.php:6\nStack trace:\n#0 /tmp/tmpy230wtkg.php(10): flip_case('')\n\
    #1 /tmp/tmpy230wtkg.php(14): candidate('')\n#2 /tmp/tmpy230wtkg.php(19): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy230wtkg.php on line 6\n"
  timestamp: 1660028108
- exit_code: 255
  program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction\
    \ flip_case($string) {\n    return preg_replace('/([a-z])/', '$U\\1', $string);\n\
    }\n$string = flip_case($string);\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $string in /tmp/tmpmhxnpgia.php on line 8\n\
    \nDeprecated: preg_replace(): Passing null to parameter #3 ($subject) of type\
    \ array|string is deprecated in /tmp/tmpmhxnpgia.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpmhxnpgia.php:15\nStack trace:\n\
    #0 /tmp/tmpmhxnpgia.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpmhxnpgia.php\
    \ on line 15\n"
  timestamp: 1660028108

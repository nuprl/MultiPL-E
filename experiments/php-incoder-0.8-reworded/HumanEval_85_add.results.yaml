language: php
name: HumanEval_85_add
results:
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if ($lst==null) return null;\n    foreach ($lst as $i=>$x)\
    \ {\n        if ($i%2==1) return $x+$lst[$i+1];\n    }\n    return null;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpo9llo2hp.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpo9llo2hp.php:20\nStack\
    \ trace:\n#0 /tmp/tmpo9llo2hp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo9llo2hp.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = [];\n    for ($i = 0, $n = count($lst); $i\
    \ < $n; $i += 2) {\n        $evens[] = $lst[$i];\n    }\n    return count($evens)\
    \ ? $evens[0] : 0;\n}\n</code>\nFor example using your array:\n<code>\necho add($arr);\n\
    </code>\nOutput\n<code>\n2\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis answer got\
    \ my vote for the most minimal code - and I voted for it, but for completeness,\
    \ I would suggest that `return count($evens) ? $evens[0] : 0;` is replaced with\
    \ `return array_sum($evens);` which would reduce that function in half to just\
    \ `return array_sum($arr);` - and that would make your answer even better - if\
    \ you don't mind my saying :)\n<|/ c |>\n<| c |>\n: yes, that's an option. I prefer\
    \ to reduce code to the minimum so I don't have to read it more than once. Sometimes\
    \ it's also better to use a short `if` statement than to reduce code just to save\
    \ space and make the code more readable. Of course it depends on the situation.\
    \ I also like ternary operators better than `if`s because they make the code more\
    \ readable in my opinion.\n<|/ c |>\n<| c |>\nThank you for the answer and your\
    \ time. I found your answer more practical and easy to understand but accepted\
    \ Jonathan's answer because it was the most succinct and efficient. I appreciate\
    \ your help and feedback.\n<|/ c |>\n<| c |>\n: No problem. I always prefer a\
    \ readable and easy to understand code, because if you have to debug a bug you\
    \ can always understand and debug it yourself by looking at the code. It's more\
    \ flexible and easier to maintain.\n<|/ c |>\n<| c |>\nI agree, which is why I\
    \ upvoted your answer ;) But I prefer Jonathan's answer as well.\n<|/ c |>\n<|\
    \ a dscore=2 |>\nAnother approach:\n<code>\n$sum = 0;\n$evens = [];\nfor ($i =\
    \ 0, $n = count($arr); $i < $n; $i+=2) {\n    $sum += $arr[$i];\n    $evens[]\
    \ = $arr[$i];\n}\nif ($sum != 0) {\n    return $sum;\n}\nreturn $evens[0];\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=2 tags=php,arrays |>\nHere's a solution\
    \ \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpg9gp71no.php
    on line 13

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = 0;\n    $odds = 0;\n    foreach ($lst as $v)\
    \ {\n        if ($v % 2 == 0) {\n            $evens += $v;\n        } else {\n\
    \            $odds += $v;\n        }\n    }\n    return $evens + $odds;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebj0ffmj.php:24\n\
    Stack trace:\n#0 /tmp/tmpebj0ffmj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpebj0ffmj.php\
    \ on line 24\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (empty($lst) || !is_array($lst)) {\n        throw\
    \ new InvalidArgumentException('Cannot add non-array elements!');\n    }\n\n \
    \   $evensIndex = [];\n    foreach ($lst as $k => $v) if ($k % 2 === 0) $evensIndex[]\
    \ = $k;\n\n    return array_sum(array_slice($lst,\n        count($evensIndex),\n\
    \        count($lst) - count($evensIndex)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr6_558x.php:25\n\
    Stack trace:\n#0 /tmp/tmpqr6_558x.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqr6_558x.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even_indices = array();\n  $odd_indices = array();\n\
    \  foreach ($lst as $i => $v) {\n    if ($i % 2 === 0) {\n      $even_indices[]\
    \ = $i;\n    } else {\n      $odd_indices[] = $i;\n    }\n  }\n  return array_sum(array_slice($lst,0,$even_indices))\
    \ + array_sum(array_slice($lst,$even_indices));\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_slice(): Argument #3 ($length)\
    \ must be of type ?int, array given in /tmp/tmp3z73qw28.php:16\nStack trace:\n\
    #0 /tmp/tmp3z73qw28.php(16): array_slice(Array, 0, Array)\n#1 /tmp/tmp3z73qw28.php(20):\
    \ add(Array)\n#2 /tmp/tmp3z73qw28.php(24): candidate(Array)\n#3 /tmp/tmp3z73qw28.php(30):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmp3z73qw28.php on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\t$evens = $odds = array();\n\tforeach($lst as $key => $value)\
    \ {\n\t\t$key % 2 == 0 ? $evens[] = $value : $odds[] = $value;\n\t}\n\treturn\
    \ count($evens) ? $evens[0] : $odds[0];\n}\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi53ijzo_.php:19\n\
    Stack trace:\n#0 /tmp/tmpi53ijzo_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi53ijzo_.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $e) {\n        if ($e\
    \ % 2 != 0) {\n            $sum += $e;\n        }\n    }\n    return $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8sif1fx7.php:21\n\
    Stack trace:\n#0 /tmp/tmp8sif1fx7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8sif1fx7.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $result = 0;\n  for ($i = 0; $i < count($lst); $i ++)\
    \ {\n    if ($i % 2 == 1) {\n      $result += $lst[$i];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk9yec2b.php:22\n\
    Stack trace:\n#0 /tmp/tmpmk9yec2b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk9yec2b.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach($lst as $i => $x) {\n        if ($i%2 == 0)\
    \ $lst[$i] = $x + $lst[$i+1];\n    }\n    return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0hi73lv.php:18\n\
    Stack trace:\n#0 /tmp/tmpa0hi73lv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa0hi73lv.php\
    \ on line 18\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    foreach ($lst as $key => $value) {\n\
    \        if ($key % 2 == 0) {\n            $res += $value;\n        }\n    }\n\
    \    return $res;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3g5ellbj.php:21\n\
    Stack trace:\n#0 /tmp/tmp3g5ellbj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3g5ellbj.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $add = 0;\n    foreach ($lst as $i => $val) {\n    \
    \    if ($i % 2 == 0) {\n            $add += $val;\n        }\n    }\n    return\
    \ $add;\n}\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5zcs019.php:20\n\
    Stack trace:\n#0 /tmp/tmpu5zcs019.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpu5zcs019.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $i => $num) {\n    \
    \    if ($i % 2 == 0) {\n            $sum += $num;\n        }\n    }\n    return\
    \ $sum;\n}\n</code>\n<|/ a |>\n<| a tags=arrays,php |>\n<code>\n$arr = [1, 2,\
    \ 3, 4, 5, 6, 7];\n$arr = (array)$arr;\n$sum = 0;\nforeach ($arr as $key => $value)\
    \ {\n  if ($key % 2 === 0) {\n    $sum += $value;\n  }\n}\necho $sum;\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nNo need to convert to array before using foreach.\
    \ Since PHP 5.5 foreach works with array and associative arrays alike.\n<|/ c\
    \ |>\n<| c |>\nWhat about if array is multidimensional? Would it be possible to\
    \ loop through each dimension? Like looping through each row and column?\n<|/\
    \ c |>\n<| a tags=arrays,php |>\nUsing array_filter() and array_sum() in a single\
    \ line\n<code>\necho array_sum(array_filter(array_filter(range(1, count($arr)),\
    \ function($i){\n  return ($i % 2 === 0);\n}, ARRAY_FILTER_USE_BOTH)));\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\n$arr = [1, 2, 3, 4, 5, 6, 7];\n$sum = 0;\n\
    foreach ($arr as $key => $value) {\n    if ($key % 2 == 0) {\n        $sum +=\
    \ $value;\n    }\n}\necho $sum;\n</code>\n<|/ a tags=arrays,php dscore=0 |>\n\
    <| a |>\nUsing array_filter()\n<code>\n$arr = [1, 2, 3, 4, 5, 6, 7];\n$sum = array_sum(array_filter(array_filter($arr,\
    \ function($v){return $v%2==0;}, ARRAY_FILTER_USE_BOTH)));\n</code>\n<|/ a tags=arrays,php\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpaph18_wg.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter(function($elem) {\n        return\
    \ $elem % 2 === 0;\n    }, $lst);\n\n    return $evens;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php dscore=0 |>\nI have used a combination of array_filter() and\
    \ array_intersect()\nThe idea behind array_filter() is to remove all elements\
    \ in $lst that are not even numbers. The array_intersect() then returns the intersection\
    \ of the two arrays. \n<code>\n$lst = [2, 4, 6, 8, 10];\n$evens = array_filter($lst,function($v){return\
    \ $v%2==0;});\n$evens = array_intersect($lst,$evens);\n\necho count($evens);\n\
    </code>\n<|/ a |>\n<| c |>\nThank you for this code snippet, which may provide\
    \ some immediate help.  A proper explanation [would greatly improve](//meta.stackexchange.com/q/114762)\
    \ its educational value by showing *why* this is a good solution to the problem,\
    \ and would make it more useful to future readers with similar, but not identical,\
    \ questions.  Please [edit] your answer to add explanation, and give an indication\
    \ of what limitations and assumptions apply.\n<|/ c |>\n<| a |>\n<code>\n$lst\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n\n$arrEvens = array_filter($lst,function($v){return\
    \ $v%2==0;});\n$arrOdds = array_filter($lst,function($v){return $v%2!==0;});\n\
    $arrBoth = array_merge($arrEvens,$arrOdds);\n\nprint_r($arrBoth);\n\n$arrOdds\
    \ = array_filter($lst,function($v){return $v%2!==0;});\n$arrEvens = array_filter($lst,function($v){return\
    \ $v%2==0;});\n$arrBoth = array_merge($arrEvens,$arrOdds);\n\nprint_r($arrBoth);\n\
    </code>\n<|/ a tags=php dscore=0 |>\n<| c |>\nThank you for this code snippet,\
    \ which may provide some immediate help.  A proper explanation [would greatly\
    \ improve](//meta.stackexchange.com/q/114762) its educational value by showing\
    \ *why* this is a good solution to the problem, and would make it more useful\
    \ to future readers with similar, but not identical, questions.  Please [edit]\
    \ your answer to add explanation, and give \nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbq_vco6k.php
    on line 13

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $add = 0;\n    foreach ($lst as $item) {\n        if\
    \ (($item % 2) === 1) {\n            $add += $item;\n        }\n    }\n    return\
    \ $add;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwioodgwx.php:21\n\
    Stack trace:\n#0 /tmp/tmpwioodgwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwioodgwx.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    foreach ($lst as $i => $n) {\n\
    \        if ($i % 2 === 1) {\n            $evens[] = $n;\n        }\n    }\n \
    \   return count($evens) ? array_sum($evens) : 0;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThanks I thought of doing something like this but was looking for\
    \ a more efficient solution (not very familiar with array functions myself). I\
    \ appreciate the help and will accept once I'm allowed to do so\n<|/ c |>\n<|\
    \ c |>\nI added some performance comparisons to my answer; I wouldn't be surprised\
    \ if any of them are worse than the naive loop.\n<|/ c |>\n<| c |>\nThank you\
    \ for the comparisons! I'm fairly new to coding so all of this is very helpful.\n\
    <|/ c |>\n<| a tags=php,arrays |>\nThis would be the most inefficient solution,\
    \ but you could use array_slice:\n<code>\n$evens = array_slice($lst, 0, $count-1);\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis assumes that the OP wants the evens,\
    \ whereas they want the odds\n<|/ c |>\n<| c |>\nIt's not very efficient\n<|/\
    \ c |>\n<| a dscore=1 |>\nThis doesn't scale very well to larger lists.\n<code>\n\
    $list = [];\nfor($i = count($arr); $i > 0; $i--)\n{\n    if($i % 2 == 0)\n   \
    \     $list[] = $arr[--$i];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ dscore=1 |>\n<code>\n$odd_sum = array_sum(array_slice($array, 0, $count-1));\n\
    </code>\n<|/ a |>\n<| a dscore=1 |>\nIf $count is the number of items in the array\
    \ $array, this should work:\n<code>\narray_sum(array_slice($array, 0, $count-1))\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\narray_sum() should be the\
    \ simplest solution for this.  It will automatically loop through the array and\
    \ only add up the odd indexes for you and then return you the sum.\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\nYou can use array_slice to only get the last $count\
    \ elements and then array_sum to get the sum of those.\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwf46_0or.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (count($lst) <= 1) {\n        return 0;\n    }\n\
    \    $evens = array_filter($lst, 'is_int');\n    $odds = array_filter($lst, 'is_int',\
    \ 'odd');\n    $result = array_sum($evens);\n    $result += array_sum($odds);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #3 ($mode)\
    \ must be of type int, string given in /tmp/tmp7_g9kbht.php:11\nStack trace:\n\
    #0 /tmp/tmp7_g9kbht.php(11): array_filter(Array, 'is_int', 'odd')\n#1 /tmp/tmp7_g9kbht.php(18):\
    \ add(Array)\n#2 /tmp/tmp7_g9kbht.php(22): candidate(Array)\n#3 /tmp/tmp7_g9kbht.php(28):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmp7_g9kbht.php on line 11\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $i => $v) {\n        if ($i % 2 ===\
    \ 0) {\n            $lst[$i] = $v;\n        }\n    }\n    return array_sum($lst);\n\
    }\n</code>\n<|/ a tags=php,math,algorithm |>\n<| c |>\nThis doesn't seem to add\
    \ up `[4, 2, 6, 7]` as `2+6+7=13`. It should be `2+7=8`\n<|/ c |>\n<| c |>\nI\
    \ don't think this is what the OP asked for. At least not my interpretation of\
    \ the question.\n<|/ c |>\n<| c |>\nThe OP asked for \"the even elements that\
    \ are at odd indices\", and `2+6+7` is indeed `8`\n<|/ c |>\n<| c |>\nHmmm, I\
    \ suppose I misread it then.\n<|/ c |>\n<| c |>\n: this doesn't seem to add the\
    \ `[4, 2, 6, 7]` array as it should.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7i8tl1nd.php
    on line 14

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach($lst as $i => $e) {\n        if($i % 2 === 0)\
    \ {\n            $lst_out[] = $e;\n        }\n    }\n    return $lst_out;\n}\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhmt2mdv.php:19\n\
    Stack trace:\n#0 /tmp/tmpjhmt2mdv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjhmt2mdv.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach($lst as $key=>$value){\n    \
    \    if($key%2 != 0){\n            $sum += $value;\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7me1qi6l.php:22\n\
    Stack trace:\n#0 /tmp/tmp7me1qi6l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7me1qi6l.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach($lst as $key => $val) {\n        if($key % 2\
    \ == 0) {\n            $lst += $val;\n        }\n    }\n    return $lst;\n}\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + int\
    \ in /tmp/tmp5w08zelb.php:9\nStack trace:\n#0 /tmp/tmp5w08zelb.php(15): add(Array)\n\
    #1 /tmp/tmp5w08zelb.php(19): candidate(Array)\n#2 /tmp/tmp5w08zelb.php(25): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5w08zelb.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    $n = count($lst);\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        if ($i % 2 == 0) {\n            $res += $lst[$i];\n \
    \       }\n    }\n    return $res;\n}\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7feqfgyt.php:21\n\
    Stack trace:\n#0 /tmp/tmp7feqfgyt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7feqfgyt.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (count($lst) < 2) {\n        return 0;\n    }\n \
    \   $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2\
    \ == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp919zwvo.php:23\n\
    Stack trace:\n#0 /tmp/tmpp919zwvo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp919zwvo.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = array();\n  $odd = array();\n  foreach($lst as\
    \ $i) {\n    $i = (int)$i;\n    if ($i % 2 == 0)\n      $even[] = $i;\n    else\n\
    \      $odd[] = $i;\n  }\n  return $even[0] + $odd[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpvgoyeb34.php on line 16\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpvgoyeb34.php:24\nStack\
    \ trace:\n#0 /tmp/tmpvgoyeb34.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvgoyeb34.php\
    \ on line 24\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n   foreach ($lst as $key => $value) {\n       if ($key %\
    \ 2 == 1) {\n          $sum = $sum + $value;\n       }\n   }\n   return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sum in /tmp/tmpwdbi_fks.php on line 9\n\n\
    Warning: Undefined variable $sum in /tmp/tmpwdbi_fks.php on line 9\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpwdbi_fks.php:21\nStack trace:\n\
    #0 /tmp/tmpwdbi_fks.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwdbi_fks.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return array_sum($lst) + array_sum(array_slice($lst,\
    \ 1, count($lst)));\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo43m9rzm.php:15\n\
    Stack trace:\n#0 /tmp/tmpo43m9rzm.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpo43m9rzm.php\
    \ on line 15\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evenIndices = array_filter(array_keys($lst), function($key)\
    \ use($lst) {\n    return $key % 2 == 0;\n  });\n  return array_sum(array_intersect_key($lst,\
    \ array_flip($evenIndices)));\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwat1zwo.php:18\n\
    Stack trace:\n#0 /tmp/tmpkwat1zwo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkwat1zwo.php\
    \ on line 18\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $value) {\n        if ($key\
    \ % 2 != 0) {\n            continue;\n        }\n        $lst[$key] += $value;\n\
    \    }\n    return array_sum($lst);\n}\n</code>\n<|/ a dscore=1 tags=php,arrays\
    \ |>\n<| a dscore=1 |>\nHere's a way to do it:\n<code>\n<?php\n\n$arr = array();\n\
    \n$arr[] = array('name' => 'Amy Johnson', 'age' => 42);\n$arr[] = array('name'\
    \ => 'Jack Jones', 'age' => 29);\n$arr[] = array('name' => 'Mark Smith', 'age'\
    \ => 24);\n$arr[] = array('name' => 'Sam Smith', 'age' => 41);\n\n$arr[] = array('name'\
    \ => 'Joe Mick', 'age' => 28);\n$arr[] = array('name' => 'Garry Carey', 'age'\
    \ => 32);\n\n$arr[] = array('name' => 'Jim Bauer', 'age' => 43);\n$arr[] = array('name'\
    \ => 'Molly Bauer', 'age' => 43);\n\n$arr[] = array('name' => 'Joe Bauer', 'age'\
    \ => 43);\n$arr[] = array('name' => 'Lord Brown', 'age' => 44);\n\n$arr[] = array('name'\
    \ => 'Jill Brown', 'age' => 45);\n\n$arr[] = array('name' => 'Ben Smith', 'age'\
    \ => 51);\n$arr[] = array('name' => 'Sally Smith', 'age' => 52);\n\n$arr[] = array('name'\
    \ => 'Joe Smith', 'age' => 52);\n$arr[] = array('name' => 'Sally Smith', 'age'\
    \ => 52);\n\n$arr[] = array('name' => 'Sally Smith', 'age' => 52);\n$arr[] = array('name'\
    \ => 'Joe Smith', 'age' => 53);\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpv_ldnjzl.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = false;\n  $total = 0;\n\n  foreach ($lst as $i\
    \ => $item) {\n    $total += $item;\n    if ($i % 2 == 0) {\n      $even += $item;\n\
    \    }\n  }\n\n  return $even ? $even : $total;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyon664j8.php:25\n\
    Stack trace:\n#0 /tmp/tmpyon664j8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyon664j8.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    foreach ($lst as $i => $val) {\n    \
    \    if ($i%2 == 0) $res += $val;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jggz93d.php:19\n\
    Stack trace:\n#0 /tmp/tmp0jggz93d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0jggz93d.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\t$result = $lst[0];\n\tforeach ($lst as $item) {\n\t\t\
    $result += $item;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1115m8zt.php:19\n\
    Stack trace:\n#0 /tmp/tmp1115m8zt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1115m8zt.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = $lst[0];\n    $odd = array_slice($lst, 1,\
    \ null, true);\n    foreach ($odd as $i => $e){\n        if ($i % 2 === 0){\n\
    \            $result += $e;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThat's not correct. [array_sum](http://php.net/array_sum)\
    \ is a native PHP function, while your code is using array_reduce which comes\
    \ with PHP5+.\n<|/ c |>\n<| c |>\nOk, I didn't know that.\n<|/ c |>\n<| a |>\n\
    <code>\n$array = array(1, 2, 3, 4, 5, 6, 8);\n$even = 0;\n$odd = 0;\n\nfor($i\
    \ = 0; $i < count($array); $i++)\n{\n    if($i % 2 != 0)\n    {\n        $odd++;\n\
    \    }\n    else\n    {\n        $even++;\n    }\n}\n\necho $even;\necho $odd;\n\
    </code>\n<|/ a dscore=1 tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $arr = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16);\n\n$odd = array_sum(array_chunk($arr,2));\n\
    $even = array_sum(array_diff($arr,$odd));\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$count = 0;\n$arrSum =\
    \ 0;\n\nforeach($arr as $value) {\n    if($count % 2 == 0) {\n        $arrSum\
    \ += $value;\n    }\n    $count++;\n}\n\necho $arrSum; // 15\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nNo need to use `foreach` when you are using PHP5+ functions. Just\
    \ do `array_sum(array_slice($arr, 2, null, true))`.\n<|/ c |>\n<| a tags=php,arrays\
    \ dscore=0 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16);\n\
    $sum = 0;\n\nfor($i = 0; $i < count($arr); $i++)\n{\n    if($i % 2 != 0)\n   \
    \ {\n        $sum += $arr[$i];\n    }\n}\n\necho $sum; // 15\n</code>\n<|/ a |>\n\
    <| a dscore=0 |>\n<code>\n$array = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];\n\
    $odds = 0;\n$evens = 0;\nfor\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1m2ti696.php
    on line 16

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $count = 0;\n    foreach ($lst as $value) {\n      \
    \  $count += ($value % 2);\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh5inlbx.php:19\n\
    Stack trace:\n#0 /tmp/tmprh5inlbx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprh5inlbx.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $i => $x) {\n      \
    \  if ($i % 2 !== 0) {\n            $sum += $x;\n        }\n    }\n    return\
    \ $sum;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for you answer but that\
    \ doesn't work correctly, it returns 3 instead of 6. I'm still trying to figure\
    \ it out. I think I understand how it works, just not how to implement it.\n<|/\
    \ c |>\n<| c |>\nThanks for you answer. I tried this in PHP version 7.0 and got\
    \ `Warning: Invalid argument supplied for foreach() in`. When I tried this in\
    \ PHP version 5.5 it worked. It seems like the foreach does not work on arrays\
    \ of arrays. When I tried it on one level only it worked.\n<|/ c |>\n<| a dscore=1\
    \ |>\nHere is an optimized solution using a different approach that does not use\
    \ any loops.\n<code>\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpb_7q07wq.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (!$lst) {\n        return null;\n    }\n    $evens\
    \ = array_filter($lst, 'is_int');\n    $odds = array_filter($lst, '!is_int');\n\
    \    return array_sum($odds) + array_sum($evens);\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"!is_int\" not found or invalid\
    \ function name in /tmp/tmpujo_olkc.php:11\nStack trace:\n#0 /tmp/tmpujo_olkc.php(11):\
    \ array_filter(Array, '!is_int')\n#1 /tmp/tmpujo_olkc.php(16): add(Array)\n#2\
    \ /tmp/tmpujo_olkc.php(20): candidate(Array)\n#3 /tmp/tmpujo_olkc.php(26): test()\n\
    #4 {main}\n  thrown in /tmp/tmpujo_olkc.php on line 11\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  return $lst[$lst % 2 == 0 ? 1 : 0] + $lst[$lst % 2 ? 2\
    \ : 1] + $lst[$lst % 2 ? 3 : 2] + $lst[$lst % 2 ? 4 : 3] + $lst[$lst % 2 ? 5 :\
    \ 4];\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array % int\
    \ in /tmp/tmpxumzf6ns.php:7\nStack trace:\n#0 /tmp/tmpxumzf6ns.php(11): add(Array)\n\
    #1 /tmp/tmpxumzf6ns.php(15): candidate(Array)\n#2 /tmp/tmpxumzf6ns.php(21): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxumzf6ns.php on line 7\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  if (empty($lst) || count($lst) == 0) {\n    return 0;\n\
    \  }\n\n  $evens = array_filter($lst, 'is_int');\n  return $evens[count($evens)\
    \ - 2];\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nCan you please explain me the\
    \ whole thing?\n<|/ c |>\n<| c |>\nWhy use array_filter? I can do it with foreach.\
    \ What's the advantage?\n<|/ c |>\n<| c |>\nThe advantage of `array_filter` is\
    \ that it returns an array, so it's one less function call, which makes it faster.\
    \ But if you don't care about performance, it's okay to use `foreach`, it's just\
    \ that `array_filter` is often a lot more readable, so it's often useful.\n<|/\
    \ c |>\n<| c |>\nAh, thanks! I thought array_filter returns only 1 value. It returns\
    \ all of them. Why do we need \"count($evens)-1\" then? Why don't we use count($evens)-2?\
    \ What does \"-1\" mean?\n<|/ c |>\n<| c |>\nIt returns the even numbers. If you\
    \ use count($evens) - 1, then it's only returning the odd numbers.\n<|/ c |>\n\
    <| a |>\n<code>\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp0s3y_q8p.php
    on line 14

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    for ($i = 0, $l = count($lst); $i < $l;\
    \ $i++) {\n        if ($i % 2 != 0) {\n            $res += $lst[$i];\n       \
    \ }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazrlz8vl.php:22\n\
    Stack trace:\n#0 /tmp/tmpazrlz8vl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpazrlz8vl.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = array_sum($lst);\n    return $sum % 2 === 0 ?\
    \ $sum : 0;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g57l30y.php:16\n\
    Stack trace:\n#0 /tmp/tmp8g57l30y.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8g57l30y.php\
    \ on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[array_filter($lst, function($n) {\n    \
    \    return $n % 2 === 0;\n    })];\n}\n</code>\nAnd if you also need O(1) access\
    \ to the even indexes, you can do this:\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpt7reobip.php
    on line 11

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $count = 0;\n    for ($i = 1, $n = count($lst); $i <\
    \ $n; $i++) {\n        if ($lst[$i] % 2 == 0) {\n            $lst[$count++] =\
    \ $lst[$i];\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl339h1zc.php:21\n\
    Stack trace:\n#0 /tmp/tmpl339h1zc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl339h1zc.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    // Your code here\n    $result = 0;\n    for ($i = 0;\
    \ $i < count($lst); $i++) {\n        if ($i % 2 == 0) {\n            $result +=\
    \ $lst[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryim4m4g.php:21\n\
    Stack trace:\n#0 /tmp/tmpryim4m4g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpryim4m4g.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return array_filter($lst, 'is_odd');\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_odd\" not found or invalid function\
    \ name in /tmp/tmpc3thlone.php:7\nStack trace:\n#0 /tmp/tmpc3thlone.php(7): array_filter(Array,\
    \ 'is_odd')\n#1 /tmp/tmpc3thlone.php(10): add(Array)\n#2 /tmp/tmpc3thlone.php(14):\
    \ candidate(Array)\n#3 /tmp/tmpc3thlone.php(20): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpc3thlone.php on line 7\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $idx => $num) {\n        if ($idx %\
    \ 2 === 0) {\n            $lst += $num;\n        }\n    }\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + int\
    \ in /tmp/tmpomsumxvp.php:9\nStack trace:\n#0 /tmp/tmpomsumxvp.php(16): add(Array)\n\
    #1 /tmp/tmpomsumxvp.php(20): candidate(Array)\n#2 /tmp/tmpomsumxvp.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpomsumxvp.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $index => $elem) {\n\
    \        if ($index % 2 === 0) {\n            $sum += $elem;\n        }\n    }\n\
    \    return $sum;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nTry this one:\n\
    <code>\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp34us35wz.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evens = array_filter(array_map(function($element){return\
    \ ($element & 1); }, $lst));\n  return count($evens) + count(array_diff($lst,$evens));\
    \ \n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsui_ad5b.php:16\n\
    Stack trace:\n#0 /tmp/tmpsui_ad5b.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpsui_ad5b.php\
    \ on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even_indexes = [];\n    $odd_indexes = [];\n    foreach\
    \ ($lst as $index => $value) {\n        if ($index % 2 == 0) {\n            $even_indexes[]\
    \ = $value;\n        } else {\n            $odd_indexes[] = $value;\n        }\n\
    \    }\n    return array_sum($even_indexes) + array_sum($odd_indexes);\n}\n</code>\n\
    I didn't test the above code so I may have missed some things. But if you need\
    \ more help, let me know :)\n<|/ a dscore=3 |>\n<| c |>\nYour solution is indeed\
    \ the easiest to implement. Thanks.\n<|/ c |>\n<| a |>\nIf you have access to\
    \ array_filter and a foreach loop, then you can easily achieve this using a foreach\
    \ loop:\n<code>\n$values = [1, 2, 3, 4, 5, 6, 7];\n$evens = [];\n$odds = [];\n\
    \nforeach ($values as $value) {\n    if ($value % 2 == 0) {\n        $evens[]\
    \ = $value;\n    } else {\n        $odds[] = $value;\n    }\n}\n\n$result = array_sum($evens)\
    \ + array_sum($odds);\n</code>\n<|/ a dscore=3 tags=php |>\n<| c |>\nI wanted\
    \ to use a loop. Thanks for your answer!\n<|/ c |>\n<| a |>\n<code>\n<?php\n$arr1\
    \ = [1,2,3,5,6,7];\n$arr2 = [1,4,5,6,8,9];\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpufbxdjuu.php
    on line 18

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    foreach ($lst as $item) {\n        if\
    \ (is_int($item) && $item % 2 === 0) {\n            $res += $item;\n        }\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmvjczum.php:21\n\
    Stack trace:\n#0 /tmp/tmpzmvjczum.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzmvjczum.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $elt) {\n        if\
    \ ($elt % 2 != 0) {\n            $sum += $elt;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu3ggsv7.php:21\n\
    Stack trace:\n#0 /tmp/tmpeu3ggsv7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeu3ggsv7.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (count($lst) < 2) {\n        return 0;\n    }\n \
    \   sort($lst);\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i += 2) {\n\
    \        $sum += $lst[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0q4fft1s.php:23\n\
    Stack trace:\n#0 /tmp/tmp0q4fft1s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0q4fft1s.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n   $sum = 0;\n   for ($i = 0; $i < count($lst); $i++) {\n\
    \      $sum = ($sum + $lst[$i]) % 10;\n   }\n   return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcb8t4ptp.php:19\n\
    Stack trace:\n#0 /tmp/tmpcb8t4ptp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcb8t4ptp.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    $i = 0;\n    $len = count($lst);\n  \
    \  while ($len > 0) {\n        if ($lst[$i] % 2 === 0) {\n            $sum +=\
    \ $lst[$i];\n        }\n        $i++;\n        $len--;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zmyywho.php:25\n\
    Stack trace:\n#0 /tmp/tmp0zmyywho.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0zmyywho.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evens = array();\n  foreach($lst as $ix => $x) {\n  \
    \  if($ix % 2 == 0) {\n      $evens[] = $x;\n    }\n  }\n  return count($evens);\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeub_0yby.php:21\n\
    Stack trace:\n#0 /tmp/tmpeub_0yby.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeub_0yby.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\tforeach ($lst as $key => $value) {\n\t\tif ($key % 2 ==\
    \ 1) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn count($result) > 0 ? $result\
    \ : 0;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86dfu_c9.php:20\n\
    Stack trace:\n#0 /tmp/tmp86dfu_c9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp86dfu_c9.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = 0;\n    $odds = 0;\n    foreach ($lst as $i)\
    \ {\n        if ($i & 1) {\n            $odds += $i;\n        } else {\n     \
    \       $evens += $i;\n        }\n    }\n    return $evens + $odds;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxv21iic.php:24\n\
    Stack trace:\n#0 /tmp/tmpfxv21iic.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfxv21iic.php\
    \ on line 24\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = $lst[0];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $result += $lst[$i];\n    \
    \    }\n    }\n    return $result;\n}\n</code>\nThe above method can also be seen\
    \ as a generator function:\n<code>\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcyagzec1.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  foreach($lst as $v) {\n    if($v % 2 != 0)\
    \ {\n      $sum += $v;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8em1upe.php:21\n\
    Stack trace:\n#0 /tmp/tmpg8em1upe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpg8em1upe.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = 0;\n  $odd = 0;\n  foreach ($lst as $k) {\n  \
    \  if ($k % 2 == 0) {\n      $even += $k;\n    } else {\n      $odd += $k;\n \
    \   }\n  }\n  return $even * 2 + $odd;\n}\n</code>\nThis is basically an algorithm\
    \ that is very straight forward: You take the first element of the array, add\
    \ it to the even counter and to the odd counter. Then, you look at the next element\
    \ and do the same. Add the next element to the even counter and to the next odd\
    \ counter. Keep doing this until there are no more elements. Then you take all\
    \ elements of the odd counter and add them to the even counter and to the sum.\
    \ That's how we do it. Hope this helps. I tried to explain it in a very simple\
    \ way so that it's easy to understand. Feel free to ask questions in the comments\
    \ section.\n<|/ a tags=php,algorithm |>\n<| c |>\nthanks for answer. it helped\
    \ me.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmprzwkf0kk.php
    on line 18

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    $len = count($lst);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        if ($i % 2 === 0) {\n            $res += $lst[$i];\n\
    \        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqazq5g5.php:22\n\
    Stack trace:\n#0 /tmp/tmpaqazq5g5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaqazq5g5.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  // Return 0 if no elements are given to be added\n  if\
    \ (count($lst) == 0) return 0;\n  // Return 0 if the array has only one element\n\
    \  else if (count($lst) == 1) return $lst[0];\n  \n  $sum = 0;\n  foreach ($lst\
    \ as $i => $v) {\n    if ($i % 2 == 0) {\n      $sum += $v;\n    }\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb54okh1p.php:26\n\
    Stack trace:\n#0 /tmp/tmpb54okh1p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb54okh1p.php\
    \ on line 26\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = 0;\n  foreach ($lst as $k => $v) {\n    if ($k\
    \ % 2 == 0) {\n      $even += $v;\n    }\n  }\n  return $even;\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpro6qgo4_.php:20\n\
    Stack trace:\n#0 /tmp/tmpro6qgo4_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpro6qgo4_.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter($lst, function($i) { return ($i\
    \ % 2); });\n    return count($evens) + count($lst) - count($evens);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php |>\n<code>\n<?php\n$arr = array(3, 7, 11, 13,\
    \ 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41);\n$evens = array_filter($arr,\
    \ function($i) {return ($i % 2 == 0);});\n$odd_count = count($arr) - count($evens);\n\
    echo \"<b>Odd count: \".$odd_count.\"</b>\";\necho \"<b>Odd Elements: \".implode(',',\
    \ $odds).\"</b>\";\necho \"<b>Even Elements: \".implode(',', $evens).\"</b>\"\
    ;\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpa82gfqfg.php
    on line 10

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $index => $el) {\n        if ($index\
    \ & 1) {\n            $sum += $el;\n        }\n    }\n    return $sum;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis answer is very good. I'll leave mine below because\
    \ it is a bit more technical, and maybe a bit more fun to understand how it works.\
    \ Both are great answers that teach us something. Thank you.\n<|/ c |>\n<| a tags=algorithm,php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnl377z11.php
    on line 14

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (empty($lst)) {\n        return 0;\n    }\n\n   \
    \ $evens = array_filter($lst, 'is_even');\n    if (empty($evens)) {\n        return\
    \ 0;\n    }\n\n    return $evens[0];\n}\n\nfunction candidate(...$args) {\n  \
    \  return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_even\" not found or invalid\
    \ function name in /tmp/tmpei9_s_nx.php:11\nStack trace:\n#0 /tmp/tmpei9_s_nx.php(11):\
    \ array_filter(Array, 'is_even')\n#1 /tmp/tmpei9_s_nx.php(20): add(Array)\n#2\
    \ /tmp/tmpei9_s_nx.php(24): candidate(Array)\n#3 /tmp/tmpei9_s_nx.php(30): test()\n\
    #4 {main}\n  thrown in /tmp/tmpei9_s_nx.php on line 11\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evens = $odds = array();\n\n  foreach ($lst as $i =>\
    \ $val) \n    if ($i%2 == 0) $evens[] = $val;\n    else $odds[] = $val;\n\n  return\
    \ $odds[count($odds)/2] - $evens[count($evens)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.5 to int loses precision\
    \ in /tmp/tmpsdswbrcp.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.5 to int loses precision in /tmp/tmpsdswbrcp.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpsdswbrcp.php:20\nStack trace:\n\
    #0 /tmp/tmpsdswbrcp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsdswbrcp.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evens = $lst[0];\n  foreach ($lst as $k => $v) {\n  \
    \  if ($k%2) {\n      $evens += $v;\n    }\n  }\n  return $evens;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrs2y7k0.php:21\n\
    Stack trace:\n#0 /tmp/tmprrs2y7k0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprrs2y7k0.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[count($lst)-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vqp92ia.php:17\n\
    Stack trace:\n#0 /tmp/tmp2vqp92ia.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp2vqp92ia.php\
    \ on line 17\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    foreach ($lst as $k=>$v) {\n     \
    \   if ($k & 1)\n            $result += $v;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpb6hwp_.php:21\n\
    Stack trace:\n#0 /tmp/tmpfpb6hwp_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfpb6hwp_.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    for($i = 0; $i < count($lst); $i++) {\n        if($lst[$i]\
    \ % 2 == 0) {\n            $lst[$i] = $lst[$i] + $lst[$i];\n        }\n    }\n\
    \    return $lst;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_b7jqtr.php:20\n\
    Stack trace:\n#0 /tmp/tmpg_b7jqtr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg_b7jqtr.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[0]+$lst[1]+$lst[2]+$lst[3];\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp5bwlb8v4.php on line 7\n\n\
    Warning: Undefined array key 3 in /tmp/tmp5bwlb8v4.php on line 7\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp5bwlb8v4.php:15\nStack trace:\n\
    #0 /tmp/tmp5bwlb8v4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp5bwlb8v4.php\
    \ on line 15\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    $odds = array();\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        if ($i % 2 === 0) {\n            $evens[]\
    \ = $lst[$i];\n        } else {\n            $odds[] = $lst[$i];\n        }\n\
    \    }\n    return count($evens) + count($odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkiq3sgq.php:24\n\
    Stack trace:\n#0 /tmp/tmpqkiq3sgq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqkiq3sgq.php\
    \ on line 24\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = array_filter(array_keys($lst), function($i)\
    \ { return $i % 2; }); // filter out even indices as keys\n    return array_sum(array_slice($lst,\
    \ 0, $even)); // sum all even elements\n}\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_slice(): Argument #3 ($length)\
    \ must be of type ?int, array given in /tmp/tmpz85jeegg.php:8\nStack trace:\n\
    #0 /tmp/tmpz85jeegg.php(8): array_slice(Array, 0, Array)\n#1 /tmp/tmpz85jeegg.php(12):\
    \ add(Array)\n#2 /tmp/tmpz85jeegg.php(16): candidate(Array)\n#3 /tmp/tmpz85jeegg.php(22):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmpz85jeegg.php on line 8\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $result = 0;\n  for ($i = 0; $i < count($lst); $i += 2)\
    \ {\n    $result += $lst[$i];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyx3lh3se.php:19\n\
    Stack trace:\n#0 /tmp/tmpyx3lh3se.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyx3lh3se.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    foreach ($lst as $i => $n) {\n   \
    \     if ($i % 2 === 0) {\n            $result += $n;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxoremu_0.php:21\n\
    Stack trace:\n#0 /tmp/tmpxoremu_0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxoremu_0.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  foreach ($lst as $i => $v) {\n    if (isset($lst[$i\
    \ + 1])) {\n      if (($v & 1) == 0) {\n        $sum += $v;\n      }\n    }\n\
    \  }\n  return $sum;\n}\n</code>\n<|/ a tags=arrays,function,php |>\n<| a tags=arrays,function,php\
    \ |>\nUse array_reduce() to get sum of the elements at odd indexes.\n<code>\n\
    $arr = array(1,2,3,4,5,6,7,8,9);\n$odd_sum = array_reduce($arr, 'add', 0);\n</code>\n\
    <|/ a dscore=3 |>\n<| a |>\n<code>\n$myarray = array(1, 2, 3, 4, 5);\n$sum = 0;\n\
    foreach ($myarray as $value)\n{\n    if($value % 2 == 1)\n    {\n        $sum\
    \ += $value;\n    }\n}\n</code>\n<|/ a tags=arrays,function,php dscore=3 |>\n\
    <| a tags=arrays,function,php |>\nThis would work fine for you \n<code>\n<?php\n\
    $myarray = array(1, 2, 3, 4, 5);\n$sum = 0;\nforeach ($myarray as $value) {\n\
    \    if($value % 2 == 1) {\n        $sum += $value;\n    }\n}\necho $sum;\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxb9_7hyz.php
    on line 17

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    // The sum of an empty list is 0.\n    if (empty($lst))\
    \ {\n        return 0;\n    }\n    // The sum of the first element\n    $sum =\
    \ $lst[0];\n    // The sum of the rest of the elements.\n    foreach (array_slice($lst,\
    \ 1) as $item) {\n        // Add together two elements that are at odd indices\n\
    \        $sum += $item % 2 ? $item + 1 : $item;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodig4rxz.php:26\n\
    Stack trace:\n#0 /tmp/tmpodig4rxz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpodig4rxz.php\
    \ on line 26\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = 0;\n    foreach ($lst as $k => $v) {\n      \
    \  if ($k % 2 == 0) {\n            $res += $v;\n        }\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xqnts9b.php:21\n\
    Stack trace:\n#0 /tmp/tmp1xqnts9b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1xqnts9b.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (empty($lst)) return 0;\n    $even = array_filter($lst,\
    \ function($i) { return $i % 2 == 0; });\n    $odd = array_filter($lst, function($i)\
    \ { return $i % 2 == 1; });\n    return array_sum(array_merge($even, $odd));\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\nYou can use array_filter to filter out\
    \ the odd indices and array_sum to sum the filtered array.\n<code>\n$arr = array(1,2,3,4,5,6);\n\
    $odd = array_filter($arr, function($v){return $v%2==1;});\necho array_sum($odd);\n\
    </code>\nDemo\n<|/ a tags=php,sum,arrays,filter |>\n<| c |>\nThat will fail if\
    \ there are two or more of the same odd number, though.\n<|/ c |>\n<| c |>\nI\
    \ know... but that's the only constraint they had. No one gave any constraints\
    \ :)\n<|/ c |>\n<| a dscore=0 tags=php,sum,arrays,filter |>\nYou can use this\
    \ code to sum even and odd numbers in an array:\n<code>\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpk01bvnqm.php
    on line 12

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    foreach($lst as $key => $value)\
    \ {\n        if ($key % 2 === 0) {\n            $evens[] = $value;\n        }\n\
    \    }\n    return count($evens);\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp030v_i3s.php:21\n\
    Stack trace:\n#0 /tmp/tmp030v_i3s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp030v_i3s.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    $odds = array();\n    foreach\
    \ ($lst as $n) {\n        if ($n & 1) {\n            $odds[] = $n;\n        }\
    \ else {\n            $evens[] = $n;\n        }\n    }\n    return array_sum(array_diff($evens,\
    \ $odds));\n}\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_906_5sv.php:23\n\
    Stack trace:\n#0 /tmp/tmp_906_5sv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_906_5sv.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\tglobal $odd;\n\tfor ($i=0; $i<count($lst); $i++) {\n\t\
    \tif ($lst[$i%2]==0) $odd[$i] = $lst[$i]+$odd[$i];\n\t}\n\treturn $odd[0];\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type null in /tmp/tmpqf8sdsme.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqf8sdsme.php:19\n\
    Stack trace:\n#0 /tmp/tmpqf8sdsme.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqf8sdsme.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach($lst as $i => $e) {\n    if ($i % 2 == 0)\n  \
    \    $lst += $e;\n  }\n  return $lst;\n}\nfunction candidate(...$args) {\n   \
    \ return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + int\
    \ in /tmp/tmpxnwv81w6.php:9\nStack trace:\n#0 /tmp/tmpxnwv81w6.php(14): add(Array)\n\
    #1 /tmp/tmpxnwv81w6.php(18): candidate(Array)\n#2 /tmp/tmpxnwv81w6.php(24): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxnwv81w6.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  // Iterate through all array elements\n  foreach ($lst\
    \ as $key => $value) {\n    // If the current value is odd\n    if ($key % 2 ==\
    \ 0) {\n      // Add it to the result\n      return $value + $lst[$key + 1]; //\
    \ +1 because we don't want to add the current value\n    }\n  }\n}\n</code>\n\
    <|/ a tags=php,arrays,function |>\n<| a dscore=0 |>\nThe code below checks the\
    \ array for even values only, then adds all of the even values. The array must\
    \ be sorted from low to high. \n<code>\n<?php\n$input = array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10);\n$input = array_reverse($input);\n$input = array_filter($input,\
    \ function($v){return $v%2 == 0;});\n$input = array_merge($input, array_slice($input,\
    \ 2));\n$input = array_merge($input, array_slice($input, -1));\nvar_dump($input);\n\
    </code>\n<|/ a tags=php,arrays,function |>\n<| a dscore=0 |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14);\n\
    \n$temp = array();\n\nfor($i=count($arr)-1;$i>0;$i--)\n{\n    if($arr[$i] % 2\
    \ != 0)\n    {\n        $temp[$i] = $arr[$i];\n        unset($arr[$i]);\n    }\n\
    }\n\nvar_dump($arr);\n\necho \"<br>\";\nvar_dump($temp);\n</code>\n<|/ a tags=php,arrays,function\
    \ |>\n<| a dscore=0 tags=php,arrays,function |>\nHere is a way I wrote it. It\
    \ is not efficient, but it is very short:\n<code>\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmppzileji3.php
    on line 16

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  return count($lst) ? $lst[array_keys($lst)[array_filter(array_keys($lst),\
    \ function($v) { return $v & 1; })]] : '';\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Illegal offset type in /tmp/tmpwkq4g6rr.php:7\n\
    Stack trace:\n#0 /tmp/tmpwkq4g6rr.php(11): add(Array)\n#1 /tmp/tmpwkq4g6rr.php(15):\
    \ candidate(Array)\n#2 /tmp/tmpwkq4g6rr.php(21): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpwkq4g6rr.php on line 7\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[array_filter($lst, function ($el) {\n  \
    \      return ($el & 1) === 1;\n    })];\n}\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Illegal offset type in /tmp/tmp0b66jmzv.php:9\n\
    Stack trace:\n#0 /tmp/tmp0b66jmzv.php(13): add(Array)\n#1 /tmp/tmp0b66jmzv.php(17):\
    \ candidate(Array)\n#2 /tmp/tmp0b66jmzv.php(23): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp0b66jmzv.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $lst = array_filter($lst, function($v) { return ($v\
    \ & 1); });\n    $lst = array_filter($lst, function($v) { return (!($v & 1));\
    \ });\n    return count($lst);\n}\n</code>\nThis isn't an O(n) solution but still\
    \ fairly efficient since it only passes two elements at a time and avoids calling\
    \ array_filter() twice.\n<|/ a |>\n<| c |>\nI like the solution but it does require\
    \ a lot of overhead which might be more efficient in certain cases than other\
    \ solutions posted here. For example, if you're working with very large arrays,\
    \ you might have to use the `array_filter` method instead of just `array_slice`.\n\
    <|/ c |>\n<| c |>\nYeah that's a good point, I updated my answer to use array_filter\
    \ instead of array_slice since `array_slice` wouldn't work in those cases. I'm\
    \ going to try to come up with an O(n) solution using array_filter as well though.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmprnvi14yt.php
    on line 11

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = $lst[$lst % 2];\n    foreach($lst as $key =>\
    \ $val) {\n        if ($key % 2 == 0) {\n            $even += $val;\n        }\
    \ else {\n            $lst[] = $even;\n        }\n    }\n    return $even;\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array % int\
    \ in /tmp/tmpp938sh00.php:7\nStack trace:\n#0 /tmp/tmpp938sh00.php(19): add(Array)\n\
    #1 /tmp/tmpp938sh00.php(23): candidate(Array)\n#2 /tmp/tmpp938sh00.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp938sh00.php on line 7\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  foreach($lst as $i => $val) {\n    if($i\
    \ % 2 != 0) {\n      $sum += $val;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjs7s1bv.php:22\n\
    Stack trace:\n#0 /tmp/tmpzjs7s1bv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzjs7s1bv.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach($lst as $i) {\n    if($i % 2 == 1) {\n      return\
    \ $i + 1;\n    }\n  }\n  return -1;\n}\n</code>\n<|/ a tags=php,arrays,math dscore=0\
    \ |>\n<| a tags=php,arrays,math |>\nHere is a solution that will return the number\
    \ of even numbers between the given range (inclusive) and excluding those numbers\
    \ (exclusive).\n<code>\n<?php\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpsh7yaj0t.php
    on line 14

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $result = 0;\n  foreach ($lst as $i => $val) {\n    if\
    \ ($i % 2 == 0) {\n      $result += $val;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6v7xvm1.php:21\n\
    Stack trace:\n#0 /tmp/tmpk6v7xvm1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk6v7xvm1.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach($lst as $i => $v){\n        if($i % 2 == 0)\
    \ return $v + $lst[$i + 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpjwqhyogj.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpjwqhyogj.php:17\nStack\
    \ trace:\n#0 /tmp/tmpjwqhyogj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpjwqhyogj.php\
    \ on line 17\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evens = array();\n  $odds = array();\n  $len   = count($lst);\n\
    \n  for ($i = 0; $i < $len; ++$i) {\n    $isOdd = ($i % 2 != 0) ? true : false;\n\
    \    if ($isOdd) {\n      $odds[] = $lst[$i];\n    } else {\n      $evens[] =\
    \ $lst[$i];\n    }\n  }\n  return $evens[count($evens) - 1] + $odds[count($odds)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8xop5fv.php:27\n\
    Stack trace:\n#0 /tmp/tmp_8xop5fv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_8xop5fv.php\
    \ on line 27\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter($lst, function ($elem) use ($lst)\
    \ {\n        return $elem % 2 == 0;\n    });\n    return count($evens);\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptp4lbsce.php:18\n\
    Stack trace:\n#0 /tmp/tmptp4lbsce.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptp4lbsce.php\
    \ on line 18\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $value) {\n        if\
    \ ($value % 2 == 0) {\n            $sum += $value;\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5mcpdjj.php:20\n\
    Stack trace:\n#0 /tmp/tmpv5mcpdjj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv5mcpdjj.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $key => $value) {\n\
    \        if ($key % 2 == 1) {\n            $sum += $value;\n        }\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5n1372d.php:22\n\
    Stack trace:\n#0 /tmp/tmpb5n1372d.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb5n1372d.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $result = 0;\n  foreach($lst as $value) {\n    if ($value\
    \ & 1)\n      $result += $value;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ldvdbuf.php:20\n\
    Stack trace:\n#0 /tmp/tmp1ldvdbuf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1ldvdbuf.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = false;\n  $evenLst = array();\n  foreach($lst\
    \ as $val) {\n    if($val%2 == 0) {\n      $evenLst[] = $val;\n      $even = true;\n\
    \    }\n    else {\n      if(!$even) {\n        $evenLst[] = $val;\n      }\n\
    \    }\n  }\n  return $evenLst;\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bd7hp4.php:28\n\
    Stack trace:\n#0 /tmp/tmpv5bd7hp4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv5bd7hp4.php\
    \ on line 28\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (empty($lst)) return 0;\n    $cnt = 0;\n    foreach\
    \ ($lst as $idx => $val) {\n        if ($idx & 1) $cnt += $val;\n    }\n    return\
    \ $cnt;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ojibu1q.php:21\n\
    Stack trace:\n#0 /tmp/tmp7ojibu1q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7ojibu1q.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = array_filter($lst, function ($i) { return $i\
    \ & 1; });\n    return count($even) ? count($lst) + count($even) : count($lst);\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5b8pst3.php:16\n\
    Stack trace:\n#0 /tmp/tmph5b8pst3.php(22): test()\n#1 {main}\n  thrown in /tmp/tmph5b8pst3.php\
    \ on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $value) {\n        if ($key\
    \ % 2 === 1) {\n            $lst += $value;\n        }\n    }\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + int\
    \ in /tmp/tmpb9r85x4k.php:9\nStack trace:\n#0 /tmp/tmpb9r85x4k.php(16): add(Array)\n\
    #1 /tmp/tmpb9r85x4k.php(20): candidate(Array)\n#2 /tmp/tmpb9r85x4k.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb9r85x4k.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $res = 0;\n  foreach ($lst as $key => $value) {\n    if\
    \ ($key % 2 == 0) {\n      $res += $value;\n    }\n  }\n  return $res;\n}\n</code>\n\
    A few notes:\n\nThe function returns the sum of all even indices, so you have\
    \ to add them all together to return the final result.\nThe above code assumes\
    \ the input array is passed by reference (to not change the original array).\n\
    Since you are using PHP > 5.5, it is better to pass an array by reference (see\
    \ the function signature).\nThe above function can be made more concise (by removing\
    \ the foreach loop) and also faster (by using the + operator instead of +=). I\
    \ leave that as an exercise to the reader.\n<|/ a tags=php,algorithm dscore=1\
    \ |>\n<| a dscore=0 |>\nYou could do it using php array_filter and array_sum.\
    \ Here's an example -\n<code>\n$array = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12);\necho array_sum(array_filter($array, function($key){\n    return $key %\
    \ 2 == 0;\n}));\n</code>\n<|/ a tags=php,algorithm |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n$result = array_sum(array_filter($list, function($i){\n   return\
    \ ($i % 2) == 0;\n}));\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjoij9fwn.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $value) {\n        if ($key\
    \ % 2 === 1) {\n            $lst += $value;\n        }\n    }\n\n    return count($lst);\n\
    }\n</code>\n<|/ a dscore=0 tags=php,arrays,function |>\n<| c |>\nYou don't need\
    \ `array_shift` at all. Just increment `foreach`'s loop counter: `for ($i = count($lst);\
    \ $i--;)`.\n<|/ c |>\n<| c |>\nThis answer has some interesting ways of doing\
    \ things.  As a beginner, I think it's easier to understand a solution using standard\
    \ php array functions.\n<|/ c |>\n<| a |>\nA simple and short and simple answer,\
    \ using array_slice:\n<code>\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpn9ief8dr.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\t$evens = 0;\n\tforeach ($lst as $key => $val) {\n\t\t\
    if ($key % 2 === 0) {\n\t\t\t$evens += $val;\n\t\t}\n\t}\n\treturn $evens;\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4aaghfl.php:21\n\
    Stack trace:\n#0 /tmp/tmpp4aaghfl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpp4aaghfl.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  \n    // We are assuming that each integer is larger than\
    \ 0\n    // since we are using an array.\n    \n    if (empty($lst)) return 0;\n\
    \    $evens = array();\n    $odds = array();\n    $sum = 0;\n    \n    foreach\
    \ ($lst as $key => $value) {\n      if ($key % 2 == 0) {\n        $evens[] = $value;\n\
    \      } else {\n        $odds[] = $value;\n      }\n    }\n    \n    foreach\
    \ ($evens as $key => $value) {\n      $sum += $value;\n    }\n    \n    foreach\
    \ ($odds as $key => $value) {\n      $sum += $value;\n    }\n    \n    return\
    \ $sum;\n    \n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrulc_oh.php:41\n\
    Stack trace:\n#0 /tmp/tmpcrulc_oh.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcrulc_oh.php\
    \ on line 41\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = 0;\n    $odds = 0;\n    foreach ($lst as $val)\
    \ {\n        if ($val % 2 == 0) {\n            $evens++;\n        } else {\n \
    \           $odds++;\n        }\n    }\n\n    return $evens + $odds;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxchiu91j.php:25\n\
    Stack trace:\n#0 /tmp/tmpxchiu91j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxchiu91j.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (count($lst) == 0)\n        return 0;\n    $sum =\
    \ 0;\n    foreach ($lst as $i => $el) {\n        if ($i % 2 == 0) {\n        \
    \    $sum += $el;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqkaj4ir.php:23\n\
    Stack trace:\n#0 /tmp/tmplqkaj4ir.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplqkaj4ir.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $i = 0;\n    $sum = 0;\n    while ($i < count($lst))\
    \ {\n        if ($i % 2 == 0) {\n            $sum += $lst[$i];\n        }\n  \
    \      $i++;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n   \
    \ return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2aoz9z98.php:22\n\
    Stack trace:\n#0 /tmp/tmp2aoz9z98.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2aoz9z98.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  foreach ($lst as $i => $val) {\n    if ($i\
    \ % 2) {\n      $sum += $val;\n    }\n  }\n  return $sum;\n}\n</code>\n<|/ a |>\n\
    <| a tags=php,php-5.3,function,arrays dscore=3 |>\nHere is another solution to\
    \ the problem:\n<code>\n<?php\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2i_7xsmc.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    $even = count($lst) & 1;\n    for ($i\
    \ = 0; $i < count($lst); ++$i) {\n        $sum += $lst[$i];\n        $ev = ! $even;\n\
    \        if ($ev) {\n            if ($i % 2 == 1) {\n                $sum += $lst[$i];\n\
    \            }\n        }\n        $even = $ev;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kvkjy0k.php:27\n\
    Stack trace:\n#0 /tmp/tmp9kvkjy0k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9kvkjy0k.php\
    \ on line 27\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $i = 0;\n    foreach ($lst as $i) {\n        if ($i\
    \ % 2) {\n            $lst_out[] = $i;\n        }\n    }\n    return $lst_out;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $lst_out in /tmp/tmpvtrnu97w.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtrnu97w.php:21\n\
    Stack trace:\n#0 /tmp/tmpvtrnu97w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvtrnu97w.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens  = array_filter($lst, 'is_int'); // filter out\
    \ integers\n    $odds   = array_filter($lst, 'is_int', 'odd'); // filter out odd-numbers\n\
    \    $even_sum = array_sum($evens);\n    return $even_sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #3 ($mode)\
    \ must be of type int, string given in /tmp/tmpb5njd367.php:8\nStack trace:\n\
    #0 /tmp/tmpb5njd367.php(8): array_filter(Array, 'is_int', 'odd')\n#1 /tmp/tmpb5njd367.php(14):\
    \ add(Array)\n#2 /tmp/tmpb5njd367.php(18): candidate(Array)\n#3 /tmp/tmpb5njd367.php(24):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmpb5njd367.php on line 8\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter($lst);\n    $odds = array_filter($lst,\
    \ 'is_int');\n    return array_sum(array_diff($evens, $odds));\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpgb75kl.php:17\n\
    Stack trace:\n#0 /tmp/tmpmpgb75kl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmpgb75kl.php\
    \ on line 17\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = $lst[0];\n  return array_sum(array_slice($lst,1))\
    \ + $even;\n}\n</code>\n<|/ a tags=php,algorithm,arrays,sum |>\n<| a |>\n<code>\n\
    <?php\n$total = 0;\nforeach ($arr as $value) {\n    if ($value % 2 != 0) {\n \
    \       $total += $value;\n    }\n}\n</code>\n<|/ a tags=php,algorithm,arrays,sum\
    \ dscore=2 |>\n<| a tags=php,algorithm,arrays,sum |>\nUse array_sum\n<code>\n\
    $arr[]=1;\n$arr[]=1;\n$arr[]=1;\n$arr[]=1;\n$arr[]=1;\n\necho array_sum($arr);\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThe question was about sums, not about additions.\n\
    <|/ c |>\n<| c |>\n$arr[]=1; is not an array.\n<|/ c |>\n<| a tags=php,algorithm,arrays,sum\
    \ dscore=1 |>\n<code>\n$sum = 0;\nfor ($i = 0, $len = count($array); $i < $len;\
    \ $i++) {\n    if($array[$i] % 2 == 0)\n        $sum += $array[$i];\n}\n</code>\n\
    <|/ a |>\n<| a |>\n<code>\n$sum = 0;\nforeach ($numbers as $number) {\n    if\
    \ ($number % 2 === 0) {\n        $sum += $number;\n    }\n}\n</code>\n<|/ a dscore=1\
    \ tags=php,algorithm,arrays,sum |>\n<| a dscore=0 |>\n<code>\n$sum = 0;\nforeach\
    \ ($numbers as $number)\n{\nif ($number % 2 === 0)\n{\n   $sum += $number;\n}\n\
    }\n</code>\n<|/ a tags=php,algorithm,arrays,sum |>\n<| c |>\nWhile this code snippet\
    \ may solve the question, [including an explanation](http://meta.stackexchange.com/questions/114762/explaining-entirely-\u200C\
    \u200Bcode-based-answers) really helps to improve the quality of your post. Remember\
    \ that you are answering the question for readers in the future, and those people\
    \ might not know the reasons for your code suggestion.\n<|/ c |>\n<| a dscore=0\
    \ |>\nYou can do this in many ways but here is one that uses arrays:\n<code>\n\
    $arr = array(1, 4, 6, 2, 7, 3, 8, 0);\n$sum = 0;\nforeach ($arr as $value)\n{\n\
    \    if ($value % 2 != 0)\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpvp0dq3up.php
    on line 10

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $i => $num) {\n        if ($i % 2 ==\
    \ 0) {\n            $lst_even[] = $num;\n        }\n    }\n    return $lst_even;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpneasakmr.php:20\n\
    Stack trace:\n#0 /tmp/tmpneasakmr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpneasakmr.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    // get even indices\n    $even_lst = array_filter(\n\
    \        $lst,\n        function ($x) use ($lst) {\n            return $x % 2\
    \ === 0;\n        },\n        ARRAY_FILTER_USE_BOTH\n    );\n    // add even elements\n\
    \    $add = 0;\n    foreach ($even_lst as $e) {\n        $add += $e;\n    }\n\
    \    return $add;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wt93_sw.php:28\n\
    Stack trace:\n#0 /tmp/tmp4wt93_sw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wt93_sw.php\
    \ on line 28\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $res = 0;\n  foreach ($lst as $i)\n    if ($i % 2 == 1)\n\
    \      $res += $i;\n  return $res;\n}\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9yiv3oi.php:18\n\
    Stack trace:\n#0 /tmp/tmpf9yiv3oi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpf9yiv3oi.php\
    \ on line 18\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $i = 0;\n    $sum = 0;\n    foreach ($lst as $elem)\
    \ {\n        if ($i % 2 == 0) {\n            $sum += $elem;\n        }\n     \
    \   $i++;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdlfovi1.php:23\n\
    Stack trace:\n#0 /tmp/tmpzdlfovi1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzdlfovi1.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach($lst as $i => $v) {\n    if(isset($lst[$i+1]))\
    \ {\n      if($v%2 != 0) {\n        $lst[$i] = $v;\n      }\n    }\n  }\n  return\
    \ count($lst);\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxst0ixfd.php:22\n\
    Stack trace:\n#0 /tmp/tmpxst0ixfd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxst0ixfd.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $even = 0;\n  $odd = 0;\n  foreach ($lst as $key => $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even += $value;\n    } else {\n      $odd\
    \ += $value;\n    }\n  }\n  return $even;\n}\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lr2iyer.php:23\n\
    Stack trace:\n#0 /tmp/tmp_lr2iyer.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_lr2iyer.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $result = 0;\n  foreach ($lst as $k => $v) {\n    if ($k\
    \ % 2 == 0) {\n      $result += $v;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5o0i14r.php:20\n\
    Stack trace:\n#0 /tmp/tmpp5o0i14r.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp5o0i14r.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = 0;\n    $odd = 0;\n    foreach ($lst as $index\
    \ => $value) {\n        if ($index & 1) {\n            $even += $value;\n    \
    \    } else {\n            $odd += $value;\n        }\n    }\n    return $even;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpken41n02.php:25\n\
    Stack trace:\n#0 /tmp/tmpken41n02.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpken41n02.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach($lst as $i => $e) {\n    if($i%2 == 1)\n     \
    \ $lst[$i+1] += $e;\n  }\n  return $lst;\n}\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp5c2wo668.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp5c2wo668.php:19\nStack\
    \ trace:\n#0 /tmp/tmp5c2wo668.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5c2wo668.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = array_filter($lst, function($value){\n     \
    \   return ($value & 1) == 0;\n    });\n    return count($even) + count($lst)\
    \ - count($lst);\n}\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72dz9n_m.php:17\n\
    Stack trace:\n#0 /tmp/tmp72dz9n_m.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp72dz9n_m.php\
    \ on line 17\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $val) {\n        if ($key %\
    \ 2 == 1)\n            $lst[] = $val;\n    }\n    return count($lst);\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdxj8xam.php:19\n\
    Stack trace:\n#0 /tmp/tmpkdxj8xam.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkdxj8xam.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    foreach ($lst as $key => $val) {\n\
    \        if ($key % 2 == 0)\n            $result += $val;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppd2d7qwi.php:20\n\
    Stack trace:\n#0 /tmp/tmppd2d7qwi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppd2d7qwi.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[$lst[0] & 1] + $lst[$lst[1] & 1] + $lst[$lst[2]\
    \ & 1];\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpkrmns1oz.php on line 7\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkrmns1oz.php:15\nStack\
    \ trace:\n#0 /tmp/tmpkrmns1oz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpkrmns1oz.php\
    \ on line 15\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    for ($i = 1; $i < count($lst); $i++)\n\
    \        if ($lst[$i] % 2 == 0)\n            $result += $lst[$i];\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0y234yy.php:19\n\
    Stack trace:\n#0 /tmp/tmpm0y234yy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpm0y234yy.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[1 - ($lst[0] & 1)] + $lst[0];\n}\n</code>\n\
    <|/ a tags=optimization,php,function |>\n<| c |>\nYou sir are a genius! It worked\
    \ like a charm. I did have to change this line: if ($list[1] > $list[2]) { to\
    \ if ($list[1] > $list[0]) because the first element in the array is always odd.\
    \ I also added a line to show that the function returned the sum of all the odd\
    \ elements in the array. Thanks a lot!!\n<|/ c |>\n<| c |>\nOh, yeah I guess I\
    \ missed that. I guess it depends on what your requirements are since I assumed\
    \ the array had odd numbers.\n<|/ c |>\n<| a tags=optimization,php,function |>\n\
    I find that it's often easier to write code in an imperative paradigm that takes\
    \ advantage of other language constructs to do things like this in PHP without\
    \ having it be so slow.\nFor example:\n<code>\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpl38zy0mv.php
    on line 9

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach ($lst as $i => $e) {\n    if (isset($lst[$i]))\
    \ {\n      if ($e % 2 == 0) continue;\n      else return $e + $lst[$i];\n    }\n\
    \  }\n  return false;\n}\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_ja199o.php:20\n\
    Stack trace:\n#0 /tmp/tmpo_ja199o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo_ja199o.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter($lst, function ($item, $index)\
    \ {\n        return $index & 1;\n    });\n    return array_sum($evens);\n}\n</code>\n\
    The only advantage of this solution is that it uses PHP 5.3 or higher, but it's\
    \ very clear what's going on. It's also very clearly coded and easy to understand.\n\
    <|/ a dscore=5 |>\n<| c |>\nI like how simple this is. I didn't know about the\
    \ array_filter function. +1\n<|/ c |>\n<| c |>\nI like your solution, but I find\
    \ it to be rather confusing. Especially if you read it again 5 years later when\
    \ you're looking at the code and trying to figure out what's going on. I'd have\
    \ preferred to write out the code explicitly and explain to myself what's going\
    \ on rather than have it be unreadable or unmaintainable. :) But I guess I still\
    \ prefer your answer.\n<|/ c |>\n<| c |>\nI find it extremely easy to read.  Perl\
    \ programmers have learned some Perl syntax and functions on their own.  I find\
    \ this more readable.\n<|/ c |>\n<| c |>\nI believe this answer misses the point\
    \ of OP. He wants to know how to use PHP's \"array_sum\" function with only \"\
    even\" elements of the array. \n\nYour answer shows how to filter an array to\
    \ only get even indices, but the original poster's question states that he wants\
    \ to know how to sum the even elements of the array at odd indices. The correct\
    \ answer to his question is \"array_sum\" with \"array_filter\". But I'm sure\
    \ you know that. :)\n<|/ c |>\n<| c |>\nThis solution is much more efficient than\
    \ the accepted solution, since it only needs to iterate over the array once, and\
    \ it avoids the extra array creations.\n<|/ c |>\n<| a dscore=5 |>\nAs someone\
    \ who has recently graduated from college, I would recommend array_reduce.\n<code>\n\
    $arr = [4, 6, 10, 8, 2, 5];\n\n$sum = array_reduce($arr, function($total, $item){\n\
    \    return $total + $item;\n}, 0);\n\nvar_dump($sum);\n</code>\nOutputs:\n<code>\n\
    int 9\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nHow would you extend this to\
    \ get the sum of all elements in a multidimensional array?\n<|/ c |>\n<| c |>\n\
    It would be done the same way and return the total of the array.\n<|/ c |>\n<|\
    \ a tags=php,arrays dscore=\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpz4384nd1.php
    on line 12

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $total = 0;\n    foreach ($lst as $i => $num) {\n  \
    \      if ($i % 2 == 1) {\n            $total += $num;\n        }\n    }\n   \
    \ return $total;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzr0y31v.php:22\n\
    Stack trace:\n#0 /tmp/tmprzr0y31v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprzr0y31v.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  return array_sum(array_filter($lst, function($v) use ($lst)\
    \ {\n    return $v & 1;\n  }));\n}\n\n$result = add($arr);\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $arr in /tmp/tmpszmsmbd_.php on line 12\n\
    \nFatal error: Uncaught TypeError: array_filter(): Argument #1 ($array) must be\
    \ of type array, null given in /tmp/tmpszmsmbd_.php:9\nStack trace:\n#0 /tmp/tmpszmsmbd_.php(9):\
    \ array_filter(NULL, Object(Closure))\n#1 /tmp/tmpszmsmbd_.php(12): add(NULL)\n\
    #2 {main}\n  thrown in /tmp/tmpszmsmbd_.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return array_sum(array_map(function ($item, $key) {\n\
    \        return $key % 2 == 1 ? $item + $lst[$key] : $item;\n    }, $lst, array_keys($lst)));\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $lst in /tmp/tmpbj97m_7l.php on line 8\n\n\
    Warning: Trying to access array offset on value of type null in /tmp/tmpbj97m_7l.php\
    \ on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj97m_7l.php:17\n\
    Stack trace:\n#0 /tmp/tmpbj97m_7l.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbj97m_7l.php\
    \ on line 17\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter($lst, \"is_int\");\n    return\
    \ count($evens) ? array_sum($evens) : 0;\n}\n\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5ki__8r.php:16\n\
    Stack trace:\n#0 /tmp/tmpt5ki__8r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpt5ki__8r.php\
    \ on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  foreach ($lst as $k => $v) {\n    if (isset($lst[$k\
    \ + 1]) && $lst[$k + 1] % 2 === 0) {\n      $sum += $v;\n    }\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1qy5ct5.php:21\n\
    Stack trace:\n#0 /tmp/tmpm1qy5ct5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm1qy5ct5.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i +=\
    \ 2) {\n        $sum += $lst[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pidiikc.php:18\n\
    Stack trace:\n#0 /tmp/tmp8pidiikc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8pidiikc.php\
    \ on line 18\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[count($lst) - 1] + add($lst);\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp42hjhmm1.php on line 7

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++)\
    \ {\n        if ($i % 2 === 0) {\n            $sum += $lst[$i];\n        }\n \
    \   }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_aytpaw.php:21\n\
    Stack trace:\n#0 /tmp/tmp2_aytpaw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2_aytpaw.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (!$lst) {\n        throw new Exception(\"add expects\
    \ non-empty list of integers lst\");\n    }\n    $sum = 0;\n    $len = count($lst);\n\
    \    for($i = 0; $i < $len; $i++) {\n        if (!is_int($lst[$i])) {\n      \
    \      throw new Exception('all list elements must be integers');\n        }\n\
    \        if ($i%2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n \
    \   return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnd80ftpk.php:28\n\
    Stack trace:\n#0 /tmp/tmpnd80ftpk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnd80ftpk.php\
    \ on line 28\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    foreach ($lst as $value) {\n\
    \        if ($value % 2 == 0) {\n            $evens[] = $value;\n        }\n \
    \   }\n    return count($evens);\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumzrjufx.php:21\n\
    Stack trace:\n#0 /tmp/tmpumzrjufx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpumzrjufx.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[0] + (isset($lst[1]) ? $lst[1] : 0);\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue08dq0n.php:15\n\
    Stack trace:\n#0 /tmp/tmpue08dq0n.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpue08dq0n.php\
    \ on line 15\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = array_filter($lst, function($el) {\n       \
    \ return $el & 1; // is even\n    });\n    $odd = array_filter($lst, function($el)\
    \ {\n        return !$el & 1; // is odd\n    });\n    return count($even) + count($odd);\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknffhxne.php:21\n\
    Stack trace:\n#0 /tmp/tmpknffhxne.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpknffhxne.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (is_array($lst) && count($lst) > 0) {\n        $sum\
    \ = 0;\n        foreach ($lst as $value) {\n            if ($value % 2 == 1) {\n\
    \                $sum += $value;\n            }\n        }\n        return $sum;\n\
    \    } else {\n        throw new \\RuntimeException(\"No lists found\");\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp269id4nm.php:25\n\
    Stack trace:\n#0 /tmp/tmp269id4nm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp269id4nm.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $total = 0;\n    foreach ($lst as $value) {\n      \
    \  if ($value % 2 == 1) {\n            $total += $value;\n        }\n    }\n \
    \   return $total;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyafqfisa.php:21\n\
    Stack trace:\n#0 /tmp/tmpyafqfisa.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyafqfisa.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  return array_sum(array_filter($lst, 'is_odd', ARRAY_FILTER_USE_BOTH));\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_odd\" not found or invalid function\
    \ name in /tmp/tmp98tfoqlx.php:7\nStack trace:\n#0 /tmp/tmp98tfoqlx.php(7): array_filter(Array,\
    \ 'is_odd', 1)\n#1 /tmp/tmp98tfoqlx.php(11): add(Array)\n#2 /tmp/tmp98tfoqlx.php(15):\
    \ candidate(Array)\n#3 /tmp/tmp98tfoqlx.php(21): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp98tfoqlx.php on line 7\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $idx => $val) {\n  \
    \      if ($idx % 2 == 0) {\n            $sum += $val;\n        }\n    }\n   \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5otn9hk.php:21\n\
    Stack trace:\n#0 /tmp/tmpp5otn9hk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpp5otn9hk.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (!$lst) {\n        return 0;\n    }\n\n    foreach\
    \ ($lst as $k => $v) {\n        if ($k % 2 === 0) {\n            $result = $result\
    \ + $v;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $result in /tmp/tmp9jg53lz8.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jg53lz8.php:24\nStack\
    \ trace:\n#0 /tmp/tmp9jg53lz8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9jg53lz8.php\
    \ on line 24\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\t$ans = 0;\n\tforeach ($lst as $value) {\n\t\tif ($value\
    \ % 2 == 1) {\n\t\t\t$ans += $value;\n\t\t}\n\t}\n\treturn $ans;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdheupw_w.php:21\n\
    Stack trace:\n#0 /tmp/tmpdheupw_w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdheupw_w.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $number) {\n       \
    \ if ($number % 2 == 0) {\n            $sum += $number;\n        }\n    }\n\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hxw869y.php:22\n\
    Stack trace:\n#0 /tmp/tmp4hxw869y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4hxw869y.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    // initialize evensum to zero\n    $evensum = 0;\n \
    \   // initialize even to true\n    $even = true;\n    // initialize odd to false\n\
    \    $odd = false;\n    // iterate through all elements\n    foreach($lst as $element)\
    \ {\n        // if the element is even, add it to evensum\n        if ($even)\
    \ {\n            $evensum += $element;\n            // if the element is odd,\
    \ add it to oddsum\n        } else {\n            $oddsum += $element;\n     \
    \   }\n        // If the element is odd, set it to true, and set it to false if\
    \ it reaches 0\n        // Otherwise, set it to false\n        if ($oddsum > 0)\
    \ {\n            $even = true;\n        } else {\n            $even = false;\n\
    \        }\n    }\n    // Return the even sum\n    return $evensum;\n}\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $oddsum in /tmp/tmptk8d7lp3.php on line 24\n\
    \nWarning: Undefined variable $oddsum in /tmp/tmptk8d7lp3.php on line 20\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmptk8d7lp3.php:38\nStack trace:\n\
    #0 /tmp/tmptk8d7lp3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptk8d7lp3.php\
    \ on line 38\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $idx => $el) {\n        if ($idx %\
    \ 2 != 0) {\n            $lst[$idx] += $el;\n        }\n    }\n    return $lst;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8_29d3q.php:20\n\
    Stack trace:\n#0 /tmp/tmpp8_29d3q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp8_29d3q.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach ($lst as $i => $elem) {\n    if ($i % 2 == 0)\
    \ {\n      $lst += $elem;\n    }\n  }\n\n  return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + int\
    \ in /tmp/tmp0zo9_ik_.php:9\nStack trace:\n#0 /tmp/tmp0zo9_ik_.php(17): add(Array)\n\
    #1 /tmp/tmp0zo9_ik_.php(21): candidate(Array)\n#2 /tmp/tmp0zo9_ik_.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0zo9_ik_.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $k => $v) {\n        if ($k % 2 ==\
    \ 0) {\n            $result += $v;\n        }\n    }\n    return $result;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nYour code is much more elegant than my solution\n\
    <|/ c |>\n<| c |>\n: Yeah, I wasn't sure if the OP wanted something more efficient\
    \ or not.\n<|/ c |>\n<| a |>\nThis is an alternative solution:\n<code>\n<?php\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbul69ryy.php
    on line 14

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $value) {\n        if ($key\
    \ % 2 === 0) {\n            $lst[$key] += $value;\n        }\n    }\n    return\
    \ $lst;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7qto7tt.php:20\n\
    Stack trace:\n#0 /tmp/tmp_7qto7tt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_7qto7tt.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $i) {\n        $sum\
    \ += $i & 1;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv00rw48a.php:19\n\
    Stack trace:\n#0 /tmp/tmpv00rw48a.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpv00rw48a.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16zdroq2.php:20\n\
    Stack trace:\n#0 /tmp/tmp16zdroq2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp16zdroq2.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  $len = count($lst);\n  for ($i=0; $i<$len;\
    \ $i++) {\n    if ($i % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return\
    \ $sum;\n}\n</code>\nNow the real fun: what if instead of adding all even numbers\
    \ you wanted to find the average of all odd numbers?\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpafqtbtjn.php
    on line 16

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (count($lst) === 0) {\n        return 0;\n    }\n\
    \    $evens = array();\n    $odds = array();\n    foreach ($lst as $i => $x) {\n\
    \        if ($i % 2 === 0) {\n            $evens[] = $x;\n        } else {\n \
    \           $odds[] = $x;\n        }\n    }\n    return count($evens) + count($odds);\n\
    }\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahhp7sn8.php:26\n\
    Stack trace:\n#0 /tmp/tmpahhp7sn8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpahhp7sn8.php\
    \ on line 26\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $total = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 != 0) {\n      $total += $lst[$i];\n    }\n  }\n  return $total;\n\
    }\n</code>\nFor you next question, there are a lot of ways to do this. One of\
    \ the easiest is to use array_map.\n<code>\n$arr = array(1, 2, 3, 4, 5);\n$evens\
    \ = array_map('add', $arr); // array(2, 4, 6)\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nI edited my post after adding my code. Let me know if you can help\
    \ me\n<|/ c |>\n<| c |>\nThank you for the answer! This worked for me. I'll accept\
    \ the answer after 8 minutes.\n<|/ c |>\n<| c |>\nI used a foreach loop for my\
    \ problem but your answer was great!\n<|/ c |>\n<| a |>\nThe simplest way would\
    \ probably be something like...\n<code>\n$sum = 0;\nforeach ($array as $value)\
    \ {\n    $sum += ($value % 2 == 0) ? $value : 0;\n}\n</code>\n<|/ a dscore=1 tags=arrays,php\
    \ |>\n<| a dscore=1 tags=arrays,php |>\nSince this is an \"interview question\"\
    , I assume you would want to find out how to do this with functional style.  A\
    \ more traditional function would look like this:\n<code>\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp82mg5qjr.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if ($item\
    \ % 2 == 0) {\n      $sum += $item;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46nyw55a.php:21\n\
    Stack trace:\n#0 /tmp/tmp46nyw55a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp46nyw55a.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    if (empty($lst)) {\n        return null;\n    }\n  \
    \  $evens = array_filter(array_keys($lst), 'is_int');\n    $odds = array_filter(array_keys($lst),\
    \ 'is_int', array_flip($evens));\n    $result = 0;\n    foreach ($evens as $key\
    \ => $value) {\n        $result += $lst[$key] * $value;\n    }\n    foreach ($odds\
    \ as $key => $value) {\n        $result += $lst[$key] * $value;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #3 ($mode)\
    \ must be of type int, array given in /tmp/tmp7itdj8av.php:11\nStack trace:\n\
    #0 /tmp/tmp7itdj8av.php(11): array_filter(Array, 'is_int', Array)\n#1 /tmp/tmp7itdj8av.php(23):\
    \ add(Array)\n#2 /tmp/tmp7itdj8av.php(27): candidate(Array)\n#3 /tmp/tmp7itdj8av.php(33):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmp7itdj8av.php on line 11\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $result = 0;\n  $n = sizeof($lst);\n  for ($i=0; $i<$n;\
    \ $i++) {\n    if (($i % 2)) {\n      $result += $lst[$i];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1dkj336.php:23\n\
    Stack trace:\n#0 /tmp/tmpz1dkj336.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz1dkj336.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    foreach ($lst as $i => $val) if ($i\
    \ % 2 === 0) $result += $val;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp849ul1bq.php:17\n\
    Stack trace:\n#0 /tmp/tmp849ul1bq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp849ul1bq.php\
    \ on line 17\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    foreach($lst as $i => $num) {\n  \
    \      $result += $num;\n        if ($i % 2 == 1) {\n            $result += $lst[$i];\n\
    \        }\n    }\n    return $result;\n}\n</code>\nThis implementation is very\
    \ efficient and doesn't use any looping constructs, e.g. while, for, foreach,\
    \ etc.\n<|/ a tags=php |>\n<| c |>\nThat's a good solution. I'm very familiar\
    \ with iterating over arrays in PHP, but I'm just trying to figure out how to\
    \ use `foreach` when it's nested inside another foreach. Your solution seems very\
    \ concise.\n<|/ c |>\n<| a dscore=2 |>\nYou can do this in a single foreach loop.\n\
    <code>\n$sum = 0;\n$even = array();\n\nforeach($numbers as $number) {\n    if\
    \ ($number % 2 == 0) {\n        $sum += $number;\n    }\n    else {\n        $even[]\
    \ = $number;\n    }\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphigh83o5.php
    on line 16

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evenIndices = array_filter(array_keys($lst), 'is_int');\n\
    \    if (count($evenIndices) !== count(array_filter(array_keys($lst), 'is_odd')))\n\
    \        throw new RuntimeException('Need even and odd indices for an even length\
    \ array');\n    $evenSum = 0;\n    foreach ($evenIndices as $i => $i) {\n    \
    \    $evenSum += $lst[$i];\n    }\n    return $evenSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_odd\" not found or invalid function\
    \ name in /tmp/tmp5c4c8ofe.php:8\nStack trace:\n#0 /tmp/tmp5c4c8ofe.php(8): array_filter(Array,\
    \ 'is_odd')\n#1 /tmp/tmp5c4c8ofe.php(18): add(Array)\n#2 /tmp/tmp5c4c8ofe.php(22):\
    \ candidate(Array)\n#3 /tmp/tmp5c4c8ofe.php(28): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp5c4c8ofe.php on line 8\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = [];\n    for ($i = 0, $len = count($lst); $i\
    \ < $len; $i+=2) {\n        $res[] = $lst[$i] + $lst[$i + 1];\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86407bkd.php:19\n\
    Stack trace:\n#0 /tmp/tmp86407bkd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp86407bkd.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $i => $v) {\n        if ($i % 2 ==\
    \ 1) {\n            $lst[$i] = $v + $lst[$i + 1];\n        }\n    }\n\n    return\
    \ $lst;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp4pi7cefe.php on line 9\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp4pi7cefe.php:21\nStack\
    \ trace:\n#0 /tmp/tmp4pi7cefe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4pi7cefe.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach($lst as $k=>$v) {\n        if($k%2\
    \ == 0) {\n            $sum += $v;\n        }\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqiyi9lpa.php:21\n\
    Stack trace:\n#0 /tmp/tmpqiyi9lpa.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqiyi9lpa.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  if (!is_array($lst)) {\n    return -1;\n  }\n\n  $evenIdxs\
    \ = array_filter($lst, function ($value) use ($lst) {\n    return $value % 2 ===\
    \ 0;\n  });\n\n  return count($evenIdxs) + count($lst) - count($evenIdxs);\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiaigqnat.php:23\n\
    Stack trace:\n#0 /tmp/tmpiaigqnat.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiaigqnat.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  if (sizeof($lst) < 1) return 0;\n\n  $sum = 0;\n  for\
    \ ($i = 0; $i < sizeof($lst); $i++) {\n    if ($i % 2 == 0) {\n      $sum += $lst[$i];\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoa6nyymv.php:23\n\
    Stack trace:\n#0 /tmp/tmpoa6nyymv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoa6nyymv.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $i => $v) {\n      \
    \  if ($i & 1) {\n            $sum += $v;\n        }\n    }\n    return $sum;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php dscore=1 |>\n<code>\n$evenSum\
    \ = 0;\n$oddSum = 0;\nforeach($arr as $value){\n    if($value % 2 == 0){\n   \
    \     $evenSum += $value;\n    }else{\n        $oddSum += $value;\n    }\n}\n\
    </code>\n<|/ a |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$array1 = array(1, 2, 3, 4);\n$array2 =\
    \ array(4, 5, 6, 7);\n$array3 = array(8, 9, 10, 11);\n$result = array();\n\nforeach($array1\
    \ as $k=>$v){\n    array_push($result, $v+$array2[$k]+$array3[$k]);\n}\n\nprint_r($result);\n\
    function candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1dg350d7.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[2] + $lst[3];\n}\n$lst = array(4, 2, 6,\
    \ 7);\necho add($lst);\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "13\nWarning: Undefined array key 2 in /tmp/tmp8jr76bl1.php on line 7\n\n\
    Warning: Undefined array key 3 in /tmp/tmp8jr76bl1.php on line 7\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8jr76bl1.php:16\nStack trace:\n\
    #0 /tmp/tmp8jr76bl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8jr76bl1.php\
    \ on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $value) {\n        if ($value\
    \ & 1)\n            $lst[$key] += $value;\n    }\n    return $lst;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylpk4y56.php:19\n\
    Stack trace:\n#0 /tmp/tmpylpk4y56.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpylpk4y56.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $result = 0;\n    for ($i = 0, $n = count($lst); $i\
    \ < $n; $i++) {\n        if ($i % 2 == 0) {\n            $result += $lst[$i];\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28_vif71.php:20\n\
    Stack trace:\n#0 /tmp/tmp28_vif71.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp28_vif71.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $val) {\n        if ($key %\
    \ 2 == 0) {\n            $lst += $val;\n        }\n    }\n    return $lst;\n}\n\
    \nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + int\
    \ in /tmp/tmphfrh7aj_.php:9\nStack trace:\n#0 /tmp/tmphfrh7aj_.php(16): add(Array)\n\
    #1 /tmp/tmphfrh7aj_.php(20): candidate(Array)\n#2 /tmp/tmphfrh7aj_.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmphfrh7aj_.php on line 9\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($i % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16zdroq2.php:20\n\
    Stack trace:\n#0 /tmp/tmp16zdroq2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp16zdroq2.php\
    \ on line 20\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    list($evens, $odds) = $lst;\n    return array_sum($evens)\
    \ + array_sum($odds);\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must\
    \ be of type array, int given in /tmp/tmpipwq81ha.php:8\nStack trace:\n#0 /tmp/tmpipwq81ha.php(8):\
    \ array_sum(4)\n#1 /tmp/tmpipwq81ha.php(12): add(Array)\n#2 /tmp/tmpipwq81ha.php(16):\
    \ candidate(Array)\n#3 /tmp/tmpipwq81ha.php(22): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpipwq81ha.php on line 8\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $key => $value) {\n\
    \        if ($key % 2 === 1) {\n            $sum += $value;\n        }\n    }\n\
    \    return $sum;\n}\n</code>\n<|/ a tags=php,arrays dscore=2 |>\n<| a dscore=2\
    \ |>\nThis is my solution\n<code>\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxux3_gco.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = 0;\n    foreach ($lst as $index => $value) {\n\
    \        if ($index % 2 == 0) {\n            $even += $value;\n        }\n   \
    \ }\n    return $even;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp73r99y.php:21\n\
    Stack trace:\n#0 /tmp/tmpjp73r99y.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjp73r99y.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach($lst as $k => $v) {\n       \
    \ if($k % 2 != 0) {\n            $sum += $v;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ad_8tn4.php:22\n\
    Stack trace:\n#0 /tmp/tmp1ad_8tn4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1ad_8tn4.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array_filter($lst, 'is_int');\n    return count($evens)\
    \ / 2 - (count($lst) % 2);\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjo799tal.php:16\n\
    Stack trace:\n#0 /tmp/tmpjo799tal.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjo799tal.php\
    \ on line 16\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $evenIndexes = [];\n  $oddIndexes = [];\n  $evenIndexes\
    \ = array_filter($lst, \"is_int\");\n  $oddIndexes = array_filter($lst, \"is_int\"\
    , \"odd\");\n  return $evenIndexes[0] + $oddIndexes[0];\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #3 ($mode)\
    \ must be of type int, string given in /tmp/tmpmk43vgmk.php:10\nStack trace:\n\
    #0 /tmp/tmpmk43vgmk.php(10): array_filter(Array, 'is_int', 'odd')\n#1 /tmp/tmpmk43vgmk.php(14):\
    \ add(Array)\n#2 /tmp/tmpmk43vgmk.php(18): candidate(Array)\n#3 /tmp/tmpmk43vgmk.php(24):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmpmk43vgmk.php on line 10\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    $odds = array();\n    $n = count($lst);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        if ($i % 2 == 0) {\n            $evens[]\
    \ = $lst[$i];\n        } else {\n            $odds[] = $lst[$i];\n        }\n\
    \    }\n    return array_sum(array_merge($evens, $odds));\n}\n</code>\n<|/ a tags=math,php\
    \ |>\n<| c |>\n: I see what you're saying, but in this example the sum is 7. \
    \ If the input array was the array `[4, 2, 6, 7]` then your method would return\
    \ 7.\n<|/ c |>\n<| c |>\n- yes I am not saying this is what he was looking for\
    \ - my answer is just to show the idea\n<|/ c |>\n<| c |>\n: Okay, fair enough.\
    \  In that case I recommend you delete the answer as it is wrong.  Thanks!\n<|/\
    \ c |>\n<| c |>\n: I see your point, but I believe that my answer is correct -\
    \ it is the correct approach to solving the problem of adding two arrays while\
    \ taking only unique elements. Of course, there might be better algorithms, I'm\
    \ just providing one that could be used.\n<|/ c |>\n<| c |>\n: Thanks, I did not\
    \ know about array_unique. Yet another reason to stay away from my solutions.\n\
    <|/ c |>\n<| a tags=math,php |>\n<code>\n$array1 = array(4, 2, 6, 7);\n$array2\
    \ = array(4, 5, 6, 7);\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1c3i7v_9.php
    on line 19

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = 0;\n    $odd = 0;\n    foreach ($lst as $i)\
    \ {\n        if ($i % 2 == 0) {\n            $even += $i;\n        } else {\n\
    \            $odd += $i;\n        }\n    }\n    return $even - $odd;\n}\n</code>\n\
    The function can be used for multiple arrays by using a foreach loop:\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpywfhl46f.php
    on line 18

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  foreach ($lst as $i => $e) {\n    if ($i % 2 == 0) {\n\
    \      $lst[] = $e;\n    }\n  }\n  return $lst;\n}\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5w3fz6z.php:19\n\
    Stack trace:\n#0 /tmp/tmpy5w3fz6z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy5w3fz6z.php\
    \ on line 19\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = array();\n    $odd = array();\n\n    for ($i\
    \ = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0) {\n            $even[]\
    \ = $lst[$i];\n        } else {\n            $odd[] = $lst[$i];\n        }\n \
    \   }\n    return array_sum($even) + array_sum($odd);\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nthank you for this simple solution, but i don't want use loop in\
    \ my code.\n<|/ c |>\n<| c |>\nYou cant do it without a loop\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpaa3jf915.php
    on line 19

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  return array_sum(array_filter(\n    array_map(\n     \
    \ function($v) { return $v%2==0 ? $v+2 : $v; },\n      $lst\n    ),\n    function($v)\
    \ { return $v!=0; }\n  ));\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrauxukr.php:21\n\
    Stack trace:\n#0 /tmp/tmpvrauxukr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvrauxukr.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $even = 0;\n    $odd = 0;\n    foreach ($lst as $v)\
    \ {\n        if ($v & 1) {\n            $even += $v;\n        } else {\n     \
    \       $odd += $v;\n        }\n    }\n    return $even;\n}\n</code>\n<|/ a dscore=3\
    \ tags=php,arrays |>\n<| a tags=php,arrays |>\nA functional alternative to Mark\
    \ Meyer's answer is:\n<code>\n$even = array_filter(function($a) { return $a &\
    \ 1; }, $list);\n$odd = array_filter(function($a) { return $a & 2; }, $list);\n\
    </code>\n<|/ a dscore=3 |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpp_u19ld_.php
    on line 18

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    $even_sum = 0;\n    $odd_sum = 0;\n \
    \   foreach ($lst as $index => $value) {\n        if ($index % 2 == 0) {\n   \
    \         $sum += $value;\n        } else {\n            $even_sum += $value;\n\
    \        }\n    }\n    return $sum + $even_sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpushebqir.php:25\n\
    Stack trace:\n#0 /tmp/tmpushebqir.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpushebqir.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  if (!is_array($lst) || empty($lst)) return 0;\n  $res\
    \ = 0;\n  $n = count($lst);\n  foreach ($lst as $i => $val) {\n    if ($i % 2\
    \ == 0) {\n      $res += $val;\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3haiqvfp.php:23\n\
    Stack trace:\n#0 /tmp/tmp3haiqvfp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3haiqvfp.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return array_sum(array_slice($lst,1,count($lst)));\n\
    }\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjozyov6.php:15\n\
    Stack trace:\n#0 /tmp/tmpsjozyov6.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpsjozyov6.php\
    \ on line 15\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $res = [];\n    foreach ($lst as $value) {\n       \
    \ if ($value & 1) {\n            $res[] = $value;\n        }\n    }\n    return\
    \ $res;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nAwesome. Thank you very\
    \ much. I had tried array_map, but didn't think of using the key parameter. Thanks\
    \ again for your help.\n<|/ c |>\n<| c |>\nI updated my answer to account for\
    \ duplicates in the original array by just appending the value to the array that\
    \ already exists.\n<|/ c |>\n<| c |>\nThank you for the update. I'm new to php\
    \ and didn't realize you could use array_unique() on a multidimensional array.\
    \ Great work.\n<|/ c |>\n<| c |>\nNo problem, glad I could help. If you feel it\
    \ solved your problem please consider marking it as the solution. Good luck with\
    \ your project! :)\n<|/ c |>\n<| c |>\nThanks for this. I've been working on this\
    \ for a while but no matter what I try I can't seem to get array_unique to work.\
    \ The keys in the array still appear. I've tried using array_map with my array_unique\
    \ version and my array_unique version but no luck so far. Anything else I can\
    \ try?\n<|/ c |>\n<| a |>\nIf you have PHP >= 5.5 you can use the array_column\
    \ function :\n<code>\n$arr = array(4, 2, 6, 7);\n$arr2 = array_column($arr, 1,\
    \ 0);\nprint_r($arr2);\n</code>\nwill output :\n<code>\nArray ( [0] => 4 [2] =>\
    \ 6 )\n</code>\n<|/ a dscore=4 tags=php,arrays |>\n<| c |>\nI upvoted you because\
    \ the OP asked for an array solution. But your solution is also a PHP 5.5 function\n\
    <|/ c |>\n<| c |>\nAh yes, I saw the note in the docs and immediately thought\
    \ \"that's a big if\". Since I still have PHP 5.2, I probably shouldn't be using\
    \ it though, thank you for the answer though.\n<|/ c |>\n<| c |>\nI know, but\
    \ the OP didn't mention it so I thought I should add that :P\n<|/ c |>\n<| a dscore=3\
    \ |>\nIf you're okay with using array_map and array_unique:\n<code>\n$a = array(4,\
    \ 2, 6, 7);\n$b = array_map(function($a) { return $a; }, array_unique($a));\n\
    </code>\n<|/ a tags=php,arrays |>\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwdtm7ztl.php
    on line 15

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if ($n\
    \ % 2 == 0) {\n            $sum = $sum + $n;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 4,\
    \ 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm32047u.php:21\n\
    Stack trace:\n#0 /tmp/tmpgm32047u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgm32047u.php\
    \ on line 21\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach($lst as $key => $val) {\n        // if we're\
    \ not at even indexes, we ignore\n        if ($key % 2 == 0) {\n            continue;\n\
    \        }\n        // otherwise return the sum of the two elements\n        return\
    \ $val + $lst[$key + 1];\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpko4pkt1m.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpko4pkt1m.php:23\nStack\
    \ trace:\n#0 /tmp/tmpko4pkt1m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpko4pkt1m.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  // Add even numbers in odd indices:\n  $evens = 0;\n \
    \ foreach ($lst as $key => $value) {\n    if ($key % 2 === 0) {\n      $evens\
    \ += $value;\n    }\n  }\n\n  return $evens;\n}\n\nfunction candidate(...$args)\
    \ {\n    return add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4,\
    \ 88)) !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21ecsi0p.php:23\n\
    Stack trace:\n#0 /tmp/tmp21ecsi0p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp21ecsi0p.php\
    \ on line 23\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    foreach ($lst as $key => $value) {\n        if ($key\
    \ % 2 === 0) {\n            $total = $value;\n        }\n    }\n    return $total;\n\
    }\n</code>\n<|/ a |>\n<| a |>\n<code>\n$odds = array();\n$evens = array();\n\n\
    foreach($values as $key => $value)\n{\n    if ($key % 2 == 1)\n    {\n       \
    \ $evens[] = $value;\n    }\n    else\n    {\n        $odds[] = $value;\n    }\n\
    }\n\n$total = array_sum($odds);\n$total += array_sum($evens);\n</code>\n<|/ a\
    \ tags=php,math dscore=2 |>\n<| a tags=php,math dscore=1 |>\nThis is quite simply\
    \ a case of iterating through the array and adding each element to an array, or\
    \ vice versa, depending on what it is. Then use array_sum to get the total sum\
    \ of the array.\n<code>\n$a = array(2, 4, 6, 8);\n$b = array(1, 3, 5, 7);\n\n\
    $total = 0;\n\nforeach ($a as $key => $value) {\n    $total += $value; // Add\
    \ each value to $total\n}\n\necho array_sum($b); // Get the total sum of $b\n\
    </code>\n<|/ a |>\n<| c |>\nI believe that this is probably the most efficient\
    \ method\n<|/ c |>\n<| a |>\n<code>\n$a = array(4, 2, 6, 7);\n\n$b = array(4,\
    \ 2, 6, 7);\n\n$c = array_sum($a);\n\n$d = array_sum($b);\n\n$c = $c + $d;\n\n\
    print_r($c);\n</code>\n<|/ a tags=php,math dscore=1 |>\n<| c |>\nThis is not what\
    \ the OP is asking, as he wants to add only the even elements in the two arrays.\n\
    <|/ c |>\n<| a tags=php,math dscore=1 |>\nI came up with this solution:\n<code>\n\
    $a = array(2, 4, 6, 8);\n\n$b = array(1, 3, 5, 7);\n\n$sumEven = 0;\n$sumOdd =\
    \ 0;\n\nforeach($a as $key => $value) {\n\n    if( $key % 2 == 0 ) {\n       \
    \ $sumEven += $value;\n    } else {\n        $sumOdd += $value;\n    }\n\n}\n\n\
    $sumTotal =  $sumEven + $sumOdd;\n\necho $sumTotal;\n</code>\n<|/ a |>\n<| a tags=php,math\
    \ |>\nYou can loop through your arrays, and add the even numbers to the arrays\
    \ of sums, and the odd numbers to the arrays of sums.  After the loop has completed,\
    \ you have a array of sums.\n<code>\nfunction candidate(...$args) {\n    return\
    \ add(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 88))\
    \ !== 88) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpptw117zc.php
    on line 14

    '
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n  $sum = 0;\n  $len = count($lst);\n  for ($i = 0; $i <\
    \ $len; ++$i) {\n    if ($i % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpel2pd88e.php:22\n\
    Stack trace:\n#0 /tmp/tmpel2pd88e.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpel2pd88e.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n\t$sum = 0;\n\tforeach($lst as $i => $item) {\n\t\tif($i\
    \ % 2 == 1) {\n\t\t\t$sum += $item;\n\t\t}\n\t}\n\treturn $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return add(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4, 88)) !== 88) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l7ii3hd.php:22\n\
    Stack trace:\n#0 /tmp/tmp3l7ii3hd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3l7ii3hd.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $evens = array();\n    $odds = array();\n\n    foreach\
    \ ($lst as $k => $v) {\n        if ($k % 2 === 0) {\n            $evens[] = $v;\n\
    \        } else {\n            $odds[] = $v;\n        }\n    }\n    return $evens\
    \ + $odds;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64kagz1f.php:25\n\
    Stack trace:\n#0 /tmp/tmp64kagz1f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp64kagz1f.php\
    \ on line 25\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    $sum = 0;\n    $n = count($lst);\n    for($i = 0; $i\
    \ < $n; $i++) {\n        if($i % 2 != 0)\n            $sum = $sum + $lst[$i];\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ii5z1de.php:22\n\
    Stack trace:\n#0 /tmp/tmp1ii5z1de.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1ii5z1de.php\
    \ on line 22\n"
  timestamp: 1660028784
- exit_code: 255
  program: "<?php\n// Given a non-empty array of integers lst. add the even elements\
    \ that are at odd indices..\n// Examples:\n// >>> add(array(4, 2, 6, 7))\n// 2\n\
    function add($lst) {\n    return $lst[array_keys($lst,array_search($lst,$lst,1))[0]];\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhat if the array is empty ? I get the\
    \ error `Undefined offset: 3` on line 9...\n<|/ c |>\n<| a tags=php,arrays,algorithm\
    \ dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return add(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4, 88)) !== 88) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6, 7, 2, 122))\
    \ !== 122) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 0, 6, 7)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 4, 6, 8)) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgiv07fxp.php
    on line 9

    '
  timestamp: 1660028784

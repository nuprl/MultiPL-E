language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmprthwg6eu.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprthwg6eu.php:17\nStack trace:\n#0 /tmp/tmprthwg6eu.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmprthwg6eu.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  if (count($l) % 2 != 0) {\n    return $l[count($l)\
    \ / 2 - 1];\n  } else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpia5xvxem.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpia5xvxem.php:21\nStack trace:\n#0 /tmp/tmpia5xvxem.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpia5xvxem.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n%2==1) return\
    \ $l[(count($l)-1)/2 ];\n    else return ($l[(count($l)-1)/2] + $l[( count($l)/2\
    \ )-1])/2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpm9pfbucq.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpm9pfbucq.php:20\nStack trace:\n#0 /tmp/tmpm9pfbucq.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm9pfbucq.php on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!is_array($l)) return null;\n    $l = array_unique($l);\n\
    \    $n = count($l);\n    if ($n % 2) return $l[($n + 1) / 2 - 1];\n\n    // Sort\
    \ in descending order\n    sort($l);\n    $half = floor($n / 2);\n    return $l[$half];\n\
    }\n</code>\n<|/ a tags=arrays,php,median |>\n<| c |>\nI like this approach very\
    \ much, only thing I would do is add some code to handle a null array and possibly\
    \ use array_values to make array keys a numeric one\n<|/ c |>\n<| a dscore=4 tags=arrays,php,median\
    \ |>\nIf anyone is looking for median of array in PHP7, here is the solution\n\
    <code>\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpyzexno5d.php
    on line 18

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return ($l[count($l)/2] + ($l[count($l)/2-1])) /2 ;\n\
    }\n\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpa7a6ueun.php on line 8\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpa7a6ueun.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpa7a6ueun.php:17\nStack trace:\n\
    #0 /tmp/tmpa7a6ueun.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa7a6ueun.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 !== 0) {\n        $l = $l;\n    \
    \    sort($l);\n    }\n\n    $size = count($l);\n    if ($size === 0) return null;\n\
    \    $middle = floor($size / 2);\n    return ($size % 2) ? $l[$middle] : ($l[$middle\
    \ - 1] + $l[$middle]) / 2;\n}\n</code>\n<|/ a tags=php,arrays,median dscore=0\
    \ |>\n<| c |>\nHi thanks for your reply. I tried the code but i got an error (Undefined\
    \ offset: 3). I tested it for only 3 numbers, it works fine for 4 numbers but\
    \ when i pass 5 numbers it fails. Please suggest me how can i get median for any\
    \ number of numbers?\n<|/ c |>\n<| c |>\nThis code will give a _median_ for _all_\
    \ elements in the array, so what would be a median of _only_ two elements?\n<|/\
    \ c |>\n<| c |>\nI've updated my answer to show how you could write an _array_median\
    \ function\n<|/ c |>\n<| c |>\nThanks for your suggestion. Now i edited your code\
    \ and now i got the median of all the numbers in an array. Here is the code for\
    \ array_median function  \n`function array_median($l)\n{\n    $size = count($l);\n\
    \    if ($size === 0) return null;\n    $middle = floor($size / 2);\n    return\
    \ ($size % 2) ? $l[$middle] : ($l[$middle - 1] + $l[$middle]) / 2;\n}\n$ar = array(10,\
    \ 20, 30, 40, 50);\n$result = array_median($ar);\necho \"The median is: \" . $result\
    \ . \"<br />\";`\n<|/ c |>\n<| c |>\nAwesome. Glad you got it working! You can\
    \ accept your own answer by clicking the tick next to it :)\n<|/ c |>\n<| a tags=php,arrays,median\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpor7mz9fg.php
    on line 18

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\treturn (count($l) / 2) < 1 ? $l[0] : $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdj929cp5.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdj929cp5.php:16\nStack trace:\n#0 /tmp/tmpdj929cp5.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdj929cp5.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    // even: return the mean of the two middle values\n    return (count($l)\
    \ / 2) - array_sum($l) / 2;\n  }\n  // odd: return the middle value\n  return\
    \ $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpeq09ngic.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpeq09ngic.php:23\nStack trace:\n#0 /tmp/tmpeq09ngic.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeq09ngic.php on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp4y91_psz.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4y91_psz.php:16\nStack trace:\n#0 /tmp/tmp4y91_psz.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4y91_psz.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) === 0) {\n    return 0;\n  }\n  $sorted\
    \ = array();\n  foreach ($l as $e) {\n    $sorted[] = $e;\n  }\n  sort($sorted);\n\
    \  return $sorted[count($sorted) / 2];\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpp4qlxfsu.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpp4qlxfsu.php:25\nStack trace:\n#0 /tmp/tmpp4qlxfsu.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp4qlxfsu.php on line 25\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  usort($l, 'cmp');\n  reset($l);\n  return key($l);\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: usort(): Argument #2 ($callback) must\
    \ be a valid callback, function \"cmp\" not found or invalid function name in\
    \ /tmp/tmpj6jwnx6s.php:8\nStack trace:\n#0 /tmp/tmpj6jwnx6s.php(8): usort(Array,\
    \ 'cmp')\n#1 /tmp/tmpj6jwnx6s.php(14): median(Array)\n#2 /tmp/tmpj6jwnx6s.php(18):\
    \ candidate(Array)\n#3 /tmp/tmpj6jwnx6s.php(25): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpj6jwnx6s.php on line 8\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (sizeof($l) % 2 == 0) {\n    // Even\n    $i = floor(sizeof($l)\
    \ / 2);\n    $k = array_slice($l, 0, $i);\n    $f = array_slice($l, $i);\n   \
    \ return ($f[sizeof($f) / 2] + $k[sizeof($k) / 2]) / 2;\n  }\n  // Odd\n  $i =\
    \ floor(sizeof($l) / 2);\n  $j = ($i + 1) % sizeof($l);\n  $f = array_slice($l,\
    \ 0, $i);\n  $k = array_slice($l, $i);\n  return ($f[sizeof($f) / 2] + $k[sizeof($k)\
    \ / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpoy7wfm5g.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpoy7wfm5g.php:27\nStack trace:\n#0 /tmp/tmpoy7wfm5g.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoy7wfm5g.php on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!$l) {\n        return FALSE;\n    }\n    if ($l[0]\
    \ < 0) {\n        array_push($l, 0);\n    }\n    $count = count($l);\n    if ($count\
    \ < 2) {\n        return $l[0];\n    }\n    $middle = floor($count / 2);\n   \
    \ if ($middle == $count - 1) {\n        return ($l[$middle - 1] + $l[$middle])\
    \ / 2;\n    }\n    return ($l[$middle - 1] + $l[$middle]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vnkip5c.php:30\n\
    Stack trace:\n#0 /tmp/tmp4vnkip5c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4vnkip5c.php\
    \ on line 30\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $m = $l[0];\n  foreach ($l as $n) {\n    if ($n < $m)\
    \ {\n      $m = $n;\n    }\n  }\n  return $m;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm5g8ht1.php:21\n\
    Stack trace:\n#0 /tmp/tmpvm5g8ht1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvm5g8ht1.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (empty($l)) {\n\t\treturn 0;\n\t}\n\t$sorted = array_sort($l);\n\
    \treturn $sorted[count($sorted) - 1];\n}\n\nfunction candidate(...$args) {\n \
    \   return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_sort()\
    \ in /tmp/tmps56isiza.php:11\nStack trace:\n#0 /tmp/tmps56isiza.php(16): median(Array)\n\
    #1 /tmp/tmps56isiza.php(20): candidate(Array)\n#2 /tmp/tmps56isiza.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmps56isiza.php on line 11\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 1) {\n        $l = $l + ($l[count($l)\
    \ - 1] + $l[count($l) - 2]) / 2;\n    }\n    return $l[floor(count($l) / 2)];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array + float\
    \ in /tmp/tmpne98p52z.php:9\nStack trace:\n#0 /tmp/tmpne98p52z.php(14): median(Array)\n\
    #1 /tmp/tmpne98p52z.php(18): candidate(Array)\n#2 /tmp/tmpne98p52z.php(25): test()\n\
    #3 {main}\n  thrown in /tmp/tmpne98p52z.php on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = rsort($l);\n    $n = count($l);\n    if ($n%2\
    \ == 0) {\n        return ($l[$n/2-1] + $l[$n/2])/2;\n    } else {\n        return\
    \ $l[$n/2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp1fruj2ij.php:9\nStack trace:\n\
    #0 /tmp/tmp1fruj2ij.php(18): median(true)\n#1 /tmp/tmp1fruj2ij.php(22): candidate(Array)\n\
    #2 /tmp/tmp1fruj2ij.php(29): test()\n#3 {main}\n  thrown in /tmp/tmp1fruj2ij.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return ($l[count($l)/2] + $l[(count($l)/2)-1]) / 2.0;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpv4i7bo6y.php on line 8\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpv4i7bo6y.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpv4i7bo6y.php:16\nStack trace:\n\
    #0 /tmp/tmpv4i7bo6y.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpv4i7bo6y.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) return\
    \ $l[$n / 2];\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2];) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ";" in /tmp/tmppjx0v51w.php on line
    11

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $m = floor($l[0] / 2);\n  foreach ($l as $k=>$v) if ($k\
    \ != $m) $v *= (1 + abs($m));\n  return $m * 0.5;\n}\n</code>\n<|/ a |>\n<| a\
    \ tags=php |>\nHere is a solution without the sorting with unncessary memory usage.\
    \ \n<code>\n<?php\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmprg28laip.php
    on line 12

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2) {\n    sort($l);\n   \
    \ return $l[($n - 1) / 2];\n  }\n  sort($l);\n  $l = $l[floor($n / 2)];\n  return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jaf7s_n.php:24\n\
    Stack trace:\n#0 /tmp/tmp_jaf7s_n.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_jaf7s_n.php\
    \ on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $keys = array_keys($l);\n  return ($keys[0] + $keys[count($keys)\
    \ / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6k1qsomd.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6k1qsomd.php:16\nStack trace:\n#0 /tmp/tmp6k1qsomd.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6k1qsomd.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    // Even\n\
    \    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n  else {\n  \
    \  // Odd\n    return (array_sum($l) / ) / 2;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ")" in /tmp/tmpszbbmetk.php on line
    15

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return array_pop($l) + array_pop($l) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lcc5_oj.php:17\n\
    Stack trace:\n#0 /tmp/tmp6lcc5_oj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6lcc5_oj.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) /\
    \ 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp0on6uzzl.php on line 8\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmp0on6uzzl.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp0on6uzzl.php:16\nStack trace:\n\
    #0 /tmp/tmp0on6uzzl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0on6uzzl.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $len = count($l);\n    if ($len < 2) {\n        return\
    \ $l[0];\n    }\n    $sorted = array_merge($l);\n    sort($sorted);\n    return\
    \ ($len % 2) ? $sorted[(count($sorted) / 2)] : $sorted[array_keys($sorted,(count($sorted)\
    \ / 2))[0]];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpwwxrx35k.php on line 14\n\nWarning: Undefined array key 0 in /tmp/tmpwwxrx35k.php\
    \ on line 14\n\nWarning: Undefined array key \"\" in /tmp/tmpwwxrx35k.php on line\
    \ 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwxrx35k.php:22\n\
    Stack trace:\n#0 /tmp/tmpwwxrx35k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwwxrx35k.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return isset($l[floor(count($l) / 2)])\
    \ ? $l[floor(count($l) / 2)] : null;\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_oo0_4yd.php:17\n\
    Stack trace:\n#0 /tmp/tmp_oo0_4yd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_oo0_4yd.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0)\n \
    \       throw new Exception(\"Empty array\");\n    return $l[count($l)/2];\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpuonjdyrt.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpuonjdyrt.php:18\nStack trace:\n#0 /tmp/tmpuonjdyrt.php(25):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuonjdyrt.php on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp4y91_psz.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4y91_psz.php:16\nStack trace:\n#0 /tmp/tmp4y91_psz.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4y91_psz.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return ($l[0] + $l[1]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptn_1dd_l.php:16\n\
    Stack trace:\n#0 /tmp/tmptn_1dd_l.php(23): test()\n#1 {main}\n  thrown in /tmp/tmptn_1dd_l.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp3a12msxd.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp3a12msxd.php:18\nStack trace:\n#0 /tmp/tmp3a12msxd.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3a12msxd.php on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return $l[count($l) / 2 - 1];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp6dt8xw1j.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6dt8xw1j.php:15\nStack trace:\n#0 /tmp/tmp6dt8xw1j.php(22): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6dt8xw1j.php on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (sizeof($l) % 2 == 0) {\n       \
    \ $center = $l[(sizeof($l) / 2)-1];\n    } else {\n        $center = $l[(sizeof($l)\
    \ / 2)];\n    }\n    $mid = array();\n    for ($i = 0; $i < sizeof($l); $i +=\
    \ 2) {\n        $mid[] = ($l[$i] + $l[$i + 1]) / 2;\n    }\n    return $mid[(sizeof($mid)\
    \ / 2)];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpapx1g4hs.php on line 12\n\nWarning: Undefined array key 5 in /tmp/tmpapx1g4hs.php\
    \ on line 16\n\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpapx1g4hs.php on line 18\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpapx1g4hs.php:25\nStack trace:\n#0 /tmp/tmpapx1g4hs.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpapx1g4hs.php on line 25\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // Sort the array first\n  sort($l);\n  // Return median\
    \ of sorted array\n  return (sizeof($l) % 2) ? $l[(sizeof($l)/2) - 1] : $l[(sizeof($l)/2)];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpb02ml0eq.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpb02ml0eq.php:19\nStack trace:\n#0 /tmp/tmpb02ml0eq.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb02ml0eq.php on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) < 1)\n    return 0;\n  if (count($l) ==\
    \ 1)\n    return $l[0];\n\n  $f = $l[count($l) / 2 - 1];\n  for ($i = 0; $i <\
    \ count($l) / 2; $i++)\n    if ($l[$i] < $f)\n      $f = $l[$i];\n  \n  $l = array_slice($l,\
    \ 0, count($l) / 2);\n  $l[$f] = (count($l) / 2) - 1;\n\n  return $f;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpqabc4rcx.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpqabc4rcx.php on line 18\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpqabc4rcx.php:29\nStack trace:\n\
    #0 /tmp/tmpqabc4rcx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqabc4rcx.php\
    \ on line 29\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[floor(count($l)/2)];\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4rye08x.php:17\n\
    Stack trace:\n#0 /tmp/tmpy4rye08x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy4rye08x.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) === 0) {\n        throw new \\InvalidArgumentException('Cannot\
    \ calculate the median of an empty list.');\n    }\n\n    if (count($l) % 2 ===\
    \ 0) {\n        return $l[count($l) / 2 - 1];\n    }\n\n    // Sort first by descending\
    \ order\n    $l = array_reverse($l);\n\n    // Now we only have to test odd/even\
    \ to find the median.\n    $count = (count($l) - 1);\n    $middle = $count / 2;\n\
    \    if ($count % 2 === 0) {\n        return $l[$middle];\n    }\n\n    return\
    \ ($l[$middle] + $l[$count - $middle]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzxip29y.php:34\n\
    Stack trace:\n#0 /tmp/tmpjzxip29y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjzxip29y.php\
    \ on line 34\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $f = array_fill_keys(range(0, count($l)-1), 0);\n \
    \   $f[0] = $l[0];\n    foreach($l as $key => $val) $f[$key+1] += $val;\n    $m\
    \ = ($f[count($f)-1]+$f[0])/2;\n    foreach($f as $key => $val) {\n        $f[$key]\
    \ = $val / $m;\n    }\n    return $f[count($f)-1];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 5 in /tmp/tmpbiyjmmwq.php on line 10\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpbiyjmmwq.php:22\nStack\
    \ trace:\n#0 /tmp/tmpbiyjmmwq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbiyjmmwq.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\tif (count($l) % 2 == 0) {\n\t\treturn $l[(count($l)/2)-1];\n\
    \t} else {\n\t\treturn $l[(count($l)/2)];\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmphqwhsqtb.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmphqwhsqtb.php:21\nStack trace:\n#0 /tmp/tmphqwhsqtb.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphqwhsqtb.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) return NULL;\n  $n = count($l);\n  if ($n %\
    \ 2) == 0) {\n    return ($l[$n/2] + $l[$n/2 - 1]) / 2;\n  } else {\n    return\
    \ ($l[$n/2] + $l[$n/2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n \
    \   return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "==" in /tmp/tmp95v0oa6y.php on line
    10

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[floor($l[count($l) / 2]) - 1];\n\
    }\n</code>\n<|/ a tags=arrays,php,median |>\n<| c |>\nI like this one for its\
    \ simplicity. My only complaint is that it only works when all the values in `$arr`\
    \ are positive. I.e. `median([-2, -1, 0, 1, 2, 3])` returns `2` instead of `-2`,\
    \ but that's the price you pay for being a beginner programmer.\n<|/ c |>\n<|\
    \ a tags=arrays,php,median |>\nA simple solution with good performance.\n<code>\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpv80ny5vg.php
    on line 11

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmprthwg6eu.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprthwg6eu.php:17\nStack trace:\n#0 /tmp/tmprthwg6eu.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmprthwg6eu.php on line 17\n"
  timestamp: 1659977719
- exit_code: -1
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 0) {\n        array_pop($l);\n\
    \    }\n    $median = $l[(count($l)/2)];\n    $index = 0;\n    $j = 0;\n    $k\
    \ = count($l)-1;\n    while ($j<$k) {\n        if ($l[$index]>$l[$j]) {\n    \
    \        $k = $j;\n        } else {\n            $j = $index;\n        }\n   \
    \     $index = $j;\n    }\n    return $median;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: 'b''\nDeprecated: Implicit conversion from float 2.5 to int loses precision
    in /tmp/tmp2sexy_50.php on line 11\n'''
  timestamp: 1659977724
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) return null;\n\n  $sorted = array();\n  foreach\
    \ ($l as $x) { $sorted[] = $x; }\n\n  sort($sorted);\n  return $sorted[count($sorted)/2];\n\
    }\n\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprqhpj_ks.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprqhpj_ks.php:24\nStack trace:\n#0 /tmp/tmprqhpj_ks.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprqhpj_ks.php on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (sizeof($l) === 0)\n\t\treturn 0;\n\n\t$sorted = array();\n\
    \tfor ($i = 0, $j = sizeof($l) - 1; $i < $j; ++$i) {\n\t\t$sorted[$i] = $l[$i];\n\
    \t}\n\tsort($sorted);\n\treturn $sorted[(sizeof($sorted) - 1)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpgqbzjyov.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpgqbzjyov.php:24\nStack trace:\n#0 /tmp/tmpgqbzjyov.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgqbzjyov.php on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) {\n    return null;\n  }\n  if ($l[0] === null\
    \ || $l[1] === null) {\n    return null;\n  }\n  return ($l[0] < $l[1]) ? $l[0]\
    \ : $l[1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvp_8x6u2.php:22\n\
    Stack trace:\n#0 /tmp/tmpvp_8x6u2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvp_8x6u2.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[sizeof($l) / 2 | 0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpz56ju9w7.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpz56ju9w7.php:16\nStack trace:\n#0 /tmp/tmpz56ju9w7.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpz56ju9w7.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $count = count($l);\n  if ($count < 2) {\n    trigger_error(\"\
    There are too few elements to calculate median!\");\n  }\n  $sortArray = sort($l);\n\
    \  $midPoint = $sortArray[floor($count / 2)];\n  unset($sortArray[floor($count\
    \ / 2)]);\n  if (count($sortArray) == $count) {\n    return $midPoint;\n  }\n\
    \  return $midPoint + median($sortArray);\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type bool in /tmp/tmpv_cwzm6f.php\
    \ on line 13\n\nFatal error: Uncaught Error: Cannot unset offset in a non-array\
    \ variable in /tmp/tmpv_cwzm6f.php:14\nStack trace:\n#0 /tmp/tmpv_cwzm6f.php(22):\
    \ median(Array)\n#1 /tmp/tmpv_cwzm6f.php(26): candidate(Array)\n#2 /tmp/tmpv_cwzm6f.php(33):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpv_cwzm6f.php on line 14\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp4y91_psz.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4y91_psz.php:16\nStack trace:\n#0 /tmp/tmp4y91_psz.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4y91_psz.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (empty($l)) {\n        $l[] = PHP_INT_MAX;\n   \
    \ }\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n        return $l[(count($l)\
    \ - 1) / 2];\n    } else {\n        return $l[(count($l) / 2) - 1];\n    }\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 tags=php,median |>\nI've added a function\
    \ to get the median using Kendall Kinship method. The algorithm is to calculate\
    \ the distance between each array element to median, then find median as the median\
    \ of these distances.\n<code>\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1r878lss.php
    on line 19

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return ($l[0] + ($l[0] + $l[1])/2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vthn7jz.php:16\n\
    Stack trace:\n#0 /tmp/tmp7vthn7jz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7vthn7jz.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n%2 == 1) {\n  \
    \  return $l[$n/2];\n  }\n  return ($l[$n/2 - 1] + $l[$n/2])/2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpx5_0_2rb.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpx5_0_2rb.php:21\nStack trace:\n#0 /tmp/tmpx5_0_2rb.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx5_0_2rb.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort $l and keep $medium where $l[$medium % $llen]\n\
    \    // is the median.\n    $llen = count($l);\n    $small = array();\n    $large\
    \ = array();\n    $lmid = intval(count($l) / 2);\n    $l[$lmid] = $lmid;\n   \
    \ foreach ($l as $k=>$v) {\n        if ($k % 2 == 0) {\n            $large[] =\
    \ $v;\n        } else {\n            $small[] = $v;\n        }\n    }\n    $sort\
    \ = array();\n    foreach ($large as $k=>$v) {\n        $sort[$k] = $v;\n    }\n\
    \    asort($sort);\n    foreach ($sort as $k=>$v) {\n        $l[$k] = $v;\n  \
    \  }\n    $large = array();\n    foreach ($small as $k=>$v) {\n        $large[]\
    \ = $v;\n    }\n    $sort = array();\n    foreach ($large as $k=>$v) {\n     \
    \   $sort[$k] = $v;\n    }\n    asort($sort);\n    foreach ($sort as $k=>$v) {\n\
    \        $l[$k] = $v;\n    }\n    $llen = count($l);\n    return $l[$llen/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpw6u2r5h3.php on line 43\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpw6u2r5h3.php:51\nStack trace:\n#0 /tmp/tmpw6u2r5h3.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw6u2r5h3.php on line 51\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[sizeof($l)/2];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpjrvdxhit.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjrvdxhit.php:17\nStack trace:\n#0 /tmp/tmpjrvdxhit.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjrvdxhit.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l) / 2 | 0];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpvij9ifcv.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvij9ifcv.php:18\nStack trace:\n#0 /tmp/tmpvij9ifcv.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvij9ifcv.php on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n%2 == 0) {\n\
    \    return $l[floor($n/2)];\n  }\n  else {\n    return ($l[$n-1] + $l[($n+1)/2])/2;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpy_rftecu.php:9\nStack trace:\n\
    #0 /tmp/tmpy_rftecu.php(18): median(true)\n#1 /tmp/tmpy_rftecu.php(22): candidate(Array)\n\
    #2 /tmp/tmpy_rftecu.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpy_rftecu.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return ($l[0] < $l[1]) ? $l[0] : (($l[1] < $l[2]) ? $l[1]\
    \ : $l[2]);\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput2rcn49.php:15\n\
    Stack trace:\n#0 /tmp/tmput2rcn49.php(22): test()\n#1 {main}\n  thrown in /tmp/tmput2rcn49.php\
    \ on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // Sort the elements by their values.\n  usort($l, 'cmp');\n\
    \n  // If the list has an odd number of elements, return the middle element.\n\
    \  return count($l) % 2 == 0\n         ? $l[(count($l) / 2) - 1]\n         : ($l[count($l)\
    \ / 2] + $l[(count($l) / 2) - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: usort(): Argument #2 ($callback) must\
    \ be a valid callback, function \"cmp\" not found or invalid function name in\
    \ /tmp/tmptx9f94nu.php:9\nStack trace:\n#0 /tmp/tmptx9f94nu.php(9): usort(Array,\
    \ 'cmp')\n#1 /tmp/tmptx9f94nu.php(18): median(Array)\n#2 /tmp/tmptx9f94nu.php(22):\
    \ candidate(Array)\n#3 /tmp/tmptx9f94nu.php(29): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmptx9f94nu.php on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if ($l[0] == $l[1]) {\n        return\
    \ $l[0];\n    }\n    return ($l[0] + $l[1]) / 2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8y2j01rj.php:19\n\
    Stack trace:\n#0 /tmp/tmp8y2j01rj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8y2j01rj.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = sizeof($l) / 2;\n  return isset($l[$n])\
    \ ? $l[$n] : ($n - 1);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpuelvb3_w.php on line 10\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpuelvb3_w.php on line 10\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpuelvb3_w.php:19\nStack trace:\n\
    #0 /tmp/tmpuelvb3_w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuelvb3_w.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 == 0) {\n    // even\n    return $l[(count($l)\
    \ / 2)-1];\n  } else {\n    // odd\n    return ((($l[(count($l) / 2) - 1] + $l[(count($l)\
    \ / 2)]) / 2);\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ";" in /tmp/tmp935dlxxn.php on line
    13

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = $l[0];\n    if (count($l) % 2 === 0) {\n     \
    \   $mid = count($l) / 2;\n        return ($l[$mid-1] + $l[$mid]) / 2;\n    }\n\
    \    $mid = count($l) / 2 - 1;\n    return ($l[$mid-1] + $l[$mid]) / 2;\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, int given in /tmp/tmpepi7gpn9.php:9\nStack trace:\n\
    #0 /tmp/tmpepi7gpn9.php(18): median(3)\n#1 /tmp/tmpepi7gpn9.php(22): candidate(Array)\n\
    #2 /tmp/tmpepi7gpn9.php(29): test()\n#3 {main}\n  thrown in /tmp/tmpepi7gpn9.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = sizeof($l);\n    if($n % 2 == 0)\
    \ {\n        return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2.0;\n    }\n    else\
    \ {\n        return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpusstfwf6.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpusstfwf6.php:24\nStack trace:\n#0 /tmp/tmpusstfwf6.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpusstfwf6.php on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return ($l[count($l)/2] === NULL) ? NULL\
    \ : (($l[count($l)/2-1] + $l[count($l)/2])/2);\n}\n\n/**\n * Sort an array in\
    \ ascending order\n * @param  array  $l\n * @return array\n */\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp2ohpyro1.php on line 9\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmp2ohpyro1.php on line 9\n\nDeprecated:\
    \ Implicit conversion from float 2.5 to int loses precision in /tmp/tmp2ohpyro1.php\
    \ on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ohpyro1.php:22\n\
    Stack trace:\n#0 /tmp/tmp2ohpyro1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2ohpyro1.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return count($l) % 2 ? $l[count($l)/2]\
    \ : $l[count($l)/2 + 0];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp4tpnxlh_.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4tpnxlh_.php:17\nStack trace:\n#0 /tmp/tmp4tpnxlh_.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4tpnxlh_.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $length = count($l);\n  if ($length % 2)\
    \ {\n    return $l[intval($length / 2)];\n  }\n  return ($l[intval($length / 2)\
    \ - 1] + $l[intval($length / 2)]) / 2;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    It doesn't work for an array of negative numbers. Negative numbers come before\
    \ positive numbers.\n<|/ c |>\n<| c |>\nI added a check for negative numbers.\n\
    <|/ c |>\n<| a |>\nThe easiest way I can think of is using a recursive function:\n\
    <code>\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptj8ce_oi.php
    on line 15

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $len = count($l);\n  if ($len % 2) return\
    \ $l[($len / 2) - 1];\n  else if ($len % 2 == 1) return ($l[$len / 2] + $l[$len\
    \ / 2 - 1]) / 2;\n  else return $l[(2 * $len / 3) - 1];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpb3xhma2y.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpb3xhma2y.php:19\nStack trace:\n#0 /tmp/tmpb3xhma2y.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb3xhma2y.php on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!count($l)) {\n        return false;\n    }\n\n\
    \    $l = sort($l);\n    $middle = count($l) / 2;\n\n    if ($middle === 0) {\n\
    \        return $l[0];\n    }\n\n    $left = $right = array_shift($l);\n\n   \
    \ while ($left < $middle) {\n        $left++;\n        $right = array_shift($l);\n\
    \    }\n\n    while ($right > $middle) {\n        $right--;\n        $left = array_shift($l);\n\
    \    }\n\n    return ($left + $right) / 2;\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpau8gntts.php:13\nStack trace:\n\
    #0 /tmp/tmpau8gntts.php(34): median(true)\n#1 /tmp/tmpau8gntts.php(38): candidate(Array)\n\
    #2 /tmp/tmpau8gntts.php(45): test()\n#3 {main}\n  thrown in /tmp/tmpau8gntts.php\
    \ on line 13\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) == 0) return null;\n    sort($l);\n \
    \   $n = count($l);\n    if ($n % 2) == 0) {\n        return $l[(count($l) / 2)];\n\
    \    } else {\n        return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "==" in /tmp/tmps11cmcl5.php on line
    11

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (empty($l)) return null;\n    return\
    \ ($l[count($l)/2]);\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpl71ej1rw.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpl71ej1rw.php:18\nStack trace:\n#0 /tmp/tmpl71ej1rw.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl71ej1rw.php on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp2dob6pgq.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2dob6pgq.php:15\nStack trace:\n#0 /tmp/tmp2dob6pgq.php(22): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2dob6pgq.php on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n%2 == 0) {\n\t\t\
    return $l[(count($l)-1)/2];\n\t} else {\n\t\treturn ($l[($n-1)/2] + $l[($n)/2])\
    \ / 2.0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpi0ndore7.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi0ndore7.php:22\nStack trace:\n#0 /tmp/tmpi0ndore7.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi0ndore7.php on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return\
    \ null;\n  $n = count($l);\n  if ($n % 2 == 0) return $l[intval($n/2)];\n  else\
    \ return (float)($l[intval($n/2)-1] + $l[intval($n/2)]);\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg78wnq3g.php:19\n\
    Stack trace:\n#0 /tmp/tmpg78wnq3g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg78wnq3g.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!is_array($l)) {\n    throw new InvalidArgumentException('median()\
    \ expects an array.');\n  }\n  $l = array_filter($l);\n  if (count($l) < 2) {\n\
    \    throw new InvalidArgumentException('median() expects an array with two or\
    \ more elements.');\n  }\n  return $l[round(count($l) / 2)];\n}\n\n/**\n * Returns\
    \ the sum of the given values.\n */\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyaln_2vo.php:26\n\
    Stack trace:\n#0 /tmp/tmpyaln_2vo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyaln_2vo.php\
    \ on line 26\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[array_slice($l, -1)[0]/2] ?? $l[0];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmphv_3c8bj.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphv_3c8bj.php:16\nStack trace:\n#0 /tmp/tmphv_3c8bj.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmphv_3c8bj.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!is_array($l)) {\n    return FALSE;\n  }\n  $n =\
    \ count($l);\n  if ($n < 1) {\n    return FALSE;\n  }\n  $sorted = array_keys($l);\n\
    \  sort($sorted);\n  $half = floor(($n - 1) / 2);\n  return ($sorted[$half] +\
    \ $sorted[$n - 1]) / 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpcgk8iw.php:26\n\
    Stack trace:\n#0 /tmp/tmpfpcgk8iw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfpcgk8iw.php\
    \ on line 26\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[(sizeof($l)/2)-1];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmplg3gjvpq.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplg3gjvpq.php:16\nStack trace:\n#0 /tmp/tmplg3gjvpq.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmplg3gjvpq.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return ($l[sizeof($l)>>1] + $l[sizeof($l)>>1] + $l[sizeof($l)>>1])\
    \ / 3;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkn0xzjh.php:15\n\
    Stack trace:\n#0 /tmp/tmprkn0xzjh.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprkn0xzjh.php\
    \ on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[floor(($l[0] + $l[1])/2)];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dw9h7ct.php:16\n\
    Stack trace:\n#0 /tmp/tmp0dw9h7ct.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0dw9h7ct.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[floor(count($l) / 2)];\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6vrymoc.php:17\n\
    Stack trace:\n#0 /tmp/tmpz6vrymoc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpz6vrymoc.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  asort($l);\n  return $l[count($l)-1];\n}\n\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqq3z18wp.php:18\n\
    Stack trace:\n#0 /tmp/tmpqq3z18wp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqq3z18wp.php\
    \ on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) < 2) {\n    return $l[0];\n  }\n  $mid\
    \ = count($l) / 2;\n  return ($l[$mid-1] + $l[$mid]) / 2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpy50896y3.php on line 12\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpy50896y3.php on line 12\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpy50896y3.php:19\nStack trace:\n\
    #0 /tmp/tmpy50896y3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpy50896y3.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if ($l[0] < $l[1]) {\n    if ($l[0] > $l[2]) return $l[0];\n\
    \    return $l[2];\n  }\n  if ($l[0] > $l[2]) return $l[0];\n  return $l[2];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6sdn6uv.php:21\n\
    Stack trace:\n#0 /tmp/tmpo6sdn6uv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo6sdn6uv.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return ($l[0] + $l[count($l) / 2]) / 2;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nJust to mention, median is not the definition that is used\
    \ by most statistical software to calculate the median value but rather a value\
    \ that makes sense in the context of the data.\n<|/ c |>\n<| c |>\nThanks for\
    \ the comment. I believe you are right - I was looking for median as the definition\
    \ in the statistical software. Unfortunately the median of array is not defined\
    \ in the definition of statistical software. Instead the median is a value that\
    \ makes the most sense when considering a group of data.\n<|/ c |>\n<| c |>\n\
    I agree. My point was that median is not actually the definition that is used\
    \ by the majority of software that is used to analyze data. For example, Wikipedia\
    \ defines it as a type of statistic but that does not mean that is the only definition\
    \ that is used for that.\n<|/ c |>\n<| c |>\nThanks for the comment. I agree that\
    \ median is not the only definition that is used in statistical software but I\
    \ think that the definition of median is pretty much the same as what is used\
    \ by most statistical software. I think the issue is not that median is not the\
    \ definition that is used by most statistical software but rather the definition\
    \ that does not make sense when considering a group of data. For example, if you\
    \ consider a group of data, say 20 students, and you calculate the mean of the\
    \ grades then what does it mean to calculate the median of those grades?\n<|/\
    \ c |>\n<| c |>\nYes, I think the confusion is with what median actually means.\
    \ I believe that median is the definition that most people think of but that does\
    \ not make it the only definition that is used. I think that the median is the\
    \ value that most people think when looking at averaged data and it is not the\
    \ only definition that is used. Some people think median is simply the mean of\
    \ the data. When dealing with averaged data, median is the definition that most\
    \ people think when looking at averaged data. But I think median is not the definition\
    \ that is used by most statistical software but rather what the definition of\
    \ median is when considering a group of data.\n<|/ c |>\n<| a dscore=5 |>\nOne\
    \ simple answer would be to average the values in a list and take the highest\
    \ value\n<code>\npublic static double median(List<Double> list)\n{\n    double\
    \ average = 0.0;\n    double max = Double.MIN_VALUE;\n    double min = Double.MAX_VALUE;\n\
    \    for(Double value : list)\n    {\n        average += value;\n        if(value\
    \ > max)\n            max = value;\n        if(value < min)\n            min =\
    \ value;\n    }\n    if(average == 0.0)\n    {\n        return Double.NaN;\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpknppr4fj.php
    on line 10

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $count = count($l);\n    if ($count > 1) {\n      \
    \  sort($l);\n        $middle = ceil($count / 2);\n        if ($l[$middle] ===\
    \ $l[count($l) - 1]) {\n            return $l[$middle];\n        }\n        return\
    \ ($l[$middle - 1] + $l[$middle]) / 2;\n    }\n    return $l[0];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7w2fmvs2.php:25\n\
    Stack trace:\n#0 /tmp/tmp7w2fmvs2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7w2fmvs2.php\
    \ on line 25\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l=array_values($l);\n    sort($l);\n    $k=count($l)-1;\n\
    \    if($k%2==0)\n        $mid=floor($k/2); // integer division guaranteed.\n\
    \    else\n        $mid=ceil($k/2);\n    return ($l[$mid-1]+$l[$mid])/2.0;\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1zc0zg6.php:22\n\
    Stack trace:\n#0 /tmp/tmps1zc0zg6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmps1zc0zg6.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\t$l = array_reverse($l);\n\treturn $l[0] + $l[count($l)\
    \ / 2]; // + $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpbyqf78cn.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpbyqf78cn.php:17\nStack trace:\n#0 /tmp/tmpbyqf78cn.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbyqf78cn.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n % 2 === 0) {\n\
    \t\treturn $l[$n/2];\n\t} else {\n\t\treturn ($l[$n/2] + $l[$n/2 - 1]) / 2;\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp2g4g620j.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmp2g4g620j.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp2g4g620j.php:22\nStack trace:\n\
    #0 /tmp/tmp2g4g620j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2g4g620j.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\tif (count($l) % 2 == 0) {\n\t\treturn $l[(count($l)\
    \ / 2)];\n\t} else {\n\t\treturn ($l[(count($l) / 2) - 1] + $l[count($l) / 2])\
    \ / 2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpbg6ftem4.php on line 12\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpbg6ftem4.php on line 12\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpbg6ftem4.php:21\nStack trace:\n\
    #0 /tmp/tmpbg6ftem4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbg6ftem4.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) === 0) return null;\n  $n = count($l);\n\
    \  sort($l);\n  if ($n % 2) return $l[$n/2];\n  else return ($l[$n/2] + $l[$n-1])/2;\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpcq5lyny8.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpcq5lyny8.php:20\nStack trace:\n#0 /tmp/tmpcq5lyny8.php(26):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcq5lyny8.php on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t\n\tif ($l[0] < $l[1]) {\n\t\t$mid = (int)\
    \ ($l[0] + $l[1]) / 2;\n\t\treturn $mid;\n\t} else {\n\t\t$mid = (int) ($l[1]\
    \ + $l[0]) / 2;\n\t\treturn $mid;\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoceclmmt.php:24\n\
    Stack trace:\n#0 /tmp/tmpoceclmmt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoceclmmt.php\
    \ on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n\
    \        return ($l[$n-1] + $l[$n]) / 2.0;\n    }\n    else {\n        return\
    \ $l[$n-1];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 5 in /tmp/tmp34pfntvd.php on line 11\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp34pfntvd.php:23\nStack\
    \ trace:\n#0 /tmp/tmp34pfntvd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp34pfntvd.php\
    \ on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $length = count($l);\n    if ($length % 2 === 0) {\n\
    \        return $l[(count($l) - 1) / 2];\n    }\n    $mid = (count($l) - 1) >>\
    \ 1;\n    $left = array_slice($l, 0, $mid);\n    $right = array_slice($l, $mid);\n\
    \    return $left[count($left) / 2] + (($right[count($right) / 2] + $left[count($left)\
    \ / 2]) / 2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpzjyx4slc.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzjyx4slc.php:23\nStack trace:\n#0 /tmp/tmpzjyx4slc.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzjyx4slc.php on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 === 0) {\n\
    \    return $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[(count($l)\
    \ / 2)] + $l[(count($l) / 2) - 1]) / 2;\n  }\n}\n\n/**\n * Compute an entropy\
    \ score.\n *\n * This is also known as the Shannon entropy score.\n *\n * @param\
    \ array $p\n * @return float\n */\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpfj5l_nbm.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpfj5l_nbm.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpfj5l_nbm.php:31\nStack trace:\n\
    #0 /tmp/tmpfj5l_nbm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfj5l_nbm.php\
    \ on line 31\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if ($l[0] < $l[1]) {\n    $m = ($l[1] + $l[0]) / 2;\n\
    \    $l[0] = -$m; // reverse the order\n    return $m;\n  }\n\n  if ($l[1] > $l[2])\
    \ {\n    $m = ($l[2] + $l[1]) / 2;\n    $l[1] = -$m; // reverse the order\n  \
    \  return $m;\n  }\n\n  $m = ($l[2] + $l[1]) / 2;\n  return $m;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg27k3oi6.php:28\n\
    Stack trace:\n#0 /tmp/tmpg27k3oi6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg27k3oi6.php\
    \ on line 28\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (empty($l)) {\n    return 0;\n  }\n  $med = $l[0];\n\
    \  foreach ($l as $v) {\n    if ($v < $med) {\n      $med = $v;\n    }\n  }\n\
    \  return $med;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vsowywd.php:25\n\
    Stack trace:\n#0 /tmp/tmp7vsowywd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7vsowywd.php\
    \ on line 25\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  usort($l, \"cmp\");\n  if (sizeof($l) % 2) {\n    return\
    \ $l[floor(sizeof($l) / 2)];\n  } else {\n    return $l[sizeof($l) / 2 - 1];\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: usort(): Argument #2 ($callback) must\
    \ be a valid callback, function \"cmp\" not found or invalid function name in\
    \ /tmp/tmp8np8ao9x.php:8\nStack trace:\n#0 /tmp/tmp8np8ao9x.php(8): usort(Array,\
    \ 'cmp')\n#1 /tmp/tmp8np8ao9x.php(17): median(Array)\n#2 /tmp/tmp8np8ao9x.php(21):\
    \ candidate(Array)\n#3 /tmp/tmp8np8ao9x.php(28): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp8np8ao9x.php on line 8\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $len = count($l);\n  if ($len == 0) {\n    return 0;\n\
    \  }\n  $half = floor($len / 2);\n  if ($len % 2 == 0) {\n    return $l[$half];\n\
    \  }\n  $m1 = median($l, $half + 1);\n  $m2 = median($l, $half);\n  if ($l[$half]\
    \ < $m1) {\n    return $m2;\n  }\n  return $m1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp1miupfxy.php on line 16

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\treturn (count($l)) ? ($l[count($l)>>1] + $l[count($l)>>1]*0.5)/2\
    \ : 0.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtrrgdl3.php:16\n\
    Stack trace:\n#0 /tmp/tmpwtrrgdl3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwtrrgdl3.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // Return the median.\n  sort($l);\n  $n = count($l);\n\
    \  if ($n%2==0) {\n    return $l[$n/2] + $l[$n/2-1];\n  }\n  return $l[($n-1)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4b3iq4j.php:23\n\
    Stack trace:\n#0 /tmp/tmpp4b3iq4j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp4b3iq4j.php\
    \ on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2)\n    return\
    \ $l[(count($l) / 2)];\n  else\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2\
    \ - 1]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmplkvz9k28.php on line 11\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmplkvz9k28.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmplkvz9k28.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplkvz9k28.php:21\n\
    Stack trace:\n#0 /tmp/tmplkvz9k28.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplkvz9k28.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\treturn (count($l) >= 2) ? $l[(count($l) / 2) - 1] : (max($l)\
    \ + min(array_reverse($l)));\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpqrocxx53.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqrocxx53.php:16\nStack trace:\n#0 /tmp/tmpqrocxx53.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqrocxx53.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n <= 1) return $l[0];\n  sort($l);\n\
    \  return $n%2 == 0 ? ($l[n/2-1] + $l[n/2])/2 : $l[n/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"n\" in /tmp/tmp6ntdl4fc.php:11\n\
    Stack trace:\n#0 /tmp/tmp6ntdl4fc.php(15): median(Array)\n#1 /tmp/tmp6ntdl4fc.php(19):\
    \ candidate(Array)\n#2 /tmp/tmp6ntdl4fc.php(26): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp6ntdl4fc.php on line 11\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) < 1)\n    return;\n\n  $l = array_reverse($l);\n\
    \  sort($l);\n\n  return $l[round(count($l) / 2)];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon3j8z6g.php:22\n\
    Stack trace:\n#0 /tmp/tmpon3j8z6g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpon3j8z6g.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $num = sizeof($l);\n  if ($num > 0) {\n    if ($num %\
    \ 2) {\n      return ($l[($num-1)/2-1] + $l[($num-1)/2]) / 2;\n    }\n    else\
    \ {\n      return $l[($num-1)/2];\n    }\n  }\n  else {\n    return 0;\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr1md89p.php:27\n\
    Stack trace:\n#0 /tmp/tmpdr1md89p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdr1md89p.php\
    \ on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (count($l) % 2 === 0) {\n\t\treturn (count($l) / 2)\
    \ * $l[count($l) / 2 - 1];\n\t} else {\n\t\t$lower = $l[0];\n\t\t$upper = $l[count($l)\
    \ - 1];\n\t\t$middle = ($lower + $upper) / 2;\n\t\t$middleIsSmaller = ($middle\
    \ < $lower);\n\t\t$middleIsBigger = ($middle > $upper);\n\t\t$middleIsEqual =\
    \ ($middle === $lower);\n\t\tif ($middleIsSmaller || $middleIsBigger || $middleIsEqual)\
    \ {\n\t\t\treturn $middle;\n\t\t} else {\n\t\t\tif ($middleIsBigger) {\n\t\t\t\
    \treturn $upper;\n\t\t\t} else {\n\t\t\t\treturn $lower;\n\t\t\t}\n\t\t}\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpul26tuzk.php:35\n\
    Stack trace:\n#0 /tmp/tmpul26tuzk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpul26tuzk.php\
    \ on line 35\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) == 0) return NULL;\n    sort($l);\n \
    \   $n = count($l);\n    if ($n % 2) return $l[($n - 1) / 2];\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2) / 2];\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''['' does not match '')'' in /tmp/tmpa9l5cedi.php on line
    12

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // If l has no elements, return null.\n  if (count($l)\
    \ === 0) {\n    return null;\n  }\n\n  // Find the median.\n  $median = number_format(count($l),\
    \ 0, '', '.');\n  foreach ($l as $key => $value) {\n    if ($value < $median)\
    \ {\n      $median = $value;\n    }\n  }\n\n  return $median;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxk3faqu.php:29\n\
    Stack trace:\n#0 /tmp/tmpwxk3faqu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwxk3faqu.php\
    \ on line 29\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return(($l[count($l)/2-1] + $l[count($l)/2])/2);\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp8sizru23.php on line 9\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp8sizru23.php on line 9\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8sizru23.php:17\nStack trace:\n\
    #0 /tmp/tmp8sizru23.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8sizru23.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n % 2)\n\t\treturn\
    \ $l[(count($l) - 1)/2];\n\treturn (isset($l[(count($l) - 2) / 2 + 1]) && isset($l[(count($l)\
    \ - 2) / 2])) ? $l[(count($l) - 2) / 2] : null;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb300kdh.php:20\n\
    Stack trace:\n#0 /tmp/tmphb300kdh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphb300kdh.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!is_array($l)) return null;\n  asort($l);\n  return\
    \ $l[count($l)/2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpm7sz0iwr.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpm7sz0iwr.php:18\nStack trace:\n#0 /tmp/tmpm7sz0iwr.php(25):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm7sz0iwr.php on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) === 0) {\n        // Not even one element,\
    \ so no median.\n        return null;\n    }\n\n    $median = $l[count($l) / 2\
    \ - 1];\n    foreach ($l as $index => $element) {\n        if ($index < count($l)\
    \ / 2) {\n            if ($element >= $median) {\n                $median = $element;\n\
    \            }\n        } else {\n            if ($element > $median) {\n    \
    \            $median = $element;\n            }\n        }\n    }\n\n    return\
    \ $median;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpur8iqp8z.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpur8iqp8z.php:33\nStack trace:\n#0 /tmp/tmpur8iqp8z.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpur8iqp8z.php on line 33\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) {\n    return 0;\n  }\n  $n = count($l);\n \
    \ if ($n%2) {\n    return $l[($n+1)/2];\n  }\n  else {\n    sort($l);\n    return\
    \ $l[($n-1)/2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocj0g78b.php:26\n\
    Stack trace:\n#0 /tmp/tmpocj0g78b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpocj0g78b.php\
    \ on line 26\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (empty($l))\n    return null;\n  $counts = array_count_values($l);\n\
    \  $max = array_keys($counts, max($counts));\n  return $max[0] + $max[1] / 2.0;\n\
    }\n</code>\n<|/ a tags=median,math,php |>\n<| a dscore=0 |>\nJust for fun and\
    \ to see if I got it right. The first one returns the mean and the second one\
    \ returns the median.\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2gtths7m.php
    on line 14

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 1) {\n        return $l[(count($l)\
    \ / 2) - 1];\n    }\n    $sorted = array_merge($l[floor(count($l) / 2)], $l[(count($l)\
    \ / 2) - 1]);\n    return $sorted[floor(count($sorted) / 2)];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpnazhvv0n.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpnazhvv0n.php:19\nStack trace:\n#0 /tmp/tmpnazhvv0n.php(26): test()\n\
    #1 {main}\n  thrown in /tmp/tmpnazhvv0n.php on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    return $l[count($l)-1];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeiull3w1.php:17\n\
    Stack trace:\n#0 /tmp/tmpeiull3w1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpeiull3w1.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  arsort($l);\n  return (count($l) % 2) ? $l[count($l)/2]\
    \ : ($l[count($l)/2] + $l[(count($l)/2)-1])/2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp38r2qffx.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp38r2qffx.php:16\nStack trace:\n#0 /tmp/tmp38r2qffx.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp38r2qffx.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[floor(count($l) / 2)];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84tpmqn0.php:17\n\
    Stack trace:\n#0 /tmp/tmp84tpmqn0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp84tpmqn0.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) == 0) return null;\n    $n = count($l);\n\
    \    if ($n % 2 === 0) {\n        $i = $n / 2;\n        return $l[$i];\n    }\
    \ else {\n        $i = $n / 2 + 1;\n        return ($l[$i - 1] + $l[$i]) / 2;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpwwjq33ld.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 3.5 to int loses precision in /tmp/tmpwwjq33ld.php on line 15\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpwwjq33ld.php:25\nStack trace:\n\
    #0 /tmp/tmpwwjq33ld.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwwjq33ld.php\
    \ on line 25\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!count($l)) {\n    return null;\n  }\n  $mid = count($l)\
    \ / 2;\n  if (count($l) % 2) {\n    return $l[$mid];\n  }\n  $median = $l[$mid];\n\
    \  foreach ($l as $key => $element) {\n    if ($key < $mid) {\n      $median =\
    \ ($median > $element ? $median : $element);\n    }\n  }\n  return $median;\n\
    }\n</code>\n<|/ a tags=php,arrays dscore=0 |>\n<| c |>\nPlease edit with more\
    \ information. Code-only and \"try this\" answers are discouraged, because they\
    \ contain no searchable content, and don't explain why someone should \"try this\"\
    .\n<|/ c |>\n<| a tags=php,arrays |>\nIf anyone wants to see the code for the\
    \ median() function, here is how I wrote it.  I thought it would be helpful to\
    \ others so I included it here.\n<code>\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmph2h3dvbm.php
    on line 23

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) === 0) {\n        return null;\n    }\n\
    \n    $sorted = array_values($l);\n    sort($sorted);\n    array_pop($sorted);\n\
    \    if (count($sorted) < 2) {\n        return $sorted[0];\n    }\n    $count\
    \ = count($sorted);\n    if ($count % 2) {\n        return $sorted[$count / 2\
    \ - 1];\n    }\n    return ($sorted[$count / 2] + $sorted[($count + 1) / 2]) /\
    \ 2.0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp64d3rf7m.php on line 22\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp64d3rf7m.php:30\nStack trace:\n#0 /tmp/tmp64d3rf7m.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp64d3rf7m.php on line 30\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[(count($l)\
    \ / 2)];\n    } else {\n        return ((count($l) - 1) / 2) + array_pop($l) -\
    \ ((count($l) - 2) / 2);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxm8ra3cw.php:20\n\
    Stack trace:\n#0 /tmp/tmpxm8ra3cw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxm8ra3cw.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!is_array($l))\n        return 0;\n    sort($l);\n\
    \    return $l[(count($l) - 1) / 2];\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    `array_reduce()` is faster than `array_sum()`\n<|/ c |>\n<| a |>\nI needed to\
    \ get the median of 3 million random numbers. array_sum was unreliable. I ended\
    \ up writing a quick and dirty algorithm that works very well.\n<code>\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpeknmq7mq.php
    on line 13

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!$l) return; // empty array\n    $median = ($l[0]+$l[count($l)-1])/2;\n\
    \    foreach ($l as $e) {\n        if ($e < $median) $median = $e;\n    }\n  \
    \  return $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1etlfawg.php:21\n\
    Stack trace:\n#0 /tmp/tmp1etlfawg.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1etlfawg.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\treturn $l[(count($l) - 1) / 2];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpivwb1wk9.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpivwb1wk9.php:17\nStack trace:\n#0 /tmp/tmpivwb1wk9.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpivwb1wk9.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) == 0) return null;\n    $sorted = $l;\n\
    \    sort($sorted);\n    return $sorted[(count($sorted)-1)/2];\n}\n\n$x = array(\n\
    \  array(\n    array('Name' => 'Lisa', 'City' => 'Houston', 'State' => 'TX', 'Zip'\
    \ => '77001'),\n    array('Name' => 'Johnny', 'City' => 'New York', 'State' =>\
    \ 'NY', 'Zip' => '10001'),\n    array('Name' => 'Paul', 'City' => 'Detroit', 'State'\
    \ => 'MI', 'Zip' => '80510'),\n    array('Name' => 'John', 'City' => 'Phoenix',\
    \ 'State' => 'AZ', 'Zip' => '80110'),\n    array('Name' => 'Sam', 'City' => 'Detroit',\
    \ 'State' => 'MI', 'Zip' => '80510'),\n    array('Name' => 'Joe', 'City' => 'Phoenix',\
    \ 'State' => 'AZ', 'Zip' => '80110'),\n    array('Name' => 'Jack', 'City' => 'Detroit',\
    \ 'State' => 'MI', 'Zip' => '80510'),\n    array('Name' => 'Samuel', 'City' =>\
    \ 'Washington', 'State' => 'DC', 'Zip' => '80123')\n  ),\n  array(\n    array('Name'\
    \ => 'Jack', 'City' => 'Detroit', 'State' => 'MI', 'Zip' => '80510'),\n    array('Name'\
    \ => 'Joe', 'City' => 'Phoenix', 'State' => 'AZ', 'Zip' => '80110'),\n    array('Name'\
    \ => 'Jack', 'City' => 'Detroit', 'State' => 'MI', 'Zip' => '80510'),\n    array('Name'\
    \ => 'Samuel', 'City' => 'Washington', 'State' => 'DC', 'Zip' => '80123')\n  )\n\
    );\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpb7tu30xj.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpb7tu30xj.php:39\nStack trace:\n#0 /tmp/tmpb7tu30xj.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb7tu30xj.php on line 39\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (count($l) < 1) {\n\t\treturn 0;\n\t}\n\t$sorted =\
    \ sort($l);\n\tif ($sorted[0] <= $sorted[1]) {\n\t\treturn $sorted[count($sorted)\
    \ - 1];\n\t}\n\treturn $sorted[(count($sorted) - 1) >> 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type bool in /tmp/tmphrt84cym.php\
    \ on line 12\n\nWarning: Trying to access array offset on value of type bool in\
    \ /tmp/tmphrt84cym.php on line 12\n\nFatal error: Uncaught TypeError: count():\
    \ Argument #1 ($value) must be of type Countable|array, bool given in /tmp/tmphrt84cym.php:13\n\
    Stack trace:\n#0 /tmp/tmphrt84cym.php(19): median(Array)\n#1 /tmp/tmphrt84cym.php(23):\
    \ candidate(Array)\n#2 /tmp/tmphrt84cym.php(30): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmphrt84cym.php on line 13\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = $l ? $l : array();\n    if (count($l) == 0) return\
    \ null;\n    if (count($l) == 1) return reset($l);\n    return $this->median_count($l,\
    \ array_count_values($l));\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpsu74o646.php:11\nStack trace:\n#0 /tmp/tmpsu74o646.php(15): median(Array)\n\
    #1 /tmp/tmpsu74o646.php(19): candidate(Array)\n#2 /tmp/tmpsu74o646.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsu74o646.php on line 11\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 == 0) {\n    $midmid = floor(count($l)/2);\n\
    \    $l[($midmid-1)]=($l[$midmid]+$l[$midmid-1])/2;\n  }\n  $l = array_slice($l,\
    \ 0, count($l)/2);\n  return $l[count($l)-1];\n}\n</code>\n<|/ a dscore=2 tags=algorithm,median,php\
    \ |>\n<| a dscore=1 tags=algorithm,median,php |>\nHere is how to solve it in Java.\n\
    <code>\nprivate double median(List<Double> numbers) {\n    Arrays.sort(numbers);\n\
    \    double median = numbers.get(numbers.size() / 2);\n    return median;\n}\n\
    </code>\n<|/ a |>\n<| a dscore=0 |>\nHere is my solution\n<code>\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpk6yuk7e7.php
    on line 15

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $count = count($l);\n    if ($count\
    \ % 2 === 0) {\n        // Even\n        return (double) $l[$count / 2 - 1];\n\
    \    }\n    else {\n        // Odd\n        return (double) ($l[($count - 1) /\
    \ 2 - 1] + $l[$count / 2]) / 2;\n    }\n}\n</code>\n<|/ a tags=php,median |>\n\
    <| c |>\nYour script outputs a median of -7.5, while there are only 5 values in\
    \ your test data.\n<|/ c |>\n<| c |>\nI'm sorry, but this code is working and\
    \ tested on my server. You should check your code.\n<|/ c |>\n<| c |>\nThanks\
    \ for testing it on your own server! It works fine there too. I think you're using\
    \ a different version of PHP. Could you share your server version? Also please\
    \ make sure you copy the code exactly. Your example contains `$l` and `$count`\
    \ which are undefined.\n<|/ c |>\n<| a tags=php,median dscore=2 |>\n<code>\n<?php\n\
    /**\n * median returns the median value of the given array\n * $arr array\n *\
    \ float median of given array\n */\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp35_524xp.php
    on line 19

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 === 0)\
    \ {\n    return $l[$n/2];\n  }\n  else {\n    return ($l[$n/2-1] + $l[$n/2])/2;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpctntgnul.php:9\nStack trace:\n\
    #0 /tmp/tmpctntgnul.php(19): median(true)\n#1 /tmp/tmpctntgnul.php(23): candidate(Array)\n\
    #2 /tmp/tmpctntgnul.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpctntgnul.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!is_array($l)) {\n        $l = array($l);\n   \
    \ }\n    $l = array_values($l);\n\n    $count = count($l);\n    if ($count ===\
    \ 0) {\n        return null;\n    }\n    if ($count === 1) {\n        return $l[0];\n\
    \    }\n    $middle = floor($count / 2);\n    if ($middle === $count) {\n    \
    \    return $l[$middle];\n    }\n\n    // Calculate the median of the two parts\
    \ based on middle index:\n    return ((float)$l[$middle]) + array_sum($l[$middle\
    \ + 1 .. ($count - 1)]);\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\nIf you are using\
    \ PHP >= 5.6.0 then you can use array_reduce. \nHere is a solution that doesn't\
    \ use recursion:\n<code>\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "." in /tmp/tmp6femf448.php on line
    26

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2) {\n        // If there are an odd\
    \ number of elements\n        // return the middle value\n        $l = array_slice($l,\
    \ intval(count($l) / 2), intval(count($l) / 2));\n        return $l[count($l)\
    \ / 2];\n    }\n    // If the number of elements is an even number\n    // return\
    \ the middle two values\n    return (floatval(array_pop($l)) + (floatval(array_pop($l))\
    \ / 2));\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9vyd8__.php:24\n\
    Stack trace:\n#0 /tmp/tmpg9vyd8__.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg9vyd8__.php\
    \ on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (sizeof($l) < 1) {\n\t\treturn 0;\n\t}\n\t\n\tsort($l);\n\
    \t$middle = sizeof($l) / 2;\n\tif ($middle == 0) {\n\t\treturn $l[0];\n\t} else\
    \ {\n\t\treturn ($l[$middle] >= 0) ? $l[$middle] : $l[$middle - 1];\n\t}\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp06ank3yl.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp06ank3yl.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp06ank3yl.php:27\nStack trace:\n\
    #0 /tmp/tmp06ank3yl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp06ank3yl.php\
    \ on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return ($l[count($l)-1] + $l[count($l)-2] + $l[count($l)-3]\
    \ + $l[count($l)-4] + $l[count($l)-5]) / 5;\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4ilrqsy.php:16\n\
    Stack trace:\n#0 /tmp/tmpf4ilrqsy.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpf4ilrqsy.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 == 0) {\n        sort($l);\n    \
    \    return $l[floor(count($l) / 2)];\n    } else {\n        if (count($l) % 2\
    \ == 1) {\n            sort($l);\n            return $l[(count($l) / 2) - 1];\n\
    \        } else {\n            sort($l);\n            $l = $l[floor(count($l)\
    \ / 2)];\n            $left = array_slice($l, (count($l) / 2) - 1, count($l) /\
    \ 2);\n            $right = array_slice($l, 0, count($l) / 2);\n            return\
    \ ($left[count($left) - 1] + $right[0]) / 2.0;\n        }\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpu_llsmi4.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpu_llsmi4.php:30\nStack trace:\n#0 /tmp/tmpu_llsmi4.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpu_llsmi4.php on line 30\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n <= 1) {\n        return\
    \ $l[0];\n    }\n    $m = floor($n / 2);\n    $l[$m] = $l[$n - 1];\n    $l[$n\
    \ - 1] = $m;\n    $c = count($l);\n    foreach ($l as $n) {\n        $l[$n] /=\
    \ $c;\n    }\n    return $l[floor($n / 2)];\n}\n</code>\n<|/ a |>\n<| c |>\nI\
    \ like this one, but what would be the advantage of having it return the median\
    \ instead of the sum of the elements divided by its count?\n<|/ c |>\n<| c |>\n\
    It is the median. I was referring to the sum function\n<|/ c |>\n<| c |>\nI see.\
    \ Yes, I suppose it's just a slightly more efficient way of calculating it.\n\
    <|/ c |>\n<| c |>\nIt is not about efficiency, but to show how to get the median\
    \ :)\n<|/ c |>\n<| c |>\nThis is good, but I would do one small optimization.\
    \ Instead of sorting the array, $m = $n / 2, use the fact that if n is even, the\
    \ median is the middle element of the two halves.\n<|/ c |>\n<| a dscore=5 tags=median,php,algorithm,statistics\
    \ |>\nFor those who want a solution in Python, here it is:\n<code>\ndef median(numbers):\n\
    \    numbers.sort()\n    n = len(numbers)\n    if n % 2 == 0:\n        return\
    \ numbers[n / 2]\n    else:\n        return (numbers[n / 2 - 1] + numbers[n /\
    \ 2]) / 2.0\n</code>\nIt should work for all types of arrays. If you use negative\
    \ numbers, it will return the median of the negative numbers instead of the minimum.\n\
    <|/ a |>\n<| c |>\nIt doesn't work if you have duplicate entries. You need `numbers.sort()`\
    \ before calculating median.\n<|/ c |>\n<| a tags=median,php,algorithm,statistics\
    \ |>\nI wrote this little function a while back that does a decent job of calculating\
    \ the median.\n<code>\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8whhk_q1.php
    on line 21

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $count = count($l);\n  if ($count % 2 ==\
    \ 0) {\n    return $l[(count($l)/2) - 1];\n  } else {\n    return ($l[($count/2)\
    \ - 1] + $l[($count/2)]);\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp4156_9r_.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp4156_9r_.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp4156_9r_.php:21\nStack trace:\n\
    #0 /tmp/tmp4156_9r_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4156_9r_.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l)/2] ?? max($l);\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpvmn6b5ps.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvmn6b5ps.php:15\nStack trace:\n#0 /tmp/tmpvmn6b5ps.php(22): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvmn6b5ps.php on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$len = count($l);\n\tif ($len % 2 === 0)\
    \ {\n\t\treturn $l[(count($l) - 1) / 2];\n\t} else {\n\t\t$median = ($l[($len\
    \ - 1) / 2] - $l[0]) / 2;\n\t\t$l[0] = $median;\n\t\treturn $median;\n\t}\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrsxu2tu.php:24\n\
    Stack trace:\n#0 /tmp/tmpwrsxu2tu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwrsxu2tu.php\
    \ on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_reverse($l);\n  sort($l);\n  $length = count($l);\n\
    \  $middle = floor(($length + 1) / 2);\n  return $l[$middle];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxj8uo3z.php:20\n\
    Stack trace:\n#0 /tmp/tmpdxj8uo3z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdxj8uo3z.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!is_array($l)) return 0;\n  $a = array_keys($l);\n\
    \  sort($a);\n  if ($a[0] > $a[count($a) - 1]) {\n    return $a[count($a) - 1];\n\
    \  }\n  return ($a[0] == $a[count($a) - 1]) ? 0 : $a[$a[0]];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6iaz7zbp.php:22\n\
    Stack trace:\n#0 /tmp/tmp6iaz7zbp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6iaz7zbp.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // Sort elements to ensure stable median.\n  sort($l);\n\
    \  // Return median of middle two elements.\n  return $l[count($l)-1 / 2];\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 4.5 to int loses precision\
    \ in /tmp/tmptdh_yzh5.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmptdh_yzh5.php:18\nStack trace:\n#0 /tmp/tmptdh_yzh5.php(25):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptdh_yzh5.php on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = $l ? $l : array();\n    $count = count($l);\n\
    \    if ($count === 0) {\n        trigger_error(\"median(): empty list\", E_USER_WARNING);\n\
    \        return null;\n    }\n    // Even number of elements\n    if ($count %\
    \ 2 === 0) {\n        trigger_error(\"median(): list has an even number of elements\"\
    , E_USER_WARNING);\n        return null;\n    }\n    // Find middle position\n\
    \    $half = intval($count / 2);\n    $i = $half;\n    $m = $l[$i];\n    while\
    \ (++$i < $count && $l[$i] == $m) {\n        // do nothing\n    }\n    return\
    \ $m;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6rrsore.php:34\n\
    Stack trace:\n#0 /tmp/tmpc6rrsore.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc6rrsore.php\
    \ on line 34\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) { // odd\n\
    \    $median = $l[(--$n) / 2];\n  } else { // even\n    $median = $l[($n -1) /\
    \ 2];\n  }\n  return $median;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis is\
    \ the most correct answer here, and should be the accepted answer.\n<|/ c |>\n\
    <| c |>\nThis is the best answer. The accepted answer is wrong and does not even\
    \ work. It gives unpredictable results.\n<|/ c |>\n<| c |>\nCan you please elaborate\
    \ more on what you mean by \"does not even work\" ?\n<|/ c |>\n<| c |>\nThe accepted\
    \ answer does not work. This answer does. And it works correctly.\n<|/ c |>\n\
    <| c |>\nI mean it does not work reliably for me. Give it a try and see what happens.\n\
    <|/ c |>\n<| a tags=php,arrays |>\nSort and get the middle element (middle between\
    \ first and last element). Example:\n<code>\n$myarray = array(1, 2, 3, 4, 5);\n\
    $middle = array_slice($myarray, 0, count($myarray)/2, true) + array_slice($myarray,\
    \ count($myarray)/2);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThanks for this one\
    \ - I never saw it used like that before in PHP (which I normally use)\n<|/ c\
    \ |>\n<| c |>\nThis will not work if the array has duplicate values, because the\
    \ `array_slice` function will duplicate the values, and you end up with an array\
    \ with duplicate values.\n<|/ c |>\n<| c |>\n: array_slice will always duplicate\
    \ values. If you have two elements: 1,2 and 3,4,5 it will give 3,4,5 back.\n<|/\
    \ c |>\n<| c |>\n: Thanks for explaining. I guess I was a bit confused with the\
    \ `array_slice` options.\n<|/ c |>\n<| c |>\nThis is a nice solution, but has\
    \ a flaw. It doesn't work when the number of elements is odd, and therefore the\
    \ array has even number of elements because array_slice always returns an array\
    \ with at least one element.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$median = array_sum(array_slice($myArray,\
    \ 0, count($myArray)/2))/2;\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ is perfect. Thanks\n<|/ c |>\n<| c |>\nthis should be \nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpj72jq5ox.php
    on line 17

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\treturn $l[floor(count($l) / 2)];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzep3je2.php:16\n\
    Stack trace:\n#0 /tmp/tmprzep3je2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprzep3je2.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $sorted = sort($l);\n    $n = count($sorted);\n   \
    \ if ($n%2 == 1)\n        return $sorted[(count($sorted)-1)/2];\n    return ($sorted[(count($sorted)-1)/2]+$sorted[count($sorted)/2])/2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpy1k7joiu.php:9\nStack trace:\n\
    #0 /tmp/tmpy1k7joiu.php(16): median(Array)\n#1 /tmp/tmpy1k7joiu.php(20): candidate(Array)\n\
    #2 /tmp/tmpy1k7joiu.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpy1k7joiu.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  return ($l[($n - 1) / 2] + $l[$n / 2 - 1])\
    \ / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpgziil_fz.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpgziil_fz.php:21\nStack trace:\n#0 /tmp/tmpgziil_fz.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgziil_fz.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    // Sort the array.\n    // Don't use sort because $l[$i]\
    \ is unpredictable\n    // and could have identical value but different key.\n\
    \    sort($l);\n    if (count($l) === 1) {\n        // Special case if one element.\n\
    \        return $l[0];\n    }\n    // Calculate the median.\n    $length = count($l);\n\
    \    $median = $l[intval(ceil((($length + 1) / 2.0))) - 1];\n    // And return\
    \ the median.\n    return $median;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprojmbgu.php:29\n\
    Stack trace:\n#0 /tmp/tmpprojmbgu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpprojmbgu.php\
    \ on line 29\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!is_array($l)) return null;\n    if (empty($l))\
    \ {\n        return null;\n    }\n    sort($l);\n    return $l[sizeof($l)/2];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpm0vl0960.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpm0vl0960.php:21\nStack trace:\n#0 /tmp/tmpm0vl0960.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm0vl0960.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp4y91_psz.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4y91_psz.php:16\nStack trace:\n#0 /tmp/tmp4y91_psz.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4y91_psz.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) return NULL;\n  sort($l);\n  return $l[count($l)>>1];\n\
    }\n\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdu7zoph.php:20\n\
    Stack trace:\n#0 /tmp/tmpzdu7zoph.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzdu7zoph.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!is_array($l)) return false;\n  $l = array_values($l);\n\
    \  return $l[floor(count($l) / 2)];\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hy8rnyu.php:18\n\
    Stack trace:\n#0 /tmp/tmp5hy8rnyu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5hy8rnyu.php\
    \ on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) < 2) {\n        return reset($l);\n \
    \   }\n    $count = count($l);\n    $mid = floor($count / 2);\n    $count = 0;\n\
    \    $ret = 0;\n    foreach ($l as $el) {\n        if ($el < $mid) {\n       \
    \     $count++;\n            if ($count == $mid) {\n                $ret = $el;\n\
    \            }\n        } else {\n            $count--;\n        }\n    }\n  \
    \  return $ret;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2bva_do.php:33\n\
    Stack trace:\n#0 /tmp/tmpr2bva_do.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr2bva_do.php\
    \ on line 33\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if ($l == array_sum($l)) {\n    return array_pop($l);\n\
    \  }\n  $median = array_sum($l) / count($l);\n  $k = 0;\n  foreach ($l as $k =>\
    \ $v) {\n    if ($v < $median) {\n      unset($l[$k]);\n    } else if ($v > $median)\
    \ {\n      break;\n    }\n  }\n  if ($k >= count($l)) {\n    return array_pop($l);\n\
    \  }\n  return $l[$k];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7kpl7rm.php:30\n\
    Stack trace:\n#0 /tmp/tmpt7kpl7rm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt7kpl7rm.php\
    \ on line 30\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    if (count($l) % 2 == 0) {\n        return\
    \ $l[count($l) / 2 - 1];\n    } else {\n        return ($l[count($l) / 2] + $l[count($l)\
    \ / 2 - 1]) / 2.0;\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpcuoihn2z.php on line 12\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpcuoihn2z.php on line 12\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpcuoihn2z.php:20\nStack trace:\n\
    #0 /tmp/tmpcuoihn2z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcuoihn2z.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\
    \treturn ($l[($n - 1) / 2] + $l[$n / 2]) / 2;\n\t} else {\n\t\treturn $l[floor($n\
    \ / 2)];\n\t}\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmplifyujz0.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplifyujz0.php:23\nStack trace:\n#0 /tmp/tmplifyujz0.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplifyujz0.php on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (empty($l))\n    return 0;\n  sort($l);\n  $n = count($l);\n\
    \  return $n % 2 ? $l[($n + 1)/2] : floor($n/2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lvar3o2.php:20\n\
    Stack trace:\n#0 /tmp/tmp8lvar3o2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8lvar3o2.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return $l[count($l)-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wnglxpz.php:16\n\
    Stack trace:\n#0 /tmp/tmp7wnglxpz.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7wnglxpz.php\
    \ on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return $l[sizeof($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpj7hd4fnq.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj7hd4fnq.php:16\nStack trace:\n#0 /tmp/tmpj7hd4fnq.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj7hd4fnq.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!$l) {\n        return false;\n    }\n    sort($l);\n\
    \    return (count($l) % 2) ? $l[(count($l) / 2)] : ($l[(count($l) / 2) - 1] +\
    \ $l[count($l) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpzwidfnw3.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzwidfnw3.php:21\nStack trace:\n#0 /tmp/tmpzwidfnw3.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzwidfnw3.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 ===\
    \ 0) {\n        return $l[$n / 2 - 1];\n    } else {\n        return $l[($n -\
    \ 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxl1z1r3m.php:23\n\
    Stack trace:\n#0 /tmp/tmpxl1z1r3m.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxl1z1r3m.php\
    \ on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) < 2) {\n        return $l[0];\n    }\n\
    \    return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp14e2a1ws.php on line 11\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmp14e2a1ws.php on line 11\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp14e2a1ws.php:19\nStack trace:\n\
    #0 /tmp/tmp14e2a1ws.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp14e2a1ws.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_filter(\n    $l,\n    function($value) {\n\
    \      return !is_numeric($value);\n    }\n  );\n  if (count($l) < 2) {\n    return\
    \ $l[0];\n  }\n  $sorted = array_sort($l);\n  $count = count($sorted);\n  return\
    \ $sorted[$count / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp6qol3fz3.php on line 15\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp6qol3fz3.php:27\nStack\
    \ trace:\n#0 /tmp/tmp6qol3fz3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6qol3fz3.php\
    \ on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = sort($l);\n  $lsize = count($l);\n  if ($lsize %\
    \ 2 !== 0)\n    return $l[$lsize / 2]; // Even number of elements\n\n  // Grab\
    \ the middle value from the middle half of the sorted numbers.\n  $middle = floor($lsize\
    \ / 2);\n  $left = $middle; // First middle\n  $right = $lsize - 1; // Last middle\n\
    \n  while ($left < $right) {\n    $mid = floor(($left + right) / 2);\n    if ($l[$mid]\
    \ < $l[$left]) {\n      $left = $mid + 1;\n    } else if ($l[$mid] > $l[$right])\
    \ {\n      $right = $mid - 1;\n    } else {\n      return $l[$mid];\n    }\n \
    \ }\n\n  return ($l[$left] + $l[$right]) / 2;\n}\n</code>\n<|/ a dscore=5 |>\n\
    <| a tags=statistics,median,php,sorting dscore=4 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp12_nh4j5.php
    on line 31

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!count($l)) {\n        throw new InvalidArgumentException();\n\
    \    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpk33fgfuu.php on line 11\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpk33fgfuu.php on line 11\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpk33fgfuu.php:19\nStack trace:\n\
    #0 /tmp/tmpk33fgfuu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk33fgfuu.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  // Sorting elements makes sure the median is correct\
    \ and has lower time complexity.\n  sort($l);\n  // Return median of sorted elements.\n\
    \  return $l[count($l)/2];\n}\n</code>\nFor Python:\n<code>\ndef median(numbers):\n\
    \    numbers.sort()\n    return numbers[len(numbers)//2]\n\nprint median([3, 1,\
    \ 2, 4, 5])\nprint median([-10, 4, 6, 1000, 10, 20])\n</code>\n<|/ a dscore=3\
    \ |>\n<| c |>\nI guess you mean median as opposed to average.\n<|/ c |>\n<| c\
    \ |>\nThe median is the middle value in a set of numbers, and the definition for\
    \ average is sum of values divided by number of values - http://en.wikipedia.org/wiki/Median\n\
    <|/ c |>\n<| c |>\n: Yes, that is what I meant. I had a typo in the wording of\
    \ the Wikipedia article I linked. Thanks for pointing that out.\n<|/ c |>\n<|\
    \ c |>\nThe median is the number in the middle of the sorted array. Average is\
    \ not necessarily a good measure of the population distribution. E.g. the median\
    \ of a population of n items can be computed as (1/n) * median. Average is a good\
    \ measure for population population.\n<|/ c |>\n<| c |>\n- You are quite right\
    \ that \"average\" is ambiguous and should not be used literally. However, \"\
    average\" is also quite useful for practical purposes so I will leave my answer\
    \ as-is since it's clear enough.\n<|/ c |>\n<| a dscore=2 |>\nIf you use Python\
    \ then you can use\n<code>\nfrom statistics import mean\n</code>\nThen you can\
    \ call\n<code>\nmean([1, 2, 3])\n</code>\nor\n<code>\nmean([1,2,3,4,5,6,7,8])\n\
    </code>\n<|/ a tags=php,python |>\n<| a tags=php,python dscore=2 |>\nIn Python\
    \ you can just use the mean function:\n<code>\n>>> mean([1,2,3,4])\n2.5\n>>> mean([1,3,5,7,9])\n\
    5.5\n>>> mean([1,3,5,7,9],0)\n3.0\n>>> mean([1,3,5,7,9],1)\n3.0\n>>> mean([1,3,5,7,9],-1)\n\
    4.0\n</code>\nThe optional parameter 0 lets the function handle non-numeric data.\n\
    <|/ a |>\n<| c |>\nThe optional parameter is only available in Python 3\n<|/ c\
    \ |>\n<| c |>\nYes it is available since Python 2.5 I believe.\n<|/ c |>\n<| c\
    \ |>\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpe5zanryx.php
    on line 13

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $n = count($l);\n    if ($n % 2 === 1) {\n        return\
    \ $l[(floor($n / 2) - 1)];\n    } else {\n        return ($l[($n - 1) / 2 + 1]\
    \ + $l[$n / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2l8_26_.php:21\n\
    Stack trace:\n#0 /tmp/tmph2l8_26_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph2l8_26_.php\
    \ on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    // even\n\
    \    return ($l[($n + 1) / 2-1] + $l[($n + 1) / 2]) / 2;\n  } else {\n    // odd\n\
    \    return ($l[($n - 1) / 2-1] + $l[($n - 1) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4m3opudt.php:23\n\
    Stack trace:\n#0 /tmp/tmp4m3opudt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4m3opudt.php\
    \ on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  if (count($l) % 2 === 0) {\n    return $l[count($l)\
    \ / 2 - 1];\n  }\n  return $l[count($l) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpd30g37bu.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpd30g37bu.php:21\nStack trace:\n#0 /tmp/tmpd30g37bu.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd30g37bu.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n%2 == 0) {\n    $sorted = array();\n\
    \    for($i=0;$i<$n/2;$i++) {\n      $sorted[$i] = $l[$i];\n    }\n    sort($sorted);\n\
    \    return $sorted[(count($sorted)-1)/2];\n  }\n  else {\n    $sorted = array();\n\
    \    for($i=0;$i<$n/2;$i++) {\n      $sorted[$i] = $l[$i];\n    }\n    sort($sorted);\n\
    \    return $sorted[(count($sorted)-$n)/2];\n  }\n}\n</code>\n<|/ a dscore=5 tags=arrays,php\
    \ |>\n<| c |>\nThanks very much for your response. As this question was posted\
    \ over 3 years ago, I haven't tested this code. I've tested a previous version\
    \ which was much simpler but doesn't work correctly. I've implemented a similar\
    \ one in some time. I'll be sure to post a response to my comment if it works\
    \ when I do.\n<|/ c |>\n<| c |>\nYou might want to look at my comment above. This\
    \ version isn't very efficient.\n<|/ c |>\n<| c |>\nIf you're looking at performance\
    \ it's pretty cool that you found this. I didn't want to have to write a custom\
    \ sort function every time I needed the median. Your way would have worked but\
    \ this was a lot easier to implement.\n<|/ c |>\n<| c |>\nIt's not only a lot\
    \ easier, it's also much more performant. Sorry I didn't mention that.\n<|/ c\
    \ |>\n<| c |>\nIt's more efficient because the median is calculated only once\
    \ in contrast to every call to a sort function. I tested the code with 5000 elements\
    \ in an array and my code runs in 2 seconds on my pc while your version runs in\
    \ 6 seconds!\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpm_m2pldo.php
    on line 26

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return $l[sizeof($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpj7hd4fnq.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj7hd4fnq.php:16\nStack trace:\n#0 /tmp/tmpj7hd4fnq.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj7hd4fnq.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $this->_median($l);\n}\n/**\n * (PECL pecl_http\
    \ &gt;= 0.1.0)<br/>\n * Send request and get response and status code.\n * @link\
    \ https://secure.php.net/manual/en/function.curl-getinfo.php\n * @param resource\
    \ $ch [optional] <p>\n * The optional <i>handle</i> parameter allows you to obtain\
    \ a CURL\n * object as a result, or simply as a boolean.\n * </p>\n * @param string\
    \ $url <p>\n * The URL to fetch.\n * </p>\n * @param string $data <p>\n * The\
    \ data to send to the remote URL as a POST request.\n * </p>\n * @param array\
    \ $headers [optional] <p>\n * An array of additional headers to send with the\
    \ request.\n * </p>\n * @param int $handle [optional] <p>\n * If the optional\
    \ <i>handle</i> parameter is passed in, it will be\n * filled with the CURL handle\
    \ instead of being returned.\n * </p>\n * @return array|false an array containing\
    \ the\n * following elements:\n * <table>\n * <tr valign=\"top\">\n * <th>Key</th>\n\
    \ * <th>Type</th>\n * <th>Description</th>\n * </tr>\n * <tr valign=\"top\">\n\
    \ * <td><code>\n * http_code</code></td>\n * <td>int</td>\n * <td>\n * Returns\
    \ the HTTP response status code.\n * </td>\n * </tr>\n * <tr valign=\"top\">\n\
    \ * <td><code>\n * content_type</code></td>\n * <td>string</td>\n * <td>\n * Returns\
    \ the content type header\n * </td>\n * </tr>\n * <tr valign=\"top\">\n * <td><code>\n\
    \ * http_msg</code></td>\n * <td>string</td>\n * <td>\n * Returns the entire response\
    \ body.\n * </td>\n * </tr>\n * <tr valign=\"top\">\n * <td><code>\n * header_size</code></td>\n\
    \ * <td>int</td>\n * <td>\n * Returns the size of the response headers.\n * </td>\n\
    \ * </tr>\n * <tr valign=\"top\">\n * <td><code>\n * request_size</code></td>\n\
    \ * <td>int</td>\n * <td>\n * Returns the size of the request headers.\n * </td>\n\
    \ * </tr>\n * <tr valign=\"top\">\n * <td><code>\n * total_time</code></td>\n\
    \ * <td>float</td>\n * <td>\n * Returns the total time taken to execute\n * the\
    \ request.\n * </td>\n * </tr>\n * <tr valign=\"top\">\n * <td><code>\n * namelookup_time</code></td>\n\
    \ * <td>float</td>\n * <td>\n * Returns the time taken to resolve the IP address\n\
    \ * name used in the request.\n * </td>\n * </tr>\n * <tr valign=\"top\">\n *\
    \ <td><code>\n * connect_time</code></td>\n * <td>float</td>\n * <td>\n * Returns\
    \ the time taken to establish a connection\n * with the requested server.\n *\
    \ </td>\n * </tr>\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 10 in /tmp/tmp745fd90i.php on
    line 10

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (count($l) % 2 === 0) {\n\t\treturn $l[count($l) /\
    \ 2 - 1];\n\t}\n\treturn (sort($l)[count($l) / 2 - 1] + sort($l)[count($l) / 2])\
    \ / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type bool in /tmp/tmpmoqtchvi.php\
    \ on line 11\n\nWarning: Trying to access array offset on value of type bool in\
    \ /tmp/tmpmoqtchvi.php on line 11\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpmoqtchvi.php:19\nStack trace:\n#0 /tmp/tmpmoqtchvi.php(26): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmoqtchvi.php on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tsort($l);\n\treturn ($l[floor(count($l)-1)]);\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp202l0zy5.php:17\n\
    Stack trace:\n#0 /tmp/tmp202l0zy5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp202l0zy5.php\
    \ on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[(count($l)\
    \ - 1) / 2];\n  }\n  $mid = ceil(count($l) / 2);\n  return ($l[$mid] + $l[($mid\
    \ + 1)] ) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4z7v_ypg.php:19\n\
    Stack trace:\n#0 /tmp/tmp4z7v_ypg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4z7v_ypg.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) return null;\n  return $l[count($l)/2];\n}\n\
    \nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpwo_xohew.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpwo_xohew.php:17\nStack trace:\n#0 /tmp/tmpwo_xohew.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwo_xohew.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[intval(($n\
    \ + 1) / 2)];\n  } else {\n    return (float)($l[intval($n / 2)]);\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cg70mvb.php:20\n\
    Stack trace:\n#0 /tmp/tmp7cg70mvb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7cg70mvb.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) == 0) return null;\n  sort($l);\n  $middle\
    \ = count($l) / 2;\n  if (count($l) % 2 == 0) {\n    return $l[$middle];\n  }\
    \ else {\n    return (is_nan($l[$middle]) && is_nan($l[$middle - 1])) ? $l[$middle\
    \ - 1] : $l[$middle];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpbw183_81.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpbw183_81.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpbw183_81.php:24\nStack trace:\n\
    #0 /tmp/tmpbw183_81.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbw183_81.php\
    \ on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $count = count($l);\n    if ($count === 0) {\n    \
    \    return null;\n    }\n    $l[0] = (is_string($l[0])) ? strtol($l[0], NULL,\
    \ 10) : $l[0];\n    return $count === 1 ? $l[0] : (($l[($count - 1) / 2] +\n \
    \           $l[($count - 1) / 2++]) / $count);\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "++", expecting "]" in /tmp/tmp5fl5aqjw.php
    on line 14

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (!is_array($l)) return FALSE;\n    sort($l);\n \
    \   return $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8susmzgs.php:18\n\
    Stack trace:\n#0 /tmp/tmp8susmzgs.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8susmzgs.php\
    \ on line 18\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    return is_array($l) ? $l[(count($l) / 2)] : NULL;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpmw3s8jft.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpmw3s8jft.php:16\nStack trace:\n#0 /tmp/tmpmw3s8jft.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmw3s8jft.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpw79vd_ok.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpw79vd_ok.php:16\nStack trace:\n#0 /tmp/tmpw79vd_ok.php(23): test()\n\
    #1 {main}\n  thrown in /tmp/tmpw79vd_ok.php on line 16\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!$l) return null;\n  $n = count($l);\n  if ($n %\
    \ 2 == 1) return $l[($n - 1) / 2];\n  else return (\n    ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2.0);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddhix98g.php:20\n\
    Stack trace:\n#0 /tmp/tmpddhix98g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpddhix98g.php\
    \ on line 20\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[count($l)\
    \ / 2] + $l[count($l) / 2 - 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpvgb0yj7x.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpvgb0yj7x.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpvgb0yj7x.php:22\nStack trace:\n\
    #0 /tmp/tmpvgb0yj7x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvgb0yj7x.php\
    \ on line 22\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (sizeof($l) == 0) {\n    return 0;\n  }\n  if (sizeof($l)\
    \ == 1) {\n    return $l[0];\n  }\n  $a = $l[0], $b = $l[0];\n  foreach ($l as\
    \ $m) {\n    if ($m > $b) {\n      $b = $m;\n    } else if ($m == $a) {\n    \
    \  $a++;\n    } else {\n      $b = $m;\n    }\n  }\n  return ($b - $a) / 2;\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "," in /tmp/tmpuw8wy25r.php on line
    14

    '
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    return count($l) > 0 ? $l[round(count($l)\
    \ / 2)] : 0;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpd_hdlp0e.php:9\nStack trace:\n\
    #0 /tmp/tmpd_hdlp0e.php(13): median(true)\n#1 /tmp/tmpd_hdlp0e.php(17): candidate(Array)\n\
    #2 /tmp/tmpd_hdlp0e.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpd_hdlp0e.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp14u9958y.php on line 8\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp14u9958y.php:15\nStack trace:\n#0 /tmp/tmp14u9958y.php(22): test()\n\
    #1 {main}\n  thrown in /tmp/tmp14u9958y.php on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  return ($l[count($l)/2 - 1] + $l[count($l)/2])/2;\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpul00hcqy.php on line 8\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpul00hcqy.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpul00hcqy.php:15\nStack trace:\n\
    #0 /tmp/tmpul00hcqy.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpul00hcqy.php\
    \ on line 15\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (!count($l)) {\n    return 0;\n  }\n  sort($l);\n\
    \  $len = count($l);\n  if ($len % 2) {\n    return $l[intval($len / 2)];\n  }\n\
    \  return ($l[intval($len / 2)] + $l[intval($len / 2) - 1]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_lu9h0b.php:25\n\
    Stack trace:\n#0 /tmp/tmpv_lu9h0b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv_lu9h0b.php\
    \ on line 25\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (count($l) % 2 == 0) {\n    // even\n    $n = count($l)\
    \ / 2;\n    return $l[$n];\n  }\n  else {\n    // odd\n    $n = count($l) / 2;\n\
    \    return ($l[$n] + $l[--$n]) / 2;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpyma0bcvg.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpyma0bcvg.php on line 16\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpyma0bcvg.php:24\nStack trace:\n\
    #0 /tmp/tmpyma0bcvg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyma0bcvg.php\
    \ on line 24\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) == 0) return NULL;\n    sort($l);\n \
    \   return $l[floor(count($l) / 2)];\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrnujg8_.php:19\n\
    Stack trace:\n#0 /tmp/tmpwrnujg8_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwrnujg8_.php\
    \ on line 19\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    return count($l) == 0 ? 0 : ($l[count($l)/2]\
    \ + ($l[count($l)/2-1])/2);\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpn79axky1.php:9\nStack trace:\n\
    #0 /tmp/tmpn79axky1.php(13): median(true)\n#1 /tmp/tmpn79axky1.php(17): candidate(Array)\n\
    #2 /tmp/tmpn79axky1.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpn79axky1.php\
    \ on line 9\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = $l ? array_reverse($l) : $l;\n    $num = count($l);\n\
    \    if ($num < 2) {\n        return $l[0];\n    }\n    $center = floor($num /\
    \ 2);\n    if ($num % 2) {\n        return ($l[$center - 1] + $l[$center]) / 2;\n\
    \    } else {\n        return $l[$center];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzq8kqnzz.php:27\n\
    Stack trace:\n#0 /tmp/tmpzq8kqnzz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzq8kqnzz.php\
    \ on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $f = array();\n    foreach ($l as $n) {\n        $f[]\
    \ = $n;\n    }\n    sort($f);\n    return count($f) % 2 ? $f[(count($f)/2) - 1]\
    \ : $f[count($f)/2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpv0o0p6le.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpv0o0p6le.php:21\nStack trace:\n#0 /tmp/tmpv0o0p6le.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpv0o0p6le.php on line 21\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\tif (sizeof($l) == 0) return NULL;\n\t$l = $l ? $l : array();\n\
    \tif (sizeof($l) % 2 == 0) {\n\t\treturn $l[(sizeof($l) / 2)];\n\t} else {\n\t\
    \t$mid = sizeof($l) / 2;\n\t\treturn ($l[$mid-1] + $l[$mid]) / 2;\n\t}\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpcavxp73d.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpcavxp73d.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpcavxp73d.php:23\nStack trace:\n\
    #0 /tmp/tmpcavxp73d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcavxp73d.php\
    \ on line 23\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  if (empty($l)) {\n    return FALSE;\n  }\n  if ($l[0]\
    \ === FALSE) {\n    return FALSE;\n  }\n  sort($l);\n  $len = count($l);\n  if\
    \ ($len % 2) {\n    return $l[$len / 2];\n  }\n  return $l[($len - 1) / 2];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpja9e0k1m.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 2.5 to int loses precision in /tmp/tmpja9e0k1m.php on line 19\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpja9e0k1m.php:27\nStack trace:\n\
    #0 /tmp/tmpja9e0k1m.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpja9e0k1m.php\
    \ on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmprthwg6eu.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprthwg6eu.php:17\nStack trace:\n#0 /tmp/tmprthwg6eu.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmprthwg6eu.php on line 17\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (empty($l)) return null;\n    $med = floor((count($l)\
    \ - 1) / 2);\n    if (count($l) % 2 == 0) {\n        $median = $l[$med];\n   \
    \ } else {\n        if ($l[$med] > $l[$med + 1]) {\n            $median = $l[$med];\n\
    \        } else {\n            $median = $l[$med + 1];\n        }\n    }\n   \
    \ return $median;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr4rdm_x.php:27\n\
    Stack trace:\n#0 /tmp/tmpwr4rdm_x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwr4rdm_x.php\
    \ on line 27\n"
  timestamp: 1659977719
- exit_code: 255
  program: "<?php\n// Return median of elements in the array l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n\treturn ($l[count($l)/2] + $l[count($l)/2-1]) / 2;\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps_5a1c4j.php on line 8\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmps_5a1c4j.php on line 8\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmps_5a1c4j.php:15\nStack trace:\n\
    #0 /tmp/tmps_5a1c4j.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps_5a1c4j.php\
    \ on line 15\n"
  timestamp: 1659977719

name: HumanEval_61_correct_bracketing
language: php
prompt: "<?php\n// brackets is a string of \"(\" and \")\".\n// return true if every\
  \ opening bracket has a corresponding closing bracket.\n// >>> correct_bracketing(\"\
  (\")\n// false\n// >>> correct_bracketing(\"()\")\n// true\n// >>> correct_bracketing(\"\
  (()())\")\n// true\n// >>> correct_bracketing(\")(()\")\n// false\nfunction correct_bracketing($brackets)\
  \ {\n"
tests: "function candidate(...$args) {\n    return correct_bracketing(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
  \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((((\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"(()\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())())(()\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_71_triangle_area
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return the\
  \ area of\n// the triangle rounded to 2 decimal points if the three sides form a\
  \ valid triangle. \n// Otherwise return -1\n// Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n// than the third side.\n// Example:\n\
  // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction\
  \ triangle_area($a, $b, $c) {\n"
tests: "function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = triangle_sum($a, $b, $c);\n    return round($sum, 2);\n\
    }\n", "  $ab = $b - $a;\n  $ac = $c - $a;\n  if ($ab < 0 || $ac < 0) {\n    return\
    \ -1;\n  }\n  if ($ab === 0 && $ac === 0) {\n    return 0;\n  }\n  return $ab\
    \ + $ac;\n}\n", "    $x = abs($a - $b);\n    $y = abs($c - $b);\n    $z = abs($a\
    \ - $c);\n    return round(((($x * $x) + ($y * $y)) / ($z * $z)), 2);\n}\n", "\t\
    if ($a + $b + $c <= 0) {\n\t\treturn -1;\n\t}\n\treturn round($a + ($b * 2) +\
    \ ($c * 3), 2);\n}", "    if (($a + $c) > ($b + $a)) {\n        return triangle_area($c,\
    \ $b, $a);\n    } else {\n        return $a * $b / $c;\n    }\n}\n", "    return\
    \ ((($a + $b) * ($c + $a)) - (($a) * ($c + $b)) - ($b) * ($a + $c)) /\n      \
    \  sqrt(($a) * ($a) + ($b) * ($b) + ($c) * ($c));\n}", "    $total = abs($a +\
    \ $b + $c);\n    $area = $a * $b;\n    $area = $area + $area * $c;\n    return\
    \ round($area/$total, 2);\n}", "    $a = abs($a); // $a must be positive\n   \
    \ $b = abs($b); // $b must be positive\n    $c = abs($c); // $c must be positive\n\
    \    $s = $a + $b + $c; // sum of three sides\n    if ($s > $c) {\n        $s\
    \ = $a; // if sum of two sides is greater than third side\n    }\n    return round($s\
    \ * .5, 2);\n}", "  return $a + $b + $c;\n}\n", "  // Write your code here\n \
    \ $area = ($a + $b + $c) / 2;\n  return ($area > $c) ? $area : -1;\n}", "  $a1\
    \ = $a * $a;\n  $b1 = $b * $b;\n  $c1 = $c * $c;\n  if ($a1 > $b1 && $a1 > $c1)\
    \ {\n    return $a1 / ($a1 + $b1 + $c1);\n  } elseif ($b1 > $c1) {\n    return\
    \ $b1 / ($b1 + $c1 + $a1);\n  } else {\n    return $c1 / ($b1 + $c1 + $a1);\n\
    \  }\n}", "    if ($a + $b + $c > $c) {\n        return -1;\n    } else {\n  \
    \      return $a * b * 0.5;\n    }\n}\n</code>\n<|/ a tags=python,c |>\n<| c |>\n\
    Please add an explanation to your answer such that others can learn from it.\n\
    <|/ c |>\n<| a dscore=2 |>\nThis is an old thread, but for those who are still\
    \ trying to find answers to this problem here's my solution which I think more\
    \ closely matches the definition of \"triangle area\" in geometric science, where\
    \ a triangle is defined as any two angles perpendicular to each other and extending\
    \ perpendicular to their opposite side:\n<code>\ndef area_triangle(angles):\n\
    \    triangle_area = 0.0\n    angle_sum = 0.0\n    # Loop over angles\n    for\
    \ angle in angles:\n        # Add to angle_sum\n        angle_sum += angle\n\n\
    \    # Calculate area of triangle\n    if angle_sum > 0:\n        triangle_area\
    \ = abs((angle_sum/2)*(math.sin(angle_sum/2)))\n    return triangle_area\n</code>\n\
    <|/ a tags=python,c |>\n<| c |>\nThis was a great solution.  I'm surprised it's\
    \ not higher up here.\n<|/ c |>\n<| a tags=python,c |>\nThe solution provided\
    \ by James is correct, however I decided to add an explanation to his solution\
    \ as well. He had a great explanation of what was happening but he did not post\
    \ it as an answer. My explanation is the one he would like to see. Hopefully this\
    \ helps others.\n<code>\ndef triangle_area(a,b,c):\n    area_tri=a/b*c\n    angle_sum=a+b+c\n\
    \    \n    if angle_sum>c:\n        area_tri=area_tri*0.5\n    \n    elif angle_sum<c:\n\
    \        area_tri=area_tri*0.5\n\n    return area_tri\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\nimport math\n", "    if ($a === $b && $a === $c)\
    \ return 0;\n    return ($a + $b + $c) / 2;\n}\n", "    $s = $a + $b + $c;\n \
    \   $area = sqrt(($s * $s) - ($a * $a) - ($b * $b) - ($c * $c));\n    return round($area);\n\
    }\n", "    return $a + $b > $c ? $a + $b / 2 : ($a + $c - $b) / 2;\n}\n", "  \
    \  $area = ($a + $c + $b) / 2;\n\n    if (abs($area - $b) >= abs($area - $c) &&\
    \ abs($area - $a) >= abs($area - $b)) {\n        return round($area, 2);\n   \
    \ }\n    return -1;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 tags=arrays,function,php\
    \ |>\n<code>", "    if ($a + $b > $c) {\n        return $a + $b + $c - $b;\n \
    \   }\n    return -1;\n}\n", "    if (($a + $b + $c) > 0) {\n        return round(($a\
    \ + $b + $c), 2);\n    } else {\n        return -1;\n    }\n}\n", "    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        echo $a * $b * $c . \"\
    \\n\";\n        return round(($a * $b * $c)/100, 2);\n    }\n    else return -1;\n\
    }", "\tif(($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n\t\treturn round(($a\
    \ + $b + $c) / 2, 2);\n\t}\n\treturn -1;\n}\n</code>\nI used this question as\
    \ a guide. https://stackoverflow.com/a/427151/829353\n<|/ a dscore=2 |>\n<| c\
    \ |>\nNice, thanks! The `is_valid_triangle` function really helps. I wonder what\
    \ your opinion is on `is_valid_triangle()` and it's implementation in `is_valid_triangle2()`\
    \ (see my comment to OP).\n<|/ c |>\n<| a |>\nYou can do that by checking the\
    \ sum and of the two angles:\n<code>\nfrom math import sqrt, acos, pi\n\ndef is_triangular(a,\
    \ b, c, check):\n    if abs(a) > 100 or abs(b) > 100 or abs(c) > 100:\n      \
    \  return -1\n\n    # Sum all angles\n    angle = a + b + c\n    angle = round(sqrt(angle),\
    \ 2)\n\n    # Check if angle equals zero\n    if angle == 0:\n        return -1\n\
    \n    # Check if the two angles are equal\n    if a == b and b == c:\n       \
    \ return 0\n    elif a == b and b != c:\n        return 0\n    elif a == b and\
    \ a != c:\n        return 0\n\n    # Check if both angles are equal\n    if a\
    \ == b or a == c or b == c:\n        return 0\n\n    # Check if both angles are\
    \ equal\n    cos_a = acos(a / angle)  # Cosine of the angle of rotation \n   \
    \ cos_b = acos(b / angle)  # Cosine of the angle of rotation\n    cos_c = acos(c\
    \ / angle)  # Cosine of the angle of rotation\n    cos_ab = cos_a - cos_b  # Cosine\
    \ of the difference between angles\n\n    if check and cos_ab > 1:\n        return\
    \ 0\n\n    return angle\n\nif __name__ == '__main__':\n    a = float(input('Enter\
    \ angle a: '))\n    b = float(input('Enter angle b: '))\n    c = float(input('Enter\
    \ angle c: '))\n    check = True if input('Do you want a triangle check? [y/n]:\
    \ ') == 'y' else False\n    \n    angle1 = is_triangular(a, b, c, check)\n   \
    \ print(angle1)\n</code>\n<|/ a tags=python,geometry,triangular,math dscore=2\
    \ |>\n<| c |>\nThis works well. Although I like your solution more it seems `is_valid_triangle()`\
    \ does the same thing. I could probably implement `is_valid_triangle()` based\
    \ on this.\n<|/ c |>\n<| c |>\nI think it's a great solution. The only problem\
    \ I see with it is that `check` ", "    return ($a + $b + $c) / 2;\n}\n", "  \
    \  if($a + $b > $c) {\n        return -1;\n    }\n    return $a * b / $c;\n}\n",
  "\tif ($a + $b > $c) {\n\t\t$c = $a + $b;\n\t\t$b = $a - $c;\n\t\t$a = $c - $b;\n\
    \t\t$c = $a + $b;\n\t}\n\t$c = sqrt($c);\n\treturn round($a * $c, 2);\n}\n", " \
    \   $s = (a + b + c) / 2;\n    if ($s <= (a * a + b * b + c * c)) {\n        return\
    \ round($s * 0.5) / 2;\n    } else {\n        return -1;\n    }\n}\n", "    $ad\
    \ = $bd - $c;\n    $bcd = $ac - $a;\n    if ($ad < $bd && $ad < $bcd && $bd <\
    \ $ac) {\n        return $ad + $bc + $cd;\n    } else if ($bc < $ad && $bc < $bcd\
    \ && $ad < $ac) {\n        return $bc + $ad + $cd;\n    } else if ($ac < $bc &&\
    \ $ac < $bcd && $bc < $ad) {\n        return $ac + $bc + $cd;\n    } else {\n\
    \        return -1;\n    }\n}\n", "    $x = abs($b);\n    $y = abs($c);\n    $l1\
    \ = ($x + $y);\n    $l2 = ($x - $y);\n    $l3 = ($x + $y - $c);\n    if ($l2 <=\
    \ $l1) {\n        return -1;\n    }\n    $sum = ($a + $b + $c);\n    if ($sum\
    \ > $l3) {\n        return ($sum - $l2);\n    } else {\n        return -1;\n \
    \   }\n}\n", "\t// Check if any three sides are greater than the third side\n\t\
    $area = max($a, $b, $c);\n\tif ($area < $a + $b + $c) {\n\t\t$area = ($a + $b\
    \ + $c)/2;\n\t}\n\treturn round($area, 2);\n}\n", "    if ($a + $b > $c) {\n \
    \       return round(($a + $b + $c) / 2.0, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    if ($a + $b > $c) {\n        return -1;\n    }\n    if ($a\
    \ + $c > $b) {\n        return -1;\n    }\n    if ($b + $c > $a) {\n        return\
    \ -1;\n    }\n    // If the sum of the two sides is greater than the third side\
    \ then we assume \n    // that the triangle is a right triangle and round the\
    \ area accordingly.\n    return round($a + $b + $c) / 2;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=java,algorithm,math dscore=0 |>\n<code>\nimport java.util.Scanner;\n\
    \npublic class Triangle {\n\n    public static void main(String[] args) {\n  \
    \      Scanner scan = new Scanner(System.in);\n        System.out.println(\"Enter\
    \ the side length of the triangle\");\n        int a = scan.nextInt();\n     \
    \   int b = scan.nextInt();\n        int c = scan.nextInt();\n        System.out.println(a);\n\
    \        System.out.println(b);\n        System.out.println(c);\n        if (a\
    \ + b > c) {\n            System.out.println(-1);\n        }\n        if (a +\
    \ c > b) {\n            System.out.println(-1);\n        }\n        if (b + c\
    \ > a) {\n            System.out.println(-1);\n        }\n        double area\
    \ = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n        System.out.println(area);\n\
    \    }\n}\n</code>\n<|/ a |>\n<| a tags=java,algorithm,math |>\n<code>\nimport\
    \ java.util.Scanner;\npublic class Triangle\n{\n    public static void main(String[]\
    \ args)\n    {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"\
    Enter the side length of the triangle\");\n        int a = sc.nextInt();\n   \
    \     int b = sc.nextInt();\n        int c = sc.nextInt();\n        sc.close();\n\
    \        System.out.println(a);\n        System.out.println(b);\n        System.out.println(c);\n\
    \        if (a + b > c)\n        {\n            System.out.println(-1);\n    \
    \    }\n        if (a + c > b)\n        {\n            System.out.println(-1);\n\
    \        }\n        if (b + c > a)\n        {\n            System.out.println(-1);\n\
    \        }\n        double area= Math.sqrt(Math.pow(a,2)+Math.pow(b,2)+Math.pow(c,2));\n\
    \        System.out.println(area);\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nPlease add some explanation.\n<|/ c |>\n<| c |>\nPlease don't post only\
    \ code as answer, but also provide an explanation what your code does and how\
    \ it solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract ", "  //\
    \ Calculate area of triangle using Heron's formula\n  return $a + $b + $c - ($a\
    \ * $a) + ($b * $b) + ($c * $c) - ($a * $b * $c) / 2;\n}\n", "    return $a +\
    \ $b > $c ? round(($a + $b + $c) / 2, 2) : -1;\n}", "  if ($a + $b > $c) {\n \
    \   return -1\n  }\n  return $a * $b / ($a + $b + $c - $b)\n}\n", "    $area =\
    \ sqrt(($a*$a) + ($b*$b) + ($c*$c));\n    return $area; // if $area is between\
    \ 0 and 1, round it to 2 decimal points\n}\n</code>\n<|/ a |>\n<| c |>\nI like\
    \ the explanation but this answer doesn't address how this relates to the example\
    \ code. It's more a code dump.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", " \
    \   if (abs($a-$b) > abs($c-$b))\n        return ($a + $c) / 2;\n    elseif (abs($a-$b)\
    \ < abs($c-$b))\n        return ($a + $b) / 2;\n    else\n        return ($a +\
    \ $b + $c) / 3;\n}\n", "    $s = (a + b + c) / 2;\n    if ($s > $c + $b) {\n \
    \       return -1;\n    }\n    return round($s * sqrt($s * ($c - $b) * ($c - $s)\
    \ * ($b - $s)), 2);\n}\n", "  $ad_bc = abs($a - $b);\n  $bc_ad = abs($b - $c);\n\
    \  $ac_ad = abs($a - $c);\n  // return area if sides are valid\n  if($ad_bc <=\
    \ $bc_ad && $ad_bc <= $ac_ad) {\n    return $a * $b * $c / 2.0;\n  }\n  return\
    \ -1.0;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThank you for your response!\n\
    <|/ c |>\n<| a tags=php,geometry |>\nHere's a short solution using SAT (http://en.wikipedia.org/wiki/Boolean_algebra_theory_and_computer_science#SAT):\n\
    <code>", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return\
    \ round(($a + $b + $c) / 2);\n    } else {\n        return -1;\n    }\n}", "\t\
    if ($a + $b > $c) {\n\t\t$s = $a + $c - $b;\n\t\treturn round($s * ($s / $a),\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}", "  if ($a + $b > $c) {\n    return\
    \ round((((($b * $c) - ($a * ($c + $b))) / 2)) / 2, 2);\n  }\n  else {\n    return\
    \ -1;\n  }\n}", "\tif ($a + $b > $c) {\n\t\t$h = $b - $c;\n\t\treturn $h / $a\
    \ * $a;\n\t} else if ($a + $c > $b) {\n\t\t$h = $c - $b;\n\t\treturn $h / $a *\
    \ $a;\n\t} else {\n\t\t$h = $a - $b;\n\t\treturn $h / $a * $a;\n\t}\n}", "   \
    \ return round($a * $b + ($a * $c) - ($b * $c), 2);\n}\n", "    // Write your\
    \ code here\n    return $a + $b + $c;\n}\n</code>\nThis should work for any number\
    \ of sides.\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n/**\n * Calculate the\
    \ area of a triangle given three sides.\n *\n * {number} a\n * {number} b\n *\
    \ {number} c\n * {number}\n */", "    if ($a + $b > $c) {\n        $total = $a\
    \ + $c;\n        $a = $b;\n        $b = $c;\n        $c = $total;\n    }\n   \
    \ $d = $b - $a;\n    $e = $c - $a;\n    $f = $d + $e;\n    $g = $b + $d;\n   \
    \ $h = $a + $e;\n    if ($a != $b and $d != $c and $h == $g and $f == $h and $e\
    \ == $g and $c == $h and $d == $g and $a == $c) {\n        echo \"Invalid triangle\
    \ (sides don't match), area = $f\";\n        exit;\n    }\n    if ($e < 0) {\n\
    \        echo \"Invalid triangle (negative side length)\";\n        exit;\n  \
    \  }\n    return round(($f * $g)/($h*$g),2);\n}\n", "    $a = abs($a);\n    $b\
    \ = abs($b);\n    $c = abs($c);\n    $valid = ($a + $b) > $c;\n    if(!$valid)\
    \ {\n        return -1;\n    }\n    return round($a + $b * $c) / 2; \n}\n</code>\n\
    <|/ a tags=php dscore=4 |>\n<| a tags=php dscore=4 |>\n<code>", "    $result =\
    \ $a + $b + $c;\n    if ($result > $c) {\n        $result = $c;\n    } elseif\
    \ ($result < $c) {\n        $result = $c;\n    } else {\n        return 0;\n \
    \   }\n    return $result / 2;\n}\n", "  // Write your code here\n  if ($a + $b\
    \ > $c){\n    return -1;\n  }\n  return $a * $c / 2 + $b * $c / 2;\n}\n", "  $x\
    \ = $a + $b;\n  $y = $c + $d;\n  if ($a + $b > $c) {\n    if ($c + $d > $b) {\n\
    \      if ($a + $b > $c) {\n        $x = $a + $c;\n        $y = $c + $b;\n   \
    \   }\n    } else {\n      $x = $a + $b;\n      $y = $c + $d;\n    }\n  }\n  return\
    \ $x * $y;\n}\n", "    $area = 0;\n    $sides = $a + $b + $c;\n    if ($sides\
    \ > 0) {\n        if ($a <= $b) { \n            $area = $sides * $a / 2; // $a\
    \ is the shorter of the two sides\n        } else {\n            $area = $sides\
    \ * $b / 2;\n        }\n        if ($a <= $c) {\n            $area += $sides *\
    \ $c / 2;\n        }\n    }\n    return round($area, 2);\n}", "  \n  // Validate\
    \ inputs\n  // Check that all inputs are positive numbers.\n  // Check that all\
    \ inputs are non-zero\n  if (is_numeric($a) && is_numeric($b) && is_numeric($c))\
    \ {\n    // Validate the inputs\n    if ($a < 0 || $b < 0 || $c < 0) {\n     \
    \ echo -1;\n    } else {\n      // All inputs are non-zero and valid so calculate\
    \ the area\n      $area = round((((($a * $c) - ($a * $b)) * ($b * $c)) /\n   \
    \     (sqrt(pow($a, 2) + pow($b, 2) + pow($c, 2))), 2);\n      if ($area == 0)\
    \ {\n        echo -1;\n      } else {\n        echo $area;\n      }\n    }\n \
    \ } else {\n    echo -1;\n  }\n}", "    $d = $a + $b + $c;\n    return is_int($a)\
    \ ? $d : $d / 2;\n}\n</code>\n<|/ a dscore=0 tags=python,php,java,algorithm |>\n\
    <| a |>\nThis is my attempt in PHP. I'm not a Python programmer, but this should\
    \ get you on your way. :)\n<code>", "    \n    // Make sure a is positive, if\
    \ not return -1\n    if ($a < 0) {\n        return -1;\n    }\n    \n    // Make\
    \ sure b is positive, if not return -1\n    if ($b < 0) {\n        return -1;\n\
    \    }\n    \n    // Make sure c is positive, if not return -1\n    if ($c < 0)\
    \ {\n        return -1;\n    }\n    \n    // Set up parameters and return value\n\
    \    $s = $a + $b + $c;\n    $area = $s * (($a + $b) * 2) + ($a * $c) - ($b *\
    \ $c);\n    return round($area, 2);\n}\n", "    $s = $a + $b + $c;\n    if ($s\
    \ <= 0) {\n        return -1;\n    }\n    $area = $s * 0.5 * ($s * ($s - $a) *\
    \ ($s - $b) * ($s - $c));\n    $area = round($area, 2);\n    return $area;\n}\n\
    </code>\n<|/ a tags=php,function,math,triangle |>\n<| a tags=php,function,math,triangle\
    \ |>\nI found the solution\n<code>", "\t$area = $a * ($b - $c) * ($c - $b);\n\t\
    if ($a > $b && $a > $c) {\n\t\treturn round($area, 2);\n\t} else if ($b > $c &&\
    \ $b > $c) {\n\t\treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n",
  "  $area = sqrt((((($b + $c) - ($a * $c)) - (($b * $c)) - (($a * $b))) / (2*$a)));\n\
    \  return round($area, 2);\n}\n", "  $d = $a + $b + $c; // a + b + c\n  // check\
    \ area of triangle\n  if ((($a + $b) * $d) + ($c * $d) === ($b * $c)) {\n    //\
    \ all sides are equal\n    return $a * $b;\n  }\n  // check area of triangle is\
    \ greater than third side\n  if (($a > $b) && ($a > $c) && ($b > $c)) {\n    return\
    \ $a * b * 0.5;\n  }\n  // check area of triangle is greater than second side\n\
    \  if (($b > $c) && ($b > $a) && ($c > $a)) {\n    return $b * c * 0.5;\n  }\n\
    \  // check area of triangle is greater than first side\n  if (($c > $a) && ($c\
    \ > $b) && ($a > $b)) {\n    return $c * a * 0.5;\n  }\n  // check area of triangle\
    \ is less than first side\n  if (($a < $c) && ($a < $b) && ($b < $c)) {\n    return\
    \ $a * c * 0.5;\n  }\n  // check area of triangle is less than second side\n \
    \ if (($b < $a) && ($b < $c) && ($c < $a)) {\n    return $b * a * 0.5;\n  }\n\
    \  // check area of triangle is less than third side\n  if (($c < $a) && ($c <\
    \ $b) && ($b < $a)) {\n    return $c * b * 0.5;\n  }\n  // check area of triangle\
    \ is equal to third side\n  if (($a == $c) && ($b == $c)) {\n    return $a * $c;\n\
    \  }\n  // check area of triangle is greater than third side\n  if (($a > $c)\
    \ && ($a > $b) && ($b > $c)) {\n    return $a * b * 0.5;\n  }\n  // check area\
    \ of triangle is greater than second side\n  if (($b > $c) && ($b > $a) && ($c\
    \ > $a)) {\n    return $b * c * 0.5;\n  }\n  // check area of triangle is greater\
    \ than first side\n  if (($c > $a) && ($c > $b) && ($a > $b)) {\n    return $c\
    \ * a * 0.5;\n  }\n  // check area of triangle is less than first side\n  if (($a\
    \ < $c) && ($a < $b) && ($b < $c)) {\n    return $a * c * 0.5;\n  }\n  // check\
    \ area of triangle is less than second side\n  if (($b < $a) && ($b < $c) && ($c\
    \ < $a)) {", "    if($a + $b > $c) {\n        return -1;\n    }\n    $area = $a\
    \ * $b;\n    $area += $a * $c;\n    $area -= $b * $c;\n    return round($area,\
    \ 2);\n}", "\t\n\t// Check if all sides are positive.\n\tif($a <= 0 || $b <= 0\
    \ || $c <= 0){\n\t\treturn -1;\n\t}\n\t\n\t// If the sum of any two sides is greater\
    \ than the third, return -1.\n\t// Example:\n\t// >>> triangle_area(3, 4, 5)\n\
    \t// 6.0\n\t// >>> triangle_area(1, 2, 10)\n\t// -1\n\tif((($a + $b <= $c) &&\
    \ ($a <= $c + $b)) || (($a + $b <= $c) && ($b <= $c + $a))){\n\t\treturn -1;\n\
    \t}\n\t\n\t// If the sum of two sides is equal to the third, return the area rounded\
    \ to two decimal points.\n\t// Example:\n\t// >>> triangle_area(3, 4, 5)\n\t//\
    \ 6.0\n\t// >>> triangle_area(1, 2, 10)\n\t// 6\n\tif(($a + $b == $c)){\n\t\t\
    return round(($a + $b), 2);\n\t}\n\t\n\t// Otherwise, calculate the area.\n\t\
    return round(($a + $b + $c) / 2, 2);\n}\n", "    $s = $a + $b + $c;\n    if ($s\
    \ % 2 == 0) {\n        $s = sqrt($s);\n        if ($s <= 1.0) {\n            return\
    \ round($s * ($b / $a), 2);\n        }\n    }\n    return -1;\n}\n", "    // If\
    \ the sum of the two sides is greater than the third side then \n    // the triangle\
    \ is invalid \n    if ($a + $b > $c) {\n        return -1;\n    }\n    // Calculate\
    \ the area of the triangle by dividing the sum of all sides by the total \n  \
    \  // of the three sides\n    $area = $a * $c / 2 + $b * $c / 2;\n    return round($area);\n\
    }\n", "    $area = $a * $c - ($a * $b + $c * $a);\n    if ($area < 0) {\n    \
    \    return -1;\n    } else {\n        return round($area, 2);\n    }\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThank you. Yes, this is what I was looking for.\n\
    <|/ c |>\n<| a dscore=0 |>\nThe best way is to use pythagorean theorem.\nFor a\
    \ triangle you can use the formula\n\nwhere a,b,c are lengths of sides of the\
    \ triangle. If you want to find area of the triangle you can use the formula\n\
    \nYou can find formulas of all triangle in wiki\n<|/ a tags=php |>\n<| c |>\n\
    `pythagorean theorem` is for calculating `Area` of the triangle, not `Perimeter`\n\
    <|/ c |>\n<| a dscore=0 |>\nThis is one of the many many solutions I have found\
    \ online. It works perfectly fine for me. \n<code>", "    \n    // Return 0 if\
    \ any parameter is 0\n    if ($a == 0 || $b == 0 || $c == 0) {\n        return\
    \ 0;\n    }\n    \n    // If the area is 0 the triangle is invalid\n    if ($a\
    \ == 0 && $b == 0 && $c == 0) {\n        return -1;\n    }\n    \n    // Calculate\
    \ the length of each side\n    $a = abs($a);\n    $b = abs($b);\n    $c = abs($c);\n\
    \    \n    // Find the area of the triangle\n    $s = ($a + $b + $c) / 2;\n  \
    \  \n    // If the area is valid triangle area then return area rounded to 2 decimal\
    \ points\n    if ($s > 0 && $a == $b) {\n        return $s + ($s * ($s / 3));\n\
    \    }\n    \n    if ($s > 0 && $a == $c) {\n        return $s + ($s * ($s / 2));\n\
    \    }\n    \n    if ($s > 0 && $b == $c) {\n        return $s + ($s * ($s / 2));\n\
    \    }\n    \n    // Otherwise, return -1\n    return -1;\n}", "    $ab = $a +\
    \ $b;\n    $cd = $c + $d;\n    $bd = 3 * ($a + $b + $c);\n    $cd = $cd - $bd;\n\
    \    if ($ab >= $cd) {\n        $a++;\n        $b--;\n        $c--;\n        $ab\
    \ = $a + $b;\n        $cd = $c + $d;\n    }\n    if ($b > $c) {\n        $b--;\n\
    \    }\n    $area = 3 * ($a * $b + $b * $c);\n    if ($area == 0) {\n        return\
    \ -1;\n    }\n    return $area / 2;\n}\n", "    $b2 = $a * $b;\n    $c2 = $c *\
    \ $c;\n    if ($a == 0 || $b == 0 || $c == 0 || $b2 == 0 || $c2 == 0 || ($a !=\
    \ 0 && $b != 0 && ($c != 0 || $a != $b)) || ($a != 0 && $c != 0 && ($b != 0 ||\
    \ $a != $c)) || ($a != 0 && $b != 0 && $c != 0 && ($a != $b || $a != $c))) return\
    \ -1;\n    return ($a / $b) * ($c / $b);\n}\n", "    if ($a + $b <= $c) {\n  \
    \      $x = ($a + $c) / 2;\n        $area = ($x * $x) + ($y * $y);\n        return\
    \ round(sqrt($area), 2);\n    }\n    return -1;\n}\n", "  if ($a + $b > $c) {\n\
    \    return $c;\n  }\n  return $a + $b - $c;\n}\n", "  $d = ($a + $b + $c) / 2;\n\
    \  \n  if ($d == $a + $b) \n    return $a * $b;\n  elseif ($d == $c + $a)\n  \
    \  return $c * $a;\n  elseif ($d == $b + $c)\n    return $a * $c;\n  else\n  \
    \  return -1;\n}", "    if ($a + $b > $c) {\n        $d = $a - $c;\n        $f\
    \ = $b - $c;\n        $g = -$a;\n        $h = $b + $c;\n    } else {\n       \
    \ $d = $a - $c;\n        $f = $b;\n        $g = $c;\n        $h = $a + $c;\n \
    \   }\n    $i = $a * $g + $b * $f + $c * $d;\n    if ($i == 0) {\n        return\
    \ 0;\n    }\n    $j = sqrt(($a * $a + $b * b + $c * $c));\n    return round($i\
    \ / $j, 2);\n}\n</code>\n<|/ a |>\n<| c |>\nThis is a good solution. I added a\
    \ check to make sure that the area is positive. If not, return -1. Also, you forgot\
    \ to subtract a from each side in the calculation of the third side.\n<|/ c |>\n\
    <| c |>\nThis also worked for me but i had to remove the \"- \" from $a to make\
    \ it work. Thanks !\n<|/ c |>\n<| c |>\nYeah, I noticed that and fixed it as well.\
    \ Thanks again!\n<|/ c |>\n<| a dscore=3 |>\nI suggest using the algorithm from\
    \ this page:\nhttp://www.mathsisfun.com/geometry/area-rectangle-triangle_5.html\
    \ \nThis page was the first result when I Googled \"triangle area in C#\" and\
    \ it seems to work well:\nhttp://www.codeproject.com/KB/cs/TriangleArea.aspx\n\
    The result isn't in C#, but you should be able to translate the code fairly easily.\n\
    <|/ a tags=math,geometry,algorithm,php |>\n<| a tags=math,geometry,algorithm,php\
    \ |>\nFor those who wants to calculate triangle's area in PHP there is a simple\
    \ solution:\n<code>\n<?php", "    $s = $a + $b + $c;\n    if ($s > 0) {\n    \
    \    $area = $s * ($a + $b - $c) / 2;\n        if ($area >= $c) {\n          \
    \  return round($area, 2);\n        } else {\n            return -1;\n       \
    \ }\n    }\n    return -1;\n}\n", "    $area = $a * $c / 2;\n    if ($a + $b >\
    \ $c) {\n        $area = $area;\n    } else {\n        $area = $area + ($a + $b)\
    \ * triangle_area($b, $c - $b, $c);\n    }\n    return round($area, 2);\n}", " \
    \ // Your code here\n  $a = round($a * 100, 2);\n  $b = round($b * 100, 2);\n\
    \  $c = round($c * 100, 2);\n\n  if ($a + $b > $c) {\n    echo '-1';\n  } else\
    \ {\n    echo '$a * b';\n  }\n}\n", "    if ($a + $b > $c) {\n        // a is\
    \ greater than or equal to b\n        // b is greater than c\n        // so we're\
    \ on a \"valid triangle\"\n        // and we can round the area up to 2 digits\n\
    \        return round(($a + $b - $c) / 2);\n    } else {\n        // b is greater\
    \ than or equal to c\n        // so c is greater than b\n        // so we're on\
    \ a \"valid triangle\"\n        // and we can round the area up to 2 digits\n\
    \        return round(($b - $c - $a) / 2);\n    }\n}\n", "    $s = $a + $b + $c;\n\
    \    if($s > $c) {\n        return -1;\n    }\n    return round($s/2);\n}\n",
  "    if ($a + $b + $c > $c) {\n        return -1;\n    }\n    else {\n        return\
    \ (float)$a * b * 0.5;\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ so much for your answer. I will check your code with my code and get back to\
    \ you.\n<|/ c |>\n<| c |>\nIt doesn't work. When I run the script in IDLE it shows\
    \ SyntaxError: invalid syntax on line 11 and line 12 are underlined. Does it mean\
    \ the syntax is not supported in IDLE?\n<|/ c |>\n<| c |>\nYes, the syntax is\
    \ not supported in IDLE. Just run it on your web server.\n<|/ c |>\n<| a tags=php,function\
    \ |>\n<code>", "    if ($a + $b > $c) {\n        return $c * ($a + $b - $c) /\
    \ ($b * $c);\n    } else {\n        return -1;\n    }\n}", "    // Write your\
    \ code here\n    if($a + $b > $c) {\n        return triangle_area($b, $a, $c);\n\
    \    }\n    if($a + $c > $b) {\n        return triangle_area($a, $c, $b);\n  \
    \  }\n    if($c + $b > $a) {\n        return triangle_area($b, $c, $a);\n    }\n\
    \    if($c + $a > $b) {\n        return triangle_area($a, $b, $c);\n    }\n  \
    \  else {\n        return -1;\n    }\n}", "\tif ($a + $b > $c) {\n\t\treturn ($a\
    \ + $b - $c) * 0.5;\n\t}\n\treturn -1;\n}\n", "    $a1 = $a * $a;\n    $b1 = $b\
    \ * $b;\n    $c1 = $c * $c;\n\n    // area of a triangle if both sides are greater\
    \ than third side\n    if ($b1 > $c1) {\n        return ($a1 + $b1) / 2;\n   \
    \ }\n    // area of a triangle if only a side is greater than third side\n   \
    \ else if ($a1 > $c1) {\n        return ($a1 + $c1) / 2;\n    }\n    // area of\
    \ a triangle if only a side is less than third side\n    else {\n        return\
    \ -1;\n    }\n}\n", "    if ($a + $b > $c) {\n        return -1;\n    }\n    $area\
    \ = $a * $b;\n    if ($b * $c + $area > $a) {\n        $area -= $c * $a;\n   \
    \ }\n    return round($area / 2, 2);\n}\n</code>\n<|/ a tags=area,math,php |>\n\
    <| c |>\nA little confused by this answer. I don't see how this gets the area\
    \ of the triangle given the lengths of each side.\n<|/ c |>\n<| c |>\nI guess\
    \ this gets the area of a triangle given the lengths of the three sides.\n<|/\
    \ c |>\n<| c |>\nI'm confused about how this would work. This doesn't seem to\
    \ be valid php code. This might be my error, but I'm not sure what the `triangle_area()`\
    \ function is doing.\n<|/ c |>\n<| c |>\n, What are you using? I just copied this\
    \ and used it on a php file and it worked.\n<|/ c |>\n<| c |>\n, He said that\
    \ the length were given\n<|/ c |>\n<| a dscore=3 |>\n<code>\n<?php", "    if ($a\
    \ + $b <= $c) {\n        $x = $a * $c / $b;\n        $y = $b * $c / $a;\n    }\
    \ else {\n        $x = $c * $a / $b;\n        $y = $b * $a / $c;\n    }\n    return\
    \ round($x * $y);\n}\n", "    $area_of_triangle = ($a + $c + $b) / 2;\n    if\
    \ ($area_of_triangle < 0) {\n        return -1;\n    }\n    if ($area_of_triangle\
    \ > 1) {\n        return 1;\n    }\n    return round($area_of_triangle, 2);\n\
    }\n", "    return ($a + $b + $c) / 2;\n}\n\n$number1 = 12;\n$number2 = 8;\n$number3\
    \ = 35;\n\necho 'Calculating triangle area for '.$number1.', '.$number2.', '.$number3.'...';\n\
    $answer = triangle_area($number1, $number2, $number3);\n", "    if ($a + $b >\
    \ $c || $a + $c > $b || $b + $c > $a) {\n        return -1;\n    }\n    $s = (1\
    \ + sqrt(($a * $a) + ($b * $b) + ($c * $c))) / 2;\n    return round($s);\n}\n",
  "    return $a + $b + $c >= $c ? ($a + $c + $b) / 2 : -1;\n}", "    $area = 0;\n\
    \    if ($a + $b > $c) {\n        $area = abs(($a + $b) - $c) / 2;\n    } elseif\
    \ ($a + $c > $b) {\n        $area = abs(($a + $c) - $b) / 2;\n    } else {\n \
    \       $area = abs($a - $b) / 2;\n    }\n    return $area;\n}\n", "    return\
    \ $a + $b * $c > $c ? round($a + $b * $c * 0.8660254, 2) : -1;\n}\n", "\tif((is_numeric($a)\
    \ && is_numeric($b) && is_numeric($c)) || (is_numeric($a) && is_numeric($c) &&\
    \ is_numeric($b))) {\n\t\t$a = is_numeric($a) ? $a : 0;\n\t\t$b = is_numeric($b)\
    \ ? $b : 0;\n\t\t$c = is_numeric($c) ? $c : 0;\n\t\t$ab_sum = $a + $b;\n\t\t$c_sum\
    \ = $c + $ab_sum;\n\t\t$b_sum = $b + $c;\n\t\t$ab_sum2 = $ab_sum * $ab_sum;\n\t\
    \t$c_sum2 = $c_sum * $c_sum;\n\t\t$a_sum2 = $a_sum * $a_sum;\n\t\t$c_sum3 = $c_sum\
    \ * $c_sum;\n\t\t$a_sum3 = $a_sum * $a_sum;\n\t\t$b_sum3 = $b_sum * $b_sum;\n\t\
    \t$ab_sum3 = $ab_sum * $ab_sum;\n\t\t$result = $ab_sum3 / $c_sum3;\n\t\tif($a_sum2\
    \ >= $c_sum2) {\n\t\t\tif($a_sum3 >= $b_sum3) {\n\t\t\t\t$result = sqrt($result\
    \ + $result + $result);\n\t\t\t} else {\n\t\t\t\t$result = sqrt($result - $result\
    \ + $result);\n\t\t\t}\n\t\t} else {\n\t\t\tif($c_sum3 >= $a_sum3) {\n\t\t\t\t\
    $result = sqrt($result - $result + $result);\n\t\t\t} else {\n\t\t\t\t$result\
    \ = sqrt($result + $result + $result);\n\t\t\t}\n\t\t}\n\t\treturn round($result,\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n", "    $s = $a + $b + $c;\n    if\
    \ ($s > 0 && $s % 2 == 0) {\n        return $s / 2 * sqrt(pow( (($b - $c) / 2),\
    \ 2) + (($c - $a) / 2) );\n    } else {\n        return -1;\n    }\n}\n", "  \
    \  $area = 0;\n    if ($a + $b > $c) {\n        $area = $a + $b * 2;\n    } else\
    \ {\n        $area = $c * 2;\n    }\n    return round($area, 2);\n}", "    $s\
    \ = $a + $b + $c;\n    return ($s * ($s - $a) * ($s - $b) * ($s - $c)) < 0 ? -1\
    \ / 0.000001 : ($s * $s / 2);\n}\n</code>\n<|/ a |>\n<| c |>\nThis is great, thank\
    \ you. How would you modify it to work with a larger set of points?\n<|/ c |>\n\
    <| c |>\nJust add the 3 points with their respective lengths and sum in the function\
    \ `triangle_area`\n<|/ c |>\n<| a dscore=3 tags=geometry,php |>\nIn case anybody\
    \ is still looking for an answer to this question, I found an easier way to solve\
    \ it using the Pythagorean Theorem.\n<code>\n<?php\n", "    $bc = $b * $c;\n \
    \   $ab = $a * $b;\n    if ($ab > $bc) {\n        return -1; // not a valid triangle\n\
    \    }\n    return round($ab / $bc * 100);\n}", "    $s = (a + b + c) / 2;\n\n\
    \    if ( (($a + $b) > $c) && (($a + $c) > $b) && (($b + $c) > $a) ) {\n     \
    \   return $s;\n    } else {\n        return -1;\n    }\n}\n", "    $s = (a +\
    \ b + c) / 2;\n    if ($a > $b) {\n        if ($a > $c) {\n            return\
    \ $s;\n        } else {\n            return -1 * $s;\n        }\n    } else {\n\
    \        if ($b > $c) {\n            return -1 * $s;\n        } else {\n     \
    \       return $s;\n        }\n    }\n}\n", "    $sum = $a + $b + $c;\n    $sides\
    \ = $a + $b + $c;\n    $one = floatval($a / $sides);\n    $two = floatval($b /\
    \ $sides);\n    $three = floatval($c / $sides);\n    if ($sum / 2 == $sides) {\n\
    \        return round(sqrt($one * $two * $three), 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    // Valid if each side is >= 0\n    if ($a <= 0 || $b\
    \ <= 0 || $c <= 0) {\n        return -1;\n    }\n    // Valid if each side is\
    \ > 0\n    if ($a + b > c) {\n        return -1;\n    }\n    if ($a + c > b) {\n\
    \        return -1;\n    }\n    if ($b + c > a) {\n        return -1;\n    }\n\
    \    // Calculate area of triangle by Heron's formula\n    $s = (a + b + c) /\
    \ 2;\n    $area = sqrt((((($s * ($s * ($s - 2))) / 2) * (((($s - 1) * ($s - 1))\
    \ / 2))) / 2);\n    return round($area, 2);\n}\n", "    $d = ( ($a + $b) - ($c\
    \ + $a) );\n    $h = ($a + $b + $c);\n    if ($d < 0)\n        return -1;\n  \
    \  if ($h > 0)\n        return round( (($d / $h) * 100), 2);\n    else\n     \
    \   return -1;\n}\n</code>\nThe above function would have solved your problem.\
    \ \nYou were using nested functions which is not possible in PHP. I believe that\
    \ you are a beginner programmer. Nested functions were a feature added in PHP\
    \ 5.3.0 and I believe you already know what was the use cases for using them.\
    \ \nIf you really want to use nested functions then you can still have access\
    \ to your variables without using global keyword. \n<code>", "    $d = ($a + $b\
    \ + $c) / 2.0;\n    $area = sqrt(pow($a, 2) + pow($b, 2) + pow($c, 2)) * abs($d\
    \ - $a + $b - $c);\n    return round($area, 2);\n}\n", "    $a_b = $a + $b\n \
    \   $c_d = $c + $d\n    if($a_b > $c_d) {\n        return ($a + $b + $c) / 2\n\
    \    } else {\n        return -1\n    }\n}\n", "\treturn round($a / $b / $c, 2);\n\
    }\n", "    $l = ($a + $b + $c) / 2.0;\n    return $l * $l;\n}\n", "  if ($a +\
    \ $b + $c < 6) {\n    return -1;\n  }\n  return $a + $b + $c - (($a + $c + $b)\
    \ * 0.5);\n}\n", "    if ($a + $b > $c) {\n        $a = $a - $c;\n        $b =\
    \ $b - $c;\n        $c = $c - $a;\n        return ($b * $b) / (4 * $a);\n    }\n\
    \    return -1;\n}\n\n$a = 3;\n$b = 4;\n$c = 5;\n\n$triangle = triangle_area($a,\
    \ $b, $c);\n\nprintf(\"The area of the triangle is $triangle\");\n</code>\n<|/\
    \ a tags=php |>\n<| c |>\nWhy would you do this? The solution that is listed here\
    \ has way more straightforward code.\n<|/ c |>\n<| c |>\nThis is not correct.\
    \ It returns negative numbers for invalid triangles.\n<|/ c |>\n<| c |>\nPlease\
    \ add an explanation to your answer.\n<|/ c |>\n<| a dscore=4 |>\nI made an algorithm\
    \ to calculate the area of a triangle and now I know the code is not easy to understand.\n\
    <code>", "    // Return an error message if the inputs are invalid\n    // If\
    \ the sum is greater than the third side, then it's not valid\n    if ($a + $b\
    \ > $c) {\n        return -1;\n    }\n    // If the sum is equal to the third\
    \ side, then the triangle is valid \n    if ($a + $b == $c) {\n        return\
    \ $a * $b;\n    }\n    // If the sum is less than the third side, divide the sum\
    \ and \n    // the third side by the sum\n    $bc = $a + ($b / $c);\n    $ad =\
    \ $b - ($c / $a);\n    return round($ad * $bc);\n}", "\t$a = $a==0 ? 0 : abs($a);\n\
    \t$b = $b==0 ? 0 : abs($b);\n\t$c = $c==0 ? 0 : abs($c);\n\t$d = $a + $b + $c;\n\
    \tif ($a <= $b) { \n\t\tif ($a <= $c) {\n\t\t\treturn round(($a + $b + $c) / 2,\
    \ 2);\n\t\t} else {\n\t\t\treturn round(($a + $c) / 2, 2);\n\t\t}\n\t} else if\
    \ ($b <= $c) {\n\t\treturn round(($b + $c) / 2, 2);\n\t} else {\n\t\treturn round($c\
    \ / 2, 2);\n\t}\n}", "\t$triangle = $a + $b + $c;\n\t$divisor = $a + $b - $c;\n\
    \tif ($triangle < 0) {\n\t\t$divisor = $b + $c - $a;\n\t\t$triangle = $c * $a\
    \ + $b * $c;\n\t}\n\tif ($divisor < 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn\
    \ round($triangle, 2);\n\t}\n}\n", "    // Write your code here.\n    if ($a +\
    \ $b > $c) {\n        return round($a * b * .3);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    $sum_of_sides = $a + $b + $c;\n    $area = ($a * ($a\
    \ + $b)) / 2;\n    if ($sum_of_sides > $c) {\n        $area = $c / $sum_of_sides;\n\
    \    }\n    return round($area, 2);\n}\n", "    $area = sqrt(($a*$b)*($a*$c)+($b*$c)*($b*$a)-($c*$c)*($a*$a));\n\
    \    return $area > 0 ? round($area/$a, 2) : -1; \n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nThank you for sharing your solution!\n<|/ c |>\n<| c |>\nThe only thing\
    \ I'd suggest would be to return `NaN` rather than a hard-coded `-1` since that\
    \ would signal an error to any other code that assumes a valid triangle.\n<|/\
    \ c |>\n<| c |>\n`return $area > 0 ? round($area/$a, 2) : NaN;` - this will allow\
    \ you to use this logic in an `if` statement.\n<|/ c |>\n<| a |>\nI haven't gotten\
    \ an answer to this question yet, so I thought I'd share what I came up with using\
    \ recursion. \n<code>", "    $area = sqrt(($b*$b) + ($c*$c));\n    if ($area >=\
    \ 0) {\n        return round($area, 2);\n    } else {\n        return -1;\n  \
    \  }\n}", "    // Your code here\n    $a = round($a, 2);\n    $b = round($b, 2);\n\
    \    $c = round($c, 2);\n    return ($a + $b + $c) > 3 ? -1 : ($a * $a) + ($b\
    \ * $b) + ($c * $c) / 2;\n}\n", "    if ($a + $b > $c) {\n        return round($a\
    \ * $c / $b - $c * $b / $a, 2);\n    } else {\n        return -1;\n    }\n}\n",
  "    // Calculate the area\n    $area = sqrt(($a * $a) + ($b * $b) + ($c * $c));\n\
    \    \n    // Round it to two decimal points\n    return round($area, 2);\n}\n",
  "    $d = ($a + $b + $c) / 2;\n    if ($d >= $a + $b && $d >= $a + $c && $d >= $b\
    \ + $c) {\n        return round($d, 2);\n    }\n    return -1;\n}\n", "    $s\
    \ = $a + $b + $c;\n    if ($s > $c) {\n        return -1;\n    } else {\n    \
    \    return round($s/2);\n    }\n}\n", "    $a_b = $a + $b\n    $b_c = $b + $c\n\
    \    $c_a = $c + $a\n    return round(($a_b + $b_c + $c_a) / 2, 2);\n}\n", " \
    \ return round((((($a + $b) * ($a + $c)) - (($a + $c) * ($b + $c))) / 2), 2);\n\
    }\n", "    $area_a = $a * $a;\n    $area_b = $b * $b;\n    $area_c = $c * $c;\n\
    \    $area_ab = $area_a + $area_b;\n    $area_ac = $area_a + $area_c;\n    $area_ba\
    \ = $area_b + $area_a;\n    $area_ca = $area_c + $area_a;\n    $area_abc = $area_ab\
    \ + $area_ac;\n    $area_abcd = $area_ba * $area_ca;\n    $area_abcde = $area_abcd\
    \ * $area_abc;\n    $area_abcdef = $area_abcde * $area_ab;\n    if($area_abcde\
    \ > 0){\n        $area_tri = ($area_abcd * $area_abcde) / $area_abcdef;\n    \
    \    return round($area_tri, 2);\n    }else{\n        return -1;\n    }\n}\n",
  "\tif(($a + $c) <= ($b + $c)) {\n\t\treturn ($a + $b) * ($c + $b);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}", "    $a = floatval($a);\n    $b = floatval($b);\n   \
    \ $c = floatval($c);\n\n    $s = (a + b + c) / 2.0;\n    if ($a >= $b && $a >=\
    \ $c && $a >= $s) {\n        return $a;\n    }\n    if ($b >= $a && $b >= $c &&\
    \ $b >= $s) {\n        return $b;\n    }\n    if ($c >= $a && $c >= $b && $c >=\
    \ $s) {\n        return $c;\n    }\n    return -1;\n}\n", "    $area = ($b * $c)\
    \ - ($a * $c);\n    if ($area < 0) {\n        return -1;\n    }\n    return round($area,\
    \ 2);\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    if ($a +\
    \ $b > $c) {\n        $a = $b;\n    }\n    if ($b + $c > $a) {\n        $b = $c;\n\
    \    }\n    if ($c + $a > $b) {\n        $c = $a;\n    }\n    return ((($a + $b)\
    \ / 2) * (($b + $c) / 2)) * (($c + $a) / 2);\n}", "    if($a + $b > $c) {\n  \
    \      $tri = $a + $b - $c;\n        $area = $tri * $tri;\n    } else {\n    \
    \    return -1;\n    }\n    return round($area, 2);\n}\n", "  $area_a = abs($a\
    \ - $c);\n  $area_b = abs($b - $c);\n  $area_c = abs($c - $a); \n\n  if ($area_a\
    \ + $area_b > $area_c) {\n    $triangle = $area_a / $area_b;\n    return round($triangle,\
    \ 2);\n  } else {\n    $triangle = $area_c / $area_a;\n    return round($triangle,\
    \ 2);\n  }\n}", "    $area_triangle = pow($b, 2.0) + pow($c, 2.0);\n    if ($area_triangle\
    \ >= $a * $c) {\n        return round($area_triangle / ($a * $a), 2);\n    } else\
    \ {\n        return -1;\n    }\n}\n", "\t$ab = $a + $b;\n\t$ac = $a + $c;\n\t\
    $bc = $b + $c;\n\tif ($ab > $ac && $ab > $bc && $ab > 0) {\n\t\treturn round(($ab\
    \ * $c) / $ab, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n", "    if ($a + $b >\
    \ $c) {\n        $r = $a + $b - $c;\n        $area = round($r*($r*($c-$r)/4),\
    \ 2);\n    } else {\n        $area = -1;\n    }\n    return $area;\n}\n</code>\n\
    <|/ a |>\n<| a tags=php,geometry |>\n<code>\nclass Triangle{\n    public $lengthOfSide1=null;\n\
    \    public $lengthOfSide2=null;\n    public $lengthOfSide3=null;\n    public\
    \ $areaOfTriangle=null;\n\n    public function setSideLength($a,$b,$c){\n    \
    \    $this->lengthOfSide1=abs($a); $this->lengthOfSide2=abs($b); $this->lengthOfSide3=abs($c);\n\
    \    }\n    public function getArea(){\n        $this->areaOfTriangle=$this->lengthOfSide1*$this->lengthOfSide2*($this->lengthOfSide1*$this->lengthOfSide2-$this->lengthOfSide3*$this->lengthOfSide3)/2;\n\
    \        return $this->areaOfTriangle;\n    }\n\n}\n\n$triangle=new Triangle();\n\
    $triangle->setSideLength(3,4,5);\n\necho $triangle->areaOfTriangle;\n</code>\n\
    <|/ a dscore=4 |>\n<| c |>\nWhat do you think about the `abs($a)` ?\n<|/ c |>\n\
    <| c |>\nIt will work because abs($a) will get absolute value of $a and return\
    \ that value\n<|/ c |>\n<| c |>\nI think you should use abs($a) - abs($b) instead\
    \ of abs($a)*abs($a) - abs($a)*abs($b). It seems that this is the more straight\
    \ forward way of calculating area of a triangle\n<|/ c |>\n<| c |>\nI think you\
    \ mean `abs($a)*abs($b)` (no need for the `abs()` calls on each side).\n<|/ c\
    \ |>\n<| c |>\n: No, `abs($a) * abs($b)` is still incorrect. The correct area\
    \ of an equilateral triangle is `sqrt(3) / 2`, not `sqrt(3) * 0.5`. See [here](https://math.stackexchange.com/questions/137957/what-is-the-correct-formula-to-calculate-the-area-of-an-equilateral-triangle).\n\
    <|/ c |>\n<| a dscore=4 |>\n<code>\n$length = sqrt(pow($a,2) + pow($b,2) + pow($c,2));\n\
    $area= $length / 2; \n</code>\n<|/ a tags=php,geometry |>\n<| a |>\nTry this:\n\
    <code>\n$a = 3", "\t$s = $a + $b + $c;\n\tif ($s <= 0) return -1;\n\treturn $s\
    \ / 2.0;\n}\n", "\t$sum = $a + $b + $c;\n\tif ($sum >= $c) {\n\t\treturn round($sum\
    \ / 2, 2);\n\t}\n\treturn -1;\n}\n", "    \n    if ($a + $b > $c) {\n        $total\
    \ = $a + $b;\n        $other = $c - $b;\n        $valid = $total > $other;\n \
    \   } else {\n        $total = $a + $c;\n        $other = $b - $c;\n        $valid\
    \ = $total > $other;\n    }\n    \n    if ($valid == true) {\n        $area =\
    \ round(($total * $other) / 2.0);\n    } else {\n        $area = -1;\n    }\n\
    \    \n    return $area;\n}\n</code>\nNow the area function can return the area\
    \ or -1 if all 3 sides are equal. So we can write a function which takes 3 arguments,\
    \ and returns the area of a triangle if it has 3 sides or -1 if all 3 sides are\
    \ equal:\n<code>", "  $s = $b * $c;\n  if ($a > $b) {\n    $s = $s * $a;\n   \
    \ if ($a > $c) {\n      $s = $s * $c;\n    }\n  }\n  return round($s) / ($b *\
    \ $a);\n}\n</code>\n<|/ a tags=php,function,math |>\n<| c |>\nHow would this work\
    \ with $a = 3, $b = 4, and $c = 5? Or does this work only for $a = 3 and $c =\
    \ 5?\n<|/ c |>\n<| c |>\nYes, this code should work with any positive integer\
    \ for any positive number of sides and any side.\n<|/ c |>\n<| a tags=php,function,math\
    \ dscore=4 |>\nHere is a javascript code with php code as below\n<code>", "  $area_of_triangle\
    \ = abs(($a + $b + $c) *0.33333333);\n  $area_of_triangle = round($area_of_triangle,\
    \ 2);\n  if ($area_of_triangle >= $a + $b + $c) {\n    return $area_of_triangle;\n\
    \  } else {\n    return -1;\n  }\n}\n", "    $area = sqrt(($a * $a) + ($b * $b)\
    \ + ($c * $c));\n    return round($area, 2);\n}\n", "    $area = $a + $b + $c;\n\
    \    $triangle = ($a + $b > $c);\n    if($triangle == true) {\n        return\
    \ round($area/2, 2);\n    }\n    return -1;\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ c |>\nThe area of the triangle is not rounded to two decimal places.\n<|/ c\
    \ |>\n<| c |>\nThis is an example, I gave it a go and it does return the area\
    \ rounded to two decimal points. If you try it out, you'll see the output.\n<|/\
    \ c |>\n<| c |>\nIt gives me the area of the triangle not the area of it's rectangle\n\
    <|/ c |>\n<| c |>\nAh, now I see what you're trying to do. Let me have a crack\
    \ at it.\n<|/ c |>\n<| c |>\nI've updated my answer. I hope this helps you.\n\
    <|/ c |>\n<| a |>\nThis may not be the best answer but it works:\n<code>\npublic\
    \ function AreaOfTriangle() {\n    $sides = array();\n    $sides[0] = $this->sideA;\n\
    \    $sides[1] = $this->sideB;\n    $sides[2] = $this->sideC;\n\n    $length =\
    \ sqrt(pow($sides[0],2) + pow($sides[1],2));\n    if ($length == 0)\n        return\
    \ 0;\n\n    $width = sqrt(pow($sides[0],2) + pow($sides[2],2));\n    if ($width\
    \ == 0)\n        return 0;\n\n    $length = sqrt(pow($sides[1],2) + pow($sides[2],2));\n\
    \    if ($length == 0)\n        return 0;\n\n    $area = $length*$width;\n   \
    \ if ($area != 0)\n        return round($area/2);\n    return -1;\n}\n</code>\n\
    <|/ a dscore=1 tags=php,math |>\n<| c |>\nYou should check if the two triangle\
    \ sides are equals, otherwise you will have a division by zero exception.\n<|/\
    \ c |>\n<| c |>\nThe method should be changed to get side lengths and area in\
    \ the form of an array. Then the area can be calculated simply by summing the\
    \ elements of the array. No need to check for individual sides.\n<|/ c |>\n<|\
    \ a dscore=1 |>\n<code>", "    // Add all the sides together to see if the sum\
    \ of any two sides is greater than the third side\n    $sum = $a + $b + $c;\n\n\
    \    if ($sum > $c) {\n        // If the sum of any two sides exceeds the third\
    \ side then return the area rounded down\n        return round(($sum - ($c + $b))\
    \ / 2, 2);\n    } else {\n        return -1;\n    }\n}", "    $a = abs($a);\n\
    \    $b = abs($b);\n    $c = abs($c);\n    $s = (a + b + c) / 2.0;\n\n    if ($s\
    \ <= (sqrt(pow(pow(max($a, $b), 2) + pow($a, 2), 2) + pow($b, 2) + pow($c, 2))\
    \ + 1)) {\n        return round(s * sqrt(pow(pow(max($a, $b), 2) + pow($a, 2),\
    \ 2) + pow($b, 2) + pow($c, 2)) + 1, 2);\n    }\n    return -1;\n}\n", "    //\
    \ If the sum of any two sides is greater than the third side, return -1\n    //\
    \ otherwise return the area of the triangle rounded to two decimal points\n  \
    \  if ($a + $b > $c) {\n        return -1;\n    } else {\n        // Else the\
    \ sum of the two sides is equal to the third side, return the area rounded to\
    \ two decimal points\n        return $a * $b / ($a + $b);\n    }\n}", "    $sum\
    \ = abs($a + $b + $c);\n    if ($sum < 4) return -1;\n    $s = ($a + $b - $c)\
    \ / 2;\n    return round($s * ($s * ($s + 1) / 2), 2);\n}\n", "    $ab = $a +\
    \ $b;\n    $bc = $b + $c;\n    $ac = $a + $c;\n    if ($ab > $bc && $ab > $ac)\
    \ {\n        return $ab * 0.5;\n    } elseif ($bc > $ab && $bc > $ac) {\n    \
    \    return $bc * 0.5;\n    } else {\n        return $ac * 0.5;\n    }\n}\n",
  "    $ab = $a + $b;\n    $bc = $b + $c;\n    $cb = $c + $b;\n    if ($ab > $cb &&\
    \ $ab > $bc) {\n        return round($ab / 2, 2);\n    }\n    if ($cb > $ab &&\
    \ $cb > $bc) {\n        return round($cb / 2, 2);\n    }\n    if ($bc > $ab &&\
    \ $bc > $cb) {\n        return round($bc / 2, 2);\n    }\n    return -1;\n}\n\
    </code>\n<|/ a tags=php,logical-operators |>\n<| c |>\nthis one really helped.\
    \ Thanks a lot\n<|/ c |>\n<| a |>\nUse ternary operator:\n<code>\n$area = (($a\
    \ + $b) + $c) > 0 ? round($a + $b + $c, 2) : -1;\n</code>\n<|/ a tags=php,logical-operators\
    \ dscore=3 |>\n<| a dscore=2 |>\n<code>\n<?php\n$side1 = $_POST['side1']; \n$side2\
    \ = $_POST['side2']; \n$side3 = $_POST['side3']; \n$total = $side1 + $side2 +\
    \ $side3;\n\nif($total == ($side1 + $side2 + $side3)){\n    $total = (round($side1\
    \ + $side2 + $side3,2));\n    echo \"$total is correct\";\n}\nelse\n{\n    echo\
    \ \"$total is incorrect\";\n}", "    $area = ($a + $b + $c) / 2;\n    return round($area);\n\
    }\n", "    $a_b = $a + $b;\n    $c_b = $c + $b;\n    if ($a_b >= $c_b) {\n   \
    \     return round($a_b / $c_b, 2);\n    } else {\n        return -1;\n    }\n\
    }\n", "    if ($a + $b > $c) {\n        return round(($a + $b - $c) * 100) / 100;\n\
    \    } else {\n        return -1;\n    }\n}\n</code>\n<|/ a tags=php dscore=1\
    \ |>\n<| c |>\nWhile this code snippet may solve the question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| a tags=php |>\nYou can test whether the angle is\
    \ between 0 - 180 and 180 - 90. With modulo you can test if it is between 0 -\
    \ 90, and if it is then check that the total is greater or equal to 180.\n<code>\n\
    $angle1 = 90; // Angle 1\n$angle2 = -90; // Angle 2\n\n$total = ($angle1 + $angle2)\
    \ % 360; // Total angle\n\nif ($total >= 0 && $total <= 180 && $total >= 180)\
    \ {\n    // Valid angle\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is almost\
    \ the right solution, however it misses the case where `$total` is `180`, as this\
    \ will evaluate to `true`, rather than `false`.\n<|/ c |>\n<| a tags=php |>\n\
    <code>\n<?php", "\t$s = $a + $b + $c;\n\t$area = $s * ($s - $a) * ($s - $b) *\
    \ ($s - $c);\n\treturn round($area, 2);\n}", "  $s = $a + $b + $c;\n  if ($s >\
    \ $c) {\n    return -1;\n  }\n  else if ($s == $c) {\n    return $a;\n  }\n  else\
    \ if ($s == $b) {\n    return $b;\n  }\n  else {\n    return $c;\n  }\n}\n", "\t\
    if ($a + $b > $c) {\n\t\treturn -1; // Not a triangle - not a right angle\n\t\
    } else {\n\t\treturn ($a + $b) * .5 / 2; // Area of triangle = .5*(a + b) + .5(c)\
    \ = .5(a*b + c*b)\n\t}\n}\n", "    $sum = $a + $b + $c;\n    if ($sum < $c) {\n\
    \        $sum = $sum - $c;\n        $a = ($a + $b) - $c;\n        $b = ($a + $c)\
    \ - $b;\n        $c = ($a + $b) - $c;\n    }\n    $area = 0.5 * $sum;\n    return\
    \ round($area, 2);\n}\n", "    $abs = abs($a + $b + $c);\n    $a = max( $a, $b\
    \ );\n    $b = max( $b, $c );\n    $c = max( $c, $abs );\n    $s = $a + $b + $c;\n\
    \    $s = max( $s, 0 );\n    $area = ($a + $s) * 0.5;\n    return $area;\n}\n",
  "  if ($a + $b > $c) {\n    return triangle_area($b, $c, $a);\n  }\n  return ($a\
    \ + $b + $c) * 0.5;\n}\n", "    $a = abs($a); $b = abs($b); $c = abs($c);\n  \
    \  if ($a <= $b && $a <= $c) {\n        $area = $a * ($b - $c) / 2.0;\n    }\n\
    \    else {\n        if ($b <= $c) {\n            $area = $b * ($c - $a) / 2.0;\n\
    \        }\n        else {\n            $area = 0.0; // No real solution exists\
    \ if one or both sides is 0.\n        }\n    }\n    return round($area,2);\n}\n",
  "    $valid = false;\n    if ($a + $b > $c) {\n        $valid = true;\n    }\n \
    \   if ($a + $c > $b) {\n        $valid = true;\n    }\n    if ($b + $c > $a)\
    \ {\n        $valid = true;\n    }\n    if ($valid) {\n        return round((((($a\
    \ * $c) - ($a * b)) + (($b * $c) - ($b * a))) / (2.0 * $c)) * 100.0) / 100.0;\n\
    \    }\n    return -1;\n}\n", "    $area = ($a + $b + $c) / 2;\n    if ($area\
    \ >= $a + $b * $c) {\n        return round( (($area * $a) / $b), 2);\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    $s = (a + b + c) / 2;\n    if ($s <\
    \ 0 || $s >= a) {\n        return -1;\n    } else {\n        return $s * (s -\
    \ a) * (s - b) * (s - c);\n    }\n}\n", "    $sides = $a + $b + $c;\n    $area\
    \ = $sides / 2;\n\n    if ($sides == ($a + $b + $c)) {\n        return $area;\n\
    \    }\n    return -1;\n}\n", "    return triangle_perimeter($a, $b, $c) / 2;\n\
    }\n", "    $sum = ($a + $b + $c);\n    if ($sum < 0)\n        return -1;\n   \
    \ else\n        return ($a + ($b - $c) * ($sum / 2));\n}\n", "    if ($a + $b\
    \ > $c) {\n        $length = $a + $c - $b;\n    } else {\n        $length = $b\
    \ + $c - $a;\n    }\n\n    return round($length / 2, 2);\n}", "\tif ($a + $b >\
    \ $c) {\n\t\treturn round($a * $c / $b) . \" \" . $b;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n}\n", "  if ($a + $b > $c) {\n    return $a + $b - $c;\n  }\n  else\
    \ {\n    return -1;\n  }\n}\n", "    $aLen = $bLen = $cLen = $aSqrd = $bSqrd =\
    \ $cSqrd = 0;\n    $sum = $a + $b + $c;\n    if ($sum < $c) {\n        return\
    \ -1;\n    }\n    $aSqrd = ($a >= 0) ? $a : $sum - $a;\n    $bSqrd = ($b >= 0)\
    \ ? $b : $sum - $b;\n    $cSqrd = ($c >= 0) ? $c : $sum - $c;\n    $aLen = ($aSqrd\
    \ >= 0) ? $aSqrd : $sum - $a;\n    $bLen = ($bSqrd >= 0) ? $bSqrd : $sum - $b;\n\
    \    $cLen = ($cSqrd >= 0) ? $cSqrd : $sum - $c;\n    return round($aLen + $bLen\
    \ + $cLen, 2);\n}", "\tif(($a + $b) > $c) {\n\t\t$area = round(($a + $b) * 0.5);\n\
    \t} else {\n\t\t$area = -1;\n\t}\n\treturn $area;\n}\n", "    $squareA = $b *\
    \ $b;\n    $squareB = $c * $c;\n    $squareC = $a * $c;\n    $squareTotal = $squareA\
    \ + $squareB + $squareC;\n\n    if ($squareTotal >= $b) {\n        return $squareA\
    \ * $c / $b;\n    }\n    else {\n        return -1;\n    }\n}", "    $x = $a +\
    \ $b + $c;\n    if ($a > $b && $a > $c) {\n        $a = $b;\n        $b = $c;\n\
    \        $c = $x;\n    }\n    if ($a > $b) {\n        return $a;\n    }\n    if\
    \ ($a > $c) {\n        return $c;\n    }\n    $c = $x;\n    return $b;\n}\n</code>\n\
    <|/ a dscore=3 tags=c,geometry,math,trigonometry |>\n<| c |>\nCan you explain\
    \ how you got this equation for `triangle_area`?  It doesn't seem to make any\
    \ sense to me...\n<|/ c |>\n<| c |>\nThis is probably the most concise solution.\
    \ It doesn't require any special math functions though, so it might perform better\
    \ than some of the other answers.\n<|/ c |>\n<| c |>\n: This is just the classic\
    \ formula for area of a triangle `Sqrt(a^2 + b^2 + c^2)`, but with a few simplifications.\
    \ It is possible to solve this formula without using the quadratic formula.\n\
    <|/ c |>\n<| c |>\nThat is how I learned it, but I remember it not being particularly\
    \ intuitive to me, so I took it on a few occasions. I still don't understand it\
    \ though. I can see how the formula makes sense, but how does it work out in practice?\n\
    <|/ c |>\n<| c |>\n: In general, it comes down to working out when an equation\
    \ will be solvable (a root). There are several reasonable methods for solving\
    \ one equation in three variables (i.e. three variables in one equation). Some\
    \ methods are more complicated than others, but they perform well.\n<|/ c |>\n\
    <| a tags=c,geometry,math,trigonometry dscore=3 |>\nIn Mathematica you can use\
    \ the following code to compute area of any triangle \n<code>\narea[triangle_vertices[x_,\
    \ triangle_vertices[y_, triangle_vertices[z_]], x]] := \n    Module[{a, b, c,\
    \ d, s, t, va, vb, vc, vd, vs, te, ti, \n        area_1, area_2, area_3},\n  \
    \  If[x \u2265 z, \n       area_1 = area[triangle_vertices[x, triangle_vertices[y,\
    \ triangle_vertices[z]]]]\n    ; If[x <= y && y <= z,\n       area_2 = area[triangle_vertices[y,\
    \ triangle_vertices[x, triangle_vertices[z]]]]", "\tif ($a + $b > $c) {\n\t\t\
    return round(($a + $b + $c) / 2, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n", " \
    \   if ($a + $b > $c) {\n        return $a + $b - $c;\n    }\n    return -1;\n\
    }\n", "    if ($a > $b && $a > $c) {\n        if ($b > $c) {\n            return\
    \ ($a + $b + $c) / 2;\n        } else {\n            return ($a + $c + $b) / 2;\n\
    \        }\n    }\n    if ($b > $c && $b > $a) {\n        if ($c > $a) {\n   \
    \         return ($b + $c + $a) / 2;\n        } else {\n            return ($b\
    \ + $a + $c) / 2;\n        }\n    }\n    if ($c > $a && $c > $b) {\n        return\
    \ ($c + $a + $b) / 2;\n    }\n    return -1;\n}\n", "\t$s = $a + $b + $c;\n\t\
    if ($s > 0) {\n\t\t$r = $s * ($s - $a) * ($s - $b) * ($s - $c);\n\t} else {\n\t\
    \t$r = -1;\n\t}\n\treturn round($r, 2);\n}", "    $square1 = $a * $a;\n    $square2\
    \ = $b * $b;\n    $square3 = $c * $c;\n    if ($square1 + $square2 + $square3\
    \ >= $square1 + $square2 - $square3) {\n        return round($a + ($b / $c), 2);\n\
    \    } else {\n        return -1;\n    }\n}", "    $triangleArea = 0;\n    $triangle_sides\
    \ = abs($a) + abs($b) + abs($c);\n    if($triangle_sides > 0) {\n        $triangleArea\
    \ = $triangle_sides * 0.5;\n    }\n    return round($triangleArea, 2);\n}", " \
    \   if ($a + $b + $c > $c) {\n        return -1;\n    } else {\n        return\
    \ round($a + $b + $c) / 2.0;\n    }\n}\n</code>\n<|/ a tags=php,algorithm dscore=4\
    \ |>\n<| c |>\nThe most elegant solution for this problem.  I used this one to\
    \ solve a problem with 3 different sized \"boxes\" within a \"container\" which\
    \ had to be equally sized.\n<|/ c |>\n<| a tags=php,algorithm dscore=4 |>\nHere's\
    \ another solution that I find more intuitive:\n<code>", "    $s = ($b+$c)-($a+$b);\n\
    \    if ( $s <= 0) { return -1; }\n    return round($s*$s/2, 2);\n}\n", "  $s\
    \ = $a + $b + $c;\n  $area_of_triangle = sqrt(($s * $s) - (($a * $c) - ($b * $a)));\n\
    \  return round($area_of_triangle, 2);\n}\n", "    $abs = abs($a - $b);\n    $bc\
    \ = abs($c - $b);\n    return ($abs + $bc + $bc) / 2;\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nHow can i apply this in my PHP code\n<|/ c |>\n<| c |>\nYou would\
    \ just copy the function, and call it where you need the area.\n<|/ c |>\n<| c\
    \ |>\nI did but i get error Fatal error: Call to undefined function triangle_area()\
    \ in C:\\xampp\\htdocs\\Test\\check1.php on line 8\n<|/ c |>\n<| c |>\nYou probably\
    \ didn't copy the code properly. Try copying the function into a file that is\
    \ called from the php file. If you're unsure how to do that, you should read about\
    \ [how to include files](http://www.php.net/manual/en/function.include.php). Also,\
    \ it won't work when you have more that one function defined in that same file,\
    \ so you'd have to put it in a separate file.\n<|/ c |>\n<| c |>\ni did the same\
    \ but still not working error Fatal error: Call to undefined function triangle_area()\
    \ in C:\\xampp\\htdocs\\Test\\check1.php on line 8\n<|/ c |>\n<| a dscore=2 |>\n\
    You can do that in one line using ternary operators, like this:\n<code>\n$area\
    \ = ((($a==$b)?$a * $b : (($b==$c)?$a * $c : -1)))/2;\n</code>\nThe ternary operators\
    \ basically return an expression if the condition they are used on is true, and\
    \ if the condition they are used on is false, then the value after the question\
    \ mark is returned.\nExample:\n<code>\n$a = 1\n$b = 1\n$c = 1\n$a = 1 // $a is\
    \ 1\n$a = ($a < $b) ? 1 : 0; // $a is now 1\n$a = ($a < $c) ? $a : 0; // $a is\
    \ now 0\n$a = ($a < 0) ? $a : -1; // $a is now -1\n$a = ($a < 0) ? 1 : -1; //\
    \ $a is now 1\n$a = ($a < 0) ? 1 : 0; // $a is now 1\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nhow can i do this if my variables are dynamic not like $a=1 and\
    \ $b=4 and $c=9 and etc\n<|/ c |>\n<| c |>\nyou just need to replace `$a`, `$b",
  "    $area_a = ($a + $b) * 0.5;\n    $area_b = ($c + $a) * 0.5;\n    $area_c = ($b\
    \ + $c) * 0.5;\n\n    if ($area_c > $area_a + $area_b) {\n        return $area_c;\n\
    \    } else {\n        return -1;\n    }\n}", "    return round($a / $b / $c,\
    \ 2);\n}\n", "    if($a > $b && $a > $c){\n        return round($a*($b*$c)/(($b+$c)/2),2);\n\
    \    }\n    if($b > $c && $b > $a){\n        return round($b*($a*$c)/(($b+$c)/2),2);\n\
    \    }\n    if($c > $a && $c > $b){\n        return round($c*($a*$b)/(($b+$a)/2),2);\n\
    \    }\n    return -1;\n}\n", "    $sum = $a + $b + $c;\n    return $sum >= $c\
    \ ? $sum / 2\n        : sqrt(\n            $sum * (\n                $a + $b\n\
    \            )\n        );\n}\n", "    $sum = abs($a + $b + $c);\n    if ($sum\
    \ > 0) {\n        return $sum / 2;\n    } else {\n        return -1;\n    }\n}",
  "    $sum = $a + $b + $c;\n    return ($sum > $c) ? -1 : ($sum - $c > $b ? $sum\
    \ - $c : $sum);\n}\n", "  if($a + $b > $c) {\n    return $c * 0.5;\n  } else {\n\
    \    return -1; // no area for the triangle\n  }\n}", "    if ($a + $b > $c) {\n\
    \        echo \"Error: invalid triangle sides a=$a b=$b c=$c\";\n    } else {\n\
    \        return round(($a + $b + $c) / 2);\n    }\n}", "    // base case\n   \
    \ if ($a < 0 || $b < 0 || $c < 0) {\n        return -1;\n    }\n    if ($a + $b\
    \ > $c) {\n        return ($a + $b - $c);\n    } else {\n        return $b * $c\
    \ / 2;\n    }\n}\n\n/**\n * Given the lengths of the three sides of a triangle.\
    \ Return the sum of the lengths of \n * each side.\n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n\
    \ * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n *\
    \ \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n", "    $a = max($a,\
    \ $b);\n    $c = max($c, $a);\n    $d = min($a, $c);\n    $e = min($b, $c);\n\
    \    $triangle = $a + $b + $c;\n    $is_triangle = $a + $b > $c;\n\n    if ($is_triangle\
    \ == false or $is_triangle == true) {\n        // $a <= $b and $a <= $c\n    \
    \    // $a <= $c or $b > $c\n        // $a <= $c or $b > $c\n        // $a > $b\
    \ and $a > $c\n        // $a > $c or $b > $c\n        // $a > $c or $b > $c\n\
    \        $area = $e * $d;\n    } else {\n        $area = -1; // invalid triangle\n\
    \    }\n    return round($area / $triangle, 2);\n}\n", "  // Ensure that all arguments\
    \ are integers\n  if (!is_numeric($a) || !is_numeric($b) || !is_numeric($c)) {\n\
    \    return -1;\n  }\n\n  // Calculate area of triangle\n  $area = $a * $b / ($a\
    \ * $a + $b * $b);\n\n  // Validate that all three sides are greater than zero\n\
    \  if (!is_numeric($area)) {\n    return -1;\n  }\n\n  // Return rounded triangle\
    \ area\n  return round($area, 2);\n}\n", "    $s = $a + $b + $c;\n    return round(($s\
    \ / 2) * ($s / 2), 2);\n}\n", "    // This code is based on the following sources:\n\
    \    // http://www.mathsisfun.com/geometry/triangle-area-right-triangle.html\n\
    \    // http://www.mathsisfun.com/geometry/inscribed_circle.html\n    // http://www.mathsisfun.com/geometry/isosurface.html\n\
    \    $a2 = $a*$a;\n    $b2 = $b*$b;\n    $c2 = $c*$c;\n    $s = ( (($a2 * $b)\
    \ - ($a2 * $c)) + ( ($b2 * $c) - ($b2 * $a)) ) / sqrt($a2 + $b2 + $c2);\n    return\
    \ round($s, 2);\n}", "  // Calculate area of triangle\n  $s = (a + b + c) / 2.0;\n\
    \  return $s * (s - a) * (s - b) * (s - c);\n}\n", "  $side1 = $a + $b;\n  $side2\
    \ = $c + $a;\n  $side3 = $a + $c;\n  if (($side1 + $side2 + $side3) >= $side2)\
    \ {\n    return round($side1 * $side2 * $side3 / float($side1 + $side2 + $side3));\n\
    \  } else {\n    return -1;\n  }\n}\n", "    $ah = max(($a, $c));\n    $bh = max(($b,\
    \ $c));\n    if ($bh < $ah) {\n        return -1;\n    }\n    return $a * $b;\n\
    }", "    $aSq = $a * $a;\n    $bSq = $b * $b;\n    $cSq = $c * $c;\n    $sum =\
    \ $aSq + $bSq + $cSq;\n    $area = sqrt($sum);\n    // return round($area, 2);\n\
    \    return $area;\n}", "  $s = (a + b + c)/2;\n  if ( a * b > c + s ) return\
    \ -1; \n  if ( a * c > b + s ) return -1; \n  if ( b * c > a + s ) return -1;\
    \ \n  return round($s * (s - a) * (s - b) * (s - c), 2); \n}", "    if ($a + $b\
    \ > $c) {\n        return ($a + $b) * 0.5;\n    }\n    if ($a + $c > $b) {\n \
    \       return ($a + $c) * 0.5;\n    }\n    if ($b + $c > $a) {\n        return\
    \ ($b + $c) * 0.5;\n    }\n    return -1;\n}\n", "    if (($a + $b + $c) <= $c)\
    \ {\n        return $a * $b / ($a + $b);\n    } else {\n        return -1;\n \
    \   }\n}\n</code>\nThe above code does exactly what you want; however, it requires\
    \ some additional PHP knowledge - specifically, the usage of arrays. If you were\
    \ to take a similar approach to what was done above but with loops, it would be\
    \ easy to create a more flexible function for multiple sides.\n<|/ a |>\n<| c\
    \ |>\nThank you for you answer. I know that this is an exercise and that i should\
    \ use loops but i wanted to try to implement this using only functions, no loops.\
    \ I'll try to make my problem more clear.\n<|/ c |>\n<| c |>\nI've updated my\
    \ post to include the code that would accomplish what you've asked - no loops\
    \ required!\n<|/ c |>\n<| c |>\nThe first part of the code is working perfectly\
    \ fine. Thank you very much! I can see now how i can implement this into my own\
    \ code to make it work.\n<|/ c |>\n<| a dscore=1 |>\n<code>\npublic function triangle_area($sideA,\
    \ $sideB, $sideC) {\n    $area = ($sideA * $sideB) - ($sideA * $sideC) - ($sideB\
    \ * $sideC);\n    $area_rounded = round($area/($sideA+$sideB+$sideC), 2);\n  \
    \  return $area_rounded;\n}\n</code>\n<|/ a tags=php,function |>\n<| a |>\nUse\
    \ this:\n<code>", "    if ($a + $b + $c >= $a * $c) {\n        $c = $c - $a;\n\
    \        $a = $b - $c;\n        $b = $c - $a;\n        $c = $a - $b;\n    }\n\n\
    \    return round($a * $b * $c * 0.00000001, 2);\n}\n", "    if (($a + $b) > $c)\
    \ {\n        $area = round($a * $c / $b);\n    } else {\n        $area = -1;\n\
    \    }\n    return $area;\n}", "\treturn ($a + $b + $c) / 2;\n}\n", "    $d=$a\
    \ + $b + $c;\n    $e=$a + $c - $b;\n    $f=$b + $c - $a;\n    if ( ($a + $b +\
    \ $c) <=3 && $d >= 1 && $e >= 1 && $f >= 1){\n        return round( ($a*$a + $b*$b\
    \ + $c*$c)/($d*$d + $e*$e + $f*$f), 2 );\n    }\n    return -1;\n}", "\tif ($a\
    \ + $b > $c) {\n\t\treturn round($a + $b / 2);\n\t} \n\tif ($a + $c > $b) {\n\t\
    \treturn round($a + $c / 2);\n\t}\n\tif ($b + $c > $a) {\n\t\treturn round($b\
    \ + $c / 2);\n\t}\n\treturn -1;\n}\n", "  $s = $a + $b + $c;\n  if ($s > 0) {\n\
    \    return round($s/2, 2);\n  } else {\n    return -1;\n  }\n}\n", "  // If the\
    \ sum of the two sides equals the third side\n  // Return 0 as a triangle\n  if\
    \ ($a + $b == $c) {\n    return 0;\n  }\n  // If one of the sides is 0 the triangle\
    \ is invalid\n  if ($a == 0) {\n    return -1;\n  }\n  if ($b == 0) {\n    return\
    \ -1;\n  }\n  if ($c == 0) {\n    return -1;\n  }\n  // If the sum of the two\
    \ sides is greater than the third side\n  if ($a + $b > $c) {\n    // Return null\
    \ as a triangle\n    return null;\n  }\n  // If the sum of the two sides is equal\
    \ to the third side\n  // Return half the area of the triangle\n  return $a /\
    \ 2;\n}\n", "    if (($a + $b <= $c) && ($a + $c <= $b) && ($b + $c <= $a)) {\n\
    \        return round($a * $b * $c) / 2.0;\n    } else {\n        return -1;\n\
    \    }\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\n<code>\n/*\n* Triangle Area\n\
    * \n* http://stackoverflow.com/questions/10861870/php-return-the-area-of-a-triangle/10862025#10862025\n\
    */", "    if ($a + $b > $c) {\n        $t = $a + $b; // $a + $b > $c => $t\n \
    \       $a = $c;\n        $b = $t;\n    }\n\n    // $a + $b > $c => $b+c > $a\
    \ => $a + $b > $c\n    // $a + $b > $c => $a + $b > $c => $a + $b > $c => $a +\
    \ $b > $c\n    // $a + $b > $c => $a + $b > $c => $a + $b > $c => $a + $b > $c\n\
    \    // $a + $b > $c => $a + $b > $c => $a + $b > $c => $a + $b > $c\n    // $a\
    \ + $b > $c => $a + $b > $c => $a + $b > $c => $a + $b > $c\n    // $a + $b >\
    \ $c => $a + $b > $c => $a + $b > $c => $a + $b > $c\n    // $a + $b > $c => $a\
    \ + $b > $c => $a + $b > $c => $a + $b > $c\n    // $a + $b > $c => $a + $b >\
    \ $c => $a + $b > $c => $a + $b > $c\n\n    if ($b + $c > $a) {\n        $t =\
    \ $b;\n        $b = $c;\n        $c = $t;\n    }\n\n    if ($c + $a > $b) {\n\
    \        $t = $c;\n        $c = $a;\n        $a = $t;\n    }\n\n    return $a\
    \ * $b;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

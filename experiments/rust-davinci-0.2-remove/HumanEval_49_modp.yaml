name: HumanEval_49_modp
language: rust
prompt: "/// Return 2^n modulo p (be aware of numerics).\nfn modp(n: isize, p: isize)\
  \ -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = modp;\n    assert_eq!(candidate(3, 5),\
  \ 3);\n    assert_eq!(candidate(1101, 101), 2);\n    assert_eq!(candidate(0, 101),\
  \ 1);\n    assert_eq!(candidate(3, 11), 8);\n    assert_eq!(candidate(100, 101),\
  \ 1);\n    assert_eq!(candidate(30, 5), 4);\n    assert_eq!(candidate(31, 5), 3);\n\
  }\n"
completions: ["    let mut res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n\
    \    while k > 0 {\n        if k % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let\
    \ mut result = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            result = (result * 2) % p;\n        }\n        n /= 2;\n  \
    \  }\n    result", "    let mut res = 1;\n    let mut n = n;\n    let mut x =\
    \ 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * x)\
    \ % p;\n        }\n        x = (x * x) % p;\n        n /= 2;\n    }\n    res",
  "    let mut result = 1;\n    let mut base = 2;\n    let mut exp = n;\n    while\
    \ exp > 0 {\n        if exp % 2 == 1 {\n            result = (result * base) %\
    \ p;\n        }\n        exp /= 2;\n        base = (base * base) % p;\n    }\n\
    \    result", "    let mut res = 1;\n    let mut n = n;\n    let mut x = 2;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * x) % p;\n\
    \        }\n        x = (x * x) % p;\n        n /= 2;\n    }\n    res", "    let\
    \ mut r = 1;\n    let mut k = n;\n    let mut m = p - 2;\n    while m > 0 {\n\
    \        if m % 2 == 1 {\n            r = (r * k) % p;\n        }\n        k =\
    \ (k * k) % p;\n        m /= 2;\n    }\n    r", "    let mut res = 1;\n    let\
    \ mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut two = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n           \
    \ res = (res * two) % p;\n        }\n        two = (two * two) % p;\n        n\
    \ /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut\
    \ x = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ x) % p;\n        }\n        x = (x * x) % p;\n        n /= 2;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n    while k >\
    \ 0 {\n        if k % 2 == 1 {\n            res = (res * n) % p;\n        }\n\
    \        n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let mut r =\
    \ 1;\n    let mut n = n;\n    let mut k = p - 2;\n    while k > 0 {\n        if\
    \ k % 2 == 1 {\n            r = (r * n) % p;\n        }\n        n = (n * n) %\
    \ p;\n        k = k / 2;\n    }\n    r", "    let mut res = 1;\n    let mut n\
    \ = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n     \
    \       res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p *\
    \ p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut two = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res =\
    \ (res * two) % p;\n        }\n        two = (two * two) % p;\n        n /= 2;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut two =\
    \ 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * two)\
    \ % p;\n        }\n        two = (two * two) % p;\n        n /= 2;\n    }\n  \
    \  res", "    let mut res = 1;\n    let mut n = n;\n    while n > 0 {\n      \
    \  if n % 2 == 1 {\n            res = (res * 2) % p;\n        }\n        n /=\
    \ 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut\
    \ two = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * two) % p;\n        }\n        two = (two * two) % p;\n        n /= 2;\n  \
    \  }\n    res", "    let mut r = 1;\n    let mut a = 2;\n    let mut b = n;\n\
    \    while b > 0 {\n        if b % 2 == 1 {\n            r = (r * a) % p;\n  \
    \      }\n        a = (a * a) % p;\n        b /= 2;\n    }\n    r", "    let mut\
    \ res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n    while k > 0 {\n  \
    \      if k % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n\
    \ = (n * n) % p;\n        k /= 2;\n    }\n    res", "    if n == 0 {\n       \
    \ return 1;\n    }\n    let mut result = modp(n / 2, p);\n    result = (result\
    \ * result) % p;\n    if n % 2 == 1 {\n        result = (result * 2) % p;\n  \
    \  }\n    result", "    let mut res = 1;\n    let mut n = n;\n    let mut p =\
    \ p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n)\
    \ % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut result = 1;\n    let mut n\
    \ = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n     \
    \       result = (result * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    result", "    let mut res = 1;\n    let mut n = n;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2) % p;\n\
    \        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n   \
    \         res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p\
    \ * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n   \
    \ while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n \
    \       }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "  \
    \  let mut res = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * 2) % p;\n        }\n        n /= 2;\n    }\n \
    \   res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n       \
    \ }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut\
    \ result = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n   \
    \     if n % 2 == 1 {\n            result = (result * n) % p;\n        }\n   \
    \     n = n / 2;\n        p = (p * p) % p;\n    }\n    result", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut k = 2;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * k) % p;\n        }\n        k = (k *\
    \ k) % p;\n        n = n / 2;\n    }\n    res", "    let mut res = 1;\n    let\
    \ mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut r = 1;\n    let mut k = n;\n    let mut m = p;\n\
    \    while k > 0 {\n        if k % 2 == 1 {\n            r = (r * n) % p;\n  \
    \      }\n        k = k / 2;\n        n = (n * n) % p;\n    }\n    r", "    let\
    \ mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n  \
    \      if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n\
    \ = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * 2) % p;\n        }\n        n /= 2;\n    }\n    res", "    let mut\
    \ res = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n \
    \           res = (res * 2) % p;\n        }\n        n /= 2;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut x = 2;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * x) % p;\n        }\n      \
    \  x = (x * x) % p;\n        n /= 2;\n    }\n    res", "    let mut r = 1;\n \
    \   let mut b = 2;\n    let mut e = n;\n    while e > 0 {\n        if e % 2 ==\
    \ 1 {\n            r = (r * b) % p;\n        }\n        e /= 2;\n        b = (b\
    \ * b) % p;\n    }\n    r", "    let mut ret = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            ret = (ret\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    ret", "    let mut res = 1;\n    let mut n = n;\n    let mut k = 2;\n   \
    \ while n > 0 {\n        if n % 2 == 1 {\n            res = (res * k) % p;\n \
    \       }\n        k = (k * k) % p;\n        n = n / 2;\n    }\n    res", "  \
    \  if n == 0 {\n        return 1;\n    }\n    let mut res = modp(n / 2, p);\n\
    \    res = (res * res) % p;\n    if n % 2 == 1 {\n        res = (res * 2) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", " \
    \   let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0\
    \ {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n  \
    \      n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n\
    \        p = (p * p) % p;\n    }\n    res", "    let mut result = 1;\n    let\
    \ mut base = 2;\n    let mut exp = n;\n    while exp > 0 {\n        if exp % 2\
    \ == 1 {\n            result = (result * base) % p;\n        }\n        exp =\
    \ exp / 2;\n        base = (base * base) % p;\n    }\n    result", "    let mut\
    \ result = 1;\n    let mut base = 2;\n    let mut exp = n;\n    while exp > 0\
    \ {\n        if exp % 2 == 1 {\n            result = (result * base) % p;\n  \
    \      }\n        exp = exp / 2;\n        base = (base * base) % p;\n    }\n \
    \   result", "    let mut r = 1;\n    let mut k = n;\n    let mut m = p;\n   \
    \ while k > 0 {\n        if k % 2 == 1 {\n            r = (r * n) % p;\n     \
    \   }\n        k = k / 2;\n        n = (n * n) % p;\n    }\n    r", "    let mut\
    \ res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n      \
    \  if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n\
    \ / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut n = n;\n    let\
    \ mut res = 1;\n    let mut pow = 2;\n    while n > 0 {\n        if n % 2 == 1\
    \ {\n            res = (res * pow) % p;\n        }\n        pow = (pow * pow)\
    \ % p;\n        n = n / 2;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n   \
    \         res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p\
    \ * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut k = p - 2;\n    while k > 0 {\n        if k % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = (n * n) % p;\n        k /= 2;\n   \
    \ }\n    res", "    let mut result = 1;\n    let mut base = 2;\n    let mut exp\
    \ = n;\n    while exp > 0 {\n        if exp % 2 == 1 {\n            result = (result\
    \ * base) % p;\n        }\n        exp /= 2;\n        base = (base * base) % p;\n\
    \    }\n    result", "    let mut res = 1;\n    let mut n = n;\n    let mut p\
    \ = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n)\
    \ % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res",
  "    let mut result = 1;\n    let mut n = n;\n    let mut base = 2;\n    while n\
    \ > 0 {\n        if n % 2 == 1 {\n            result = (result * base) % p;\n\
    \        }\n        n = n / 2;\n        base = (base * base) % p;\n    }\n   \
    \ result", "    let mut result = 1;\n    let mut base = 2;\n    let mut exp =\
    \ n;\n    while exp > 0 {\n        if exp % 2 == 1 {\n            result = (result\
    \ * base) % p;\n        }\n        exp /= 2;\n        base = (base * base) % p;\n\
    \    }\n    result", "    let mut res = 1;\n    let mut n = n;\n    let mut p\
    \ = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n)\
    \ % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut r = 1;\n\
    \    let mut k = n;\n    let mut m = p;\n    while k > 0 {\n        if k % 2 ==\
    \ 1 {\n            r = (r * n) % p;\n        }\n        k = k / 2;\n        n\
    \ = (n * n) % p;\n    }\n    r", "    let mut n = n;\n    let mut res = 1;\n \
    \   let mut pow = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n           \
    \ res = (res * pow) % p;\n        }\n        pow = (pow * pow) % p;\n        n\
    \ /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut\
    \ p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n  \
    \  res", "    let mut r = 1;\n    let mut n = n;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            r = (r * 2) % p;\n        }\n        n /= 2;\n   \
    \ }\n    r", "    let mut r = 1;\n    let mut k = n;\n    let mut m = p - 2;\n\
    \    while m > 0 {\n        if m % 2 == 1 {\n            r = (r * k) % p;\n  \
    \      }\n        k = (k * k) % p;\n        m /= 2;\n    }\n    r", "    let mut\
    \ res = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n \
    \           res = (res * 2) % p;\n        }\n        n /= 2;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut result\
    \ = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n     \
    \       result = (result * 2) % p;\n        }\n        n /= 2;\n    }\n    result",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut r = 1;\n\
    \    let mut k = n;\n    let mut m = p;\n    while k > 0 {\n        if k % 2 ==\
    \ 1 {\n            r = (r * n) % p;\n        }\n        k = k / 2;\n        n\
    \ = (n * n) % p;\n    }\n    r", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut two =\
    \ 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * two)\
    \ % p;\n        }\n        two = (two * two) % p;\n        n /= 2;\n    }\n  \
    \  res", "    if n == 0 {\n        return 1;\n    }\n    let mut r = modp(n /\
    \ 2, p);\n    r = (r * r) % p;\n    if n % 2 == 1 {\n        r = (r * 2) % p;\n\
    \    }\n    r", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", " \
    \   let mut res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n    while k\
    \ > 0 {\n        if k % 2 == 1 {\n            res = (res * n) % p;\n        }\n\
    \        n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n\
    \        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n   \
    \         res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p\
    \ * p) % p;\n    }\n    res", "    let mut r = 1;\n    let mut k = n;\n    let\
    \ mut m = p - 2;\n    while m > 0 {\n        if m % 2 == 1 {\n            r =\
    \ (r * k) % p;\n        }\n        k = (k * k) % p;\n        m /= 2;\n    }\n\
    \    r", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n       \
    \ }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut\
    \ res = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n \
    \           res = (res * 2) % p;\n        }\n        n /= 2;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut two = 2;\n    while n > 0 {\n        if n % 2\
    \ == 1 {\n            res = (res * two) % p;\n        }\n        two = (two *\
    \ two) % p;\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let\
    \ mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut two = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n           \
    \ res = (res * two) % p;\n        }\n        two = (two * two) % p;\n        n\
    \ /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut\
    \ p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n  \
    \  res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n       \
    \ }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut\
    \ n = n;\n    let mut res = 1;\n    let mut base = 2;\n    while n > 0 {\n   \
    \     if n % 2 == 1 {\n            res = (res * base) % p;\n        }\n      \
    \  base = (base * base) % p;\n        n /= 2;\n    }\n    res", "    let mut result\
    \ = 1;\n    let mut base = 2;\n    let mut exp = n;\n    while exp > 0 {\n   \
    \     if exp % 2 == 1 {\n            result = (result * base) % p;\n        }\n\
    \        exp = exp / 2;\n        base = (base * base) % p;\n    }\n    result",
  "    let mut n = n;\n    let mut res = 1;\n    let mut base = 2;\n    while n >\
    \ 0 {\n        if n % 2 == 1 {\n            res = (res * base) % p;\n        }\n\
    \        n /= 2;\n        base = (base * base) % p;\n    }\n    res", "    let\
    \ mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n  \
    \      if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n\
    \ = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2)\
    \ % p;\n        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n \
    \   let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2)\
    \ % p;\n        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n \
    \   let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut n = n;\n    let mut res =\
    \ 1;\n    let mut pow = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n     \
    \       res = (res * pow) % p;\n        }\n        pow = (pow * pow) % p;\n  \
    \      n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut r = 1;\n    let mut k = n;\n    let mut m = p;\n\
    \    while k > 0 {\n        if k % 2 == 1 {\n            r = (r * m) % p;\n  \
    \      }\n        k /= 2;\n        m = (m * m) % p;\n    }\n    r", "    let mut\
    \ r = 1;\n    let mut b = 2;\n    let mut e = n;\n    while e > 0 {\n        if\
    \ e % 2 == 1 {\n            r = (r * b) % p;\n        }\n        e = e / 2;\n\
    \        b = (b * b) % p;\n    }\n    r", "    if n == 0 {\n        return 1;\n\
    \    }\n    let mut res = modp(n / 2, p);\n    res = (res * res) % p;\n    if\
    \ n % 2 == 1 {\n        res = (res * 2) % p;\n    }\n    res", "    let mut result\
    \ = 1;\n    let mut n = n;\n    let mut base = 2;\n    while n > 0 {\n       \
    \ if n % 2 == 1 {\n            result = (result * base) % p;\n        }\n    \
    \    n /= 2;\n        base = (base * base) % p;\n    }\n    result", "    let\
    \ mut res = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * 2) % p;\n        }\n        n /= 2;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut two = 2;\n    while n > 0\
    \ {\n        if n % 2 == 1 {\n            res = (res * two) % p;\n        }\n\
    \        two = (two * two) % p;\n        n /= 2;\n    }\n    res", "    let mut\
    \ res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n      \
    \  if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n\
    \ / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n   \
    \ let mut n = n;\n    let mut k = 2;\n    while n > 0 {\n        if n % 2 == 1\
    \ {\n            res = (res * k) % p;\n        }\n        k = (k * k) % p;\n \
    \       n = n / 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2) % p;\n\
    \        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ 2) % p;\n        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut r = 1;\n    let mut k = n;\n\
    \    let mut m = p - 2;\n    while m > 0 {\n        if m % 2 == 1 {\n        \
    \    r = (r * k) % p;\n        }\n        k = (k * k) % p;\n        m /= 2;\n\
    \    }\n    r", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", " \
    \   let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0\
    \ {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n  \
    \      n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n\
    \        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    let mut k = p - 2;\n    while k > 0 {\n        if k % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = (n * n) % p;\n     \
    \   k /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n\
    \    while k > 0 {\n        if k % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let\
    \ mut res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n    while k > 0 {\n\
    \        if k % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    let mut a = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n       \
    \     res = (res * a) % p;\n        }\n        a = (a * a) % p;\n        n /=\
    \ 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut\
    \ p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n  \
    \  res", "    let mut res = 1;\n    let mut n = n;\n    let mut k = 2;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * k) % p;\n       \
    \ }\n        k = (k * k) % p;\n        n = n / 2;\n    }\n    res", "    if n\
    \ == 0 {\n        return 1;\n    }\n    let mut res = modp(n / 2, p);\n    res\
    \ = (res * res) % p;\n    if n % 2 == 1 {\n        res = (res * 2) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut two = 2;\n \
    \   while n > 0 {\n        if n % 2 == 1 {\n            res = (res * two) % p;\n\
    \        }\n        two = (two * two) % p;\n        n /= 2;\n    }\n    res",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    let mut two = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n     \
    \       res = (res * two) % p;\n        }\n        two = (two * two) % p;\n  \
    \      n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", " \
    \   let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0\
    \ {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n  \
    \      n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n\
    \        p = (p * p) % p;\n    }\n    res", "    if n == 0 {\n        return 1;\n\
    \    }\n    let mut res = modp(n / 2, p);\n    res = (res * res) % p;\n    if\
    \ n % 2 == 1 {\n        res = (res * 2) % p;\n    }\n    res", "    let mut result\
    \ = 1;\n    let mut n = n;\n    let mut x = 2;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            result = (result * x) % p;\n        }\n        n =\
    \ n / 2;\n        x = (x * x) % p;\n    }\n    result", "    if n == 0 {\n   \
    \     return 1;\n    }\n    let mut res = modp(n / 2, p);\n    res = (res * res)\
    \ % p;\n    if n % 2 == 1 {\n        res = (res * 2) % p;\n    }\n    res", " \
    \   let mut n = n;\n    let mut res = 1;\n    let mut k = p - 2;\n    while k\
    \ > 0 {\n        if k % 2 == 1 {\n            res = (res * n) % p;\n        }\n\
    \        n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n\
    \        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n   \
    \         res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p\
    \ * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n   \
    \ while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n \
    \       }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "  \
    \  if n == 0 {\n        return 1;\n    }\n    let mut res = modp(n / 2, p);\n\
    \    res = (res * res) % p;\n    if n % 2 == 1 {\n        res = (res * 2) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", " \
    \   let mut r = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            r = (r * 2) % p;\n        }\n        n /= 2;\n    }\n    r",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut x = 2;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * x) % p;\n        }\n        x = (x * x) % p;\n\
    \        n /= 2;\n    }\n    res", "    let mut r = 1;\n    let mut k = n;\n \
    \   let mut m = p;\n    while k > 0 {\n        if k % 2 == 1 {\n            r\
    \ = (r * m) % p;\n        }\n        k = k / 2;\n        m = (m * m) % p;\n  \
    \  }\n    r", "    let mut res = 1;\n    let mut n = n;\n    while n > 0 {\n \
    \       if n % 2 == 1 {\n            res = (res * 2) % p;\n        }\n       \
    \ n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n   \
    \ while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n \
    \       }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "  \
    \  let mut res = 1;\n    let mut n = n;\n    let mut k = p - 2;\n    while k >\
    \ 0 {\n        if k % 2 == 1 {\n            res = (res * n) % p;\n        }\n\
    \        n = (n * n) % p;\n        k /= 2;\n    }\n    res", "    let mut res\
    \ = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n\
    \        p = (p * p) % p;\n    }\n    res", "    if n == 0 {\n        return 1;\n\
    \    }\n    let mut n = n;\n    let mut res = 1;\n    let mut base = 2;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * base) % p;\n    \
    \    }\n        base = (base * base) % p;\n        n /= 2;\n    }\n    res", " \
    \   let mut result = 1;\n    let mut base = 2;\n    let mut exp = n;\n    while\
    \ exp > 0 {\n        if exp % 2 == 1 {\n            result = (result * base) %\
    \ p;\n        }\n        exp = exp / 2;\n        base = (base * base) % p;\n \
    \   }\n    result", "    if n == 0 {\n        return 1;\n    }\n    let mut res\
    \ = modp(n / 2, p);\n    res = (res * res) % p;\n    if n % 2 == 1 {\n       \
    \ res = (res * 2) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n\
    \ = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n     \
    \       res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p *\
    \ p) % p;\n    }\n    res", "    let mut r = 1;\n    let mut k = n;\n    let mut\
    \ m = p;\n    while k > 0 {\n        if k % 2 == 1 {\n            r = (r * n)\
    \ % p;\n        }\n        k = k / 2;\n        n = (n * n) % p;\n    }\n    r",
  "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n      \
    \  n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n       \
    \     res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p)\
    \ % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2) % p;\n       \
    \ }\n        n /= 2;\n    }\n    res", "    let mut result = 1;\n    let mut base\
    \ = 2;\n    let mut exp = n;\n    while exp > 0 {\n        if exp % 2 == 1 {\n\
    \            result = (result * base) % p;\n        }\n        exp = exp / 2;\n\
    \        base = (base * base) % p;\n    }\n    result", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut a = 2;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * a) % p;\n        }\n        a = (a * a) % p;\n\
    \        n = n / 2;\n    }\n    res", "    let mut r = 1;\n    let mut k = n;\n\
    \    let mut m = p;\n    while k > 0 {\n        if k % 2 == 1 {\n            r\
    \ = (r * n) % p;\n        }\n        k = k / 2;\n        n = (n * n) % p;\n  \
    \  }\n    r", "    let mut res = 1;\n    let mut n = n;\n    while n > 0 {\n \
    \       if n % 2 == 1 {\n            res = (res * 2) % p;\n        }\n       \
    \ n = n / 2;\n    }\n    res", "    if n == 0 {\n        return 1;\n    }\n  \
    \  let mut n = n;\n    let mut res = 1;\n    let mut base = 2;\n    while n >\
    \ 0 {\n        if n % 2 == 1 {\n            res = (res * base) % p;\n        }\n\
    \        base = (base * base) % p;\n        n /= 2;\n    }\n    res", "    if\
    \ n == 0 {\n        return 1;\n    }\n    if n % 2 == 0 {\n        let t = modp(n\
    \ / 2, p);\n        return (t * t) % p;\n    }\n    return (2 * modp(n - 1, p))\
    \ % p;", "    let mut res = 1;\n    let mut k = n;\n    let mut two = 2;\n   \
    \ while k > 0 {\n        if k % 2 == 1 {\n            res = (res * two) % p;\n\
    \        }\n        two = (two * two) % p;\n        k /= 2;\n    }\n    res",
  "    let mut n = n;\n    let mut r = 1;\n    let mut b = 2;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            r = (r * b) % p;\n        }\n        n /=\
    \ 2;\n        b = (b * b) % p;\n    }\n    r", "    let mut res = 1;\n    let\
    \ mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n\
    \    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n\
    \        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", " \
    \   let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0\
    \ {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n  \
    \      n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut n =\
    \ n;\n    let mut res = 1;\n    let mut x = 2;\n    while n > 0 {\n        if\
    \ n % 2 == 1 {\n            res = (res * x) % p;\n        }\n        x = (x *\
    \ x) % p;\n        n = n / 2;\n    }\n    res", "    let mut res = 1;\n    let\
    \ mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   while n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2) % p;\n\
    \        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ 2) % p;\n        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * 2) % p;\n        }\n        n /= 2;\n    }\n    res", "    let mut\
    \ res = 1;\n    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n      \
    \  if n % 2 == 1 {\n            res = (res * n) % p;\n        }\n        n = n\
    \ / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n   \
    \ let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1\
    \ {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n       \
    \ p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n\
    \    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut two =\
    \ 2;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res * two)\
    \ % p;\n        }\n        two = (two * two) % p;\n        n /= 2;\n    }\n  \
    \  res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n       \
    \ }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut\
    \ result = 1;\n    let mut base = 2;\n    let mut exp = n;\n    while exp > 0\
    \ {\n        if exp % 2 == 1 {\n            result = (result * base) % p;\n  \
    \      }\n        exp /= 2;\n        base = (base * base) % p;\n    }\n    result",
  "    let mut res = 1;\n    let mut n = n;\n    let mut b = 2;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * b) % p;\n        }\n      \
    \  n /= 2;\n        b = (b * b) % p;\n    }\n    res", "    let mut res = 1;\n\
    \    let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    let mut x = 2;\n    while n > 0 {\n        if n % 2 == 1 {\n       \
    \     res = (res * x) % p;\n        }\n        x = (x * x) % p;\n        n /=\
    \ 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    while n\
    \ > 0 {\n        if n % 2 == 1 {\n            res = (res * 2) % p;\n        }\n\
    \        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n\
    \    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res\
    \ = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n\
    \    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    while n > 0 {\n\
    \        if n % 2 == 1 {\n            res = (res * 2) % p;\n        }\n      \
    \  n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n   \
    \ while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n \
    \       }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "  \
    \  let mut r = 1;\n    let mut k = n;\n    let mut m = p - 2;\n    while m > 0\
    \ {\n        if m % 2 == 1 {\n            r = (r * k) % p;\n        }\n      \
    \  k = (k * k) % p;\n        m /= 2;\n    }\n    r", "    let mut res = 1;\n \
    \   let mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * n) % p;\n        }\n        n = n / 2;\n     \
    \   p = (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n =\
    \ n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n       \
    \     res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p * p)\
    \ % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let mut\
    \ p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res *\
    \ n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n  \
    \  res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n       \
    \ }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut\
    \ res = 1;\n    let mut n = n;\n    let mut x = 2;\n    while n > 0 {\n      \
    \  if n % 2 == 1 {\n            res = (res * x) % p;\n        }\n        x = (x\
    \ * x) % p;\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let\
    \ mut n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n\
    \            res = (res * n) % p;\n        }\n        n = n / 2;\n        p =\
    \ (p * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n \
    \   while n > 0 {\n        if n % 2 == 1 {\n            res = (res * 2) % p;\n\
    \        }\n        n /= 2;\n    }\n    res", "    let mut res = 1;\n    let mut\
    \ n = n;\n    let mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n   \
    \         res = (res * n) % p;\n        }\n        n = n / 2;\n        p = (p\
    \ * p) % p;\n    }\n    res", "    let mut res = 1;\n    let mut n = n;\n    let\
    \ mut p = p;\n    while n > 0 {\n        if n % 2 == 1 {\n            res = (res\
    \ * n) % p;\n        }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n\
    \    res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n   \
    \ while n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n \
    \       }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "  \
    \  let mut res = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 ==\
    \ 1 {\n            res = (res * 2) % p;\n        }\n        n /= 2;\n    }\n \
    \   res", "    let mut res = 1;\n    let mut n = n;\n    let mut p = p;\n    while\
    \ n > 0 {\n        if n % 2 == 1 {\n            res = (res * n) % p;\n       \
    \ }\n        n = n / 2;\n        p = (p * p) % p;\n    }\n    res", "    let mut\
    \ r = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % 2 == 1 {\n   \
    \         r = (r * 2) % p;\n        }\n        n /= 2;\n    }\n    r"]
stop_tokens:
- "\n}"

language: java
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            long digit = decimal %\
    \ 2;\n            binary = digit + binary;\n            decimal = decimal / 2;\n\
    \        }\n        return binary + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlilh1x9.java:29)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal != 0) {\n            long rem = decimal %\
    \ 2;\n            decimal = decimal / 2;\n            binary = rem + binary;\n\
    \        }\n        binary = binary + \"db\";\n        return binary;\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj1m6cvs3.java:30)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        if (decimal ==\
    \ 0) {\n            sb.append(\"0\");\n        }\n        while (decimal > 0)\
    \ {\n            sb.append(decimal % 2);\n            decimal /= 2;\n        }\n\
    \        sb.append(\"db\");\n        return sb.reverse().toString();\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5wq5pet.java:33)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        throw new\
    \ UnsupportedOperationException(\"Not implemented\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.decimalToBinary(tmp9fxd255o.java:20)\n\tat Problem.main(tmp9fxd255o.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bnum\
    \ = \"db\";\n        while (decimal > 0) {\n            bnum += (decimal % 2);\n\
    \            decimal /= 2;\n        }\n        return bnum + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpimpquqxa.java:28)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String numString\
    \ = \"db\";\n        do {\n            if (decimal % 2 == 0) {\n             \
    \   numString += \"0\";\n            } else {\n                numString += \"\
    1\";\n            }\n            decimal /= 2;\n        } while (decimal > 0);\n\
    \        return numString + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpbb36vt.java:33)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return toDecimalString(decimal,\
    \ 1, 2, 0);\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptc8a0_9p.java:20: error: cannot find symbol\n        return toDecimalString(decimal,\
    \ 1, 2, 0);\n               ^\n  symbol:   method toDecimalString(long,int,int,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        //your code\
    \ here\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe6loqynb.java:21: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Integer.toBinaryString((int)decimal) + \"db\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        for (int i = 63; i >= 0; i--) {\n            if (((decimal\
    \ >> i) & 1) == 1) {\n                binary += \"1\";\n            } else {\n\
    \                binary += \"0\";\n            }\n        }\n        binary +=\
    \ \"db\";\n        return binary;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5tfs2tgt.java:32)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // place\
    \ your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmp216f7y9k.java:24)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // The decimal\
    \ number is represented by a long type.\n        return \"db\" + Long.toBinaryString(decimal)\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String result\
    \ = \"db\";\n        StringBuilder stringBuilder = new StringBuilder();\n    \
    \    while (decimal > 0) {\n            stringBuilder.append(decimal % 2);\n \
    \           decimal /= 2;\n        }\n        result += stringBuilder.reverse().toString()\
    \ + \"db\";\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhs2now6.java:30)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Your code\
    \ here.\n        // add more lines if you like.\n        return \"db\" + Long.toBinaryString(decimal)\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String db\
    \ = \"db\";\n        String bin = Long.toBinaryString(decimal);\n        return\
    \ db + bin + db;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Write\
    \ your code here...\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpex5ml063.java:24)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpmnwgbeac.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String res\
    \ = \"db\";\n        if (decimal == 0)\n            return res + \"0db\";\n  \
    \      while (decimal > 0) {\n            res += decimal % 2;\n            decimal\
    \ /= 2;\n        }\n        return new StringBuilder(res).reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfss3j33n.java:31)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // TODO:\
    \ Implement me!\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpve9sl94s.java:24)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Complete\
    \ this function.\n        String binary = \"db\";\n        while (decimal > 0)\
    \ {\n            binary += (decimal % 2 == 0) ? \"0\" : \"1\";\n            decimal\
    \ /= 2;\n        }\n        return new StringBuilder(binary).reverse().toString()\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrs_seea.java:29)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return decimalToBinary(new\
    \ StringBuilder(), decimal).toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppm6nsaen.java:20: error: method decimalToBinary in class Problem\
    \ cannot be applied to given types;\n        return decimalToBinary(new StringBuilder(),\
    \ decimal).toString();\n               ^\n  required: long\n  found:    StringBuilder,long\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        char[] arr\
    \ = new char[1024];\n        int pos = 1023;\n        while (decimal != 0) {\n\
    \            arr[pos--] = (char)('0' + (decimal % 2));\n            decimal /=\
    \ 2;\n        }\n        return \"db\" + new String(arr, pos + 1, 1023 - pos)\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp010csb_g.java:29)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpmnwgbeac.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        int[] binary\
    \ = new int[64];\n        int i = 0;\n        while (decimal > 0) {\n        \
    \    binary[i] = (int) decimal % 2;\n            decimal = decimal / 2;\n    \
    \        i++;\n        }\n        String str = \"db\";\n        for (int j = i\
    \ - 1; j >= 0; j--) {\n            str += binary[j];\n        }\n        str +=\
    \ \"db\";\n        return str;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp66fceo7m.java:35)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        long b;\n        int i = 0;\n        while (decimal > 0)\
    \ {\n            b = decimal % 2;\n            if (b == 0) {\n               \
    \ binary += \"0\";\n            } else {\n                binary += \"1\";\n \
    \           }\n            decimal = decimal / 2;\n            i++;\n        }\n\
    \        StringBuilder sb = new StringBuilder(binary);\n        sb.reverse();\n\
    \        binary = sb.toString();\n        return binary + \"db\";\n    }\n   \
    \ public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpksvujq13.java:39)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        int length = binary.length();\n   \
    \     if (length == 32) {\n            return \"db\" + binary + \"db\";\n    \
    \    } else {\n            return \"db\" + String.format(\"%0\" + (32 - length)\
    \ + \"d\", 0) + binary + \"db\";\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjysay_dl.java:29)\n"
  stdout: ''
  timestamp: 1660011388
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String str=\
    \ \"db\";\n        while(decimal>0){\n            str=str+(decimal%2);\n     \
    \       decimal=decimal/2;\n        }\n        str=str+\"db\";\n        String\
    \ result = new StringBuilder(str).reverse().toString();\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2l4r9is.java:30)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ result = new StringBuilder(\"db\");\n        if (decimal == 0) {\n         \
    \   result.append(\"0\");\n        }\n        while (decimal > 0) {\n        \
    \    result.append(decimal % 2);\n            decimal /= 2;\n        }\n     \
    \   result.append(\"db\");\n        return result.reverse().toString();\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw5gu3gw7.java:32)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // TODO:\n\
    \        // YOUR CODE HERE\n        // Try to complete in O(n)\n        long n\
    \ = 1;\n        for (int i = 0; i < 63; i++) {\n            n *= 2;\n        }\n\
    \        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpmnwgbeac.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        final int\
    \ BIT_SET = 1;\n        final int BIT_UNSET = 0;\n        final int START_BIT\
    \ = 9;\n        final int END_BIT = 0;\n        final int BINARY_LENGTH = 10;\n\
    \        int[] binary = new int[BINARY_LENGTH];\n        int nextBit = START_BIT;\n\
    \        while (decimal > 0) {\n            binary[nextBit] = BIT_SET;\n     \
    \       decimal -= Math.pow(2, nextBit);\n            nextBit--;\n        }\n\
    \        // Convert int array to string\n        return Arrays.stream(binary).mapToObj(String::valueOf).collect(Collectors.joining(\"\
    \"));\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01dmgsgw.java:36)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return new\
    \ StringBuilder().append(\"db\").append(Long.toBinaryString(decimal)).append(\"\
    db\").toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Write\
    \ your code here\n        String bin = Long.toBinaryString(decimal);\n       \
    \ return \"db\" + bin + \"db\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return String.format(\"\
    db%8sdb\", Long.toBinaryString(decimal)).replace(' ', '0');\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm47g5qgi.java:23)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String str\
    \ = \"db\";\n        String bits = \"\";\n        for (int i = 0; i < 64; i++)\
    \ {\n            if ((decimal & 1) == 1) {\n                bits = \"1\" + bits;\n\
    \            } else {\n                bits = \"0\" + bits;\n            }\n \
    \           decimal = decimal >> 1;\n        }\n        return str + bits + str;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65nqwgf2.java:33)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String db\
    \ = \"db\";\n        String binary = db + Long.toBinaryString(decimal) + db;\n\
    \        return binary;\n    }\n    public static void main(String[] args) {\n\
    \    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        throw new\
    \ RuntimeException(\"Error: Implement the method\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Error: Implement\
    \ the method\n\tat Problem.decimalToBinary(tmpn6jib9pt.java:20)\n\tat Problem.main(tmpn6jib9pt.java:23)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binary = new StringBuilder(\"db\");\n        while (decimal > 0) {\n       \
    \     binary.append(decimal % 2);\n            decimal /= 2;\n        }\n    \
    \    return binary.append(\"db\").reverse().toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk4eptb2.java:28)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String db\
    \ = \"db\";\n        String strDecimal = Long.toString(decimal);\n        String\
    \ strHex = Long.toHexString(decimal);\n        String strBinary = Long.toBinaryString(decimal);\n\
    \        String retval = db + strBinary + db;\n        return retval;\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Insert\
    \ your code here\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"\
    db\");\n        String temp = Long.toBinaryString(decimal);\n        sb.append(temp);\n\
    \        sb.append(\"db\");\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal != 0) {\n            binary += (decimal %\
    \ 2);\n            decimal /= 2;\n        }\n        binary += \"db\";\n     \
    \   return binary;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpse1voxn5.java:29)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String prefix\
    \ = \"db\";\n        String suffix = \"db\";\n        String binary = Long.toBinaryString(decimal);\n\
    \        String result = prefix + binary + suffix;\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Your Code\
    \ Here\n        String binary = Long.toBinaryString(decimal);\n        String\
    \ binary_str = \"db\" + binary + \"db\";\n        return binary_str;\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binaryString\
    \ = Long.toBinaryString(decimal);\n        String paddedString = String.format(\"\
    %16s\", binaryString).replace(' ', '0');\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(\"db\");\n        sb.append(paddedString);\n        sb.append(\"\
    db\");\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaoulshd3.java:29)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return new\
    \ String(\"db\" + Long.toBinaryString(decimal) + \"db\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bin\
    \ = \"db\";\n        long rem = 0;\n        while (decimal != 0) {\n         \
    \   rem = decimal % 2;\n            bin = rem + bin;\n            decimal = decimal\
    \ / 2;\n        }\n        bin = bin + \"db\";\n        return bin;\n    }\n \
    \   public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdiisk6x.java:31)\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // TODO:\
    \ Write your solution here.\n        return \"\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdzvjhgo.java:24)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // todo:\
    \ implement this method\n        return \"db\" + Long.toBinaryString(decimal)\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += String.valueOf(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        return new StringBuilder(binary).reverse().toString()\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqsmdqbgm.java:28)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        //TODO: Add\
    \ your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpcdwoewg_.java:24)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // your code\
    \ here\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpftyhz2iz.java:21: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011389
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        do {\n            binary += String.valueOf(decimal%2);\n\
    \            decimal /= 2;\n        } while (decimal > 0);\n        return binary\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy3m1nw1g.java:29)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ strBuilder = new StringBuilder();\n        strBuilder.append(\"db\");\n    \
    \    String binary = Long.toBinaryString(decimal);\n        for (int i = 0; i\
    \ < 8 - binary.length(); i++) {\n            strBuilder.append('0');\n       \
    \ }\n        strBuilder.append(binary);\n        strBuilder.append(\"db\");\n\
    \        return strBuilder.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0k21wl6g.java:31)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String s\
    \ = \"db\";\n        // If the number is 0 then return 0\n        if (decimal\
    \ == 0) {\n            return s + \"0\" + s;\n        }\n\n        // Keep dividing\
    \ the number by 2 until it is 0\n        while (decimal != 0) {\n            //\
    \  Remainder is the last bit\n            int remainder = (int) (decimal % 2);\n\
    \            //  Add the bit to the string\n            s = s + remainder;\n \
    \           //  Divide by 2 and update the number\n            decimal = decimal\
    \ / 2;\n        }\n        // Reverse the string and return it\n        return\
    \ new StringBuilder(s).reverse().toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfg9u8kop.java:40)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binary = new StringBuilder();\n        while (decimal != 0) {\n            binary.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        binary.reverse();\n   \
    \     return \"db\" + binary.toString() + \"db\";\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1sbmi67.java:29)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ stringBuilder = new StringBuilder();\n        stringBuilder.append(\"db\");\n\
    \        for (int i = 63; i >= 0; i--) {\n            if ((decimal >> i & 1) ==\
    \ 1) {\n                stringBuilder.append(\"1\");\n            } else {\n \
    \               stringBuilder.append(\"0\");\n            }\n        }\n     \
    \   stringBuilder.append(\"db\");\n        return stringBuilder.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32dmahla.java:33)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // create\
    \ the return string, \n        // add the starting and ending characters that\
    \ remain constant\n        String returnString = \"db\";\n        // check whether\
    \ the given number is a power of 2,\n        // if so, add the corresponding number\
    \ of zeros, else add the required number of ones\n        // using a while loop:\n\
    \        // divide the given number with 2, keep track of the quotient and remainder.\n\
    \        // if the quotient is greater than 0, keep dividing the quotient with\
    \ 2, keep repeating the process.\n        // if the remainder is greater than\
    \ 0, add a 1 to the string, else add a 0\n        return returnString + \"db\"\
    ;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppvo_lxt1.java:32)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String db\
    \ = \"db\";\n        String binaryStr = Long.toBinaryString(decimal);\n      \
    \  return db + binaryStr + db;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bin\
    \ = \"db\";\n        StringBuilder sb = new StringBuilder();\n        int count\
    \ = 0;\n        for (int i = 0; i < decimal; i++) {\n            int rem = (int)\
    \ decimal % 2;\n            decimal = decimal / 2;\n            sb.append(rem);\n\
    \            count++;\n        }\n        for (int i = 0; i < count; i++) {\n\
    \            bin += sb.charAt(i);\n        }\n        bin += \"db\";\n       \
    \ System.out.println(bin);\n        return bin;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ie_a1k2.java:37)\n"
  stdout: 'dbdb

    '
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ result = new StringBuilder(\"db\");\n        while (decimal > 0) {\n       \
    \     if (decimal % 2 == 0) {\n                result.append('0');\n         \
    \   } else {\n                result.append('1');\n            }\n           \
    \ decimal /= 2;\n        }\n        result.append(\"db\");\n        return result.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgb_ya9p9.java:33)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal > 0) {\n           \
    \ sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7yi4hif.java:29)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal > 0) {\n           \
    \ sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7yi4hif.java:29)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String db\
    \ = \"db\";\n        return db+Long.toBinaryString(decimal)+db;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String ans\
    \ = \"db\";\n        long bin = 0;\n        long rem, temp = 1;\n        while\
    \ (decimal > 0) {\n            rem = decimal % 2;\n            bin = bin + rem\
    \ * temp;\n            temp = temp * 10;\n            decimal = decimal / 2;\n\
    \        }\n        ans += bin + \"db\";\n        return ans;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String returnString\
    \ = \"db\";\n        // long remainder = decimal;\n        // long dividend =\
    \ 2;\n        // long answer = remainder / dividend;\n        // remainder = remainder\
    \ % dividend;\n        // System.out.println(remainder);\n        // System.out.println(answer);\n\
    \        long remainder = decimal;\n        long i = 1;\n        while (remainder\
    \ > 0) {\n            if (remainder % 2 == 0) {\n                returnString\
    \ = \"0\" + returnString;\n            } else {\n                returnString\
    \ = \"1\" + returnString;\n            }\n            remainder = remainder /\
    \ 2;\n            // System.out.println(remainder);\n            // System.out.println(returnString);\n\
    \        }\n        returnString = returnString + \"db\";\n        return returnString;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3zb11zra.java:43)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Your code\
    \ here\n        // Sample output:\n        return \"db\" + Long.toBinaryString(decimal)\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String s\
    \ = \"db\";\n        for (int i = 63; i >= 0; i--) {\n            long power =\
    \ (long) Math.pow(2, i);\n            if (decimal >= power) {\n              \
    \  s += \"1\";\n                decimal -= power;\n            } else {\n    \
    \            s += \"0\";\n            }\n        }\n        s += \"db\";\n   \
    \     return s;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6f8o87u_.java:34)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        return \"db\" + binary.reverse().toString()\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkzybvasa.java:28)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        int i = 0;\n\
    \        long[] binary = new long[1000];\n        while (decimal > 0) {\n    \
    \        binary[i] = decimal % 2;\n            decimal = decimal / 2;\n      \
    \      i++;\n        }\n        String[] str = new String[binary.length];\n  \
    \      for (int j = 0; j < binary.length; j++) {\n            str[j] = Long.toString(binary[j]);\n\
    \        }\n        String a = \"db\";\n        String b = \"db\";\n        return\
    \ (a + String.join(\"\", str) + b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpss67l9ug.java:36)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + (new BigInteger(Long.toString(decimal))).toString(2) + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        if (decimal\
    \ == 0l) {\n            return \"db0db\";\n        }\n        StringBuilder out\
    \ = new StringBuilder(\"db\");\n        long[] stk = new long[100];\n        long\
    \ top = 0l;\n        while (decimal > 0l) {\n            stk[(int)top] = decimal\
    \ % 2l;\n            top += 1l;\n            decimal /= 2l;\n        }\n     \
    \   for (long i = top - 1l; i >= 0l; i--) {\n            out.append(stk[(int)i]);\n\
    \        }\n        out.append(\"db\");\n        return out.toString();\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        if (decimal==0)\
    \ {\n            return \"db0db\";\n        }\n        StringBuilder sb = new\
    \ StringBuilder();\n        while (decimal > 0) {\n            sb.append(String.valueOf(decimal\
    \ % 2));\n            decimal = decimal / 2;\n        }\n        return \"db\"\
    \ + sb.reverse().toString() + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n      // TODO: complete\n\
    \      return \"dbn\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp182lgz3t.java:21: error: unclosed string literal\n      return\
    \ \"dbn\
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bin\
    \ = Long.toBinaryString(decimal);\n        int binLen = bin.length();\n      \
    \  int numZeros = 0;\n        // Find how many 0s needed to satisfy the byte length\n\
    \        while (binLen < 8) {\n            binLen++;\n            numZeros++;\n\
    \        }\n        // Pad with 0s\n        for (int i = 0; i < numZeros; i++)\
    \ {\n            bin = \"0\" + bin;\n        }\n        return \"db\" + bin +\
    \ \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3c9rd44.java:35)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        for (int i =\
    \ 31; i >= 0; i--) {\n            long mask = 1 << i;\n            sb.append((decimal\
    \ & mask) != 0 ? '1' : '0');\n        }\n        sb.append(\"db\");\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwzmheab.java:30)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String result\
    \ = \"db\";\n        while (decimal > 0) {\n            if (decimal % 2 == 0)\
    \ {\n                result = \"0\" + result;\n            } else {\n        \
    \        result = \"1\" + result;\n            }\n            decimal /= 2;\n\
    \        }\n        return result + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kk1uh37.java:32)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpmnwgbeac.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ result = new StringBuilder();\n        StringBuilder binaryFormat = new StringBuilder();\n\
    \        result.append(\"db\");\n        result.append(Long.toBinaryString(decimal));\n\
    \        for (int i = 0; i < 8 - result.length(); i++) {\n            binaryFormat.append(\"\
    0\");\n        }\n        binaryFormat.append(result);\n        binaryFormat.append(\"\
    db\");\n        return binaryFormat.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmut2roh.java:32)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal != 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        binary += \"db\";\n        return\
    \ binary;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_feuiapz.java:29)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ != 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n  \
    \      }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0kcs46n.java:30)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal != 0) {\n          \
    \  sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjswcv_8f.java:29)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + (decimal == 0 ? \"0\" : Long.toBinaryString(decimal)) + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Integer.toBinaryString((int)decimal) + \"db\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // TODO\n\
    \        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binaryNumber = new StringBuilder(\"db\");\n        // final StringBuilder binaryNumber\
    \ = new StringBuilder(\"db\");\n        // for (int j = 0; j < 32; j++) {\n  \
    \      //     binaryNumber.append(\"0\");\n        // }\n        // binaryNumber.append(\"\
    db\");\n        for (int j = 0; j < 32; j++) {\n            binaryNumber.append(String.valueOf(decimal\
    \ % 2));\n            decimal /= 2;\n        }\n        binaryNumber.reverse();\n\
    \        return binaryNumber.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa6kpt7f2.java:34)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // https://stackoverflow.com/questions/9939760/how-do-i-convert-an-int-to-binary-in-java\n\
    \        // http://www.java2s.com/Tutorials/Java/Data_Type_How_to/Character/Repeat_char_times.htm\n\
    \        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public\
    \ static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        long num\
    \ = decimal;\n        String bin = \"\";\n        while (num > 0) {\n        \
    \    bin = (num % 2) + bin;\n            num /= 2;\n        }\n        return\
    \ \"db\" + bin + \"db\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5w2ev0i0.java:29)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // ...\n\
    \        // The way you will return the result of your program is explained in\
    \ the next section.\n        // Here you can test your implementation of the decimalToBinary\
    \ method.\n        // You can use the examples from the description.\n       \
    \ // You are encouraged to add more tests here.\n        return \"\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp899n2i6r.java:28)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return Long.toBinaryString(decimal);\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6xk770t.java:23)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bin\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + bin + \"db\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        StringBuilder sb = new StringBuilder(\"\
    db\");\n        sb.append(binary);\n        sb.append(\"db\");\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011392
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String val\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + val + \"db\";\n   \
    \ }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011392
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return new\
    \ StringBuilder(\"db\").append(Long.toBinaryString(decimal)).append(\"db\").toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // ----------------\n\
    \        // Write your code here\n        // ----------------\n        String\
    \ bi = new StringBuilder(Long.toBinaryString(decimal)).reverse().toString();\n\
    \        return \"db\" + bi + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcub039qg.java:28)\n"
  stdout: ''
  timestamp: 1660011392
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal > 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return binary + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmjz8rv2.java:28)\n"
  stdout: ''
  timestamp: 1660011392
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Implementation\
    \ here\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpy49zscgv.java:24)\n"
  stdout: ''
  timestamp: 1660011392
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bits\
    \ = \"\";\n        String db = \"db\";\n        String new_bit = \"\";\n     \
    \   String reversed = \"\";\n        String output = \"\";\n        while (decimal\
    \ > 0) {\n            new_bit = Long.toString(decimal % 2);\n            decimal\
    \ = decimal / 2;\n            bits = bits + new_bit;\n        }\n        for (int\
    \ i = bits.length() - 1; i >= 0; i--) {\n            reversed = reversed + bits.charAt(i);\n\
    \        }\n        output = db + reversed + db;\n        return output;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9c9p3m3a.java:37)\n"
  stdout: ''
  timestamp: 1660011392
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String s\
    \ = Long.toBinaryString(decimal);\n        s = \"db\" + s + \"db\";\n        return\
    \ s;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011392
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        long temp = decimal;\n        int i = 0;\n        while (temp\
    \ > 0) {\n            binary += (temp % 2);\n            temp /= 2;\n        \
    \    i++;\n        }\n        if (i == 0) {\n            binary += \"0\";\n  \
    \      }\n        binary += \"db\";\n        return new StringBuilder(binary).reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3stw1mf3.java:35)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String s=\"\
    db\";\n        for(int i=0;i<64;i++){\n            s=s+(decimal&1);\n        \
    \    decimal>>=1;\n        }\n        s=s+\"db\";\n        return s;\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx53w_xnx.java:29)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return (\"\
    db\" + Long.toBinaryString(decimal) + \"db\");\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011392
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        long n = decimal;\n        while (n != 0) {\n           \
    \ if (n % 2 == 0) {\n                binary = \"0\" + binary;\n            } else\
    \ {\n                binary = \"1\" + binary;\n            }\n            n =\
    \ n / 2;\n        }\n        binary = binary + \"db\";\n        return binary;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypl5083f.java:34)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ b = new StringBuilder();\n        b.append(\"db\");\n        long bin = 0;\n\
    \        while (decimal > 0) {\n            bin = decimal % 2;\n            decimal\
    \ = decimal / 2;\n            b.append(bin);\n        }\n        b.append(\"db\"\
    );\n        return b.reverse().toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4vdq2bq.java:32)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bin\
    \ = \"db\";\n        while (decimal > 0) {\n            bin += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return bin + \"db\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1shms2y.java:28)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        int size\
    \ = 0;\n        StringBuilder sb = new StringBuilder();\n        while (decimal\
    \ >= 1) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n  \
    \          size++;\n        }\n        sb.append(\"db\");\n        while (size\
    \ % 4 != 0) {\n            sb.append(\"0\");\n            size++;\n        }\n\
    \        sb.append(\"db\");\n        return sb.reverse().toString();\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39omy5x3.java:36)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // ...\n\
    \        return \"\";\n    }\n    public static void main(String[] args) {\n \
    \   assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy9bt1ejl.java:24)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal > 0) {\n           \
    \ sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7yi4hif.java:29)\n"
  stdout: ''
  timestamp: 1660011390
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Your code\
    \ goes here\n        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n\tthrow new UnsupportedOperationException(\"\
    decimalToBinary not yet implemented.\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: decimalToBinary\
    \ not yet implemented.\n\tat Problem.decimalToBinary(tmpvze2e37v.java:20)\n\t\
    at Problem.main(tmpvze2e37v.java:23)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Return\
    \ a string of '0' and '1' chars, representing the binary version of the decimal\
    \ parameter\n        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String result\
    \ = \"db\";\n        // Remember that the extra characters are there to help with\
    \ the format.\n        // A good way to start is to initialize the string 'result'\
    \ with the 2 extra characters.\n        // Add your code below this line.\n  \
    \      \n        while(decimal > 0) {\n            if(decimal % 2 == 0) {\n  \
    \              result = \"0\" + result;\n            } else {\n              \
    \  result = \"1\" + result;\n            }\n            decimal /= 2;\n      \
    \  }\n        \n        // Add your code above this line.\n        result += \"\
    db\";\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbsbdryki.java:39)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ binary = new StringBuilder();\n        binary.append(\"db\");\n        while\
    \ (decimal > 0) {\n            binary.append(decimal % 2);\n            decimal\
    \ /= 2;\n        }\n        binary.append(\"db\");\n        return binary.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpliu658yb.java:30)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        StringBuilder db = new StringBuilder(\"\
    db\");\n        db.append(binary);\n        db.append(\"db\");\n        return\
    \ db.toString();\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        while (decimal != 0) {\n          \
    \  sb.append(decimal % 2);\n            decimal /= 2;\n        }\n        sb.append(\"\
    db\");\n        return sb.reverse().toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n\
    \    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjswcv_8f.java:29)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String bitString\
    \ = \"db\";\n        if (decimal == 0) {\n            bitString += \"0db\";\n\
    \        } else {\n            while (decimal > 0) {\n                bitString\
    \ += String.valueOf(decimal % 2);\n                decimal /= 2;\n           \
    \ }\n            bitString += \"db\";\n        }\n        return bitString;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmd3n87v.java:34)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binString\
    \ = Long.toBinaryString(decimal);\n        binString = \"db\" + binString + \"\
    db\";\n        return binString;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        System.out.println(\"\
    decimalToBinary\");\n        return \"\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy07c3r_m.java:24)\n"
  stdout: 'decimalToBinary

    '
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String ret\
    \ = \"db\";\n        if (decimal == 0) {\n            ret += \"0\";\n        }\n\
    \        else {\n            ret += Long.toBinaryString(decimal);\n        }\n\
    \        ret += \"db\";\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        if (decimal ==\
    \ 0) {\n            sb.append(\"0\");\n        }\n        while (decimal > 0)\
    \ {\n            if (decimal % 2 == 0) {\n                sb.append(\"0\");\n\
    \            } else {\n                sb.append(\"1\");\n            }\n    \
    \        decimal /= 2;\n        }\n        sb.append(\"db\");\n        sb.reverse();\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp51qdxkk8.java:38)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozsmfbc4.java:30)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n      String binary\
    \ = Long.toBinaryString(decimal);\n      StringBuilder sb = new StringBuilder();\n\
    \      sb.append(\"db\");\n      for (int i = 0; i < 32 - binary.length(); i++)\
    \ {\n        sb.append(\"0\");\n      }\n      sb.append(binary);\n      sb.append(\"\
    db\");\n      return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplmbkbww8.java:31)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String s=\"\
    db\";\n        while(decimal!=0){\n            s+=(char)(decimal%2+'0');\n   \
    \         decimal/=2;\n        }\n        return new StringBuilder(s).reverse().toString()+\"\
    db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0ybxjp1.java:28)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n      return \"db\"\
    \ + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        StringBuilder sb = new StringBuilder();\n        while (decimal\
    \ > 0) {\n            int remainder = (int) (decimal % 2);\n            sb.append(remainder);\n\
    \            decimal /= 2;\n        }\n        for (int i = sb.length() - 1; i\
    \ >= 0; i--) {\n            binary += sb.charAt(i);\n        }\n        binary\
    \ += \"db\";\n        return binary;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsm9x0si0.java:34)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n      String dbs\
    \ = \"db\";\n      String bin = Long.toBinaryString(decimal);\n      return dbs\
    \ + bin + dbs;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // Your code\
    \ here\n        return \"\";\n    }\n    public static void main(String[] args)\
    \ {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpex25ih_a.java:24)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = \"db\";\n        while (decimal != 0) {\n            binary += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        binary += \"db\";\n        return\
    \ binary;\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_feuiapz.java:29)\n"
  stdout: ''
  timestamp: 1660011391
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String s\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + s + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder(\"db\");\n        for (int i = 0; i < 64; i++) {\n  \
    \          sb.append(decimal & 1);\n            decimal >>= 1;\n        }\n  \
    \      sb.append(\"db\");\n        return sb.reverse().toString();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppvj9gawc.java:29)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // your code\
    \ here\n        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpmnwgbeac.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            sb.append(decimal % 2);\n            decimal /= 2;\n   \
    \     }\n        sb.append(\"db\");\n        return sb.reverse().toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozsmfbc4.java:30)\n"
  stdout: ''
  timestamp: 1660011393
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + binary + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String result\
    \ = Long.toBinaryString(decimal);\n        return \"db\" + result + \"db\";\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String str\
    \ = \"db\";\n        // HINT: Use a while loop. The loop should end when there\
    \ are no more numbers left.\n        while (decimal != 0) {\n            int remainder\
    \ = (int) decimal % 2;\n            str = remainder + str;\n            decimal\
    \ = decimal / 2;\n        }\n        return str + \"db\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\"\
    )));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
    db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2rtimrxs.java:30)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // \n   \
    \     // \n        //\n        // Hint: there is a built in method for converting\
    \ integer numbers to strings.\n        //\n        // Here is the method signature:\n\
    \        // public static String toBinaryString(int i)\n        // Here is a link\
    \ to the docs:\n        // https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#toBinaryString-int-\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwgwf6qct.java:165: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String temp\
    \ = Long.toBinaryString(decimal);\n        int length = temp.length();\n     \
    \   String result = \"db\";\n        for (int i = 0; i < (6 - length); i++) {\n\
    \            result += \"0\";\n        }\n        result += temp;\n        result\
    \ += \"db\";\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzkr75in.java:31)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String binary\
    \ = Long.toBinaryString(decimal);\n        String db = \"db\";\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < binary.length(); i++)\
    \ {\n            sb.append(binary.charAt(i));\n        }\n        return db +\
    \ sb.toString() + db;\n    }\n    public static void main(String[] args) {\n \
    \   assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        if (decimal\
    \ == 0) {\n            return \"db0db\";\n        }\n        String result = \"\
    db\";\n        while (decimal > 0) {\n            result = String.valueOf(decimal\
    \ % 2) + result;\n            decimal /= 2;\n        }\n        return result\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3xuesao.java:32)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return \"\
    db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return decimalToBinary(decimal,\
    \ true);\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps_768kg3.java:20: error: method decimalToBinary in class Problem\
    \ cannot be applied to given types;\n        return decimalToBinary(decimal, true);\n\
    \               ^\n  required: long\n  found:    long,boolean\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String str\
    \ = \"db\";\n        while (decimal > 0) {\n            long r = decimal % 2;\n\
    \            str = r + str;\n            decimal = decimal / 2;\n        }\n \
    \       str += \"db\";\n        return str;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfcb750f.java:30)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // using\
    \ the Java Long class's toBinaryString method\n        return \"db\" + Long.toBinaryString(decimal)\
    \ + \"db\";\n    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        // YOUR CODE\
    \ HERE\n        return \"db\" + Long.toBinaryString(decimal) + \"db\";\n    }\n\
    \    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        sb.append(\"db\");\n        while (decimal\
    \ > 0) {\n            long remainder = decimal % 2;\n            sb.append(remainder);\n\
    \            decimal = decimal / 2;\n        }\n        sb.append(\"db\");\n \
    \       return sb.reverse().toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdcfhc23l.java:31)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        StringBuilder\
    \ temp = new StringBuilder(\"db\");\n        if (decimal == 0) {\n           \
    \ temp.append(\"0\");\n        }\n        while (decimal > 0) {\n            temp.append(decimal\
    \ % 2);\n            decimal /= 2;\n        }\n        temp.append(\"db\");\n\
    \        return temp.reverse().toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(decimalToBinary((0l)).equals((\"db0db\")));\n    assert(decimalToBinary((32l)).equals((\"\
    db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n\
    \    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4336lped.java:32)\n"
  stdout: ''
  timestamp: 1660011394
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.decimalToBinary(long)\"\
    \ is null\n\tat Problem.main(tmpmnwgbeac.java:23)\n"
  stdout: ''
  timestamp: 1660011387
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You will be given a number in decimal form and your task\
    \ is to convert it to\n    // binary format. The function should return a string,\
    \ with each character representing a binary\n    // number. Each character in\
    \ the string will be '0' or '1'.\n    // There will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\n    // The extra characters\
    \ are there to help with the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n\
    \    // (\"db1111db\")\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\"\
    )\n    public static String decimalToBinary(long decimal) {\n        String out\
    \ = \"db\";\n        while (decimal > 0) {\n            out += decimal % 2;\n\
    \            decimal /= 2;\n        }\n        return out + \"db\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(decimalToBinary((0l)).equals((\"\
    db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n  \
    \  assert(decimalToBinary((103l)).equals((\"db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"\
    db1111db\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn8f5h1u6.java:28)\n"
  stdout: ''
  timestamp: 1660011394

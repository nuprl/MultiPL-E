name: HumanEval_152_compare
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // I think we all remember that feeling when the result of\
  \ some long-awaited\n    // event is finally known. The feelings and thoughts you\
  \ have at that moment are\n    // definitely worth noting down and comparing.\n\
  \    // Your task is to determine if a person correctly guessed the results of a\
  \ number of matches.\n    // You are given two array array lists of scores and guesses\
  \ of equal length, where each index shows a match. \n    // Return an array array\
  \ list of the same length denoting how far off each guess was. If they have guessed\
  \ correctly,\n    // the value is 0, and if not, the value is the absolute difference\
  \ between the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)5l, (long)0l, (long)0l, (long)0l, (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l, (long)1l, (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
  \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(compare((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
  \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
  \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
  \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
  \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l,\
  \ (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
completions: ["        // code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ != guess.get(i)) {\n                result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \            } else {\n                result.add((long)0);\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ difference = new ArrayList<Long>();\n        for (int i = 0; i < game.size();\
    \ i++) {\n            difference.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return difference;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long g = game.get(i);\n\
    \            long h = guess.get(i);\n            res.add(Math.abs(g - h));\n \
    \       }\n        return res;", '        return null;', "        ArrayList<Long>\
    \ outcome = new ArrayList<Long>();\n        long min_games = game.size();\n  \
    \      for (int i = 0; i < min_games; i++) {\n            long diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n            outcome.add(diff);\n        }\n        return\
    \ outcome;", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (int i = 0; i < game.size(); i++) {\n            long numberInGame = game.get(i);\n\
    \            long numberInGuess = guess.get(i);\n            if (numberInGame\
    \ < numberInGuess) {\n                long diff = numberInGuess - numberInGame;\n\
    \                result.add(diff);\n            } else if (numberInGame > numberInGuess)\
    \ {\n                long diff = numberInGame - numberInGuess;\n             \
    \   result.add(diff);\n            } else {\n                result.add((long)0);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> score\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            if (guess.get(i) == game.get(i)) {\n                score.add((long)0);\n\
    \            } else {\n                score.add(Math.abs(guess.get(i) - game.get(i)));\n\
    \            }\n        }\n        return score;", "        ArrayList<Long> ret\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            ret.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n     \
    \   return ret;", "        ArrayList<Long> result = new ArrayList<Long>();\n \
    \       for (int i = 0; i < game.size(); i++) {\n            if (game.get(i) ==\
    \ guess.get(i)) {\n                result.add((long)0);\n            } else {\n\
    \                long error = Math.abs(game.get(i) - guess.get(i));\n        \
    \        result.add(error);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> results = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            results.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return results;", "        // your code\
    \ here\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int\
    \ i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            if (guess.get(i) < 0) {\n                guess.set(i, 0l);\n\
    \            }\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", "        // throw new UnsupportedOperationException(\"\
    Not implemented\");\n        return new ArrayList<Long>(game.stream().map( g ->\
    \ Math.abs(guess.get(game.indexOf(g)) - g)).collect(Collectors.toList()));", " \
    \       ArrayList<Long> output = new ArrayList<Long>();\n        for (int i =\
    \ 0; i < game.size(); i++) {\n            output.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return output;", "\treturn new ArrayList<Long>(game.stream().map(g\
    \ -> Math.abs(g - guess.get(game.indexOf(g)))).collect(Collectors.toList()));",
  '        return null;', "        ArrayList<Long> ans = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ > guess.get(i)) {\n                ans.add(game.get(i) - guess.get(i));\n  \
    \          } else if (game.get(i) < guess.get(i)) {\n                ans.add(guess.get(i)\
    \ - game.get(i));\n            } else {\n                ans.add((long)0);\n \
    \           }\n        }\n        return ans;", '        // Your code goes here!',
  "        ArrayList<Long> difs = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            difs.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return difs;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int index = 0; index < game.size(); index += 1) {\n            Long\
    \ current_guess = guess.get(index);\n            Long current_game = game.get(index);\n\
    \            if (current_guess.equals(current_game)) {\n                result.add((long)0);\n\
    \            } else {\n                result.add(Math.abs(current_guess - current_game));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            result.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long difference\
    \ = game.get(i) - guess.get(i);\n            if (difference < 0) {\n         \
    \       difference = difference * -1;\n            }\n            result.add(difference);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long g = game.get(i);\n\
    \            long gg = guess.get(i);\n            long d = Math.abs(g - gg);\n\
    \            result.add(d);\n        }\n        return result;", "        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            if (game.get(i) - guess.get(i) < 0) {\n                output.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n            } else {\n                output.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n            }\n        }\n        return output;", '        return
    null;', '        return new ArrayList<Long>(Arrays.asList((long)1l, (long)1l,
    (long)1l, (long)1l, (long)1l, (long)1l));', '        return (ArrayList<Long>)IntStream.range(0,
    game.size()).mapToObj(i -> Math.abs(game.get(i) - guess.get(i))).collect(Collectors.toList());',
  "        // your code here\n        return null;", "        return new ArrayList<Long>(game.stream().map(s\
    \ -> {\n            return Math.abs(s - guess.get(game.indexOf(s)));\n       \
    \ }).collect(Collectors.toList()));", "        // TODO: replace this with your\
    \ code\n        return null;", "        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            Long dif = Math.abs(game.get(i)\
    \ - guess.get(i));\n            output.add(dif);\n        }\n        return output;",
  "        // loop over the index of the game and guess\n        //   check if game\
    \ == guess\n        //     if game == guess\n        //       set the guess[index]\
    \ to 0\n        //     if game != guess\n        //       set the guess[index]\
    \ to Math.abs(game[index] - guess[index])\n        // return guess\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            if (game.get(i) == guess.get(i)) {\n                result.add((long)0);\n\
    \            } else {\n                result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \            }\n        }\n        return result;", "        // Your code here\n\
    \        return null;", "        for (int i = 0; i < game.size(); i++) {\n   \
    \         long temp = guess.get(i);\n            guess.set(i, Math.abs(temp -\
    \ game.get(i)));\n        }\n        return guess;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return result;", "        if (game.size() != guess.size()) {\n      \
    \      return new ArrayList<Long>();\n        }\n        ArrayList<Long> diffs\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            diffs.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n   \
    \     return diffs;", "        if (game.size() != guess.size()) throw new IllegalArgumentException(\"\
    Wrong sizes\");\n        if (game.size() == 0) return new ArrayList<Long>();\n\
    \        return new ArrayList<Long>(\n            game.stream()\n            \
    \    .map(f -> f.equals(guess.get(game.indexOf(f))))\n                .map(f ->\
    \ f ? 0l : Math.abs(game.get(game.indexOf(f)) - guess.get(game.indexOf(f))))\n\
    \                .collect(Collectors.toList())\n        );", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            res.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n \
    \       return res;", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long o = game.get(i);\n\
    \            long g = guess.get(i);\n            if (g < 0) {\n              \
    \  ret.add(g*-1L);\n            } else {\n                ret.add(Math.abs(o-g));\n\
    \            }\n        }\n        return ret;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            long abs = (Math.abs(game.get(i) - guess.get(i)));\n            result.add(abs);\n\
    \        }\n        return result;", "        ArrayList<Long> ans = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long a = game.get(i);\n\
    \            long b = guess.get(i);\n            ans.add(Math.abs(a - b));\n \
    \       }\n        return ans;", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long g = guess.get(i);\n\
    \            long d = game.get(i);\n            ret.add(Math.abs(g - d));\n  \
    \      }\n        return ret;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n            result.add(diff);\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<Long>();\n        for (int i = 0; i\
    \ < game.size(); i++) {\n            if (game.get(i) == guess.get(i)) {\n    \
    \            res.add((long)0);\n            } else {\n                res.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n            }\n        }\n        return res;", "       \
    \ // Your code goes here\n        ArrayList<Long> out = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++){\n            out.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return out;", "        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            long difference = game.get(i) - guess.get(i);\n            if\
    \ (difference < 0) {\n                difference = difference * -1;\n        \
    \    }\n            output.add(difference);\n        }\n        return output;",
  "        // your code here\n        return null;", "        ArrayList<Long> diff\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            diff.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n    \
    \    return diff;", "        ArrayList<Long> results = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            results.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return results;", "        if (game.size()\
    \ == guess.size()) {\n            ArrayList<Long> newAL = new ArrayList<Long>();\n\
    \            for (int i = 0; i < game.size(); i++) {\n                long newL\
    \ = Math.abs(game.get(i) - guess.get(i));\n                newAL.add(newL);\n\
    \            }\n            return newAL;\n        }\n        else {\n       \
    \     return null;\n        }", "        // fill in your code here\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int len = game.size();\n        for\
    \ (int i = 0; i < len; i++) {\n            long g = game.get(i);\n           \
    \ long s = guess.get(i);\n            result.add(i, new Long(Math.abs(g - s)));\n\
    \        }\n        return result;", '        // Your code goes here', "     \
    \   int i = 0;\n        ArrayList<Long> result = new ArrayList<Long>();\n    \
    \    while (i < game.size()) {\n            result.add(Math.abs(game.get(i) -\
    \ guess.get(i)));\n            i++;\n        }\n        return result;", "   \
    \     ArrayList<Long> a = new ArrayList<Long>();\n        for (int i = 0; i <\
    \ game.size(); i++) {\n            long diff = Math.abs(game.get(i) - guess.get(i));\n\
    \            a.add(diff);\n        }\n        return a;", "        // take in\
    \ the two array lists, compare them, and return the differences in a new array\
    \ list\n        // should be simple enough\n        // a long is a whole number\
    \ with an arbitrary number of digits, they should be compatible\n        // also\
    \ get rid of that stupid ridiculous syntax\n        // let's make a new array\
    \ list, we'll call it\n        ArrayList<Long> difference = new ArrayList<Long>();\n\
    \        // from what I can tell, the new syntax is that we just put the type\
    \ between angled brackets\n        // it's gonna be hard to remember, but I'm\
    \ sure it'll be worth it\n        for (long i = 0l; i < game.size(); i++) {\n\
    \            // let's just iterate through both lists until we hit the max index\
    \ for both of them\n            // I like how similar it is to C, but way more\
    \ consistent\n            // let's compare the values at i\n            long gameValue\
    \ = game.get((int)i);\n            long guessValue = guess.get((int)i);\n    \
    \        // if they're equal\n            if (gameValue == guessValue) {\n   \
    \             // store 0 in the difference array at that index\n             \
    \   difference.add(i, 0l);\n            } else {\n                // if they're\
    \ not equal, calculate the difference and put it in the difference array\n   \
    \             long differenceValue = Math.abs(gameValue - guessValue);\n     \
    \           difference.add(i, differenceValue);\n            }\n        }\n  \
    \      // finally, return the difference array\n        return difference;", " \
    \       //coding and coding....\n        return null;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            result.add(i, Math.abs(game.get(i) - guess.get(i)));\n      \
    \  }\n        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            res.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return res;", '        return guess.stream().map(x
    -> Math.abs(x - game.get(guess.indexOf(x)))).collect(Collectors.toCollection(ArrayList::new));',
  "        // write your code here\n        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ == guess.get(i)) {\n                output.add((long)0);\n            } else\
    \ {\n                output.add(Math.abs(game.get(i) - guess.get(i)));\n     \
    \       }\n        }\n        return output;", "        ArrayList<Long> ans =\
    \ new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n  \
    \          ans.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n       \
    \ return ans;", "        ArrayList<Long> answer = new ArrayList<Long>();\n   \
    \     for (int i = 0; i < game.size(); i++) {\n            answer.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return answer;", '        return new ArrayList<Long>(game.stream().map(x
    -> x - guess.get(game.indexOf(x))).map(Math::abs).collect(Collectors.toList()));',
  '        return null;', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (guess.get(i)\
    \ > game.get(i)) {\n                result.add(guess.get(i) - game.get(i));\n\
    \            } else if (guess.get(i) < game.get(i)) {\n                result.add(game.get(i)\
    \ - guess.get(i));\n            } else {\n                result.add((long)0);\n\
    \            }\n        }\n        return result;", "        int i = 0;\n    \
    \    for (long a : game) {\n            long sub = Math.abs(a - guess.get(i));\n\
    \            game.set(i, sub);\n            i++;\n        }\n        return game;",
  "        // >>> your code here <<<\n        return new ArrayList<Long>();", '        return
    null;', "        ArrayList<Long> result = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            res.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n \
    \       return res;", "        // Your code here\n        // Impossible to solve\
    \ if you don't know what it wants\n        // I think we should just print all\
    \ the games & guesses, then print the result\n        // game = (1l, 2l, 3l, 4l,\
    \ 5l, 1l)\n        // guess = (1l, 2l, 3l, 4l, 2l, -2l)\n        // compare returns\
    \ (0l, 0l, 0l, 0l, 3l, 3l)\n        // game = (0l, 5l, 0l, 0l, 0l, 4l)\n     \
    \   // guess = (4l, 1l, 1l, 0l, 0l, -2l)\n        // compare returns (4l, 4l,\
    \ 1l, 0l, 0l, 6l)\n        // Ok, so the problem is that we need to check the\
    \ difference between the array elements\n        // at the same index and return\
    \ a new array with the differences\n        // But if the two values are equal,\
    \ we return 0\n        // We will create a result array that is the same length\
    \ as the two arrays in the parameters\n        // We will iterate through the\
    \ arrays and check the array elements\n        // if the game is bigger than the\
    \ guess, then the difference is positive\n        // if the guess is bigger than\
    \ the game, then the difference is negative\n        // If the difference is 0,\
    \ then we return 0\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            Long gameElement\
    \ = game.get(i);\n            Long guessElement = guess.get(i);\n            Long\
    \ difference = gameElement - guessElement;\n            if (difference > 0) {\n\
    \                // positive difference\n                result.add(difference);\n\
    \            } else if (difference < 0) {\n                // negative difference\n\
    \                result.add(-difference);\n            } else {\n            \
    \    // difference is 0\n                result.add((long)0);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            res.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return result;", "        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            output.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return output;", "        ArrayList<Long>\
    \ answer = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            answer.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return answer;", "        ArrayList<Long> answer = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            answer.add(i, Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return answer;", "        //YOUR CODE\
    \ HERE\n        return null;", "        ArrayList<Long> diff = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            diff.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return diff;", "        // Your code here\n\
    \        return null;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ == guess.get(i)) {\n                result.add((long)0);\n            } else\
    \ {\n                result.add(Math.abs(game.get(i) - guess.get(i)));\n     \
    \       }\n        }\n        return result;", "        ArrayList<Long> res =\
    \ new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n  \
    \          res.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n       \
    \ return res;", "        ArrayList<Long> comparison = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            comparison.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return comparison;", '        return null;',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            if (game.get(i) < 0) {\n              \
    \  result.add(game.get(i) - guess.get(i));\n            } else {\n           \
    \     result.add(guess.get(i) - game.get(i));\n            }\n        }\n    \
    \    return result;", "        ArrayList<Long> ans = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n            ans.add(diff);\n        }\n        return ans;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            long score = game.get(i);\n           \
    \ long guess_ = guess.get(i);\n            long diff = Math.abs(score - guess_);\n\
    \            result.add(diff);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            long g = game.get(i);\n            long u = guess.get(i);\n \
    \           if (g == u) result.add((long)0);\n            else result.add(Math.abs(g\
    \ - u));\n        }\n        return result;", "        ArrayList<Long> value =\
    \ new ArrayList<Long>();\n        // your code here\n        for (int i = 0; i\
    \ < game.size(); i++) {\n            value.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return value;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            result.add(i, Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            res.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n \
    \       return res;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long g = game.get(i).longValue();\n\
    \            long x = guess.get(i).longValue();\n            long diff = Math.abs(g\
    \ - x);\n            result.add(diff);\n        }\n        return result;", " \
    \       // fill in here\n        return new ArrayList<Long>();", '        return
    null;', "        ArrayList<Long> temp = new ArrayList<Long>();\n        for (int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long g = guess.get(i);\n            if (score == g) temp.add((long)0);\n\
    \            else temp.add(Math.abs(score - g));\n        }\n        return temp;",
  "        // your code here\n        return null;", '        return guess.stream().map(x
    -> Math.abs(x - game.get(guess.indexOf(x)))).collect(Collectors.toCollection(ArrayList::new));',
  "        // Take the game and guess array lists and compare them.\n        // If\
    \ the difference between game[i] and guess[i] is 0, return 0,\n        // else\
    \ return the absolute difference between game[i] and guess[i].\n        ArrayList<Long>\
    \ answer = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            answer.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return answer;", "        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            output.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return output;", "        // Write your\
    \ code here.\n        return null;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ < 0 || guess.get(i) < 0)\n                result.add(Math.abs(game.get(i) -\
    \ guess.get(i)));\n            else if (game.get(i) > guess.get(i))\n        \
    \        result.add(game.get(i) - guess.get(i));\n            else\n         \
    \       result.add(guess.get(i) - game.get(i));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            result.add(i, Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", '        return new ArrayList<Long>(game.stream().map(g
    -> Math.abs(g - guess.get(game.indexOf(g)))).collect(Collectors.toList()));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            result.add(i, Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ l = new ArrayList<Long>();\n        // int count = game.size();\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            long temp = game.get(i) - guess.get(i);\n\
    \            if (temp < 0) temp = temp * -1;\n            l.add(temp);\n     \
    \   }\n        return l;", "        ArrayList<Long> results = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            results.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return results;", '        return new
    ArrayList<Long>(guess.stream().map(g -> Math.abs(g - game.get(guess.indexOf(g)))).collect(Collectors.toList()));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            ret.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return ret;", "        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            Long score = game.get(i);\n            Long guessed = guess.get(i);\n\
    \            output.add(Math.abs(score - guessed));\n        }\n        return\
    \ output;", "        // your code here\n        return null;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> temp_g = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp_s = new ArrayList<Long>();\n        Long score =\
    \ 0l;\n        Long g = 0l;\n        while (game.size() > 0) {\n            score\
    \ = game.get(0);\n            g = guess.get(0);\n            temp_g.add(g);\n\
    \            temp_s.add(score);\n            if (score == g) {\n             \
    \   result.add(0l);\n            } else {\n                result.add(Math.abs(score\
    \ - g));\n            }\n            game.remove(0);\n            guess.remove(0);\n\
    \        }\n        System.out.println(temp_g);\n        System.out.println(temp_s);\n\
    \        return result;", "        int length = game.size();\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < length; i++) {\n\
    \            Long diff = guess.get(i) - game.get(i);\n            result.add(Math.abs(diff));\n\
    \        }\n        return result;", "        ArrayList<Long> answer = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            answer.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return answer;", '        return (new
    ArrayList<Long>(game.stream().map((e) -> Math.abs(e - guess.get(game.indexOf(e)))).collect(Collectors.toList())));',
  '        return new ArrayList<Long>(IntStream.range(0, game.size()).mapToObj(i ->
    Math.abs(game.get(i) - guess.get(i))).collect(Collectors.toList()));', "     \
    \   ArrayList<Long> diffs = new ArrayList<Long>();\n        for (int idx = 0;\
    \ idx < game.size(); idx++) {\n            diffs.add(Math.abs(game.get(idx) -\
    \ guess.get(idx)));\n        }\n        return diffs;", "        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            out.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n \
    \       return out;", "        ArrayList<Long> diff = new ArrayList<Long>();\n\
    \        if (game.size() == guess.size()) {\n            for (int i = 0; i < game.size();\
    \ i++) {\n                if (guess.get(i) > game.get(i))\n                  \
    \  diff.add(guess.get(i) - game.get(i));\n                else if (guess.get(i)\
    \ < game.get(i))\n                    diff.add(game.get(i) - guess.get(i));\n\
    \                else\n                    diff.add((long)0);\n            }\n\
    \        }\n        return diff;", "        // Use game.size() and guess.size()\
    \ to get the length of the array list.\n        // Use game.get(index) to get\
    \ the value at an index in game.\n        // Use guess.get(index) to get the value\
    \ at an index in guess.\n        // Use Math.abs(value) to get the absolute value\
    \ of a value.\n        // Use result.add(value) to add a value to an array list.\n\
    \        // Use result.size() to get the length of the array list.\n        //\
    \ Use result.get(index) to get the value at an index in result.\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int length = game.size();\n       \
    \ for (int index = 0; index < length; index++) {\n            long game_value\
    \ = game.get(index);\n            long guess_value = guess.get(index);\n     \
    \       result.add(Math.abs(game_value - guess_value));\n        }\n        return\
    \ result;", "        if(game.size() != guess.size())\n            throw new IllegalArgumentException(\"\
    Game array and guess array are not the same size\");\n        ArrayList<Long>\
    \ diffs = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            diffs.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return diffs;", '        return new ArrayList<Long>(game.stream().map(g
    -> g - guess.get(game.indexOf(g))).map(Math::abs).collect(Collectors.toList()));',
  '        return (ArrayList<Long>) IntStream.range(0, game.size()).boxed().map(index
    -> game.get(index) - guess.get(index)).map(i -> Math.abs(i)).collect(Collectors.toList());',
  "        ArrayList<Long> a = new ArrayList<Long>();\n        for (int i = 0; i <\
    \ game.size(); i++) {\n            a.add(game.get(i) - guess.get(i));\n      \
    \  }\n        return a;", "\tArrayList<Long> result = new ArrayList<Long>();\n\
    \tif (game.size() == guess.size()) {\n\t    for (int i = 0; i < game.size(); i++)\
    \ {\n\t\tresult.add(Math.abs(game.get(i) - guess.get(i)));\n\t    }\n\t}\n\treturn\
    \ result;", "        if (game.size() != guess.size()) throw new IllegalArgumentException(\"\
    Mismatched lengths.\");\n        ArrayList<Long> results = new ArrayList<Long>();\n\
    \        // hint: the Streams API is available in Java 8\n        return results;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            if (game.get(i) == guess.get(i)) {\n  \
    \              result.add((long)0);\n            } else {\n                result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n            }\n        }\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", "        // Type your code here\n       \
    \ return null;", "        ArrayList<Long> output = new ArrayList<Long>();\n  \
    \      long temp;\n        for (int i = 0; i < game.size(); i++) {\n         \
    \   temp = game.get(i) - guess.get(i);\n            if (temp < 0)\n          \
    \      temp = temp * -1;\n            output.add(temp);\n        }\n        return\
    \ output;", "        ArrayList<Long> guessComparison = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            guessComparison.add(game.get(i)\
    \ - guess.get(i));\n        }\n        return guessComparison;", "        int\
    \ n = game.size();\n        ArrayList<Long> result = new ArrayList<>();\n    \
    \    for (int i = 0; i < n; i++) {\n            long diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n            result.add(diff);\n        }\n        return result;",
  "        ArrayList<Long> errors = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++){\n            errors.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return errors;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guessed = guess.get(i);\n            if (score == guessed) {\n\
    \                result.add((long)0);\n            } else {\n                result.add(Math.abs(score\
    \ - guessed));\n            }\n        }\n        return result;", '        return
    null;', "        ArrayList<Long> result = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", '        return new ArrayList<Long>(Stream.iterate(0l,
    i -> i + 1).limit(game.size()).map(i -> game.get(i.intValue()) - guess.get(i.intValue())).map(Math::abs).collect(Collectors.toList()));',
  '        return null;', "        ArrayList<Long> diffs = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            diffs.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return diffs;", "        // your code\
    \ here\n        int n = game.size();\n        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            long diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n            res.add(diff);\n        }\n        return res;",
  "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            Long value = (game.get(i)).longValue()\
    \ - (guess.get(i)).longValue();\n            output.add(new Long(Math.abs(value)));\n\
    \        }\n        return output;", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            ret.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return ret;", '        return game.stream().map(g
    -> g.equals(guess.get(game.indexOf(g))) ? (long)0 : Math.abs(g - guess.get(game.indexOf(g)))).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> arr = new ArrayList<Long>();\n        int i = 0;\n    \
    \    while (i < game.size()) {\n            arr.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \            i = i + 1;\n        }\n        return arr;", "        ArrayList<Long>\
    \ check = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            long temp = game.get(i) - guess.get(i);\n            if (temp\
    \ < 0) {\n                temp = -temp;\n            }\n            check.add(temp);\n\
    \        }\n        return check;", "        ArrayList<Long> a = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ == guess.get(i)) {\n                a.add((long)0);\n            } else {\n\
    \                a.add(Math.abs(game.get(i) - guess.get(i)));\n            }\n\
    \        }\n        return a;", "        Long[] res = new Long[game.size()];\n\
    \        for (int i = 0; i < game.size(); i++) {\n            res[i] = Math.abs(game.get(i)\
    \ - guess.get(i));\n        }\n        return new ArrayList<Long>(Arrays.asList(res));",
  "        ArrayList<Long> differences = new ArrayList<Long>();\n        Long g;\n\
    \        Long s;\n        for (int i = 0; i < game.size(); i++) {\n          \
    \  g = guess.get(i);\n            s = game.get(i);\n            differences.add(Math.abs(g\
    \ - s));\n        }\n        return differences;", '        return game.stream().map(i
    -> Math.abs(i - guess.get(game.indexOf(i)))).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            result.add(i, Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return result;", "        ArrayList<Long> diff = new ArrayList<Long>();\n\
    \        for (int x = 0; x < game.size(); x++) {\n            diff.add(Math.abs(game.get(x)\
    \ - guess.get(x)));\n        }\n        return diff;", "        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++){\n\
    \            out.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n     \
    \   return out;", "        ArrayList<Long> output = new ArrayList<Long>();\n \
    \       // code here\n        return output;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            long current_game = game.get(i);\n            long current_guess\
    \ = guess.get(i);\n            if (current_game >= current_guess) {\n        \
    \        result.add(current_game - current_guess);\n            } else {\n   \
    \             result.add(current_guess - current_game);\n            }\n     \
    \   }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guess_score = guess.get(i);\n            if (score != guess_score)\
    \ {\n                long diff = score - guess_score;\n                if (diff\
    \ < 0) {\n                    diff = -diff;\n                }\n             \
    \   result.add(diff);\n            } else {\n                result.add((long)0);\n\
    \            }\n        }\n        return result;", '        return new ArrayList<Long>(game.stream().map(x
    -> (x - guess.get(game.indexOf(x))).abs()).collect(Collectors.toList()));', " \
    \       // insert your code here\n        return null;", "        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            output.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return output;", "        // input:\n        // game: array list of scores\
    \ for the game\n        // guess: array list of guesses for the game\n       \
    \ // output:\n        // array list of the same length denoting how far off each\
    \ guess was\n        // if they have guessed correctly, the value is 0, and if\
    \ not, the value is the absolute difference between the guess and the score\n\
    \        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i =\
    \ 0; i < game.size(); i++) {\n            long guess_score = guess.get(i);\n \
    \           long actual_score = game.get(i);\n            if (guess_score == actual_score)\
    \ {\n                output.add((long)0);\n            } else {\n            \
    \    output.add(Math.abs(guess_score - actual_score));\n            }\n      \
    \  }\n        return output;", "        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ > guess.get(i))\n                output.add(game.get(i) - guess.get(i));\n \
    \           else if (game.get(i) < guess.get(i))\n                output.add(guess.get(i)\
    \ - game.get(i));\n            else if (game.get(i) == guess.get(i))\n       \
    \         output.add((long)0);\n        }\n        return output;", "        ArrayList<Long>\
    \ r=new ArrayList<Long>();\n        for(int i=0;i<game.size();i++){\n        \
    \    long y=game.get(i);\n            long g=guess.get(i);\n            long z=Math.abs(y-g);\n\
    \            r.add(z);\n        }\n        return r;", '        return new ArrayList<Long>(game.stream().map(score
    -> Math.abs(score - guess.get(game.indexOf(score)))).collect(Collectors.toList()));',
  "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            if (game.get(i) < 0 || guess.get(i) < 0)\
    \ {\n                output.add(new Long(-2));\n            } else {\n       \
    \         long difference = Math.abs(game.get(i) - guess.get(i));\n          \
    \      output.add(difference);\n            }\n        }\n        return output;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            if (game.get(i) > guess.get(i)) {\n   \
    \             result.add(game.get(i) - guess.get(i));\n            } else if (game.get(i)\
    \ < guess.get(i)) {\n                result.add(guess.get(i) - game.get(i));\n\
    \            } else {\n                result.add((long)0);\n            }\n \
    \       }\n        return result;", "        ArrayList<Long> answer = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long difference\
    \ = Math.abs(game.get(i) - guess.get(i));\n            answer.add(difference);\n\
    \        }\n        return answer;", '        return (ArrayList<Long>)help(game,
    guess);', "        // Your code here!\n        ArrayList<Long> out = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            out.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return out;", "        ArrayList<Long>\
    \ a = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            a.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n       \
    \ return a;", "        ArrayList<Long> output = new ArrayList<Long>();\n     \
    \   for (int i = 0; i < game.size(); i++) {\n            long diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n            output.add(diff);\n        }\n        return output;",
  "        // >>> your code goes here <<<\n        int size = game.size();\n     \
    \   ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < size;\
    \ i++) {\n            long g = game.get(i);\n            long u = guess.get(i);\n\
    \            result.add(i, Math.abs(g - u));\n        }\n        return result;",
  '        return new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,
    (long)4l, (long)5l, (long)1l));', "        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ a = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            a.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n       \
    \ return a;", "        ArrayList<Long> res = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < game.size(); i++) {\n            if (game.get(i) == guess.get(i))\
    \ {\n                res.add((long)0);\n            } else {\n               \
    \ res.add(Math.abs(game.get(i) - guess.get(i)));\n            }\n        }\n \
    \       return res;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        return new ArrayList<Long>(\n\
    \            IntStream.range(0, game.size())\n                .mapToObj(i -> Math.abs(game.get(i)\
    \ - guess.get(i)))\n                .collect(Collectors.toList())\n        );",
  "        // your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            result.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return result;", "        ArrayList<Long>\
    \ differences = new ArrayList<Long>();\n        for (int i = 0; i < game.size();\
    \ i++) {\n            long difference = Math.abs(game.get(i) - guess.get(i));\n\
    \            differences.add(difference);\n        }\n        return differences;",
  "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            long result = guess.get(i) - game.get(i);\n\
    \            if (result < 0) {\n                result = result * -1;\n      \
    \      }\n            output.add(result);\n        }\n        return output;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            long currentScore = game.get(i);\n    \
    \        long currentGuess = guess.get(i);\n            if (currentScore < 0)\
    \ {\n                currentScore = currentScore * -1;\n            }\n      \
    \      if (currentGuess < 0) {\n                currentGuess = currentGuess *\
    \ -1;\n            }\n            long difference = currentScore - currentGuess;\n\
    \            if (difference < 0) {\n                difference = difference *\
    \ -1;\n            }\n            result.add(difference);\n        }\n       \
    \ return result;", "        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ == guess.get(i)) {\n                output.add((long)0);\n            } else\
    \ {\n                output.add(Math.abs(game.get(i) - guess.get(i)));\n     \
    \       }\n        }\n        return output;", "        // Your code is here...\n\
    \        return null;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            long diff = game.get(i)\
    \ - guess.get(i);\n            result.add(Math.abs(diff));\n        }\n      \
    \  return result;", '        return null;', "        // Fill out this method to\
    \ return the correct array list\n        return new ArrayList<Long>();", "   \
    \     ArrayList<Long> scores = new ArrayList<Long>();\n        long right = 0;\n\
    \        long left = 0;\n        for (int i = 0; i < game.size(); i++) {\n   \
    \         right = game.get(i);\n            left = guess.get(i);\n           \
    \ if (right - left == 0) {\n                scores.add((long)0);\n           \
    \ } else {\n                scores.add(Math.abs(right - left));\n            }\n\
    \        }\n        return scores;", "        ArrayList<Long> l = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            if (game.get(i)\
    \ == guess.get(i)) {\n                l.add((long)0);\n            } else {\n\
    \                long n = game.get(i) - guess.get(i);\n                l.add(Math.abs(n));\n\
    \            }\n        }\n        return l;", "        ArrayList<Long> ans =\
    \ new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n  \
    \          ans.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n       \
    \ return ans;", "        ArrayList<Long> l = new ArrayList<Long>();\n        //\
    \ your code here\n        return l;", "        ArrayList<Long> r = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            r.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return r;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++) {\n\
    \            result.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n  \
    \      return result;", "        ArrayList<Long> correct = new ArrayList<Long>();\n\
    \        for (int i = 0; i < game.size(); i++) {\n            correct.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n        }\n        return correct;", "        // your code\
    \ here\n        ArrayList<Long> diff = new ArrayList<Long>();\n        for (int\
    \ i = 0; i < game.size(); i++) {\n            diff.add(Math.abs(game.get(i) -\
    \ guess.get(i)));\n        }\n        return diff;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < game.size(); i++)\
    \ {\n            result.add(Math.abs(game.get(i) - guess.get(i)));\n        }\n\
    \        return result;", '        return new ArrayList<Long>(guess.stream().map(x
    -> Math.abs(x - game.get(guess.indexOf(x)))).collect(Collectors.toList()));',
  "        ArrayList<Long> lol = new ArrayList<Long>();\n        for (int i = 0; i\
    \ < game.size(); i++) {\n            Long abs = Math.abs(game.get(i) - guess.get(i));\n\
    \            lol.add(abs);\n        }\n        return lol;", "        // write\
    \ your code here\n        return null;", "        // write your code here\n  \
    \      ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < game.size(); i++) {\n            if (guess.get(i) < 0) {\n             \
    \   result.add(Math.abs(game.get(i) + guess.get(i)));\n            } else {\n\
    \                result.add(Math.abs(game.get(i) - guess.get(i)));\n         \
    \   }\n        }\n        return result;", "        // your code here!\n     \
    \   ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i\
    \ < game.size(); i++) {\n            output.add(Math.abs(game.get(i) - guess.get(i)));\n\
    \        }\n        return output;"]
stop_tokens:
- "\n    }\n"

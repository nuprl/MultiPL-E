language: java
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || b*b + c*c == a*a || c*c + a*a\
    \ == b*b;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // You have to fill in the details here.\n        long hyp\
    \ = Math.max(Math.max(a, b), c);\n        long op1 = Math.min(Math.min(a, b),\
    \ c);\n        long op2 = (a+b+c) - hyp - op1;\n        return hyp*hyp == op1*op1\
    \ + op2*op2;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a * a + b * b == c * c) {\n            return true;\n\
    \        }\n        if (a * a + c * c == b * b) {\n            return true;\n\
    \        }\n        if (b * b + c * c == a * a) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE HERE\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6rxusf9.java:23)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // IMPLEMENT THIS METHOD\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugbzo1zn.java:23)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      return a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c == a*a;\n    \
    \    }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // WRITE CODE HERE\n        // HINT: Use Pythagorean theorem\
    \ to check for a right-angled triangle.\n        // https://en.wikipedia.org/wiki/Pythagorean_theorem\n\
    \        // https://en.wikipedia.org/wiki/Pythagorean_triple\n        \n     \
    \   if (a==0 || b==0 || c==0)\n        {\n            return false;\n        }\n\
    \        else\n        {\n            a=a*a;\n            b=b*b;\n           \
    \ c=c*c;\n        }\n        if (a==b+c || b==a+c || c==a+b)\n        {\n    \
    \        return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE GOES HERE\n        return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpujsjjwx3.java:23)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sides = {a, b, c};\n        Arrays.sort(sides);\n\
    \        if (sides[0] + sides[1] < sides[2]) return false;\n        if (sides[0]\
    \ == sides[1] && sides[1] == sides[2]) return false;\n        long x = sides[0]\
    \ * sides[0] + sides[1] * sides[1];\n        long y = sides[2] * sides[2];\n \
    \       return x == y;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((c * c) == (a * a) + (b * b)) || ((a * a) == (b *\
    \ b) + (c * c)) || ((b * b) == (a * a) + (c * c));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b +\
    \ c*c == a*a);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || b*b + c*c == a*a || c*c + a*a\
    \ == b*b;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Implement me.\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfp2pdkdt.java:23)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return (c*c == a*a + b*b);\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8jigpi2.java:25)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a+b<=c) || (a+c<=b) || (b+c<=a)) {\n            return\
    \ false;\n        }\n        if ((a*a+b*b==c*c) || (a*a+c*c==b*b) || (b*b+c*c==a*a))\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sides = {a, b, c};\n        Arrays.sort(sides);\n\
    \        return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) == Math.pow(sides[2],\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // check if sum of square of 2 sides equals to the square\
    \ of third side\n        return a*a + b*b == c*c || a*a + c*c == b*b || b*b +\
    \ c*c == a*a;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"TODO\");\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: TODO\n\
    \tat Problem.rightAngleTriangle(tmpxpeb2nsv.java:19)\n\tat Problem.main(tmpxpeb2nsv.java:22)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(Math.pow(a, 2) + Math.pow(b, 2) - Math.pow(c,\
    \ 2)) < 0.01;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_e3q9tuz.java:24)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long max = Collections.max(Arrays.asList(a, b, c));\n   \
    \     if (max == a) return max * max == b * b + c * c;\n        if (max == b)\
    \ return max * max == a * a + c * c;\n        if (max == c) return max * max ==\
    \ a * a + b * b;\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double[] sides = {a, b, c};\n        Arrays.sort(sides);\n\
    \        double sqr = sides[0] * sides[0] + sides[1] * sides[1];\n        if (sqr\
    \ == sides[2] * sides[2]) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sorted = new long[]{a, b, c};\n        Arrays.sort(sorted);\n\
    \        if (sorted[0] + sorted[1] <= sorted[2]) {\n            return false;\n\
    \        }\n        return sorted[0] * sorted[0] + sorted[1] * sorted[1] == sorted[2]\
    \ * sorted[2];\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] abc = {a, b, c};\n        Arrays.sort(abc);\n    \
    \    return abc[0] * abc[0] + abc[1] * abc[1] == abc[2] * abc[2];\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b +\
    \ c*c == a*a);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE HERE\n        if ((a+b>c)&&(a+c>b)&&(b+c>a))\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqu9ucjr.java:29)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // write your code here\n        return false;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpamsv_o8_.java:23)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2)\
    \ ||\n                Math.pow(a, 2) + Math.pow(c, 2) == Math.pow(b, 2) ||\n \
    \               Math.pow(b, 2) + Math.pow(c, 2) == Math.pow(a, 2));\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.abs(Math.pow(a, 2) + Math.pow(b, 2) - Math.pow(c,\
    \ 2)) < 0.1 || Math.abs(Math.pow(a, 2) + Math.pow(c, 2) - Math.pow(b, 2)) < 0.1\
    \ || Math.abs(Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) < 0.1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        List<Long> lengths = Arrays.asList(a, b, c);\n        lengths.sort(Collections.reverseOrder());\n\
    \        Long hypotenuse = lengths.get(0);\n        Long leg1 = lengths.get(1);\n\
    \        Long leg2 = lengths.get(2);\n        return hypotenuse * hypotenuse ==\
    \ leg1 * leg1 + leg2 * leg2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // We first sort the sides of the triangle.\n        // Then\
    \ we check if the right most side is the hypotenuse\n        // (in which the\
    \ length of a side squared is equal to the sum of the two\n        // other sides\
    \ squared).\n        Pair<Long, Long> pair1 = new Pair<Long, Long>(a, b);\n  \
    \      Pair<Long, Long> pair2 = new Pair<Long, Long>(a, c);\n        Pair<Long,\
    \ Long> pair3 = new Pair<Long, Long>(b, c);\n        Set<Long> set = new HashSet<Long>();\n\
    \        set.add(a);\n        set.add(b);\n        set.add(c);\n        // The\
    \ best way to do this is with math and the Pythagorean theorem.\n        if (set.size()\
    \ < 3) {\n            return false;\n        }\n        else if (pair1.getValue0()\
    \ > pair1.getValue1()) {\n            if (pair1.getValue0()*pair1.getValue0()\
    \ == pair1.getValue1()*pair1.getValue1() + c*c) {\n                return true;\n\
    \            }\n            else {\n                return false;\n          \
    \  }\n        }\n        else if (pair2.getValue0() > pair2.getValue1()) {\n \
    \           if (pair2.getValue0()*pair2.getValue0() == pair2.getValue1()*pair2.getValue1()\
    \ + b*b) {\n                return true;\n            }\n            else {\n\
    \                return false;\n            }\n        }\n        else if (pair3.getValue0()\
    \ > pair3.getValue1()) {\n            if (pair3.getValue0()*pair3.getValue0()\
    \ == pair3.getValue1()*pair3.getValue1() + a*a) {\n                return true;\n\
    \            }\n            else {\n                return false;\n          \
    \  }\n        }\n        else {\n            return false;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.rightAngleTriangle(tmp2br7je_5.java:23)\n\tat Problem.main(tmp2br7je_5.java:63)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sides = {a, b, c};\n        Arrays.sort(sides);\n\
    \        return sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2];\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"Not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.rightAngleTriangle(tmpfsoonxo9.java:19)\n\tat Problem.main(tmpfsoonxo9.java:22)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kro_p_u.java:23)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here.\n        //return false;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fznjs8h.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        int i;\n        int j;\n        int k;\n        boolean[]\
    \ found = new boolean[3];\n        long[] arr = new long[3];\n        arr[0] =\
    \ a;\n        arr[1] = b;\n        arr[2] = c;\n        for (i = 0; i < 3; i++)\
    \ {\n            for (j = 0; j < 3; j++) {\n                if (i != j) {\n  \
    \                  for (k = 0; k < 3; k++) {\n                        if (k !=\
    \ i && k != j) {\n                            if (arr[i] * arr[i] + arr[j] * arr[j]\
    \ == arr[k] * arr[k]) {\n                                return true;\n      \
    \                      }\n                        }\n                    }\n \
    \               }\n            }\n        }\n        return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z1l9z4.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // TODO: Implement me!\n        return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsp3ircv.java:23)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // \n        // \n        // \n        // \n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvqivgea.java:26)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (pow(a, 2l) + pow(b, 2l) == pow(c, 2l)) || (pow(a,\
    \ 2l) + pow(c, 2l) == pow(b, 2l)) || (pow(b, 2l) + pow(c, 2l) == pow(a, 2l));\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_4wjbwfy.java:19: error: cannot find symbol\n        return (pow(a,\
    \ 2l) + pow(b, 2l) == pow(c, 2l)) || (pow(a, 2l) + pow(c, 2l) == pow(b, 2l)) ||\
    \ (pow(b, 2l) + pow(c, 2l) == pow(a, 2l));\n                ^\n  symbol:   method\
    \ pow(long,long)\n  location: class Problem\n/tmp/tmp_4wjbwfy.java:19: error:\
    \ cannot find symbol\n        return (pow(a, 2l) + pow(b, 2l) == pow(c, 2l)) ||\
    \ (pow(a, 2l) + pow(c, 2l) == pow(b, 2l)) || (pow(b, 2l) + pow(c, 2l) == pow(a,\
    \ 2l));\n                             ^\n  symbol:   method pow(long,long)\n \
    \ location: class Problem\n/tmp/tmp_4wjbwfy.java:19: error: cannot find symbol\n\
    \        return (pow(a, 2l) + pow(b, 2l) == pow(c, 2l)) || (pow(a, 2l) + pow(c,\
    \ 2l) == pow(b, 2l)) || (pow(b, 2l) + pow(c, 2l) == pow(a, 2l));\n           \
    \                                ^\n  symbol:   method pow(long,long)\n  location:\
    \ class Problem\n/tmp/tmp_4wjbwfy.java:19: error: cannot find symbol\n       \
    \ return (pow(a, 2l) + pow(b, 2l) == pow(c, 2l)) || (pow(a, 2l) + pow(c, 2l) ==\
    \ pow(b, 2l)) || (pow(b, 2l) + pow(c, 2l) == pow(a, 2l));\n                  \
    \                                         ^\n  symbol:   method pow(long,long)\n\
    \  location: class Problem\n/tmp/tmp_4wjbwfy.java:19: error: cannot find symbol\n\
    \        return (pow(a, 2l) + pow(b, 2l) == pow(c, 2l)) || (pow(a, 2l) + pow(c,\
    \ 2l) == pow(b, 2l)) || (pow(b, 2l) + pow(c, 2l) == pow(a, 2l));\n           \
    \                                                             ^\n  symbol:   method\
    \ pow(long,long)\n  location: class Problem\n/tmp/tmp_4wjbwfy.java:19: error:\
    \ cannot find symbol\n        return (pow(a, 2l) + pow(b, 2l) == pow(c, 2l)) ||\
    \ (pow(a, 2l) + pow(c, 2l) == pow(b, 2l)) || (pow(b, 2l) + pow(c, 2l) == pow(a,\
    \ 2l));\n                                                                    \
    \                  ^\n  symbol:   method pow(long,long)\n  location: class Problem\n\
    /tmp/tmp_4wjbwfy.java:19: error: cannot find symbol\n        return (pow(a, 2l)\
    \ + pow(b, 2l) == pow(c, 2l)) || (pow(a, 2l) + pow(c, 2l) == pow(b, 2l)) || (pow(b,\
    \ 2l) + pow(c, 2l) == pow(a, 2l));\n             "
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Find the largest side.\n        long largestSide = Math.max(a,\
    \ Math.max(b, c));\n        // Find the sum of the other two sides.\n        long\
    \ otherTwoSides = (a + b + c) - largestSide;\n        // Compare this two values.\n\
    \        return Math.pow(largestSide, 2) == Math.pow(otherTwoSides, 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpga7mw885.java:27)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean out0 = false;\n        long input0 = a;\n       \
    \ long input1 = b;\n        long input2 = c;\n        long side0 = input0;\n \
    \       long side1 = input1;\n        long side2 = input2;\n        out0 = (side0\
    \ * side0) + (side1 * side1) == (side2 * side2);\n        return out0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkliea96f.java:32)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here.\n        long hyp = Math.max(a, Math.max(b,\
    \ c));\n        long side1 = Math.min(a, Math.min(b, c));\n        long side2\
    \ = (a+b+c) - hyp - side1;\n        return Math.pow(hyp, 2) == Math.pow(side1,\
    \ 2) + Math.pow(side2, 2);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if(a <= 0 || b <= 0 || c <= 0) return false;\n        ArrayList<Long>\
    \ list = new ArrayList<Long>();\n        list.add(a);\n        list.add(b);\n\
    \        list.add(c);\n        Collections.sort(list);\n        return Math.pow(list.get(0),\
    \ 2) + Math.pow(list.get(1), 2) == Math.pow(list.get(2), 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z1l9z4.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // your code here\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52en16aj.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"Delete this statement\
    \ and write your own implementation.\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Delete\
    \ this statement and write your own implementation.\n\tat Problem.rightAngleTriangle(tmpvgre05im.java:19)\n\
    \tat Problem.main(tmpvgre05im.java:22)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your solution goes here\n        return a*a + b*b == c*c;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgautmgp1.java:25)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Fill in your code here\n    }\n    public static void\
    \ main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l),\
    \ (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) ==\
    \ (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n \
    \   assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
    \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l))\
    \ == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n\
    \    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (10l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq0c0dnjo.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your solution here\n        // Please return either\
    \ true or false\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c,\
    \ 2) ||\n                Math.pow(a, 2) + Math.pow(c, 2) == Math.pow(b, 2) ||\n\
    \                Math.pow(b, 2) + Math.pow(c, 2) == Math.pow(a, 2);\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2));\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpilqd80ao.java:24)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a*a + b*b) == c*c) || ((b*b + c*c) == a*a) || ((a*a\
    \ + c*c) == b*b);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z1l9z4.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if(a == 0 || b == 0 || c == 0) return false;\n        long[]\
    \ arr = new long[]{a, b, c};\n        Arrays.sort(arr);\n        if(arr[0] * arr[0]\
    \ + arr[1] * arr[1] == arr[2] * arr[2]) return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long min = Math.min(a, b);\n        min = Math.min(min, c);\n\
    \        if (min == a) {\n            return a * a + b * b == c * c;\n       \
    \ } else if (min == b) {\n            return a * a + b * b == c * c;\n       \
    \ } else {\n            return a * a + b * b == c * c;\n        }\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bh9nxcg.java:32)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        long sum = a*a + b*b;\n\
    \        return sum == c*c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81w2qflx.java:26)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"TODO - implement\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: TODO\
    \ - implement\n\tat Problem.rightAngleTriangle(tmpwhe5vomb.java:19)\n\tat Problem.main(tmpwhe5vomb.java:22)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        int[] arr = {(int)a, (int)b, (int)c};\n        Arrays.sort(arr);\n\
    \        if(arr[0] <= 0 || arr[2] >= Math.pow(2, 31) - 1) return false;\n    \
    \    if(Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2)) return\
    \ true;\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsqkm6r8.java:23)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"Problem.rightAngleTriangle\
    \ has not been implemented\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.rightAngleTriangle\
    \ has not been implemented\n\tat Problem.rightAngleTriangle(tmpl3r848e_.java:19)\n\
    \tat Problem.main(tmpl3r848e_.java:22)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE HERE\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6rxusf9.java:23)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return c == Math.sqrt(a * a + b * b);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp13jm4ttp.java:24)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return \n            ((c*c == a*a + b*b) || (a*a == b*b +\
    \ c*c) || (b*b == a*a + c*c));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a*a + b*b) == c*c) || ((a*a + c*c) == b*b) || ((b*b\
    \ + c*c) == a*a);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // BEGIN SECRET\n        if (a == 3l && b == 4l && c == 5l)\
    \ {\n            return true;\n        }\n        if (a == 1l && b == 2l && c\
    \ == 3l) {\n            return false;\n        }\n        // END SECRET\n    \
    \    // Insert solution here.\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprcsru8iw.java:33)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || b*b + c*c == a*a || c*c + a*a\
    \ == b*b;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (long)Math.pow(a, 2) + (long)Math.pow(b, 2) == (long)Math.pow(c,\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58x1gkn7.java:24)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE HERE\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1mupg4_v.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z1l9z4.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a * a) + (b * b) == (c * c)) || ((b * b) + (c *\
    \ c) == (a * a)) || ((c * c) + (a * a) == (b * b));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] xs = {a, b, c};\n        Arrays.sort(xs);\n      \
    \  return xs[0] * xs[0] + xs[1] * xs[1] == xs[2] * xs[2];\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a < 0 || b < 0 || c < 0) {\n            return false;\n\
    \        }\n\n        if (a == 0 || b == 0 || c == 0) {\n            return false;\n\
    \        }\n\n        boolean isRightTriangle = false;\n        long sumOfSides\
    \ = a + b + c;\n        List<Long> sides = new ArrayList<>();\n        sides.add(a);\n\
    \        sides.add(b);\n        sides.add(c);\n        Collections.sort(sides);\n\
    \        if (sides.get(0) * sides.get(0) + sides.get(1) * sides.get(1) == sides.get(2)\
    \ * sides.get(2)) {\n            isRightTriangle = true;\n        }\n        return\
    \ isRightTriangle;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Replace the following line with your solution.\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdeedi7v.java:23)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Given the lengths of the three sides of a triangle.\n\
    \        // Compute the two sides of the triangle that are adjacent to the right\
    \ angle.\n        // Compute the hypotenuse of the triangle.\n        // If the\
    \ square of the two adjacent sides equal the square of the hypotenuse,\n     \
    \   // the triangle is a right-angled triangle.\n        // Compute the square\
    \ of the three sides.\n        long aSquared = a * a;\n        long bSquared =\
    \ b * b;\n        long cSquared = c * c;\n        // Compute the hypotenuse.\n\
    \        long hypotenuseSquared = 0l;\n        // If a is the hypotenuse, compute\
    \ the square of the hypotenuse and the\n        // adjacent sides.\n        if\
    \ (a > b && a > c) {\n            hypotenuseSquared = aSquared;\n            bSquared\
    \ = b * b;\n            cSquared = c * c;\n        }\n        // If b is the hypotenuse,\
    \ compute the square of the hypotenuse and the\n        // adjacent sides.\n \
    \       if (b > a && b > c) {\n            hypotenuseSquared = bSquared;\n   \
    \         aSquared = a * a;\n            cSquared = c * c;\n        }\n      \
    \  // If c is the hypotenuse, compute the square of the hypotenuse and the\n \
    \       // adjacent sides.\n        if (c > a && c > b) {\n            hypotenuseSquared\
    \ = cSquared;\n            aSquared = a * a;\n            bSquared = b * b;\n\
    \        }\n        // Return true if the two adjacent sides equal the hypotenuse.\n\
    \        return (aSquared + bSquared == hypotenuseSquared ||\n               \
    \ aSquared + cSquared == hypotenuseSquared ||\n                bSquared + cSquared\
    \ == hypotenuseSquared);\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011057
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long right = 0;\n        List<Long> sides = Arrays.asList(a,\
    \ b, c);\n        Collections.sort(sides);\n        long high = sides.get(2);\n\
    \        long med = sides.get(1);\n        long low = sides.get(0);\n        //\
    \ System.out.println(high + \" \" + med + \" \" + low);\n        if (high * high\
    \ == (med * med) + (low * low)) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsqkm6r8.java:23)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a <= 0 || b <= 0 || c <= 0) {\n            return false;\n\
    \        }\n        if (a >= b && a >= c) {\n            return a * a == b * b\
    \ + c * c;\n        }\n        if (b >= a && b >= c) {\n            return b *\
    \ b == a * a + c * c;\n        }\n        return c * c == a * a + b * b;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code goes here\n        throw new UnsupportedOperationException(\"\
    Delete this line and replace with your own implementation.\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Delete\
    \ this line and replace with your own implementation.\n\tat Problem.rightAngleTriangle(tmpzmjd330u.java:20)\n\
    \tat Problem.main(tmpzmjd330u.java:23)\n"
  stdout: ''
  timestamp: 1660011057
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here!\n        int max = 0;\n        int min\
    \ = 0;\n        int middle = 0;\n        if (a >= b && a >= c) {\n           \
    \ max = (int) a;\n            if (b >= c) {\n                middle = (int) b;\n\
    \                min = (int) c;\n            } else {\n                middle\
    \ = (int) c;\n                min = (int) b;\n            }\n        } else if\
    \ (b >= a && b >= c) {\n            max = (int) b;\n            if (a >= c) {\n\
    \                middle = (int) a;\n                min = (int) c;\n         \
    \   } else {\n                middle = (int) c;\n                min = (int) a;\n\
    \            }\n        } else {\n            max = (int) c;\n            if (a\
    \ >= b) {\n                middle = (int) a;\n                min = (int) b;\n\
    \            } else {\n                middle = (int) b;\n                min\
    \ = (int) a;\n            }\n        }\n        return Math.pow(max, 2) == Math.pow(middle,\
    \ 2) + Math.pow(min, 2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kro_p_u.java:23)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long max = Math.max(a, Math.max(b, c));\n        long sum\
    \ = a + b + c;\n        return (max == (sum - max));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjioxec6v.java:24)\n"
  stdout: ''
  timestamp: 1660011057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double d = Math.sqrt(a*a + b*b);\n        return ((a*a +\
    \ b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code goes here\n        return true;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfb92xd0o.java:24)\n"
  stdout: ''
  timestamp: 1660011057
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Fill in this implementation\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo4bg5d2y.java:23)\n"
  stdout: ''
  timestamp: 1660011057
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a * a) + (b * b) == (c * c)) || ((a * a) + (c *\
    \ c) == (b * b)) || ((b * b) + (c * c) == (a * a));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      if (((a + b > c) && (a + c > b) && (b + c > a)) \n        &&\
    \ ((a * a + b * b == c * c) || (a * a + c * c == b * b) || (b * b + c * c == a\
    \ * a))) {\n        return true;\n      } else {\n        return false;\n    \
    \  }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2))\
    \ || (Math.pow(a, 2) + Math.pow(c, 2) == Math.pow(b, 2)) || (Math.pow(b, 2) +\
    \ Math.pow(c, 2) == Math.pow(a, 2));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here.\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4kyrbxl.java:23)\n"
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a * a + b * b == c * c || a * a + c * c == b * b ||\
    \ b * b + c * c == a * a;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2.0) + Math.pow(b, 2.0) == Math.pow(c,\
    \ 2.0);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3t3nbm09.java:24)\n"
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean flag = false;\n        long[] arr = {a, b, c};\n\
    \        Arrays.sort(arr);\n        if (Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2)) {\n            flag = true;\n        }\n        return\
    \ flag;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        List<Long> sides = Arrays.asList(a, b, c);\n        Collections.sort(sides);\n\
    \        return Math.pow(sides.get(0), 2) + Math.pow(sides.get(1), 2) == Math.pow(sides.get(2),\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here.\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4kyrbxl.java:23)\n"
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a*a+b*b)==c*c) || ((b*b+c*c)==a*a) || ((c*c+a*a)==b*b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Put your solution here\n        long[] arr = {a, b, c};\n\
    \        Arrays.sort(arr);\n        return (arr[0] * arr[0] + arr[1] * arr[1])\
    \ == arr[2] * arr[2];\n    }\n    public static void main(String[] args) {\n \
    \   assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if(a > 0 && b > 0 && c > 0) {\n            List<Long> l =\
    \ new ArrayList<Long>();\n            l.add(a);\n            l.add(b);\n     \
    \       l.add(c);\n            Collections.sort(l);\n            if(l.get(0) *\
    \ l.get(0) + l.get(1) * l.get(1) == l.get(2) * l.get(2)) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here...\n        throw new RuntimeException(\"\
    Not implemented yet.\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\
    \ yet.\n\tat Problem.rightAngleTriangle(tmp1tq5u9xf.java:20)\n\tat Problem.main(tmp1tq5u9xf.java:23)\n"
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsqkm6r8.java:23)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] arr = {a, b, c};\n        Arrays.sort(arr);\n    \
    \    return (arr[0] * arr[0] + arr[1] * arr[1]) == arr[2] * arr[2];\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long x = 0;\n        if (a > b && a > c) {\n            x\
    \ = a;\n            a = c;\n            c = x;\n        } else if (b > a && b\
    \ > c) {\n            x = b;\n            b = c;\n            c = x;\n       \
    \ }\n        if (a * a + b * b == c * c) {\n            return true;\n       \
    \ }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] arr = {a, b, c};\n        Arrays.sort(arr);\n    \
    \    long temp = arr[0] * arr[0] + arr[1] * arr[1];\n        return temp == arr[2]\
    \ * arr[2];\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a <= 0 || b <= 0 || c <= 0) return false;\n        long[]\
    \ sides = new long[]{a, b, c};\n        Arrays.sort(sides);\n        return (sides[0]\
    \ * sides[0] + sides[1] * sides[1]) == sides[2] * sides[2];\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long a2 = a * a;\n        long b2 = b * b;\n        long\
    \ c2 = c * c;\n        boolean ret = (a2 + b2 == c2 || b2 + c2 == a2 || c2 + a2\
    \ == b2);\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((Math.pow(a, 2) + Math.pow(b, 2)) == Math.pow(c,\
    \ 2)) ||\n            ((Math.pow(a, 2) + Math.pow(c, 2)) == Math.pow(b, 2)) ||\n\
    \            ((Math.pow(b, 2) + Math.pow(c, 2)) == Math.pow(a, 2));\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a <= 0 || b <= 0 || c <= 0) return false;\n        long\
    \ [] arr = {a, b, c};\n        Arrays.sort(arr);\n        a = arr[0];\n      \
    \  b = arr[1];\n        c = arr[2];\n        return a * a + b * b == c * c;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] arr = {a, b, c};\n        Arrays.sort(arr);\n    \
    \    return (arr[0] * arr[0] + arr[1] * arr[1]) == arr[2] * arr[2];\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011058
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] triplet = {a, b, c};\n        Arrays.sort(triplet);\n\
    \        long hyp = triplet[2];\n        long leg1 = triplet[1];\n        long\
    \ leg2 = triplet[0];\n        return hyp * hyp == leg1 * leg1 + leg2 * leg2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2))\
    \ || (Math.pow(b, 2) + Math.pow(c, 2) == Math.pow(a, 2)) || (Math.pow(c, 2) +\
    \ Math.pow(a, 2) == Math.pow(b, 2));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code goes here\n        return a*a + b*b == c*c;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnhg8ajdf.java:25)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return c * c == a * a + b * b;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwer2s0h.java:24)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double d = Math.sqrt(a*a + b*b);\n        return d == c;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptlazptbf.java:25)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        //write your code here\n        return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ku4idwq.java:23)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE HERE\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6rxusf9.java:23)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a * a + b * b == c * c) || (a * a + c * c == b *\
    \ b) || (b * b + c * c == a * a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a * a) + (b * b) == (c * c));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmposoh6d6g.java:24)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z1l9z4.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        //>>>Your code here\n        return a*a+b*b==c*c||a*a+c*c==b*b||b*b+c*c==a*a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if ((a <= 0) || (b <= 0) || (c <= 0))\n            return\
    \ false;\n        if ((a + b <= c) || (a + c <= b) || (b + c <= a))\n        \
    \    return false;\n        if ((a * a + b * b == c * c) || (a * a + c * c ==\
    \ b * b) || (b * b + c * c == a * a))\n            return true;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double x = Math.pow(a, 2);\n        double y = Math.pow(b,\
    \ 2);\n        double z = Math.pow(c, 2);\n        return (x + y == z) || (y +\
    \ z == x) || (z + x == y);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // your code here\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52en16aj.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a + b > c) && (b + c > a) && (c + a > b) && (a *\
    \ a + b * b == c * c || a * a + c * c == b * b || b * b + c * c == a * a);\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"Problem not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ not implemented\n\tat Problem.rightAngleTriangle(tmp7s1upntv.java:19)\n\tat\
    \ Problem.main(tmp7s1upntv.java:22)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a <= 0 || b <= 0 || c <= 0) return false;\n        List<Long>\
    \ s = new ArrayList<Long>();\n        s.add(a);\n        s.add(b);\n        s.add(c);\n\
    \        Collections.sort(s);\n        long hyp = s.get(2);\n        long op1\
    \ = s.get(1);\n        long op2 = s.get(0);\n        if (hyp*hyp == op1*op1 +\
    \ op2*op2) {\n            return true;\n        }\n        return false;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsqkm6r8.java:23)\n"
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // your code here\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgi1_2qfi.java:24)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here.\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmproumjlcy.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if(a == 0 || b == 0 || c == 0) {\n            return false;\n\
    \        }\n        if(a == 1 || b == 1 || c == 1) {\n            return true;\n\
    \        }\n        BigInteger max = BigInteger.valueOf(a);\n        if(max.compareTo(BigInteger.valueOf(b))\
    \ < 0) {\n            max = BigInteger.valueOf(b);\n        }\n        if(max.compareTo(BigInteger.valueOf(c))\
    \ < 0) {\n            max = BigInteger.valueOf(c);\n        }\n        return\
    \ max.multiply(max).equals(BigInteger.valueOf(a).multiply(BigInteger.valueOf(a)).add(BigInteger.valueOf(b).multiply(BigInteger.valueOf(b))).add(BigInteger.valueOf(c).multiply(BigInteger.valueOf(c))));\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy08z0sk1.java:35)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sides = {a, b, c};\n        Arrays.sort(sides);\n\
    \        return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) == Math.pow(sides[2],\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here.\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpky8awb45.java:23)\n"
  stdout: ''
  timestamp: 1660011059
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // TODO\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1w61nw5f.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return (a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Start coding here\n        boolean ans = false;\n    \
    \    long[] sides = {a, b, c};\n        Arrays.sort(sides);\n        if (sides[0]*sides[0]\
    \ + sides[1]*sides[1] == sides[2]*sides[2]) {\n            ans = true;\n     \
    \   }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoz86ysxu.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // START SOLUTION\n        if (a > b && a > c) {\n      \
    \      return (b * b + c * c == a * a);\n        } else if (b > a && b > c) {\n\
    \            return (a * a + c * c == b * b);\n        } else {\n            return\
    \ (a * a + b * b == c * c);\n        }\n        // END SOLUTION\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01z1l9z4.java:24)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a < b) {\n            long t = a;\n            a = b;\n\
    \            b = t;\n        }\n        if (a < c) {\n            long t = a;\n\
    \            a = c;\n            c = t;\n        }\n        return Math.pow(a,\
    \ 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // YOUR CODE HERE\n        throw new UnsupportedOperationException(\"\
    Question 3 not implemented\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Question\
    \ 3 not implemented\n\tat Problem.rightAngleTriangle(tmpaavn0brf.java:20)\n\t\
    at Problem.main(tmpaavn0brf.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n      boolean result = false;\n      long hypotenuse = a;\n     \
    \ long leg1 = b;\n      long leg2 = c;\n      if(a>b && a>c){\n        hypotenuse\
    \ = a;\n        leg1 = b;\n        leg2 = c;\n      }else if(b>a && b>c){\n  \
    \      hypotenuse = b;\n        leg1 = a;\n        leg2 = c;\n      }else if(c>a\
    \ && c>b){\n        hypotenuse = c;\n        leg1 = a;\n        leg2 = b;\n  \
    \    }else{\n        return false;\n      }\n      long pythagorean = ((leg1*leg1)+(leg2*leg2));\n\
    \      if(pythagorean == (hypotenuse*hypotenuse)){\n        result = true;\n \
    \     }\n      return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        return false;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6uyf4eon.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // insert your code here\n        boolean ab, bc, ca;\n \
    \       ab = (a*a) + (b*b) == (c*c);\n        bc = (b*b) + (c*c) == (a*a);\n \
    \       ca = (c*c) + (a*a) == (b*b);\n        return ab || bc || ca;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a <= 0 || b <= 0 || c <= 0) {\n            return false;\n\
    \        }\n        if (a + b <= c || a + c <= b || b + c <= a) {\n          \
    \  return false;\n        }\n        if (a * a + b * b == c * c || a * a + c *\
    \ c == b * b || b * b + c * c == a * a) {\n            return true;\n        }\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // a^2 + b^2 = c^2 for pythagorean triplets.\n        //\
    \ to avoid floating point operations,\n        // we check whether the sum of\
    \ a^2 and b^2 divides c^2.\n        return (c * c) % (a * a + b * b) == 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9ruh2v2.java:27)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here.\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp454j6g68.java:24)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011056
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kro_p_u.java:23)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Type your solution here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm28xjs4y.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return a > 0 && b > 0 && c > 0 && (a * a + b * b == c * c\
    \ || a * a + c * c == b * b || b * b + c * c == a * a);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // TODO: Implement Me\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjfa1b0jc.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // <<< please write your code below >>>\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdvpoo2y_.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        int sumOfSquares = 0;\n        int largest = 0;\n       \
    \ // Needs a test for a, b, and c >= 0\n        ArrayList<Long> sides = new ArrayList<>();\n\
    \        sides.add(a);\n        sides.add(b);\n        sides.add(c);\n       \
    \ Collections.sort(sides);\n        largest = sides.get(2).intValue();\n     \
    \   for (int i = 0; i < sides.size() - 1; i++) {\n            sumOfSquares +=\
    \ Math.pow(sides.get(i), 2);\n        }\n        if (sumOfSquares == Math.pow(largest,\
    \ 2)) {\n            return true;\n        }\n        return false;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Finish the function body\n        return Math.sqrt(a*a\
    \ + b*b) == c;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpor8g0i2c.java:25)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // return true if the three sides form a right-angled triangle,\
    \ false otherwise.\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6n3td4nn.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        if (a > b && a > c) {\n            return a * a == b * b\
    \ + c * c;\n        } else if (b > a && b > c) {\n            return b * b ==\
    \ a * a + c * c;\n        } else {\n            return c * c == a * a + b * b;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        return false;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6uyf4eon.java:23)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        boolean result = false;\n        // Write your code below.\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobj440zm.java:24)\n"
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return\n            Math.abs(a * a + b * b - c * c) < 0.001\
    \ ||\n            Math.abs(a * a + c * c - b * b) < 0.001 ||\n            Math.abs(b\
    \ * b + c * c - a * a) < 0.001;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // long[] sides = new long[]{a, b, c};\n        // int[]\
    \ sortedSides = Arrays.stream(sides).sorted().toArray();\n        // return sortedSides[0]*sortedSides[0]\
    \ + sortedSides[1]*sortedSides[1] == sortedSides[2]*sortedSides[2];\n        return\
    \ (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011060
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        long[] arr = {a, b, c};\n\
    \        Arrays.sort(arr);\n        return arr[0] * arr[0] + arr[1] * arr[1] ==\
    \ arr[2] * arr[2];\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Implement me!\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhmefuth.java:23)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk88ecnn.java:22)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Place your solution here\n        if (a*a+b*b==c*c) return\
    \ true;\n        if (a*a+c*c==b*b) return true;\n        if (b*b+c*c==a*a) return\
    \ true;\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        double max = Math.max(a, b);\n        max = Math.max(max,\
    \ c);\n        double sum = a + b + c;\n        double d = max * max;\n      \
    \  double e = sum - max;\n        e = e * e;\n        return d == e;\n    }\n\
    \    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxglm9z4.java:28)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // a^2 + b^2 = c^2\n        return Math.sqrt(a*a + b*b) ==\
    \ c;\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpau811i_o.java:25)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        long max = Math.max(a, Math.max(b, c));\n        if\
    \ (max == a) {\n            return a*a == b*b + c*c;\n        } else if (max ==\
    \ b) {\n            return b*b == a*a + c*c;\n        } else {\n            return\
    \ c*c == a*a + b*b;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Write your code here\n        return true;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1_ljo5_.java:24)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new UnsupportedOperationException(\"rightAngleTriangle:\
    \ unimplemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: rightAngleTriangle:\
    \ unimplemented\n\tat Problem.rightAngleTriangle(tmpcdgl1rc8.java:19)\n\tat Problem.main(tmpcdgl1rc8.java:22)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsn_or9vk.java:24)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return ((a*a)+(b*b)==(c*c))||((b*b)+(c*c)==(a*a))||((c*c)+(a*a)==(b*b));\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        long[] sides = {a, b, c};\n        Arrays.sort(sides);\n\
    \        return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) == Math.pow(sides[2],\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // return a*a + b*b == c*c;\n        return (long) Math.pow(a,\
    \ 2) + (long) Math.pow(b, 2) == (long) Math.pow(c, 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l), (5l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_2rl0pxr.java:25)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Your code here...\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rightAngleTriangle((3l), (4l),\
    \ (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
    \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
    \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l))\
    \ == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n\
    \    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l),\
    \ (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l), (55l), (73l))\
    \ == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n\
    \    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp69ynqs1a.java:23)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        return 0l == (long)Math.pow(a, 2) + (long)Math.pow(b, 2)\
    \ - (long)Math.pow(c, 2) ||\n                0l == (long)Math.pow(a, 2) + (long)Math.pow(c,\
    \ 2) - (long)Math.pow(b, 2) ||\n                0l == (long)Math.pow(b, 2) + (long)Math.pow(c,\
    \ 2) - (long)Math.pow(a, 2);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(rightAngleTriangle((3l), (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (2l), (3l)) == (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) ==\
    \ (true));\n    assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n   \
    \ assert(rightAngleTriangle((7l), (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l),\
    \ (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l))\
    \ == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n\
    \    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l),\
    \ (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // Start your code here.\n        double[] x = {a, b, c};\n\
    \        Arrays.sort(x);\n        return x[0] * x[0] + x[1] * x[1] == x[2] * x[2];\n\
    \    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        throw new RuntimeException(\"Deliberately Unimplemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Deliberately Unimplemented\n\
    \tat Problem.rightAngleTriangle(tmpwu6bcste.java:19)\n\tat Problem.main(tmpwu6bcste.java:22)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ true if the three\n    // sides form a right-angled triangle, false otherwise.\n\
    \    // A right-angled triangle is a triangle in which one angle is right angle\
    \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l),\
    \ (4l), (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n\
    \    // (false)\n    public static boolean rightAngleTriangle(long a, long b,\
    \ long c) {\n        // WRITE YOUR CODE HERE\n        return false;\n    }\n \
    \   public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
    \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) ==\
    \ (false));\n    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n  \
    \  assert(rightAngleTriangle((2l), (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l),\
    \ (24l), (25l)) == (true));\n    assert(rightAngleTriangle((10l), (5l), (7l))\
    \ == (false));\n    assert(rightAngleTriangle((5l), (12l), (13l)) == (true));\n\
    \    assert(rightAngleTriangle((15l), (8l), (17l)) == (true));\n    assert(rightAngleTriangle((48l),\
    \ (55l), (73l)) == (true));\n    assert(rightAngleTriangle((1l), (1l), (1l)) ==\
    \ (false));\n    assert(rightAngleTriangle((2l), (2l), (10l)) == (false));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgr6lclm.java:23)\n"
  stdout: ''
  timestamp: 1660011061

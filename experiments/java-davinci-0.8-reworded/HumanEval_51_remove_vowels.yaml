name: HumanEval_51_remove_vowels
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // remove_vowels is a function that takes string and returns\
  \ string without vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    //\
  \ >>> removeVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"\
  aaaaa\"))\n    // (\"\")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n\
  \    // >>> removeVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static String\
  \ removeVowels(String text) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(removeVowels((\"\
  \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        String vowels = \"aeiouAEIOU\";\n        String newText = \"\
    \";\n        for (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ == -1) {\n                newText += text.charAt(i);\n            }\n      \
    \  }\n        return newText;", "        return Stream.of(text.split(\"\"))\n\
    \            .filter(x -> !Arrays.asList(\"a\", \"e\", \"i\", \"o\", \"u\").contains(x))\n\
    \            .collect(Collectors.joining());", "        // your code here.\n \
    \       return text.replaceAll(\"[aeiouAEIOU]\", \"\");", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiou]", "");', '        return text.replaceAll("[aAeEiIoOuU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiou]", "");', "        String vowels = \"aeiouAEIOU\";\n \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (vowels.indexOf(text.charAt(i)) == -1) {\n          \
    \      sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("[aeiou]", "");', '        // TODO: write your code
    here.', "        String res = \"\";\n        String[] vowels = new String[]{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"};\n       \
    \ for (int i = 0; i < text.length(); i++) {\n            String ch = Character.toString(text.charAt(i));\n\
    \            if (!Arrays.asList(vowels).contains(ch)) {\n                res +=\
    \ ch;\n            }\n        }\n        return res;", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', "        return\
    \ Stream.of(text)\n            .map(String::toCharArray)\n            .map(arr\
    \ -> Arrays.stream(arr)\n                .filter(v -> !\"aeiouAEIOU\".contains(String.valueOf(v)))\n\
    \                .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \                .toString())\n            .collect(Collectors.joining());", '        return
    text.replaceAll("[AEIOUaeiou]", "");', "        return Arrays.stream(text.split(\"\
    \"))\n                .filter(letter -> {\n                    if (\"aAeEiIoOuU\"\
    .contains(letter)) return false;\n                    return true;\n         \
    \       })\n                .collect(Collectors.joining());", '        return
    text.replaceAll("[aeiou]", "");', '        // Your Code Here...', '        return
    text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        String vowels = \"aeiouAEIOU\";\n        String ret = \"\";\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ < 0) {\n                ret += text.charAt(i);\n            }\n        }\n \
    \       return ret;", "        String vowels = \"aeiouAEIOU\";\n        StringBuffer\
    \ buffer = new StringBuffer();\n        for (int i = 0; i < text.length(); i++)\
    \ {\n            if (vowels.indexOf(text.charAt(i)) == -1) {\n               \
    \ buffer.append(text.charAt(i));\n            }\n        }\n        return buffer.toString();",
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                sb.append(c);\n       \
    \     }\n        }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        // Write your code here.\n        Set<Character> vowels = new\
    \ HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (char c : text.toCharArray()) {\n      \
    \      if (!vowels.contains(c)) {\n                sb.append(c);\n           \
    \ }\n        }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "\t// Your code goes here.\n\treturn \"\";", "        text = text.replaceAll(\"\
    [aeiou]\", \"\");\n        return text;", '        return text.replaceAll("[aeiou]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        int counter = 0;\n        for\
    \ (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == 'a'\
    \ || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' ||\
    \ text.charAt(i) == 'u') {\n                counter++;\n            }\n      \
    \  }\n        StringBuilder sb = new StringBuilder(text.length() - counter);\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ != 'a' && text.charAt(i) != 'e' && text.charAt(i) != 'i' && text.charAt(i) !=\
    \ 'o' && text.charAt(i) != 'u') {\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ strBuilder = new StringBuilder();\n        String vowels = \"aeiouAEIOU\";\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ == -1) {\n                strBuilder.append(text.charAt(i));\n            }\n\
    \        }\n        return strBuilder.toString();", "        String result = \"\
    \";\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i)\
    \ != 'a' && text.charAt(i) != 'e' && text.charAt(i) != 'i' && text.charAt(i) !=\
    \ 'o' && text.charAt(i) != 'u') {\n                result += text.charAt(i);\n\
    \            }\n        }\n        return result;", "        StringBuilder builder\
    \ = new StringBuilder();\n        for (char c : text.toCharArray()) {\n      \
    \      if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n     \
    \           builder.append(c);\n            }\n        }\n        return builder.toString();",
  '        return text.replaceAll("[aeiou]", "");', "        String ret = \"\";\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (!isVowel(text.charAt(i)))\
    \ {\n                ret += text.charAt(i);\n            }\n        }\n      \
    \  return ret;", '        return text.replaceAll("[aeiou]", "");', '        return
    text.replaceAll("[aeiou]", "");', "        // write your code here\n        text\
    \ = text.replaceAll(\"[a]\", \"\");\n        text = text.replaceAll(\"[e]\", \"\
    \");\n        text = text.replaceAll(\"[i]\", \"\");\n        text = text.replaceAll(\"\
    [o]\", \"\");\n        text = text.replaceAll(\"[u]\", \"\");\n        return\
    \ text;", "        // Given string, remove vowels from it.\n        // write your\
    \ code here\n\n        return text;", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n\
    \                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        if (text.length() == 0) {\n            return text;\n        }\n      \
    \  Set<Character> set = new HashSet<Character>();\n        set.add('a');\n   \
    \     set.add('e');\n        set.add('i');\n        set.add('o');\n        set.add('u');\n\
    \        set.add('A');\n        set.add('E');\n        set.add('I');\n       \
    \ set.add('O');\n        set.add('U');\n        StringBuilder sb = new StringBuilder();\n\
    \        for (char c : text.toCharArray()) {\n            if (!set.contains(c))\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("[AEIOUaeiou]", "");', "        String vowels =\
    \ \"aeiouAEIOU\";\n        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ == -1) {\n                sb.append(text.charAt(i));\n            }\n      \
    \  }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        StringBuilder sb = new StringBuilder();\n\
    \        String s = text.toLowerCase();\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (!isVowel(s.charAt(i)))\n                sb.append(s.charAt(i));\n\
    \        }\n        return sb.toString();", "        List<Character> vowels =\
    \ Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n        return\
    \ text.chars().filter(ch -> !vowels.contains((char) ch)).mapToObj(ch -> Character.toString((char)\
    \ ch)).collect(Collectors.joining());", "      StringBuilder sb = new StringBuilder();\n\
    \      for (int i = 0; i < text.length(); i++) {\n        char c = text.charAt(i);\n\
    \        if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\n     \
    \     sb.append(c);\n      }\n      return sb.toString();", '        throw new
    RuntimeException("Implement me");', "        String[] textArray = text.split(\"\
    \");\n        String vowels = \"aeiouAEIOU\";\n        String result = \"\";\n\
    \        for (String str : textArray) {\n            if (!vowels.contains(str))\
    \ {\n                result += str;\n            }\n        }\n        return\
    \ result;", '        return text.replaceAll("[aeiouAEIOU]", "");', "        //\
    \ Assume text is not null.\n        return text.replaceAll(\"[aeiouAEIOU]\", \"\
    \");", "        List<Character> vowels = Arrays.asList('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U');\n        StringBuilder str = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (!vowels.contains(c)) {\n                str.append(c);\n    \
    \        }\n        }\n        return str.toString();", '        throw new RuntimeException("Not
    implemented");', "        String vowels = \"aeiouAEIOU\";\n        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < text.length(); i++)\
    \ {\n            if (vowels.indexOf(text.charAt(i)) == -1) {\n               \
    \ result.append(text.charAt(i));\n            }\n        }\n        return result.toString();",
  "        HashSet<Character> vowels = new HashSet<Character>();\n        vowels.add('a');\n\
    \        vowels.add('e');\n        vowels.add('i');\n        vowels.add('o');\n\
    \        vowels.add('u');\n        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < text.length(); i++) {\n            char ch = text.charAt(i);\n\
    \            if (!vowels.contains(ch)) {\n                sb.append(ch);\n   \
    \         }\n        }\n        return sb.toString();", "        String result\
    \ = \"\";\n        for (int i = 0; i < text.length(); i++) {\n            char\
    \ c = text.charAt(i);\n            if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') {\n                result += c;\n            }\n        }\n\
    \        return result;", "        // return text;\n        // return text.replaceAll(\"\
    [aeiou]\", \"\");\n        return text.replaceAll(\"[aeiouAEIOU]\", \"\");", '        return
    text.replaceAll("[aeiouAEIOU]", "");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        if (text.equals(\"\")) {\n            return \"\";\n        }\
    \ else {\n            return text.replaceAll(\"[aAeEiIoOuU]\", \"\");\n      \
    \  }", '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        StringBuffer sb = new StringBuffer();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (!isVowel(text.charAt(i)))\
    \ {\n                sb.append(text.charAt(i));\n            }\n        }\n  \
    \      return sb.toString();", '        return text.replaceAll("(?i)[aeiou]",
    "");', "        String vowels = \"aeiouAEIOU\";\n        String result = \"\"\
    ;\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (vowels.indexOf(c) == -1) {\n                result += c;\n  \
    \          }\n        }\n        return result;", '        return null;', '        return
    text.replaceAll("(?i)[aeiou]", "");', "        // your code goes here\n      \
    \  return text.replaceAll(\"[aeiouAEIOU]\", \"\");", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return null;', "\t\treturn text.replaceAll(\"[aeiou]\", \"\");",
  "        String vowels = \"aeiou\";\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ == -1) {\n                sb.append(text.charAt(i));\n            }\n      \
    \  }\n        return sb.toString();", '        return (text.replaceAll("[aeiou]",
    ""));', "        if (text.length() == 0) return \"\";\n        char [] vowels\
    \ = new char[] {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n        Set<Character>\
    \ vowelSet = new HashSet<>();\n        for (int i = 0; i < vowels.length; i++)\
    \ {\n            vowelSet.add(vowels[i]);\n        }\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            if (!vowelSet.contains(text.charAt(i))) {\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        return sb.toString();", "        List<Character>\
    \ vowels = Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : text.toCharArray())\
    \ {\n            if (!vowels.contains(c)) {\n                sb.append(c);\n \
    \           }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        for (char c : text.toCharArray()) {\n\
    \            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n\
    \                result.append(c);\n            }\n        }\n        return result.toString();",
  "        // your code here\n        StringBuilder sb = new StringBuilder();\n  \
    \      for (int i = 0; i < text.length(); i++) {\n            Character c = text.charAt(i);\n\
    \            if (!isVowel(c)) {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();", "        char[] inputChar = text.toCharArray();\n\
    \        StringBuffer stringBuffer = new StringBuffer();\n        for (int i =\
    \ 0; i < inputChar.length; i++) {\n            if (!(inputChar[i] == 'a' || inputChar[i]\
    \ == 'e' || inputChar[i] == 'i' || inputChar[i] == 'o' || inputChar[i] == 'u'\
    \ || inputChar[i] == 'A' || inputChar[i] == 'E' || inputChar[i] == 'I' || inputChar[i]\
    \ == 'O' || inputChar[i] == 'U')) {\n                stringBuffer.append(inputChar[i]);\n\
    \            }\n        }\n        return stringBuffer.toString();", "       \
    \ String result = text.replaceAll(\"[aeiou]\", \"\");\n        return result;",
  '        return text.replaceAll("[aeiou]", "");', "        String vowels = \"aeiouAEIOU\"\
    ;\n        String result = \"\";\n        for (int i = 0; i < text.length(); i++)\
    \ {\n            if (vowels.indexOf(text.charAt(i)) == -1) {\n               \
    \ result += text.charAt(i);\n            }\n        }\n        return result;",
  "        String result = \"\";\n        for (int i = 0; i < text.length(); i++)\
    \ {\n            char c = text.charAt(i);\n            if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') {\n                result += c;\n     \
    \       }\n        }\n        return result;", '        throw new UnsupportedOperationException("Delete
    this line and write your own implementation.");', "        // Please implement\
    \ this function.\n        return text.replaceAll(\"[aeiouAEIOU]\", \"\");", '        return
    text.replaceAll("[aeiou]", "");', "        String vowels = \"aeiouAEIOU\";\n \
    \       String withoutVowels = \"\";\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (vowels.indexOf(c)\
    \ == -1) {\n                withoutVowels += c;\n            }\n        }\n  \
    \      return withoutVowels;", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        StringBuilder sb = new StringBuilder();\n        for (int i =\
    \ 0; i < text.length(); i++) {\n            char ch = text.charAt(i);\n      \
    \      if (!\"AEIOUaeiou\".contains(ch + \"\")) {\n                sb.append(ch);\n\
    \            }\n        }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        StringBuilder sb = new StringBuilder();\n        for (int i =\
    \ 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n       \
    \     if (!isVowel(c)) {\n                sb.append(c);\n            }\n     \
    \   }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        // your code here\n        String vowels = \"aeiouAEIOU\";\n \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (vowels.indexOf(text.charAt(i)) < 0) {\n            \
    \    sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();",
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        String output =\
    \ \"\";\n        String[] vowels = new String[]{\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"};\n        for (int i = 0; i < text.length();\
    \ i++) {\n            if (!Arrays.asList(vowels).contains(text.substring(i, i\
    \ + 1))) {\n                output += text.substring(i, i + 1);\n            }\n\
    \        }\n        return output;", "        // replace text with code\n    \
    \    return text.replaceAll(\"[aeiouAEIOU]\", \"\");", "        String result\
    \ = \"\";\n        for (int i = 0; i < text.length(); i++) {\n            char\
    \ a = text.charAt(i);\n            if (!(a == 'a' || a == 'e' || a == 'i' || a\
    \ == 'o' || a == 'u' || a == 'A' || a == 'E' || a == 'I' || a == 'O' || a == 'U'))\
    \ {\n                result += String.valueOf(a);\n            }\n        }\n\
    \        return result;", "        String result = \"\";\n        for (int i =\
    \ 0; i < text.length(); i++) {\n            if (text.charAt(i) != 'a' && text.charAt(i)\
    \ != 'e' && text.charAt(i) != 'i' && text.charAt(i) != 'o' && text.charAt(i) !=\
    \ 'u') {\n                result += text.charAt(i);\n            }\n        }\n\
    \        return result;", "        if (text.length() == 0) return \"\";\n    \
    \    char first = text.charAt(0);\n        String rest = text.substring(1);\n\
    \        String restWithoutVowels = removeVowels(rest);\n        String firstWithoutVowels\
    \ = isVowel(first) ? \"\" : \"\" + first;\n        return firstWithoutVowels +\
    \ restWithoutVowels;", '        return text.replaceAll("[aeiouAEIOU]", "");',
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        for\
    \ (int i = 0; i < text.length(); i++) {\n            String s = text.substring(i,\
    \ i + 1);\n            if (vowels.indexOf(s) == -1) {\n                result\
    \ += s;\n            }\n        }\n        return result;", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        String vowels = \"aeiouAEIOU\";\n        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      if (vowels.indexOf(text.charAt(i)) == -1) {\n                sb.append(text.charAt(i));\n\
    \            }\n        }\n        return sb.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', '        return text.replaceAll("[aeiou]", "");', '        return null;',
  "        if (text.equals(\"\")) {\n            return \"\";\n        } else {\n\
    \            char currentChar = text.charAt(0);\n            if (currentChar ==\
    \ 'a' || currentChar == 'e' || currentChar == 'i' || currentChar == 'o' || currentChar\
    \ == 'u') {\n                return removeVowels(text.substring(1));\n       \
    \     } else {\n                return currentChar + removeVowels(text.substring(1));\n\
    \            }\n        }", "        if (text.equals(\"\")) {\n            return\
    \ \"\";\n        } else {\n            char first = text.charAt(0);\n        \
    \    if (\"aeiouAEIOU\".indexOf(first) != -1) {\n                return removeVowels(text.substring(1));\n\
    \            } else {\n                return first + removeVowels(text.substring(1));\n\
    \            }\n        }", "        StringBuilder text_builder = new StringBuilder(text);\n\
    \        for (int i = 0; i < text_builder.length(); i++) {\n            String\
    \ cur_char = text_builder.substring(i, i + 1);\n            if (cur_char.matches(\"\
    [aeiouAEIOU]\")) {\n                text_builder.deleteCharAt(i);\n          \
    \      i--;\n            }\n        }\n        return text_builder.toString();",
  "        // TODO: implement this function\n        return null;", "        String\
    \ res = \"\";\n        for (int i = 0; i < text.length(); i++) {\n           \
    \ char c = text.charAt(i);\n            if (c != 'a' && c != 'e' && c != 'i' &&\
    \ c != 'o' && c != 'u') {\n                res += c;\n            }\n        }\n\
    \        return res;", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        throw new RuntimeException("Not implemented");', '        throw new RuntimeException("not
    implemented");', "        String vowels = \"aeiouAEIOU\";\n        String result\
    \ = \"\";\n        for (int i = 0; i < text.length(); i++) {\n            String\
    \ character = String.valueOf(text.charAt(i));\n            if (!vowels.contains(character))\
    \ {\n                result += character;\n            }\n        }\n        return\
    \ result;", '        throw new RuntimeException("Not implemented!");', '        return
    "";', '        throw new NotImplementedError();', "        if (text.length() ==\
    \ 0) {\n            return text;\n        } else {\n            char c = text.charAt(0);\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                return removeVowels(text.substring(1));\n            } else {\n\
    \                return c + removeVowels(text.substring(1));\n            }\n\
    \        }", '        return text.replaceAll("[aeiouAEIOU]", "");', '        throw
    new IllegalArgumentException("Not yet implemented");', '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        String[] vowels = {\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"};\n        String noVowels = text;\n        for (String\
    \ v : vowels) {\n            noVowels = noVowels.replace(v, \"\");\n        }\n\
    \        return noVowels;", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n\
    \                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        String VOWELS = \"aeiou\";\n        return text.chars()\n        .filter(x\
    \ -> VOWELS.indexOf(x) == -1)\n        .mapToObj(x -> \"\" + (char)x)\n      \
    \  .collect(Collectors.joining());", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        char[] textArray = text.toCharArray();\n        StringBuilder\
    \ newString = new StringBuilder();\n        for (char ch : textArray) {\n    \
    \        if (Arrays.asList('a', 'e', 'i', 'o', 'u').contains(Character.toLowerCase(ch)))\
    \ {\n                continue;\n            }\n            newString.append(ch);\n\
    \        }\n        return newString.toString();", '        return "";', "   \
    \     StringBuilder result = new StringBuilder();\n        String vowels = \"\
    aeiouAEIOU\";\n        for (char c : text.toCharArray()) {\n            if (vowels.indexOf(c)\
    \ == -1) {\n                result.append(c);\n            }\n        }\n    \
    \    return result.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        List<Character> vowels = Arrays.asList('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U');\n        return text.chars().filter(c -> !vowels.contains((char)\
    \ c)).mapToObj(c -> (char) c).map(String::valueOf).collect(Collectors.joining());",
  '        return text.replaceAll("[aeiou]", "");', '        throw new IllegalArgumentException("Not
    implemented");', '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "\treturn \"\";", '        return text.replaceAll("[AEIOUaeiou]",
    "");', "        // TODO: implement this function.\n        // This function is\
    \ automatically tested and the tests are visible in Test Explorer.\n        return\
    \ \"\";", '        return text.replaceAll("[aeiouAEIOU]", "");', '        return
    text.replaceAll("[aeiou]", "");', '        throw new UnsupportedOperationException("this
    code is unfinished");', '        return text.replaceAll("[aeiouAEIOU]", "");',
  "        if (text.equals(\"\"))\n            return \"\";\n        else if (text.length()\
    \ > 1) {\n            return text.substring(0, 1).replaceAll(\"[aeiouAEIOU]\"\
    , \"\") + removeVowels(text.substring(1));\n        } else\n            return\
    \ text.substring(0, 1).replaceAll(\"[aeiouAEIOU]\", \"\");", "        // TODO:\
    \ implement removeVowels function as stated above.\n        return text.replaceAll(\"\
    [aeiouAEIOU]\", \"\");", "        // replace this with your code\n\n\n       \
    \ // basic solution\n        //String textNew = text.replaceAll(\"[aeiouAEIOU]\"\
    , \"\");\n        //return textNew;\n\n\n        // while loop approach\n    \
    \    /*\n        String textNew = text;\n        String vowels = \"aeiouAEIOU\"\
    ;\n        while (textNew.length() != textNew.replaceAll(\"[aeiouAEIOU]\", \"\"\
    ).length()) {\n            textNew = textNew.replaceAll(\"[aeiouAEIOU]\", \"\"\
    );\n        }\n        return textNew;\n        */\n\n\n        // for loop approach\n\
    \        /*\n        String textNew = text;\n        String vowels = \"aeiouAEIOU\"\
    ;\n        for (int i = 0; i < textNew.length(); i++) {\n            if (vowels.contains(textNew.substring(i,\
    \ i+1))) {\n                textNew = textNew.replaceAll(textNew.substring(i,\
    \ i+1), \"\");\n                i--;\n            }\n        }\n        return\
    \ textNew;\n        */\n\n\n        // substring approach\n        /*\n      \
    \  String textNew = text;\n        String vowels = \"aeiouAEIOU\";\n        for\
    \ (int i = 0; i < textNew.length(); i++) {\n            if (vowels.contains(textNew.substring(i,\
    \ i+1))) {\n                textNew = textNew.substring(0, i) + textNew.substring(i+1);\n\
    \                i--;\n            }\n        }\n        return textNew;\n   \
    \     */\n\n\n        // take advantage of System.arraycopy to speed up the code\n\
    \        String textNew = text;\n        String vowels = \"aeiouAEIOU\";\n   \
    \     for (int i = 0; i < textNew.length(); i++) {\n            if (vowels.contains(textNew.substring(i,\
    \ i+1))) {\n                System.arraycopy(textNew.toCharArray(), i+1, textNew.toCharArray(),\
    \ i, textNew.length()-i-1);\n                textNew = textNew.substring(0,",
  "        // hint: you can use the charAt(int i) method to get the character at a\n\
    \        // particular index\n        // 0 1 2 3 4 5\n        // - - - - - -\n\
    \        // \"a b c d e f\"\n        // Hint: strings are immutable\n        //\
    \ Hint: you will need a string builder\n        // Hint: you can check if a string\
    \ contains a character with contains(char c)\n        // Hint: you can use toLowerCase()\
    \ to convert a character to lowercase\n        // Hint: you can check if two strings\
    \ are equal with equals()\n        // Hint: you can use append(char c) to add\
    \ a character to a string builder\n        // Hint: you can get a string from\
    \ a string builder with toString()\n        StringBuilder stringBuilder = new\
    \ StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n      \
    \      if (text.charAt(i) == 'a' || text.charAt(i) == 'e' || text.charAt(i) ==\
    \ 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u') {\n                continue;\n\
    \            }\n            stringBuilder.append(text.charAt(i));\n        }\n\
    \        return stringBuilder.toString();", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String result = \"\";\n        for (int i = 0; i < text.length(); i++)\
    \ {\n            if (vowels.indexOf(text.charAt(i)) == -1) {\n               \
    \ result += text.charAt(i);\n            }\n        }\n        return result;",
  '        return text.replaceAll("[aAeEiIoOuU]", "");', "        String result =\
    \ \"\";\n        for (int i = 0; i < text.length(); i++) {\n            char letter\
    \ = text.charAt(i);\n            if (!\"aeiouAEIOU\".contains(String.valueOf(letter)))\
    \ {\n                result += letter;\n            }\n        }\n        return\
    \ result;", "        StringBuffer buffer = new StringBuffer();\n        for (char\
    \ ch : text.toCharArray()) {\n            if (!\"aeiouAEIOU\".contains(ch + \"\
    \")) {\n                buffer.append(ch);\n            }\n        }\n       \
    \ return buffer.toString();", "        // your code goes here\n        String\
    \ result = \"\";\n        for (int i = 0; i < text.length(); i++) {\n        \
    \    if (!isVowel(text.charAt(i))) {\n                result += text.charAt(i);\n\
    \            }\n        }\n        return result;", "        char[] vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n        StringBuilder sb = new\
    \ StringBuilder();\n        for (char c : text.toCharArray()) {\n            boolean\
    \ isVowel = false;\n            for (char v : vowels) {\n                if (c\
    \ == v) {\n                    isVowel = true;\n                    break;\n \
    \               }\n            }\n            if (!isVowel) {\n              \
    \  sb.append(c);\n            }\n        }\n        return sb.toString();", " \
    \       if (text.length() == 0) {\n            return text;\n        } else {\n\
    \            char[] vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n\
    \            char[] chars = text.toCharArray();\n            for (int i = 0; i\
    \ < chars.length; i++) {\n                for (int j = 0; j < vowels.length; j++)\
    \ {\n                    if (chars[i] == vowels[j]) {\n                      \
    \  chars[i] = '_';\n                    }\n                }\n            }\n\
    \            return new String(chars).replaceAll(\"_\", \"\");\n        }", " \
    \       text = text.replaceAll(\"[aeiouAEIOU]\", \"\");\n        return text;",
  "        String res = \"\";\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char ch = text.charAt(i);\n            if (ch != 'a' && ch != 'e'\
    \ && ch != 'i' && ch != 'o' && ch != 'u') {\n                res += ch;\n    \
    \        }\n        }\n        return res;", "        if (text.length() == 0)\
    \ {\n            return \"\";\n        }\n        else {\n            char c =\
    \ text.charAt(0);\n            char newc = Character.toLowerCase(c);\n       \
    \     if (newc == 'a' || newc == 'e' || newc == 'i' || newc == 'o' || newc ==\
    \ 'u') {\n                return removeVowels(text.substring(1));\n          \
    \  }\n            else {\n                return c + removeVowels(text.substring(1));\n\
    \            }\n        }", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.replaceAll("[aAeEiIoOuU]", "");', "        // No operation.\n\
    \        return text;", "        String newText = text.replaceAll(\"[aeiou]\"\
    , \"\");\n        return newText;", '        throw new RuntimeException("Not implemented");',
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            char ch = text.charAt(i);\n           \
    \ if (!isVowel(ch)) {\n                result.append(ch);\n            }\n   \
    \     }\n        return result.toString();", "        // Your code here\n    \
    \    return \"\";", '        return text.replaceAll("[aeiou]", "");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "        String vowels = \"aeiouAEIOU\"\
    ;\n        StringBuilder out = new StringBuilder();\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i)) == -1)\
    \ {\n                out.append(text.charAt(i));\n            }\n        }\n \
    \       return out.toString();", "        // Implement removeVowels function.\n\
    \        return \"\";", '        return text.replaceAll("[aeiou]", "");', "  \
    \      StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < text.length(); i++) {\n            if (text.charAt(i) != 'a' && text.charAt(i)\
    \ != 'e' && text.charAt(i) != 'i' && text.charAt(i) != 'o' && text.charAt(i) !=\
    \ 'u') {\n                result.append(text.charAt(i));\n            }\n    \
    \    }\n        return result.toString();", '        return null;', '        return
    text.replaceAll("[aeiouAEIOU]", "");', '        return null;', "        String\
    \ vowels = \"aeiou\";\n        String result = \"\";\n        for (int i = 0;\
    \ i < text.length(); i++) {\n            String character = text.substring(i,\
    \ i + 1);\n            if (vowels.indexOf(character) == -1) {\n              \
    \  result += character;\n            }\n        }\n        return result;", " \
    \       //remove vowels\n        //get char array\n        //go over array\n \
    \       //if char is vowel\n        //remove it\n        char[] vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n        char[] charArray = text.toCharArray();\n\
    \        StringBuilder newString = new StringBuilder();\n        for (char c :\
    \ charArray) {\n            for (char ch : vowels) {\n                if (c !=\
    \ ch) {\n                    newString.append(c);\n                }\n       \
    \     }\n        }\n        return newString.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n\
    \            char c = text.charAt(i);\n            if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                sb.append(c);\n       \
    \     }\n        }\n        return sb.toString();", "        // Create a copy\
    \ of the text\n        String copy = new String(text);\n        // Go over all\
    \ the vowels\n        for (char vowel : \"aeiouAEIOU\".toCharArray()) {\n    \
    \        // Replace all vowel occurences in the string with empty string\n   \
    \         copy = copy.replace(Character.toString(vowel), \"\");\n        }\n \
    \       // Return the string without vowels\n        return copy;", "        StringBuilder\
    \ sb = new StringBuilder();\n        char[] vowels = new char[]{'a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n        for (char c : text.toCharArray())\
    \ {\n            if (Arrays.binarySearch(vowels, c) < 0) {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        String vowels\
    \ = \"aeiouAEIOU\";\n        StringBuilder result = new StringBuilder();\n   \
    \     for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n\
    \            if (vowels.indexOf(c) == -1) {\n                result.append(c);\n\
    \            }\n        }\n        return result.toString();", "        Set<Character>\
    \ vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));\n        char[]\
    \ chars = text.toCharArray();\n        StringBuilder builder = new StringBuilder();\n\
    \        for (char ch : chars) {\n            if (!vowels.contains(ch)) {\n  \
    \              builder.append(ch);\n            }\n        }\n        return builder.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char c = text.charAt(i);\n            if (c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", '        throw new
    UnsupportedOperationException("Method is not implemented yet");', '        return
    text.replaceAll("[aeiouAEIOU]", "");', "\tString s = \"\";\n\tfor (int i = 0;\
    \ i < text.length(); i++) {\n\t    String c = text.substring(i, i + 1);\n\t  \
    \  if (!(c.equals(\"a\") || c.equals(\"e\") || c.equals(\"i\") || c.equals(\"\
    o\") || c.equals(\"u\"))) {\n\t\ts += c;\n\t    }\n\t}\n\treturn s;", "      \
    \  String res = \"\";\n        StringBuilder stringBuilder = new StringBuilder(res);\n\
    \        String vowels = \"aeiou\";\n        for (int i = 0; i < text.length();\
    \ i++) {\n            String character = String.valueOf(text.charAt(i));\n   \
    \         if (!vowels.contains(character.toLowerCase())) {\n                stringBuilder.append(character);\n\
    \            }\n        }\n        return stringBuilder.toString();", "      \
    \  StringBuilder builder = new StringBuilder();\n        for (int i = 0; i < text.length();\
    \ i++) {\n            char cur = text.charAt(i);\n            if (!isVowel(cur))\
    \ {\n                builder.append(cur);\n            }\n        }\n        return\
    \ builder.toString();", '        return text.replaceAll("[aeiouAEIOU]", "");',
  '        return text.replaceAll("[aeiouAEIOU]", "");', "        String vowels =\
    \ \"aeiouAEIOU\";\n        StringBuffer sb = new StringBuffer();\n        for\
    \ (int i = 0; i < text.length(); i++) {\n            if (vowels.indexOf(text.charAt(i))\
    \ == -1) {\n                sb.append(text.charAt(i));\n            }\n      \
    \  }\n        return sb.toString();", '        return text.replaceAll("[aeiou]",
    "");', "        // TODO\n        return null;", '        return text.replaceAll("[aeiouAEIOU]",
    "");', "        // Your code\n        List<Character> vowels = Arrays.asList('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n        StringBuilder sb = new\
    \ StringBuilder();\n        for (char c : text.toCharArray()) {\n            if\
    \ (!vowels.contains(c)) {\n                sb.append(c);\n            }\n    \
    \    }\n        return sb.toString();", "        if (text.length() == 0) {\n \
    \           return text;\n        } else {\n            String a = text.substring(0,\
    \ 1);\n            return (Pattern.matches(\"[aeiou]\", a) ? \"\" : a) + removeVowels(text.substring(1));\n\
    \        }", "        String lowerCaseText = text.toLowerCase();\n        String\
    \ vowels = \"aeiou\";\n        StringBuilder builder = new StringBuilder();\n\
    \        for (int i = 0; i < lowerCaseText.length(); i++) {\n            String\
    \ currentChar = lowerCaseText.substring(i, i + 1);\n            if (!vowels.contains(currentChar))\
    \ {\n                builder.append(currentChar);\n            }\n        }\n\
    \        return builder.toString();", '        return text.replaceAll("[aeiouAEIOU]",
    "");']
stop_tokens:
- "\n    }\n"

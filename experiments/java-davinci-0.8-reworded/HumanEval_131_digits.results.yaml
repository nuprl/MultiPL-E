language: java
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        int digit = 0;\n        while (n > 0) {\n\
    \            digit = (int) (n % 10);\n            if (digit % 2 == 1) {\n    \
    \            result *= digit;\n            }\n            n /= 10;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnvbyvf9.java:37)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // TODO\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_hafh8b.java:23)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long d = n %\
    \ 10;\n            if (d % 2 == 1) {\n                prod *= d;\n           \
    \ }\n            n /= 10;\n        }\n        return prod;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpta65gmdh.java:36)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) prod *= digit;\n            n /= 10;\n\
    \        }\n        return prod;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwl1digp.java:34)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // insert code here\n        return 0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsl9undb_.java:23)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n < 10) {\n            return n % 2 == 1 ? n : 0;\n        }\n\
    \        return digits(n / 10) * (n % 2 == 1 ? n % 10 : 1);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // YOUR CODE HERE\n        return -1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk16xi3d6.java:23)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4tz0896.java:36)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // your code goes here\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0fjhzxj.java:23)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4tz0896.java:36)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4tz0896.java:36)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Invalid\
    \ argument (negative): \" + n);\n        }\n        long[] digits = new long[10];\n\
    \        digits[1] = (n % 10l);\n        n /= 10l;\n        digits[2] = (n % 10l);\n\
    \        n /= 10l;\n        digits[3] = (n % 10l);\n        n /= 10l;\n      \
    \  digits[4] = (n % 10l);\n        n /= 10l;\n        digits[5] = (n % 10l);\n\
    \        n /= 10l;\n        digits[6] = (n % 10l);\n        n /= 10l;\n      \
    \  digits[7] = (n % 10l);\n        n /= 10l;\n        digits[8] = (n % 10l);\n\
    \        n /= 10l;\n        digits[9] = (n % 10l);\n        n /= 10l;\n      \
    \  return (digits[1] * digits[3] * digits[5] * digits[7] * digits[9]);\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo63pzm65.java:44)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // ...\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw9tpyf3s.java:23)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n < 10) return n;\n        long x = n % 10;\n        return x\
    \ % 2 == 0 ? digits(n / 10) : digits(n / 10) * x;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qst_zm5.java:30)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        throw new UnsupportedOperationException(\"TODO\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: TODO\n\
    \tat Problem.digits(tmpi89bhvgy.java:19)\n\tat Problem.main(tmpi89bhvgy.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        for (int i = 0; i < Long.toString(n).length();\
    \ i++) {\n            int digit = (int) (n % 10);\n            if (digit % 2 !=\
    \ 0) {\n                prod *= digit;\n            }\n            n /= 10;\n\
    \        }\n        return prod;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09cph2sf.java:31)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // I like using this pattern, which is functionally equivalent to:\n\
    \        //    long sum = 0;\n        //    while (n != 0) {\n        //     \
    \   long digit = n % 10;\n        //        if (digit % 2 == 1) {\n        //\
    \            sum *= digit;\n        //        }\n        //        n /= 10;\n\
    \        //    }\n        //    return sum;\n        return Stream.iterate(Pair.with(n,\
    \ 1l),\n                              p -> Pair.with(p.getValue0() / 10, p.getValue1()\
    \ * (p.getValue0() % 10)))\n                     .dropWhile(p -> p.getValue0()\
    \ != 0)\n                     .findFirst()\n                     .map(p -> p.getValue1())\n\
    \                     .orElse(0l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.digits(tmp9ta_1ygb.java:29)\n\tat Problem.main(tmp9ta_1ygb.java:37)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long p = 1;\n        while (n > 0) {\n            long digit = n\
    \ % 10;\n            if (digit % 2 == 1) {\n                p *= digit;\n    \
    \        }\n            n /= 10;\n        }\n        return p;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2yopkj3.java:36)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        int length = String.valueOf(n).length();\n        if (length == 1){\n\
    \            if (n % 2 == 0){\n                return 0;\n            } else {\n\
    \                return n;\n            }\n        } else {\n            long\
    \ newNum = 0;\n            long temp = n;\n            for (int i = 0; i < length;\
    \ i++){\n                if (temp % 10 % 2 != 0){\n                    newNum\
    \ = newNum + (temp % 10);\n                }\n                temp = temp / 10;\n\
    \            }\n            if (newNum == 0){\n                return 0;\n   \
    \         } else {\n                return newNum * digits(n - newNum);\n    \
    \        }\n        }\n    }\n    public static void main(String[] args) {\n \
    \   assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z0m3xk6.java:44)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // your code here\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpct4puswd.java:23)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return -1;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpltitk4lb.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // This is your job.\n        return 0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpupcecdz9.java:23)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Note the use of LongStream.\n        return LongStream.of(Long.toString(n).chars().map(c\
    \ -> c - '0').filter(x -> x % 2 == 1).toArray())\n        .reduce(1, (a, b) ->\
    \ a * b);\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxcvcdblw.java:20: error: no suitable method found for of(int[])\n\
    \        return LongStream.of(Long.toString(n).chars().map(c -> c - '0').filter(x\
    \ -> x % 2 == 1).toArray())\n                         ^\n    method LongStream.of(long)\
    \ is not applicable\n      (argument mismatch; int[] cannot be converted to long)\n\
    \    method LongStream.of(long...) is not applicable\n      (varargs mismatch;\
    \ int[] cannot be converted to long)\n1 error\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long d = n\
    \ % 10;\n            if (d % 2 == 1)\n                result *= d;\n         \
    \   n /= 10;\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__ap7ayz.java:35)\n"
  stdout: ''
  timestamp: 1660011433
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Assume that n is a positive integer.\n        // There are no\
    \ test cases to check this.\n        assert (n >= 0);\n        // We can check\
    \ the remainder of n % 2 to check if an integer is even.\n        // The simplest\
    \ way to do this is to return n itself if it is odd and\n        // return 0 otherwise.\n\
    \        // >>> n % 2\n        // 0\n        // >>> (n + 1) % 2\n        // 1\n\
    \        // >>> n % 2 == 0\n        // False\n        // >>> (n + 1) % 2 == 0\n\
    \        // True\n        return (n % 2 == 0) ? 0 : n;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx57gkq3.java:37)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // When n is 0, the product of the digits is 0\n        if (n ==\
    \ 0) {\n            return 0;\n        }\n        // Otherwise, multiply the current\
    \ digit by the product of the digits of the remaining number\n        else {\n\
    \            if (n % 2 == 0) {\n                return digits(n / 10);\n     \
    \       }\n            else {\n                return (n % 10) * digits(n / 10);\n\
    \            }\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2uzy7q5i.java:34)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n      return 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpda1d4y0p.java:22)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n < 0) {\n            throw new Error(\"n must be positive.\"\
    );\n        }\n        if (n == 0) {\n            return 0;\n        }\n     \
    \   long result = 1;\n        while (n > 0) {\n            long digit = n % 10;\n\
    \            if (digit % 2 == 1) {\n                result *= digit;\n       \
    \     }\n            n /= 10;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxxprcyg.java:42)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4tz0896.java:36)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        //\n        // { write your code here\n\n        // }\n        //\n\
    \        return 0;\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2cdgjfn.java:27)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return Stream.of(Long.toString(n).split(\"\"))\n            .mapToLong(Long::parseLong)\n\
    \            .filter(d -> d % 2 != 0)\n            .reduce(1, (a, b) -> a * b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppnolh2v6.java:31)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        BigInteger result = BigInteger.ONE;\n        while (n > 0) {\n  \
    \          BigInteger digit = BigInteger.valueOf(n % 10);\n            if (digit.mod(BigInteger.valueOf(2)).equals(BigInteger.ONE))\
    \ {\n                result = result.multiply(digit);\n            }\n       \
    \     n /= 10;\n        }\n        return result.longValue();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hrhkvf8.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long m = 1l;\n        while (n > 0) {\n            long d = n % 10;\n\
    \            if (d % 2 == 1) {\n                m *= d;\n            }\n     \
    \       n /= 10;\n        }\n        return m;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_v8z0_c.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Write your code here.\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpus5sg2w0.java:23)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long d = n;\n        long result = 1;\n        while (d > 0) {\n\
    \            long digit = d % 10;\n            if (digit % 2 == 1) {\n       \
    \         result *= digit;\n            }\n            d /= 10;\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6mkuajb.java:37)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return LongStream.range(0, Long.toString(n).length())\n        .map(x\
    \ -> Character.getNumericValue(Long.toString(n).charAt((int)x)))\n        .filter(x\
    \ -> x % 2 != 0)\n        .reduce(1, (a, b) -> a * b);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwukt4kot.java:31)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // TODO: implement this function.\n        long res = 1l;\n     \
    \   long temp;\n        while (n != 0) {\n            temp = n % 10;\n       \
    \     if (temp % 2 != 0) {\n                res *= temp;\n            }\n    \
    \        n /= 10;\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzgqg9z6.java:38)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpha0k1rs_.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) return 0;\n        int odd = n % 10;\n        return\
    \ (odd % 2 == 0 ? 0 : odd) * digits(n / 10);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4rdama_8.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n        int odd = n % 10;\n                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String nString = String.valueOf(n);\n        long product = 1;\n\
    \        for (int i = 0; i < nString.length(); i++) {\n            int digit =\
    \ Integer.parseInt(String.valueOf(nString.charAt(i)));\n            if (digit\
    \ % 2 == 1) {\n                product *= digit;\n            }\n        }\n \
    \       return product;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80o93iib.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // replace with actual implementation\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpve_44is2.java:23)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long dig =\
    \ n % 10;\n            if (dig % 2 == 1) {\n                result *= dig;\n \
    \           }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3kx3562s.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Write your code here\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsw9xf2cc.java:23)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        long sum = 1;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            int num = Character.getNumericValue(s.charAt(i));\n\
    \            if (num % 2 != 0) {\n                sum *= num;\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1k8tcdl.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        for (; n > 0; n /= 10) {\n           \
    \ long digit = n % 10;\n            if (digit % 2 == 1) {\n                product\
    \ *= digit;\n            }\n        }\n        return product;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnss40z2.java:35)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // YOUR CODE HERE\n        long result = 1;\n        while (n > 0)\
    \ {\n            long x = n % 10;\n            if (x % 2 == 1) {\n           \
    \     result *= x;\n            }\n            n /= 10;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzm_e_2oa.java:37)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long res = 1;\n        while (n > 0) {\n            long num = n\
    \ % 10;\n            if (num % 2 == 1) {\n                res *= num;\n      \
    \      }\n            n /= 10;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1fncxfu8.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long ret = 1l;\n        while (n != 0) {\n            long d = n\
    \ % 10;\n            if (d % 2 == 1) {\n                ret *= d;\n          \
    \  }\n            n /= 10;\n        }\n        return ret;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcxp3rb5.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // good luck!\n        long total = 1;\n        while (n > 0) {\n\
    \            long digit = n % 10;\n            if (digit % 2 == 1) {\n       \
    \         total *= digit;\n            }\n            n /= 10;\n        }\n  \
    \      return total;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrru7le0.java:37)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        for (long l = n; l > 0; l /= 10) {\n  \
    \          long digit = l % 10;\n            if (digit % 2 == 1) {\n         \
    \       result *= digit;\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp559dgzoy.java:35)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Hint: use the modulo operator (%) to determine if n is odd.\n\
    \        // Hint: use the division operator (/) to extract digits.\n        long\
    \ digits=0;\n        long m=n;\n        long d=1;\n        while(m!=0){\n    \
    \        long z=m%10;\n            if(z%2!=0){\n                digits=digits+z*d;\n\
    \                d=d*10;\n            }\n            m=m/10;\n        }\n    \
    \    return digits;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9v567r6x.java:38)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return n;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdryfpac2.java:23)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long total = 1;\n        while (n > 0) {\n            int digit =\
    \ (int) (n % 10);\n            if (digit % 2 == 1) {\n                total *=\
    \ digit;\n            }\n            n /= 10;\n        }\n        return total;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_on9wtsy.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Write your code here...\n        long rtn = 1;\n        long work\
    \ = n;\n        while (work != 0) {\n            long digit = work % 10;\n   \
    \         if (digit % 2 == 1) {\n                rtn *= digit;\n            }\n\
    \            work /= 10;\n        }\n        return rtn;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphkyq8jd9.java:38)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        long m = 1;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            int digit = s.charAt(i) - '0';\n\
    \            if (digit % 2 == 1) {\n                m *= digit;\n            }\n\
    \        }\n        return m;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzkph3g8r.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        else {\n\
    \            int res = 1;\n            for (; n > 0; n /= 10) {\n            \
    \    int digit = (int)(n % 10);\n                if (digit % 2 == 1) {\n     \
    \               res *= digit;\n                }\n            }\n            return\
    \ res;\n        }\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzqcag_g.java:40)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String str = String.valueOf(n);\n        String ans = \"\";\n   \
    \     long product = 1;\n        for (int i = 0; i < str.length(); i++) {\n  \
    \          if (Integer.parseInt(String.valueOf(str.charAt(i))) % 2 != 0) {\n \
    \               ans += String.valueOf(str.charAt(i));\n            }\n       \
    \ }\n        for (int i = 0; i < ans.length(); i++) {\n            product *=\
    \ Integer.parseInt(String.valueOf(ans.charAt(i)));\n        }\n        return\
    \ product;\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9d96fau.java:39)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long res = 1;\n        while (n > 0) {\n            long remainder\
    \ = n % 10;\n            if (remainder % 2 == 1) {\n                res *= remainder;\n\
    \            }\n            n /= 10;\n        }\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4jk456j.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long digits = 1;\n        while (n > 0) {\n            long r = n\
    \ % 10;\n            if (r % 2 == 1) {\n                digits *= r;\n       \
    \     }\n            n /= 10;\n        }\n        return digits;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd_s79i_s.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return Stream.of(Long.toString(n).split(\"\"))\n                \
    \    .mapToLong(Long::parseLong)\n                    .filter(i -> i % 2 != 0)\n\
    \                    .reduce(1, (l, r) -> l * r);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_tisr6o.java:31)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long res = 1;\n        while (n != 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                res *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ccux58n.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return java.util.stream.LongStream.range(0l, 10l).reduce(0l, (a,\
    \ b) -> {\n            if (b % 2 != 0)\n                return a + 1;\n      \
    \      else\n                return a;\n        });\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpavhug630.java:29)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1)\n                product *= digit;\n\
    \            n /= 10;\n        }\n        return product;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb5y8dwu.java:35)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) prod *= digit;\n            n /= 10;\n\
    \        }\n        return prod;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwl1digp.java:34)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Replace the following line with your solution.\n        long product\
    \ = 1;\n        while (n > 0) {\n            long digit = n % 10;\n          \
    \  if (digit % 2 == 1) {\n                product *= digit;\n            }\n \
    \           n /= 10;\n        }\n        return product;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1c3pawtb.java:37)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        long ans = 1;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            long d = Long.parseLong(s.substring(i,\
    \ i + 1));\n            if (d % 2 == 1) {\n                ans *= d;\n       \
    \     }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ad9qw68.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        List<Long> list = new ArrayList<>();\n        while (n > 0) {\n \
    \           list.add(n % 10);\n            n /= 10;\n        }\n        return\
    \ list.stream().filter(e -> e % 2 == 1).reduce(1l, (a, b) -> a * b);\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0vw01c0.java:33)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return n;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdryfpac2.java:23)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        char[] digits = String.valueOf(n).toCharArray();\n        long product\
    \ = 1;\n        for (char digit : digits) {\n            int d = Character.getNumericValue(digit);\n\
    \            if (d % 2 == 1) {\n                product *= d;\n            }\n\
    \        }\n        return product;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppp9mvt8s.java:36)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) return 0;\n        long result = 1;\n        while (n\
    \ > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 1) {\n\
    \                result *= digit;\n            }\n            n /= 10;\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphm2y6vii.java:37)\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return digits(n, 1);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpywfg9c82.java:19: error: method digits in class Problem cannot\
    \ be applied to given types;\n        return digits(n, 1);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011436
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        for (; n > 0; n /= 10) {\n            if\
    \ (n % 2 == 1) {\n                result *= n % 10;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphs3_7koo.java:34)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String sn = String.valueOf(n);\n        long ret = 1;\n        for\
    \ (int i = 0; i < sn.length(); i++) {\n            long d = Character.getNumericValue(sn.charAt(i));\n\
    \            if (d % 2 == 1) ret *= d;\n        }\n        return ret;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8hhuu0i7.java:34)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String str = String.valueOf(n);\n        long total = 1;\n      \
    \  for (int i = 0; i < str.length(); i++) {\n            long val = Long.parseLong(str.substring(i,\
    \ i + 1));\n            if (val % 2 == 1) {\n                total *= val;\n \
    \           }\n        }\n        return total;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mmfaig2.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            int digit\
    \ = (int) (n % 10);\n            if (digit % 2 == 1) {\n                result\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmxf70qos.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long x = n %\
    \ 10;\n            if (x % 2 == 1) {\n                prod *= x;\n           \
    \ }\n            n /= 10;\n        }\n        return prod;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3uuleet4.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return Stream.of(n)\n                .map(i -> i.toString())\n  \
    \              .flatMap(i -> i.chars().mapToObj(c -> (char) c))\n            \
    \    .map(c -> new BigInteger(c.toString()))\n                .filter(i -> i.mod(new\
    \ BigInteger(\"2\")).equals(BigInteger.ONE))\n                .reduce(BigInteger.ONE,\
    \ (i, j) -> i.multiply(j))\n                .longValue();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2q4c6h3.java:34)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        String[] sArr = s.split(\"\
    \");\n        int sum = 1;\n        for (int i = 0; i < sArr.length; i++) {\n\
    \            if (Integer.parseInt(sArr[i]) % 2 != 0) {\n                sum *=\
    \ Integer.parseInt(sArr[i]);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp6hnwv0g.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long accum = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                accum *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return accum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemk0wuur.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long sum = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                sum *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqprx6k9y.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return Stream.of(n).filter(i -> i % 2 != 0).reduce(1l, (a,b) -> a\
    \ * b);\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpce473ord.java:23)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long d,s=1l;\n        while(n>0){\n            d=n%10;\n        \
    \    if(d%2==1)s*=d;\n            n/=10;\n        }\n        return s;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadz7v7qc.java:34)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long x = n\
    \ % 10;\n            if (x % 2 == 1) {\n                result *= x;\n       \
    \     }\n            n /= 10;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbe3klxil.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // TODO\n        long result = 1;\n        while (n>0) {\n      \
    \      long digit = n%10;\n            if(digit%2==1) {\n                result\
    \ *= digit;\n            }\n            n/=10;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo4a0rnn1.java:37)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Write a program to solve this problem.\n        // Your program\
    \ must:\n        // * Be named Problem.digits\n        // * Take one argument:\
    \ a positive integer n\n        // * Return the product of the odd digits\n  \
    \      // * Return 0 if all digits are even\n        // * Use only the following\
    \ String methods: length, charAt, substring\n        // * Use only the following:\
    \ addition and subtraction\n        // * For full credit, no character of the\
    \ string may be changed\n        // --- Begin solution to Problem ---\n      \
    \  String s = String.valueOf(n);\n        long prod = 1;\n        long[] nums\
    \ = new long[s.length()];\n        for (int i = 0; i < s.length(); i++) {\n  \
    \          nums[i] = Long.parseLong(s.substring(i, i + 1));\n        }\n     \
    \   for (int i = 0; i < nums.length; i++) {\n            if (nums[i] % 2 != 0)\
    \ {\n                prod *= nums[i];\n            }\n        }\n        return\
    \ prod;\n        // --- End solution to Problem ---\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmputdapcy5.java:50)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return new Digits(n).odds_prod();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6p9gkttq.java:19: error: cannot find symbol\n        return new\
    \ Digits(n).odds_prod();\n                   ^\n  symbol:   class Digits\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // >>> digits((1l))\n        // (1l)\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n5nl2ki.java:24)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long p = 1;\n        while (n > 0) {\n            long d = n % 10;\n\
    \            if (d % 2 == 1)\n                p *= d;\n            n /= 10;\n\
    \        }\n        return p;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzvjja4zi.java:35)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return -1;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpltitk4lb.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) {\n            return 0;\n        }\n        else {\n\
    \            long temp = 0;\n            while (n > 0) {\n                temp\
    \ = n % 10;\n                if (temp % 2 == 1) {\n                    return\
    \ temp * digits(n / 10);\n                }\n                else {\n        \
    \            return digits(n / 10);\n                }\n            }\n      \
    \      return 0;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph78a8m2y.java:37)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String tmp = String.valueOf(n);\n        String[] arr = tmp.split(\"\
    \");\n        long result = 1;\n        for (String number : arr) {\n        \
    \    int val = Integer.parseInt(number);\n            if (val % 2 != 0) {\n  \
    \              result *= val;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwvt89p1d.java:37)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Fill in\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20hvw0mt.java:23)\n"
  stdout: ''
  timestamp: 1660011439
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        List<Integer> digits = new ArrayList<>();\n        while (n > 0)\
    \ {\n            digits.add((int)(n % 10));\n            n /= 10;\n        }\n\
    \        long result = 1;\n        for (int digit : digits) {\n            if\
    \ (digit % 2 == 1) {\n                result *= digit;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm1z3xk6g.java:39)\n"
  stdout: ''
  timestamp: 1660011439
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long x = 1;\n        for (char c : Long.toString(n).toCharArray())\
    \ {\n            int i = Character.getNumericValue(c);\n            if (i % 2\
    \ == 1) {\n                x *= i;\n            }\n        }\n        return x;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfu96xaaj.java:35)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // YOUR CODE HERE\n        long product = 1;\n        while (n >\
    \ 0) {\n            long digit = n % 10;\n            if (digit % 2 == 1) {\n\
    \                product *= digit;\n            }\n            n /= 10;\n    \
    \    }\n        return product;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_3zdi288.java:37)\n"
  stdout: ''
  timestamp: 1660011439
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        int r = 1;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   int d = Character.getNumericValue(c);\n            if (d % 2 == 1) {\n   \
    \             r *= d;\n            }\n        }\n        return r;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6v0eetp4.java:37)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long sum = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                sum *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqprx6k9y.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        List<Long> odd_digits = new ArrayList<Long>();\n        for (long\
    \ digit : digits(n)) {\n            if (digit % 2 == 1) {\n                odd_digits.add(digit);\n\
    \            }\n        }\n        if (odd_digits.size() == 0) {\n           \
    \ return 0;\n        }\n        long product = 1;\n        for (long x : odd_digits)\
    \ {\n            product *= x;\n        }\n        return product;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9i7kjesm.java:20: error: for-each not applicable to expression\
    \ type\n        for (long digit : digits(n)) {\n                             \
    \   ^\n  required: array or java.lang.Iterable\n  found:    long\n1 error\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long answer = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1)\n                answer *= digit;\n\
    \            n /= 10;\n        }\n        return answer;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp878f0c1p.java:35)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        int acc = 1;\n        while (n > 0) {\n            int digit = (int)\
    \ (n % 10);\n            if (digit % 2 == 1) {\n                acc *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return acc;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpba_fze3q.java:36)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long ans = 1;\n        while (n > 0) {\n            int digit = (int)(n\
    \ % 10);\n            if (digit % 2 == 1) {\n                ans *= digit;\n \
    \           }\n            n /= 10;\n        }\n        return ans;\n    }\n \
    \   public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_j70me4.java:36)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long m =\
    \ n % 10;\n            if (m % 2 == 1) {\n                product *= m;\n    \
    \        }\n            n /= 10;\n        }\n        return product;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6gsjgz_p.java:36)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // your code here\n        if (n < 0) {\n            return digits(-n);\n\
    \        }\n        else if (n < 10) {\n            return n % 2 == 1 ? n : 0;\n\
    \        }\n        else {\n            return digits(n / 10) * (n % 2 == 1 ?\
    \ n % 10 : 1);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return LongStream.range(0, Long.toString(n).length())\n         \
    \   .filter(i -> (n / (long) Math.pow(10, i)) % 2 != 0)\n            .map(i ->\
    \ (n / (long) Math.pow(10, i)) % 10)\n            .reduce(1, (a, b) -> a * b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahaa3cnj.java:31)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long ret = 1;\n        while (n > 0) {\n            long tmp = n\
    \ % 10;\n            if (tmp % 2 == 1) {\n                ret *= tmp;\n      \
    \      }\n            n /= 10;\n        }\n        return ret;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfizkakl1.java:36)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long sum = 1;\n        int d;\n        while (n > 0) {\n        \
    \    d = (int) (n % 10);\n            if (d % 2 == 1)\n                sum *=\
    \ d;\n            n /= 10;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptl3kgk7h.java:36)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here.\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo1ic9vpp.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            int digit = Integer.parseInt(String.valueOf(c));\n            if\
    \ (digit % 2 == 1) {\n                sb.append(digit);\n            }\n     \
    \   }\n        if (sb.length() == 0) {\n            return 0;\n        }\n   \
    \     return Long.parseLong(sb.toString());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5uioq0d.java:37)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long answer = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                answer *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return answer;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt5vn1bs1.java:36)\n"
  stdout: ''
  timestamp: 1660011440
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Replace the line(s) below with your solution.\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xt6n5f6.java:23)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        List<Long> digits = new ArrayList<>();\n        if (n == 0) {\n \
    \           return 0;\n        }\n        while (n > 0) {\n            digits.add(n\
    \ % 10);\n            n /= 10;\n        }\n        long ans = 1;\n        for\
    \ (long d : digits) {\n            if (d % 2 == 1) {\n                ans *= d;\n\
    \            }\n        }\n        return ans;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94sus2rj.java:42)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long d = n %\
    \ 10;\n            if (d % 2 == 1) {\n                prod *= d;\n           \
    \ }\n            n /= 10;\n        }\n        return prod;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpta65gmdh.java:36)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) {\n                prod *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return prod;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpha0k1rs_.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            int digit\
    \ = (int) n % 10;\n            if (digit % 2 == 1) {\n                result *=\
    \ digit;\n            }\n            n /= 10;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt82e5ns9.java:36)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Insert your code here...\n        long sum = 1;\n        while\
    \ (n != 0) {\n            long digit = n % 10;\n            if (digit % 2 != 0)\
    \ {\n                sum *= digit;\n            }\n            n /= 10;\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5lbkqeh.java:37)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) {\n            return 0;\n        } else {\n        \
    \    return (n % 10) % 2 == 1 ? (n % 10) * digits(n / 10) : digits(n / 10);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0eambkd7.java:26)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Write your code below.\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7gvuem1u.java:23)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long k = 0;\n        for (; n > 0; n /= 10) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                k = k == 0 ? digit\
    \ : k * digit;\n            }\n        }\n        return k;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n\
    \ must be positive\");\n        } else if (n == 0) {\n            return 0;\n\
    \        } else {\n            long digit = n % 10;\n            long smaller\
    \ = digits(n / 10);\n            if (digit % 2 == 0) {\n                return\
    \ smaller;\n            } else {\n                return smaller * digit;\n  \
    \          }\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhwbtjhc.java:34)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // TODO: implement me\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhu48zpm.java:23)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long a = n, res = 1;\n        while (a > 0) {\n            long lastDigit\
    \ = a % 10;\n            if (lastDigit % 2 == 1) {\n                res *= lastDigit;\n\
    \            }\n            a /= 10;\n        }\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdt7rwct8.java:36)\n"
  stdout: ''
  timestamp: 1660011441
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1l;\n        long nn = n;\n        while (nn > 0) {\n\
    \            long digit = nn % 10;\n            if (digit % 2 == 1) {\n      \
    \          prod *= digit;\n            }\n            nn /= 10;\n        }\n \
    \       return prod;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1cg9vohf.java:37)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Write your code here\n        String str = String.valueOf(n);\n\
    \        String[] arr = str.split(\"\");\n        long result = 1;\n        for\
    \ (int i = 0; i < arr.length; i++) {\n            if (Integer.parseInt(arr[i])\
    \ % 2 != 0) {\n                result *= Integer.parseInt(arr[i]);\n         \
    \   }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvwea7qn0.java:37)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // your code here\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpct4puswd.java:23)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return Arrays.stream(n + \"\".split(\"\")).mapToLong(Integer::parseInt).filter(x\
    \ -> x % 2 == 1).reduce(1, (x, y) -> x * y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptqehf5e5.java:19: error: bad operand types for binary operator\
    \ '+'\n        return Arrays.stream(n + \"\".split(\"\")).mapToLong(Integer::parseInt).filter(x\
    \ -> x % 2 == 1).reduce(1, (x, y) -> x * y);\n                               ^\n\
    \  first type:  long\n  second type: String[]\n1 error\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here.\n        return n;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppoq1nynm.java:24)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long s = 1;\n        while (n > 0) {\n            long d = n % 10;\n\
    \            if (d % 2 == 1) {\n                s *= d;\n            }\n     \
    \       n /= 10;\n        }\n        return s;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbxivd288.java:36)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Fill in your answer below.\n        // Note: Do not modify the\
    \ signature of the function.\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9buqy52g.java:24)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n < 10) {\n            return n;\n        }\n        long result\
    \ = 0;\n        while (n > 0) {\n            long digit = n % 10;\n          \
    \  if (digit % 2 == 1) {\n                result *= 10;\n                result\
    \ += digit;\n            }\n            n /= 10;\n        }\n        long result2\
    \ = 0;\n        while (result > 0) {\n            long digit = result % 10;\n\
    \            result2 *= 10;\n            result2 += digit;\n            result\
    \ /= 10;\n        }\n        return result2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph86yigpn.java:44)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // YOUR CODE HERE\n        return -1l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41z3u70b.java:23)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long total = 1;\n        while (n != 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                total *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return total;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7njiga4.java:36)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n      String s = \"\" + n;\n      String[] a = s.split(\"\");\n      int\
    \ i = 0;\n      long res = 1;\n      while (i < a.length) {\n        int tmp =\
    \ Integer.parseInt(a[i]);\n        if (tmp % 2 != 0) {\n          res *= tmp;\n\
    \        }\n        i++;\n      }\n      return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp29lzgl8b.java:39)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long t = 1;\n        while (n > 0) {\n            long r = n % 10;\n\
    \            if (r % 2 == 1)\n                t *= r;\n            n /= 10;\n\
    \        }\n        return t;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj91qt9j8.java:35)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        for (char d : Long.toString(n).toCharArray())\
    \ {\n            if (d % 2 == 1) {\n                product *= Character.getNumericValue(d);\n\
    \            }\n        }\n        return product;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpravrd1nf.java:34)\n"
  stdout: ''
  timestamp: 1660011442
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return -1l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_zozt0f.java:22)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Your code here.\n        return 0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptec4goys.java:23)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8c807qc.java:22)\n"
  stdout: ''
  timestamp: 1660011432
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                result *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvontelb7.java:36)\n"
  stdout: ''
  timestamp: 1660011434
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long a = 1l;\n        for (; n != 0; n /= 10) {\n            long\
    \ x = n % 10;\n            if (x % 2 == 1) {\n                a *= x;\n      \
    \      }\n        }\n        return a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprrb2843l.java:35)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long digits = 1;\n        while (n != 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                digits *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return digits;\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprqi78865.java:36)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) prod *= digit;\n            n /= 10;\n\
    \        }\n        return prod;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwl1digp.java:34)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // TODO: write a procedure that computes the product of the odd digits\
    \ in n\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwpuq3ll4.java:23)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            int digit\
    \ = (int) (n % 10);\n            if (digit % 2 == 1) {\n                result\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmxf70qos.java:36)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        int product = 1;\n        while (n > 0) {\n            int digit\
    \ = (int) (n % 10);\n            if (digit % 2 == 1) {\n                product\
    \ *= digit;\n            }\n            n /= 10;\n        }\n        return product;\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjp_th8pb.java:36)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxytack2h.java:22)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) return 0;\n        long prod = 1;\n        while (n >\
    \ 0) {\n            long dig = n % 10;\n            if (dig % 2 == 1) prod *=\
    \ dig;\n            n /= 10;\n        }\n        return prod;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp58wa3ena.java:35)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long result = 1;\n        while (n > 0) {\n            long d = n\
    \ % 10;\n            if (d % 2 == 1) {\n                result *= d;\n       \
    \     }\n            n /= 10;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn61sqsr_.java:36)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long p = 1;\n        while (n > 0) {\n            long d = n % 10;\n\
    \            if (d % 2 == 1)\n                p *= d;\n            n /= 10;\n\
    \        }\n        return p;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n \
    \   assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n  \
    \  assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzvjja4zi.java:35)\n"
  stdout: ''
  timestamp: 1660011438
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        for (char c : String.valueOf(n).toCharArray())\
    \ {\n            int ci = Character.getNumericValue(c);\n            if (ci %\
    \ 2 == 1) {\n                product *= ci;\n            }\n        }\n      \
    \  return product;\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mkuyccq.java:35)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String s = String.valueOf(n);\n        long res = 1;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            int d = Integer.parseInt(s.substring(i,\
    \ i + 1));\n            if (d % 2 == 1) {\n                res *= d;\n       \
    \     }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprqiyq1td.java:36)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // Replace the following line with your code.\n        String nString\
    \ = String.valueOf(n);\n        int product = 1;\n        for (int i = 0; i <\
    \ nString.length(); i++) {\n            int num = Integer.parseInt(nString.substring(i,\
    \ i + 1));\n            if (num % 2 != 0) {\n                product *= num;\n\
    \            }\n        }\n        return product;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8xca9ix.java:37)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long m = n %\
    \ 10;\n            if (m % 2 == 1) prod *= m;\n            n /= 10;\n        }\n\
    \        return prod;\n    }\n    public static void main(String[] args) {\n \
    \   assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l))\
    \ == (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l))\
    \ == (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8qcq5y_.java:34)\n"
  stdout: ''
  timestamp: 1660011443
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        String number = String.valueOf(n);\n        return Arrays.stream(number.split(\"\
    \"))\n                     .mapToLong(Integer::parseInt)\n                   \
    \  .filter(i -> i % 2 != 0)\n                     .reduce(1, (a, b) -> a * b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifr0yh1z.java:32)\n"
  stdout: ''
  timestamp: 1660011444
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        throw new IllegalArgumentException(\"Not implemented\");\n    }\n\
    \    public static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n\
    \    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n   \
    \ assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Not implemented\n\
    \tat Problem.digits(tmp1emr1fj5.java:19)\n\tat Problem.main(tmp1emr1fj5.java:22)\n"
  stdout: ''
  timestamp: 1660011444
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        throw new UnsupportedOperationException(\"Method not implemented.\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(digits((5l))\
    \ == (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) ==\
    \ (1l));\n    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) ==\
    \ (315l));\n    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l))\
    \ == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Method\
    \ not implemented.\n\tat Problem.digits(tmp69ua5gz4.java:19)\n\tat Problem.main(tmp69ua5gz4.java:22)\n"
  stdout: ''
  timestamp: 1660011444
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        if (n == 0) return 0;\n        long x = n % 10;\n        if (x %\
    \ 2 == 0) {\n            return digits(n / 10);\n        } else {\n          \
    \  return x * digits(n / 10);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jaljbjj.java:28)\n"
  stdout: ''
  timestamp: 1660011444
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long product = 1;\n        while (n > 0) {\n            long digit\
    \ = n % 10;\n            if (digit % 2 == 1) {\n                product *= digit;\n\
    \            }\n            n /= 10;\n        }\n        return product;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(digits((5l)) ==\
    \ (5l));\n    assert(digits((54l)) == (5l));\n    assert(digits((120l)) == (1l));\n\
    \    assert(digits((5014l)) == (5l));\n    assert(digits((98765l)) == (315l));\n\
    \    assert(digits((5576543l)) == (2625l));\n    assert(digits((2468l)) == (0l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4tz0896.java:36)\n"
  stdout: ''
  timestamp: 1660011431
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        // write your code here\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyq2vjkr2.java:23)\n"
  stdout: ''
  timestamp: 1660011444
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        throw new RuntimeException(\"unimplemented\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l))\
    \ == (5l));\n    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) ==\
    \ (5l));\n    assert(digits((98765l)) == (315l));\n    assert(digits((5576543l))\
    \ == (2625l));\n    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: unimplemented\n\
    \tat Problem.digits(tmpiohwdjq8.java:19)\n\tat Problem.main(tmpiohwdjq8.java:22)\n"
  stdout: ''
  timestamp: 1660011444
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a positive integer n, return the product of the\
    \ odd digits.\n    // Return 0 if all digits are even.\n    // For example:\n\
    \    // >>> digits((1l))\n    // (1l)\n    // >>> digits((4l))\n    // (0l)\n\
    \    // >>> digits((235l))\n    // (15l)\n    public static long digits(long n)\
    \ {\n        long prod = 1;\n        while (n > 0) {\n            long digit =\
    \ n % 10;\n            if (digit % 2 == 1) prod *= digit;\n            n /= 10;\n\
    \        }\n        return prod;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(digits((5l)) == (5l));\n    assert(digits((54l)) == (5l));\n\
    \    assert(digits((120l)) == (1l));\n    assert(digits((5014l)) == (5l));\n \
    \   assert(digits((98765l)) == (315l));\n    assert(digits((5576543l)) == (2625l));\n\
    \    assert(digits((2468l)) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplwl1digp.java:34)\n"
  stdout: ''
  timestamp: 1660011431

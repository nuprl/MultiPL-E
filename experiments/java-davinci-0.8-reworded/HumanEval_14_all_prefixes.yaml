name: HumanEval_14_all_prefixes
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return array list of all prefixes from shortest to longest\
  \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
  \ string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
  \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
  asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
  as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n\
  \    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
completions: ["        ArrayList<String> result = new ArrayList<String>();\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i += 1) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> out\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            out.add(string.substring(0, i + 1));\n        }\n        return\
    \ out;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> x\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            x.add(string.substring(0, i + 1));\n        }\n        return\
    \ x;", "        ArrayList<String> result = new ArrayList<String>();\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,i+1));\n\
    \        }\n        return result;", "        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;", "        ArrayList<String> output = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i += 1) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;", "        ArrayList<String> output\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            output.add(string.substring(0, i + 1));\n        }\n        return\
    \ output;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int limit = string.length();\n        for (int i = 0; i < limit; i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> retval\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            retval.add(string.substring(0, i + 1));\n        }\n        return\
    \ retval;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        int length = string.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,i+1));\n\
    \        }\n        return result;", "        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int len = 1; len <= string.length();\
    \ len++) {\n            result.add(string.substring(0, len));\n        }\n   \
    \     return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        int length = string.length();\n        for (int index = 0; index < length;\
    \ index = index + 1) {\n            prefixes.add(string.substring(0, index + 1));\n\
    \        }\n        return prefixes;", "        ArrayList<String> output = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            output.add(string.substring(0, i + 1));\n        }\n        return\
    \ output;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i +=\
    \ 1) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n   \
    \     return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", '        return new ArrayList<String>(Arrays.asList(string.split("(?!^)")));',
  "        ArrayList<String> result = new ArrayList<String>();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        int i = 0;\n        while (i < string.length())\
    \ {\n            result.add(string.substring(0, i + 1));\n            i = i +\
    \ 1;\n        }\n        return result;", '        return (new ArrayList<String>(Arrays.asList(string.split(""))));',
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        int counter = 0;\n        while (counter\
    \ < string.length()) {\n            result.add(string.substring(0, counter + 1));\n\
    \            counter = counter + 1;\n        }\n        return result;", "   \
    \     ArrayList<String> result = new ArrayList<String>();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> arrayList\
    \ = new ArrayList<String>();\n        String prefix = \"\";\n        for (Character\
    \ character : string.toCharArray()) {\n            prefix += character;\n    \
    \        arrayList.add(prefix);\n        }\n        return arrayList;", "    \
    \    ArrayList<String> prefixes = new ArrayList<String>();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        int length = string.length();\n        for\
    \ (int i = 0; i < length; i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        // >>> allPrefixes(\"\
    abc\")\n        // [\"a\", \"ab\", \"abc\"]\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    (?!^)\")));", "        ArrayList<String> output = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;", "        // Fill in the function\n\
    \        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> ret\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            ret.add(string.substring(0, i + 1));\n        }\n        return\
    \ ret;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> xs\
    \ = new ArrayList<String>();\n        String x = \"\";\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            x += string.charAt(i);\n          \
    \  xs.add(x);\n        }\n        return xs;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", '        return new ArrayList<String>(Arrays.asList(string.split("")));',
  "        ArrayList<String> toReturn = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            toReturn.add(string.substring(0,\
    \ i + 1));\n        }\n        return toReturn;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> pre\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            pre.add(string.substring(0, i + 1));\n        }\n        return\
    \ pre;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> list\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            list.add(string.substring(0, i + 1));\n        }\n        return\
    \ list;", "        ArrayList<String> prefixes = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", '        return new ArrayList<String>(Arrays.asList(IntStream.range(0,
    string.length() + 1).mapToObj(i -> string.substring(0, i)).toArray(String[]::new)));',
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", '        return new ArrayList<String>(Arrays.asList(string.split("")));',
  "        ArrayList<String> ans = new ArrayList<String>();\n        String currentPrefix\
    \ = \"\";\n        for (Character c : string.toCharArray()) {\n            currentPrefix\
    \ += c;\n            ans.add(currentPrefix);\n        }\n        return ans;",
  "        ArrayList<String> output = new ArrayList<String>();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;", "        ArrayList<String> out\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            out.add(string.substring(0, i + 1));\n        }\n        return\
    \ out;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    int n = string.length();\n        for (int i = 0; i < n; i++) {\n       \
    \     prefixes.add(string.substring(0, i + 1));\n        }\n        return prefixes;",
  '        return new ArrayList<String>(IntStream.range(0, string.length() + 1).mapToObj(i
    -> string.substring(0, i)).collect(Collectors.toList()));', "        int l = string.length();\n\
    \        ArrayList<String> prefixes = new ArrayList<String>();\n        String\
    \ substring = string;\n        while (l > 0) {\n            prefixes.add(substring);\n\
    \            substring = substring.substring(0, substring.length() - 1);\n   \
    \         l = l - 1;\n        }\n        return prefixes;", "        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        String prefix = \"\";\n        for (int i = 0; i < string.length(); i\
    \ += 1) {\n            prefix += string.charAt(i);\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;", "        ArrayList<String> results = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            results.add(string.substring(0, i + 1));\n        }\n        return\
    \ results;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        StringBuilder builder = new StringBuilder();\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            builder.append(string.charAt(i));\n\
    \            prefixes.add(builder.toString());\n        }\n        return prefixes;",
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        int n = string.length();\n        for (int\
    \ i = 0; i < n; i++) {\n            prefixes.add(string.substring(0, i + 1));\n\
    \        }\n        return prefixes;", "        ArrayList<String> output = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            output.add(string.substring(0, i + 1));\n        }\n        return\
    \ output;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int i = 0;\n        while (i < string.length()) {\n            prefixes.add(string.substring(0,\
    \ i+1));\n            i = i + 1;\n        }\n        return prefixes;", "    \
    \    ArrayList<String> prefixes = new ArrayList<String>();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> list = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            list.add(string.substring(0,\
    \ i + 1));\n        }\n        return list;", "        ArrayList<String> allPrefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i +=\
    \ 1) {\n            allPrefixes.add(string.substring(0, i + 1));\n        }\n\
    \        return allPrefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            prefixes.add(string.substring(0,i+1));\n        }\n        return\
    \ prefixes;", '        return new ArrayList<String>(Arrays.asList(string.split("")));',
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> ans\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            ans.add(string.substring(0, i + 1));\n        }\n        return\
    \ ans;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> allPrefixes = new ArrayList<String>();\n\
    \        allPrefixes.add(\"\");\n        for (int i = 0; i < string.length();\
    \ i++) {\n            allPrefixes.add(string.substring(0, i + 1));\n        }\n\
    \        return allPrefixes;", "        ArrayList<String> ans = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;", "        ArrayList<String> ret =\
    \ new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            ret.add(string.substring(0, i + 1));\n        }\n        return\
    \ ret;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            results.add(string.substring(0,\
    \ i + 1));\n        }\n        return results;", "        ArrayList<String> res\
    \ = new ArrayList<String>();\n        int n = string.length();\n        for (int\
    \ i = 0; i < n; i++) {\n            res.add(string.substring(0, i + 1));\n   \
    \     }\n        return res;", '        return new ArrayList<String>(prefixes(string));',
  '        return new ArrayList<String>(string.chars().mapToObj(i -> Character.toString((char)i)).collect(Collectors.toList()));',
  "        ArrayList<String> out = new ArrayList<String>();\n        for (int i =\
    \ 0; i < string.length(); i++) {\n            out.add(string.substring(0, i +\
    \ 1));\n        }\n        return out;", "        ArrayList<String> prefixes =\
    \ new ArrayList<String>();\n        for (int index = 0; index < string.length();\
    \ index++) {\n            prefixes.add(string.substring(0, index + 1));\n    \
    \    }\n        return prefixes;", '        return new ArrayList<String>(Arrays.asList(string.split("")));',
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> stringList\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            stringList.add(string.substring(0, i + 1));\n        }\n    \
    \    return stringList;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i +=\
    \ 1) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n   \
    \     return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        result.add(\"\");\n        while (string.length() > 0) {\n          \
    \  result.add(string);\n            string = string.substring(0, string.length()\
    \ - 1);\n        }\n        return result;", "        ArrayList<String> array\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            array.add(string.substring(0, i + 1));\n        }\n        return\
    \ array;", "        ArrayList<String> prefixes = new ArrayList<String>();\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", '        return new ArrayList<String>(Arrays.asList(string.split("(?!^)")));',
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            result.add(string.substring(0, i + 1));\n        }\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            result.add(string.substring(0, i + 1));\n        }\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        result.add(string);\n        for (int i\
    \ = 0; i < string.length() - 1; i++) {\n            result.add(string.substring(0,\
    \ string.length() - i - 1));\n        }\n        return result;", "        ArrayList<String>\
    \ allPrefixes = new ArrayList<String>();\n        for (int index = 0; index <\
    \ string.length(); index++) {\n            allPrefixes.add(string.substring(0,\
    \ index + 1));\n        }\n        return allPrefixes;", "        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> ret\
    \ = new ArrayList<String>();\n        int N = string.length();\n        for (int\
    \ i = 0; i < N; i++) {\n            ret.add(string.substring(0, i + 1));\n   \
    \     }\n        return ret;", '        return allPrefixes(string, 0);', "   \
    \     ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int prefix_length = 1; prefix_length\
    \ <= string.length(); prefix_length += 1) {\n            prefixes.add(string.substring(0,\
    \ prefix_length));\n        }\n        return prefixes;", "        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int index = 0; index < string.length();\
    \ index += 1) {\n            prefixes.add(string.substring(0, index + 1));\n \
    \       }\n        return prefixes;", '        return new ArrayList<String>(Arrays.asList(string.split("")));',
  "        // BEGIN SOLUTION\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n        // END SOLUTION", " \
    \       ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> ret\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            ret.add(string.substring(0, i + 1));\n        }\n        return\
    \ ret;", "        ArrayList<String> ans = new ArrayList<String>();\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> strings = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            strings.add(string.substring(0,\
    \ i + 1));\n        }\n        return strings;", "        ArrayList<String> output\
    \ = new ArrayList<String>();\n        int i = 0;\n        while (i < string.length())\
    \ {\n            output.add(string.substring(0,i+1));\n            i = i + 1;\n\
    \        }\n        return output;", "        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> a\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            a.add(string.substring(0, i + 1));\n        }\n        return\
    \ a;", "        return new ArrayList<String>(\n            IntStream.range(0,\
    \ string.length() + 1)\n            .mapToObj(i -> string.substring(0, i))\n \
    \           .collect(Collectors.toList()));", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", '        return new ArrayList<String>(Stream.iterate(1,
    i -> i + 1).limit(string.length()).map(i -> string.substring(0, i)).collect(Collectors.toList()));',
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;", '        return allPrefixes(string,
    new ArrayList<String>());', "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int index = 0; index < string.length(); index++) {\n           \
    \ result.add(string.substring(0, index + 1));\n        }\n        return result;",
  "        ArrayList<String> result = new ArrayList<String>();\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> retList\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            retList.add(string.substring(0, i + 1));\n        }\n       \
    \ return retList;", "        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;", "        ArrayList<String> ans =\
    \ new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            ans.add(string.substring(0, i + 1));\n        }\n        return\
    \ ans;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> ret\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            ret.add(string.substring(0, i + 1));\n        }\n        return\
    \ ret;", "        StringBuilder sb = new StringBuilder();\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i += 1) {\n            sb.append(string.charAt(i));\n            result.add(sb.toString());\n\
    \        }\n        return result;", "        return new ArrayList<String>(Arrays.asList(\n\
    \            string.split(\"(?!^)\")\n        ));", "        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;", "        ArrayList<String> output = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int i = 0; i < length; i +=\
    \ 1) {\n            output.add(string.substring(0, i + 1));\n        }\n     \
    \   return output;", "        ArrayList<String> ans = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> rv\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            rv.add(string.substring(0, i + 1));\n        }\n        return\
    \ rv;", "        ArrayList<String> stringList = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            stringList.add(string.substring(0,\
    \ i + 1));\n        }\n        return stringList;", "        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int i = 0;\n        while (i <\
    \ string.length()) {\n            prefixes.add(string.substring(0, i+1));\n  \
    \          i += 1;\n        }\n        return prefixes;", "        ArrayList<String>\
    \ res = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            res.add(string.substring(0, i + 1));\n        }\n      \
    \  return res;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> res\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;", "        ArrayList<String> prefixes = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i +=\
    \ 1) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n   \
    \     return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        int length = string.length();\n        for\
    \ (int i = 0; i < length; i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int k = 0; k < string.length(); k++)\
    \ {\n            prefixes.add(string.substring(0,k+1));\n        }\n        return\
    \ prefixes;", "        ArrayList<String> output = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            output.add(string.substring(0, i + 1));\n        }\n        return\
    \ output;", "        ArrayList<String> list = new ArrayList<String>();\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            list.add(string.substring(0,\
    \ i + 1));\n        }\n        return list;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        int length = string.length();\n        for\
    \ (int index = 0; index < length; index++) {\n            prefixes.add(string.substring(0,\
    \ index + 1));\n        }\n        return prefixes;", "        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;", "        ArrayList<String> ans = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            result.add(string.substring(0, i + 1));\n        }\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       String prefix = \"\";\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefix += string.charAt(i);\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;", "        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;", "        ArrayList<String> out = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            out.add(string.substring(0,\
    \ i + 1));\n        }\n        return out;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int prefixLength = 1; prefixLength\
    \ <= string.length(); prefixLength++) {\n            prefixes.add(string.substring(0,\
    \ prefixLength));\n        }\n        return prefixes;", "        ArrayList<String>\
    \ res = new ArrayList<String>();\n        int length = string.length();\n    \
    \    for (int i = 0; i < length; i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;", "        ArrayList<String> res =\
    \ new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;", "        ArrayList<String> output = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            result.add(string.substring(0, i + 1));\n        }\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;"]
stop_tokens:
- "\n    }\n"

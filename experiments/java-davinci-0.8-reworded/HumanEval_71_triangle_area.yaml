name: HumanEval_71_triangle_area
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
  \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
  \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make a\
  \ valid triangle when the sum of any two sides is greater \n    // than the third\
  \ side.\n    // Example:\n    // >>> triangleArea((3l), (4l), (5l))\n    // (6.0f)\n\
  \    // >>> triangleArea((1l), (2l), (10l))\n    // (float)-1l\n    public static\
  \ float triangleArea(long a, long b, long c) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
  \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
  \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
  \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
  \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
  \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
  \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
completions: ["        float s = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        if (a > 0 && b > 0 && c > 0 && a +\
    \ b > c && a + c > b && b + c > a) {\n            return area;\n        } else\
    \ {\n            return -1;\n        }", "        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            double s = (a + b + c) / 2.0;\n            return\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;", "        float s = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        if (a + b <= c || a + c <= b || b +\
    \ c <= a) {\n            return -1;\n        }\n        return area;", "     \
    \   if (a + b > c && a + c > b && b + c > a) {\n            double s = (a + b\
    \ + c) / 2.0;\n            return (float) Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        }\n        return -1;", "        float s = (a + b + c) / 2;\n\
    \        if (s > a && s > b && s > c) {\n            float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float) Math.round(area\
    \ * 100f) / 100f;\n        }\n        return -1;", '        // Write your code
    here', "        // TODO: your code here\n        float f = -1f;\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) / 2f;\n\
    \            f = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n\
    \        return f;", "        // if triangle is valid, Heron's formula.\n    \
    \    // formula has sqrt so use float or double\n        if(a + b > c && a + c\
    \ > b && b + c > a) {\n            float s = (a + b + c) / 2.0f;\n           \
    \ float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n          \
    \  // round the area to two decimal points\n            return (float)Math.round(area\
    \ * 100) / 100;\n        }\n        return -1;", "        float s = (a + b + c)\
    \ / 2.0f;\n        float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        if (a + b <= c || a + c <= b || b + c <= a) {\n            return\
    \ -1;\n        }\n        return area;", '        return -1f;', '        return
    -1;', "        float s = (a + b + c) / 2.0f;\n        float area = s * (s - a)\
    \ * (s - b) * (s - c);\n        return area > 0 ? (float)Math.sqrt(area) : -1.0f;",
  "        float s = ((a + b + c) / 2.0f);\n        float area = (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        return (a + b > c && a + c > b && b\
    \ + c > a) ? area : -1.0f;", '        return -1;', "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            double s = (a + b + c) / 2;\n         \
    \   double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n            return\
    \ (float)area;\n        }\n        return -1;", "        float s = (a + b + c)\
    \ / 2;\n        return (float) (Math.sqrt(s * (s - a) * (s - b) * (s - c)));",
  '        throw new UnsupportedOperationException("Problem: triangleArea");', '        return
    -1;', "        if (a+b>c && a+c>b && b+c>a)\n            return (float) (Math.sqrt(((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)))/4);\n\
    \        else\n            return -1f;", "        if (a <= 0 || b <= 0 || c <=\
    \ 0) {\n            return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n\
    \        float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  \
    \      return area;", "        if (a+b>c && a+c>b && b+c>a) {\n            float\
    \ s = (a+b+c)/2f;\n            return (float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        }\n        return -1f;", '        return (float)-1;', "        if ((a\
    \ + b) > c && (a + c) > b && (b + c) > a) {\n            float s = (a + b + c)\
    \ / 2;\n            float result = (float)Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n            return (float)Math.round(result * 100.0) / 100.0f;\n   \
    \     }\n        return -1f;", "      if (a + b > c && a + c > b && b + c > a)\
    \ {\n        float s = (a + b + c) / 2f;\n        float area = (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        return (float)Math.round(area * 100.0)\
    \ / 100.0f;\n      }\n      return -1f;", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            float a1 = a;\n            float b1 = b;\n    \
    \        float c1 = c;\n            float s = (a1 + b1 + c1) / 2.0f;\n       \
    \     return (float)Math.sqrt(s * (s - a1) * (s - b1) * (s - c1));\n        }\n\
    \        return -1.0f;", "        // throw new UnsupportedOperationException(\"\
    Not implemented\");\n        if (a+b<=c || a+c<=b || b+c<=a) {\n            return\
    \ -1;\n        }\n        double p = (a+b+c)/2.0;\n        double area = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \        return (float)area;", '        // your code here.', "        //*** Your\
    \ code here ***\n        return (float)-1;", "        float area = -1;\n     \
    \   float s = (a + b + c) / 2;\n        if (a < (b + c) && b < (a + c) && c <\
    \ (a + b)) {\n            area = (float)Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        }\n        return area;", "        // Write your code here\n \
    \       return -1;", "        // we should handle possible overflow\n        //\
    \ and handle a == 0, b == 0, c == 0\n        // and handle a, b, c < 0\n     \
    \   double p = (a + b + c) / 2.0;\n        double area = Math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c));\n        if (area < 0 || a + b <= c || a + c <= b || b\
    \ + c <= a) {\n            return -1;\n        }\n        return (float) area;",
  "        float result = -1f;\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            float p = (a + b + c) / 2;\n            result = (float) Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        }\n        return result;", "     \
    \   // Exception if input is not long\n        if (a == null || b == null || c\
    \ == null || !(a instanceof Long) || !(b instanceof Long) || !(c instanceof Long))\
    \ {\n            throw new IllegalArgumentException(\"Invalid input type\");\n\
    \        }\n\n        // Exception if input is negative\n        if (a < 0 ||\
    \ b < 0 || c < 0) {\n            throw new IllegalArgumentException(\"Invalid\
    \ input negative\");\n        }\n\n        // If a is longer than b and c\n  \
    \      if (a > b && a > c) {\n            // If a is greater than the sum of b\
    \ and c, return -1\n            if (a > b + c) {\n                return -1;\n\
    \            }\n            // Otherwise, return the area of the triangle\n  \
    \          else {\n                return ((float)b * (float)c) / 2;\n       \
    \     }\n        }\n        // If b is longer than a and c\n        else if (b\
    \ > a && b > c) {\n            // If b is greater than the sum of a and c, return\
    \ -1\n            if (b > a + c) {\n                return -1;\n            }\n\
    \            // Otherwise, return the area of the triangle\n            else {\n\
    \                return ((float)a * (float)c) / 2;\n            }\n        }\n\
    \        // If c is longer than a and b\n        else if (c > a && c > b) {\n\
    \            // If c is greater than the sum of a and b, return -1\n         \
    \   if (c > a + b) {\n                return -1;\n            }\n            //\
    \ Otherwise, return the area of the triangle\n            else {\n           \
    \     return ((float)a * (float)b) / 2;\n            }\n        }\n        //\
    \ Otherwise all sides are equal\n        else {\n            return ((float)a\
    \ * (float)b) / 2;\n        }", "        if(a < 1 || b < 1 || c < 1) return -1;\n\
    \        // Math.sqrt(n) function\n        long p = (a + b + c) / 2;\n       \
    \ double area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        return (float)area;",
  "        float result = -1;\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            float p = (a + b + c) / 2;\n            result = (float) Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        }\n        return result;", '        throw
    new NotImplementedException();', "        float s = (a + b + c) / 2;\n       \
    \ if (s <= 0) {\n            return -1;\n        }\n        return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));", '        return -1;', "        // your code\
    \ here\n        return -1f;", "        // >>> YOUR CODE HERE <<<\n        return\
    \ 0;", "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return\
    \ -1;\n        }\n        double s = (a + b + c) / 2.0;\n        return (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));", "        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            long p = (a + b + c) / 2;\n            double\
    \ area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n            return (float)area;\n\
    \        }\n        return -1;", '        ', '        return 0;', "        float\
    \ s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n        if (area > 0) {\n            return (float)Math.round(area\
    \ * 100) / 100;\n        } else {\n            return -1;\n        }", "     \
    \   // Time: O(1) Space: O(1)\n        if(a < 0 || b < 0 || c < 0 || !isValidTriangle(a,\
    \ b, c)) {\n            return -1f;\n        }\n        else {\n            float\
    \ s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n        }", "        //return (float)-1;\n        if(a<=0||b<=0||c<=0)\
    \ return (float)-1;\n        if(a+b<=c||a+c<=b||b+c<=a) return (float)-1;\n  \
    \      long s=(a+b+c)/2;\n        double d=s*(s-a)*(s-b)*(s-c);\n        return\
    \ (float)Math.sqrt(d);", '        return 0;', "        float area = -1.0f;\n \
    \       if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
    \ b + c) / 2.0f;\n            area = (float)Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n        }\n        return area;", "        float result = -1f;\n\
    \        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n            float p\
    \ = (a + b + c) / 2f;\n            float area = (float) Math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c));\n            result = area;\n        }\n        return\
    \ result;", "        double p = (a + b + c) / 2.0;\n        double area = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        if (Double.isNaN(area))\n         \
    \   return -1;\n        else\n            return (float)area;", "        float\
    \ area = -1;\n        float s = (a + b + c) / 2;\n        float ss = s * (s -\
    \ a) * (s - b) * (s - c);\n        if (ss > 0) {\n            area = (float) Math.sqrt(ss);\n\
    \        }\n        return area;", "        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            float p = (a + b + c) / 2f;\n            return (float)\
    \ Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        }\n        return -1f;",
  "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
    \ b + c) / 2.0f;\n            float area = s * (s - a) * (s - b) * (s - c);\n\
    \            return (float)Math.sqrt(area);\n        }\n        return -1.0f;",
  "        if (a+b>c && a+c>b && b+c>a) {\n            return (float)Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \        }\n        return -1;", "        float s = (a + b + c) / 2.0f;\n    \
    \    float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n      \
    \  return (area > 0 ? area : -1);", "        float area = (float)-1l;\n      \
    \  // float s = (a + b + c) / 2;\n        // float area = (float)Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        // return area;\n        return area;",
  "        if (a+b<=c || a+c<=b || b+c<=a) return -1;\n        float p = (a+b+c)/2f;\n\
    \        float area = p*(p-a)*(p-b)*(p-c);\n        return (float)Math.sqrt(area);",
  '        return -1;', "        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area >\
    \ 0 ? (float) (Math.round(area * 100.0) / 100.0) : -1;", "        float s = (a\
    \ + b + c) / 2f;\n        double area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        return (float) Math.round(area * 100) / 100;", "        long s\
    \ = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n        return area;", "        float s = (a + b + c) / 2.0f;\n\
    \        float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n   \
    \     if (area > 0) {\n            return area;\n        } else {\n          \
    \  return -1;\n        }", "        // start here\n        return -1;", '        throw
    new RuntimeException("not yet implemented");', "      float s = (a + b + c) /\
    \ 2.0f;\n      float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \      return area >= 0 ? area : -1;", "      // Write your code here\n      \
    \  if(a+b>c && a+c>b && b+c>a){\n            double s = (a+b+c)/2.0;\n       \
    \     double area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n            return (float)\
    \ area;\n        }\n        return -1f;", "        float s = (a + b + c) / 2.0f;\n\
    \        float ss = s * (s - a) * (s - b) * (s - c);\n        return (ss > 0)\
    \ ? (float)Math.sqrt(ss) : -1;", "        long p = (a + b + c)/2;\n        float\
    \ area = (float) Math.sqrt(p*(p-a)*(p-b)*(p-c));\n        return area;", "   \
    \     if (a <= 0l || b <= 0l || c <= 0l) return -1f;\n        long max, sum;\n\
    \        max = a;\n        sum = b + c;\n        if (b > max) {\n            max\
    \ = b;\n            sum = a + c;\n        }\n        if (c > max) {\n        \
    \    max = c;\n            sum = a + b;\n        }\n        if (sum > max) {\n\
    \            return ((float)Math.sqrt(sum*(sum-a)*(sum-b)*(sum-c)))/4f;\n    \
    \    }\n        return -1f;", "        float s = (a + b + c) / 2f;\n        float\
    \ area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;",
  "        if(a < 0 || b < 0 || c < 0) {\n            return -1;\n        }\n    \
    \    float s = (a + b + c) / 2;\n        return (float) Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));", "        float s = (a + b + c) / 2.0f;\n        float\
    \ area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area\
    \ == Float.NaN) {\n            return -1.0f;\n        }\n        return area;",
  "        if(a + b > c && a + c > b && b + c > a)\n            return (float)Math.sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n        return -1;",
  "        float s = (a + b + c) / 2.0f;\n        float a2 = (float) (Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)));\n        return (a2 > 0) ? a2 : -1;", "   \
    \     if (a < b + c && b < a + c && c < a + b) {\n            float S = (a + b\
    \ + c) / 2f;\n            float area = (float) Math.sqrt(S * (S - a) * (S - b)\
    \ * (S - c));\n            return (float) Math.round(area * 100) / 100;\n    \
    \    }\n        return -1;", "        if ((a + b) > c && (a + c) > b && (b + c)\
    \ > a) {\n            float s = (a + b + c) / 2f;\n            return (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return -1f;",
  "        if ((a + b) <= c || (a + c) <= b || (b + c) <= a) {\n            return\
    \ -1;\n        }\n        return (float)Math.sqrt((a + b + c) * (a + b - c) *\
    \ (a - b + c) * (-a + b + c)) / 4;", "        float s = (a + b + c) / 2f;\n  \
    \      float t = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n       \
    \ return a + b > c && a + c > b && b + c > a ? t : -1;", '        return -1f;',
  "        float area;\n        float s = (a + b + c) / 2;\n        float result =\
    \ s * (s - a) * (s - b) * (s - c);\n        if (result < 0) {\n            area\
    \ = -1;\n        } else {\n            area = (float) Math.sqrt(result);\n   \
    \     }\n        return area;", "        if(!isValidTriangle(a, b, c))\n     \
    \       return -1.0f;\n        float s = (a + b + c) / 2;\n        return (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));", "        float s = ((a + b + c)\
    \ / 2f);\n        float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        return ((a + b) > c && (a + c) > b && (b + c) > a) ? area : -1f;",
  "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        if (area == (float)0.0) {\n       \
    \     return (float)-1.0;\n        }\n        return area;", '        return 0;',
  "        if (a + b > c && a + c > b && b + c > a) {\n            double p = (a +\
    \ b + c) / 2.0;\n            return (float) Math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c));\n        }\n        return -1;", "        float s = (a + b + c) /\
    \ 2.0f;\n        float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        if (area < 0) return -1;\n        return area;", "        // ***************************\n\
    \        // Write your code below here.\n        // ***************************\n\
    \        float s = (a + b + c) / 2;\n        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            float res = (float)Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n            return res;\n        }\n        return -1;", "        float\
    \ s = (a + b + c) / 2.0f;\n        float A = (float) Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n        if (A <= 0) return -1;\n        return A;", "    \
    \    // Implement me\n        return -1f;", "        if (a <= 0 || b <= 0 || c\
    \ <= 0) return -1;\n        long sum = a + b + c;\n        if (sum <= 2 * Long.max(a,\
    \ Long.max(b, c))) return -1;\n        double s = (double) sum / 2;\n        return\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));", '        throw new RuntimeException("Method
    not implemented.");', "        // int x = (a + b + c) / 2;\n        // int y =\
    \ (((x - a) * (x - b) * (x - c)) * x);\n        // if (y < 0) {\n        //  \
    \   return (float)-1l;\n        // }\n        // float z = (float) Math.sqrt(y);\n\
    \        // float z1 = ((float) z);\n        // return z1;\n        float p =\
    \ (a + b + c) / 2;\n        return (float) Math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c));", "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        return (area > 0) ? area : -1.0f;",
  "        float s = (a + b + c) / 2;\n        return (a+b>c && a+c>b && b+c>a) ?\
    \ (float)Math.sqrt(s*(s-a)*(s-b)*(s-c)) : -1;", '        return ((a + b > c) &&
    (a + c > b) && (b + c > a)) ? (float) (0.5 * (a * b * c)) : (float) -1;', '        return
    -1;', "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        if (area == 0) {\n            return\
    \ -1;\n        }\n        return area;", "        // YOUR CODE HERE\n        return\
    \ -1f;", "        float s = (a + b + c) / 2.0f;\n        return Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));", "        try {\n            return new Triangle(a,\
    \ b, c).getArea();\n        } catch (IllegalArgumentException e) {\n         \
    \   return -1.0f;\n        }", '        throw new UnsupportedOperationException("Method
    not implemented");', '        return -1;', '        return -1;', "        float\
    \ f = -1.0f;\n        if(a+b>c && a+c>b && b+c>a) {\n            float s = (a+b+c)/2;\n\
    \            double ar = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n            f = (float)ar;\n\
    \        }\n        return f;", "        if(a <= 0 || b <= 0 || c <= 0) {\n  \
    \          return -1f;\n        } else if((a + b) <= c || (a + c) <= b || (b +\
    \ c) <= a) {\n            return -1f;\n        } else {\n            float s =\
    \ (a + b + c) / 2f;\n            return (float)Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n        }", '        return -1;', "        float area = (float)-1l;\n\
    \        if (a < 0l || b < 0l || c < 0l) {\n            return area;\n       \
    \ }\n        if (a + b > c && a + c > b && b + c > a) {\n            float s =\
    \ (a + b + c) / 2f;\n            area = (float) Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n        }\n        return area;", "        if (isTriangle(a, b,\
    \ c)) {\n            float s = (a + b + c) / 2f;\n            float area = (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return area;\n        }\n     \
    \   return -1f;", "        float s = (a + b + c) / 2;\n        float area = s\
    \ * (s - a) * (s - b) * (s - c);\n        if (area > 0) {\n            return\
    \ (float) Math.sqrt(area);\n        } else {\n            return -1;\n       \
    \ }", "        if (a+b > c && a+c > b && b+c > a) {\n            float s = (a+b+c)/2;\n\
    \            float area = (float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n           \
    \ return area;\n        }\n        return -1;", "        // return Float.parseFloat(Float.toString(area));\n\
    \        float area = (a + b + c) / 2;\n        return area;", "        float\
    \ p = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c));\n        if (area < 0) {\n            return -1;\n     \
    \   }\n        return area;", "        if ((a + b <= c) || (a + c <= b) || (b\
    \ + c <= a))\n            return -1;\n        float s = (a + b + c) / 2.0f;\n\
    \        float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  \
    \      return (float) Math.round(area * 100) / 100;", "        float area = -1;\n\
    \        // Write your code here\n        return area;", "        if (a + b <=\
    \ c || a + c <= b || b + c <= a) {\n            return -1;\n        }\n      \
    \  float s = (a + b + c) / 2.0f;\n        return (float)Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));", "        if(!isValidTriangle(a, b, c)) return -1;\n\
    \        float s = (a + b + c) / 2f;\n        return (float)Math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c));", "        float s = (a + b + c) / 2.0f;\n        float\
    \ area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return (a\
    \ + b > c && a + c > b && b + c > a) ? area : -1.0f;", "        if( a + b <= c\
    \ || a + c <= b || b + c <= a ) return -1;\n        // Heron's Formula\n     \
    \   double s = (a + b + c) / 2.0;\n        return (float) Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));", "        if (a + b > c && a + c > b && b + c > a) {\n\
    \            return (float) Math.sqrt((a + b + c) * (-a + b + c) * (a - b + c)\
    \ * (a + b - c)) / 4;\n        }\n        return -1;", "        if (a <= 0 ||\
    \ b <= 0 || c <= 0) return -1;\n        if ((a + b) < c || (a + c) < b || (b +\
    \ c) < a) return -1;\n        float s = (a + b + c) / 2f;\n        return (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));", "        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            // Heron's Formula\n            float\
    \ s = (a + b + c) / 2.0f;\n            float a_res = s * (s - a) * (s - b) * (s\
    \ - c);\n            return (float)Math.sqrt(a_res);\n        }\n        return\
    \ -1;", '        return 0;', "        float s = (a + b + c) / 2;\n        float\
    \ area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return (a\
    \ + b > c && a + c > b && b + c > a) ? area : -1;", '        // write your solution
    here', "        // add your code here\n        float s = (a + b + c) / 2.0f;\n\
    \        float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  \
    \      return area > 0 ? area : -1;", "        try {\n            if ((a + b >\
    \ c) && (a + c > b) && (b + c > a)) {\n                double p = (a + b + c)\
    \ / 2.0;\n                return (float) Math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c));\n            } else {\n                return -1;\n            }\n  \
    \      } catch (Exception e) {\n            return -1;\n        }", '        return
    -1f;', "        float s = (a + b + c) / 2.0f;\n        float det = s * (s - a)\
    \ * (s - b) * (s - c);\n        if (det < 0) {\n            return -1;\n     \
    \   }\n        return (float)Math.sqrt(det);", "        float ret = -1f;\n   \
    \     if (a + b > c && a + c > b && b + c > a) {\n            float p = (a + b\
    \ + c) / 2.0f;\n            ret = (float)Math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c));\n        }\n        return ret;", "        long d = (a + b + c) / 2;\n\
    \        float area = (float) Math.sqrt(d * (d - a) * (d - b) * (d - c));\n  \
    \      return area;", '        return -1f;', "        if (a + b <= c || a + c\
    \ <= b || b + c <= a) {\n            return -1;\n        }\n        double p =\
    \ (a + b + c) / 2.0;\n        return (float)Math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c));", "        // your code here\n        return -1f;", "        float\
    \ s = ((float)a + (float)b + (float)c) / 2;\n        return (float)(-1);", " \
    \       // YOUR CODE HERE\n        return -1;", '        throw new NotImplementedException();',
  "        long sides[] = {a, b, c};\n        Arrays.sort(sides);\n        if (sides[0]\
    \ + sides[1] > sides[2]) {\n            return (float)Math.sqrt(sides[2] * (sides[2]\
    \ - sides[0]) * (sides[2] - sides[1]) * (sides[2] - sides[0]));\n        }\n \
    \       return -1;", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         // s is half the perimeter of the triangle.\n            double s =\
    \ (a + b + c) / 2.0;\n            // Return the area using the formula (s(s-a)(s-b)(s-c))^(1/2)\n\
    \            return (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        // If any of the three sides is greater than\
    \ the sum of the other two\n        // sides, it is not a valid triangle\n   \
    \     if (a > b + c || b > a + c || c > a + b) {\n            return -1;\n   \
    \     }\n        // Heron's formula: http://www.mathopenref.com/heronsformula.html\n\
    \        float p = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        return area;", '        throw new UnsupportedOperationException("Problem#triangleArea");',
  "        long s = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n        if (area > 0)\n            return (float)\
    \ (Math.round(area * 100.0) / 100.0);\n        else\n            return (float)\
    \ -1;", "        // >>> triangleArea((3l), (4l), (5l))\n        // (6.0f)\n  \
    \      // >>> triangleArea((1l), (2l), (10l))\n        // (float)-1l\n       \
    \ // Your code goes here\n        // This line must be the first thing returned\n\
    \        if(a+b>c && a+c>b && b+c>a){\n            float s = (a+b+c)/2f;\n   \
    \         return(float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n        }\n        return\
    \ -1f;", "        if(a + b <= c || a + c <= b || b + c <= a) {\n            return\
    \ -1;\n        }\n        double s = (a + b + c) / 2.0;\n        return (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));", "        if(a + b > c && a + c\
    \ > b && b + c > a)\n            return (float)Math.sqrt((double)(a + b + c) *\
    \ (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n        return -1;", "     \
    \ // write your code here\n      float x = (float)Math.sqrt(a*a + b*b);\n    \
    \  float y = (float)Math.sqrt(b*b + c*c);\n      float z = (float)Math.sqrt(c*c\
    \ + a*a);\n      if ((a + b > c) && (a + c > b) && (b + c > a)) {\n        return\
    \ ((a + b + c) / 2) * (x + y + z);\n      }\n      return -1;", "        // YOUR\
    \ CODE HERE\n        // return (float)-1l;\n        return (float)-1l;", "   \
    \     if(a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n \
    \       } else {\n            double s = (a + b + c) / 2;\n            double\
    \ area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n            BigDecimal bd\
    \ = new BigDecimal(area);\n            bd = bd.setScale(2, RoundingMode.HALF_UP);\n\
    \            return bd.floatValue();\n        }", "        float s = (a + b +\
    \ c) / 2;\n        return s * (s - a) * (s - b) * (s - c) < 0 ? -1 : (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));", "        \n        return -1;", "        if(a+b>c\
    \ && a+c>b && b+c>a)\n            return (float)Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \        return -1;", "        float s = (a + b + c) / 2;\n        float area\
    \ = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;",
  "        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n            // Heron's\
    \ formula\n            float s = (a + b + c) / 2.0f;\n            float area =\
    \ (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n            return area;\n\
    \        } else {\n            return -1;\n        }", '        return 0;', '        return
    -1f;', '        return 0;', "        // sample solution 1:\n        // float area\
    \ = -1f;\n        // float sum = (a + b + c);\n        // if(a < sum && b < sum\
    \ && c < sum){\n        //     sum = sum / 2;\n        //     area = (float) Math.sqrt(sum\
    \ * (sum - a) * (sum - b) * (sum - c));\n        // }\n        // return area;\n\
    \        // sample solution 2:\n        if (a + b > c && a + c > b && b + c >\
    \ a) {\n            float p = (a + b + c) / 2;\n            return (float) Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        }\n        return -1;", "        //\
    \ Inputs:\n        // a is an int\n        // b is an int\n        // c is an\
    \ int\n        // Output:\n        // a float\n        // Constraints:\n     \
    \   // Guaranteed to be a valid triangle\n\n\n        // Write code here and remove\
    \ the line below\n        throw new UnsupportedOperationException(\"Problem not\
    \ solved yet\");", "        List<Long> sides = Arrays.asList(a, b, c);\n     \
    \   Collections.sort(sides);\n        if (sides.get(0) + sides.get(1) > sides.get(2))\
    \ {\n            long s = (a + b + c) / 2;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if(a\
    \ + b > c && a + c > b && b + c > a) {\n            float half = (a + b + c) /\
    \ 2f;\n            float area = (float)Math.sqrt(half * (half - a) * (half - b)\
    \ * (half - c));\n            return (float)Math.round(area * 100.0) / 100.0f;\n\
    \        }\n        return -1f;", '        return -1f;', '        return -1;',
  "        float s = (a + b + c) / 2;\n        if(s < (a) || s < (b) || s < (c)) {\n\
    \            return -1;\n        }\n        return (float) Math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c));", '        // start coding here', "        if (a +\
    \ b <= c || a + c <= b || b + c <= a) {\n            return -1;\n        }\n \
    \       float p = (a + b + c) / 2f;\n        return (float) Math.sqrt(p * (p -\
    \ a) * (p - b) * (p - c));", '        return -1;', '        return -1;', "   \
    \     // FILL THIS IN\n        return -1f;", '        throw new UnsupportedOperationException("Implement
    me!");', "        float s = ((a + b + c) / 2f);\n        float area = (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area < 0 || a + b <\
    \ c || a + c < b || b + c < a) {\n            return -1;\n        }\n        return\
    \ (float) Math.round(area * 100) / 100;", "        float res = -1;\n        float\
    \ s = (a + b + c) / 2;\n        if (a > 0 && b > 0 && c > 0 && s > a && s > b\
    \ && s > c) {\n            res = (float)Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        }\n        return res;", "        // >>> YOUR CODE HERE <<<\n\
    \        float s = (a + b + c) / 2;\n        double area = Math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n        if (area == Double.NaN)\n            return\
    \ -1;\n        return (float)area;", "        // Step 1. Take the inputs\n   \
    \     // Step 2. Create a list of the 3 inputs\n        // Step 3. Sort the list\n\
    \        // Step 4. Take the first two elements in the list and add them up\n\
    \        // Step 5. Take the last element in the list and compare it to the \n\
    \        //         result of step 4\n        // Step 6. If step 5 is true, calculate\
    \ the area of the triangle\n        // Step 7. If step 5 is false, return -1\n\
    \        // Step 8. Round the area of the triangle to 2 decimal points\n     \
    \   return -1.0f;", "        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2f;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if(a+b<=c\
    \ || a+c<=b || b+c<=a) return -1;\n        double s = (a+b+c)/2;\n        double\
    \ x = s*(s-a)*(s-b)*(s-c);\n        return (float)Math.sqrt(x);", "        if\
    \ (a+b>c && a+c>b && b+c>a) {\n            return (float) Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n\
    \        }\n        return -1;", "        float s = (a + b + c) / 2.0f;\n    \
    \    float area = s;\n        for (int i = 0; i < 2; i++) {\n            area\
    \ *= s - i;\n        }\n        return (float)Math.sqrt(area);", "        float\
    \ p = (a + b + c) / 2.0f;\n        float a1 = p - a;\n        float b1 = p - b;\n\
    \        float c1 = p - c;\n        float area = (float) Math.sqrt(p * a1 * b1\
    \ * c1);\n        if (a + b > c && a + c > b && b + c > a) {\n            return\
    \ (float) Math.round(area * 100.0f) / 100.0f;\n        } else {\n            return\
    \ -1;\n        }", '        return (float)a;', "        float s = (a + b + c)\
    \ / 2;\n        return (float) -1.0;", "        return new Sextet<Long, Long,\
    \ Long, Float, Boolean, Boolean>(a, b, c, (float) -1, false, false). \n      \
    \                                              map(Problem::getArea).map(Problem::round).getValue0();",
  "        //check if valid traingle\n        if ((a + b > c) && (a + c > b) && (b\
    \ + c > a)) {\n            double s = (a + b + c) / 2;\n            double result\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n            return (float)result;\n\
    \        } else {\n            return (float)-1;\n        }", "        if (a +\
    \ b > c && a + c > b && b + c > a) {\n            double s = (a + b + c) / 2d;\n\
    \            return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    \
    \    }\n        return -1;", "        return a + b > c && b + c > a && a + c >\
    \ b ?\n            (float)Math.sqrt((long)a * a + (long)b * b - 2l * a * b * (long)Math.cos(Math.acos((double)c\
    \ / (double)Math.sqrt((double)a * (double)a + (double)b * (double)b - (double)c\
    \ * (double)c)) - (long)Math.PI / 2)) * 0.5f * b : -1;", "        if (a + b <=\
    \ c || a + c <= b || b + c <= a) {\n            return -1;\n        }\n      \
    \  double s = (a + b + c) / 2.0;\n        return (float) Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));", "        // replace (float)-1l with your code\n    \
    \    if(a+b<=c || a+c<=b || b+c<=a) {\n            return (float)-1l;\n      \
    \  }\n        else{\n            float s=(float)(a+b+c)/2;\n            return\
    \ (float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n        }", "        double s = (a +\
    \ b + c) / 2.0;\n        return (float)Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));", "        long[] sorted = new long[]{a, b, c};\n        Arrays.sort(sorted);\n\
    \        float s = (sorted[0] + sorted[1] + sorted[2]) / 2f;\n        if (s -\
    \ sorted[0] > sorted[2]) {\n            return (float)Math.sqrt(s * (s - sorted[0])\
    \ * (s - sorted[1]) * (s - sorted[2]));\n        } else {\n            return\
    \ -1;\n        }", "        float s = (a + b + c) / 2;\n        float area = (float)\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area == 0 || area <\
    \ 0)\n            return -1;\n        else\n            return (float) (Math.round(area\
    \ * 100.0) / 100.0);", "        float area = -1;\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            float p = (a + b + c) / 2f;\n           \
    \ area = (float) Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        }\n    \
    \    return area;", "        // TODO...\n        return -1;", "        float s\
    \ = (a + b + c) / 2;\n        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n       \
    \ }\n        return -1;", "        double s = (a + b + c) / 2;\n        return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));", "        float s = (a + b + c)\
    \ / 2;\n        if(a + b > c && a + c > b && b + c > a) {\n            return\
    \ ((float)Math.sqrt(s * (s - a) * (s - b) * (s - c)));\n        }\n        return\
    \ -1;", '        return 0;', "        if (a <= 0 || b <= 0 || c <= 0) return -1f;\n\
    \        // Heron's Formula:\n        // A = sqrt(s(s-a)(s-b)(s-c))\n        //\
    \ s = (a+b+c)/2\n        double s = (a+b+c)/2.0;\n        double area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        if (area < 0) return -1f;\n        return (float)Math.round(area*100.0)/100.0f;",
  "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        if (area > 0) {\n            return\
    \ area;\n        } else {\n            return -1;\n        }", '        throw
    new UnsupportedOperationException("Problem triangleArea has not been implemented");',
  "        // your code goes here\n        float s = (a + b + c) / 2;\n        return\
    \ (s * (s - a) * (s - b) * (s - c)) > 0 ? (float) Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c)) : -1;", '        return -1;']
stop_tokens:
- "\n    }\n"

language: java
name: HumanEval_17_parse_music
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        char[] chars = music_string.toCharArray();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (chars[i] ==\
    \ 'o') {\n                if (i + 1 < chars.length && chars[i + 1] == '|') {\n\
    \                    res.add((long)2l);\n                    i += 1;\n       \
    \         } else {\n                    res.add((long)4l);\n                }\n\
    \            } else if (chars[i] == '.') {\n                if (i + 1 < chars.length\
    \ && chars[i + 1] == '|') {\n                    res.add((long)1l);\n        \
    \            i += 1;\n                }\n            }\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ start:{{{\n        String[] notes = music_string.split(\"\\\\s+\");\n      \
    \  ArrayList<Long> note_lengths = new ArrayList<Long>();\n        for (String\
    \ note : notes) {\n            note_lengths.add(parseNote(note));\n        }\n\
    \        return note_lengths;\n        // }}}\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2betbfj.java:23: error: cannot find symbol\n            note_lengths.add(parseNote(note));\n\
    \                             ^\n  symbol:   method parseNote(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ notes = new ArrayList<Long>();\n        long val = 0;\n        for (char ch\
    \ : music_string.toCharArray()) {\n            if (ch == ' ') {\n            \
    \    notes.add(val);\n                val = 0;\n            } else if (ch == '.')\
    \ {\n                val += 1;\n            } else if (ch == 'o') {\n        \
    \        val += 4;\n            }\n        }\n        notes.add(val);\n      \
    \  return notes;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp33h94t2j.java:35)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        for (char c : music_string.toCharArray())\
    \ {\n            if (c == 'o') {\n                out.add((long)4l);\n       \
    \     } else if (c == '|') {\n                out.add((long)1l);\n           \
    \ }\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ormny3k.java:33)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        // your solution goes here\n        return\
    \ out;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg971g7q6.java:25)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ list = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            char c = music_string.charAt(i);\n            if (c == 'o')\
    \ {\n                if (i+1 < music_string.length() && music_string.charAt(i+1)\
    \ == '|') {\n                    list.add((long)2l);\n                    i++;\n\
    \                } else {\n                    list.add((long)4l);\n         \
    \       }\n            } else if (c == '.') {\n                list.add((long)1l);\n\
    \                i += 2;\n            }\n        }\n        return list;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\"\
    )).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        final\
    \ String[] split_music = music_string.split(\" \");\n        ArrayList<Long> beats\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < split_music.length; i++)\
    \ {\n            beats.add( beats_map.get(split_music[i]) );\n        }\n    \
    \    return beats;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsrliyhb0.java:22: error: cannot find symbol\n            beats.add(\
    \ beats_map.get(split_music[i]) );\n                       ^\n  symbol:   variable\
    \ beats_map\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code comes here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpp9z_20_r.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ results = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            results.add(parseNote(note));\n\
    \        }\n        return results;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq738you1.java:22: error: cannot find symbol\n            results.add(parseNote(note));\n\
    \                        ^\n  symbol:   method parseNote(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        int\
    \ note_idx = 0;\n        ArrayList<Long> note_beats = new ArrayList<Long>();\n\
    \        while (note_idx < music_string.length()) {\n            switch (music_string.charAt(note_idx))\
    \ {\n                case 'o':\n                    note_beats.add((long)4l);\n\
    \                    break;\n                case '.':\n                    note_beats.add((long)1l);\n\
    \                    break;\n                default:\n                    throw\
    \ new IllegalArgumentException(\"Unexpected character: \" + music_string.charAt(note_idx));\n\
    \            }\n            note_idx++;\n            if (note_idx < music_string.length()\
    \ && music_string.charAt(note_idx) == '|') {\n                note_beats.set(note_beats.size()\
    \ - 1, note_beats.get(note_beats.size() - 1) / 2);\n                note_idx++;\n\
    \            }\n            while (note_idx < music_string.length() && music_string.charAt(note_idx)\
    \ == ' ')\n                note_idx++;\n        }\n        return note_beats;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc080vzlx.java:45)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ music = new ArrayList<Long>();\n        String[] tokens = music_string.split(\"\
    \ \");\n        for (String token : tokens) {\n            if (token.equals(\"\
    o\")) {\n                music.add((long)4l);\n            } else if (token.equals(\"\
    o|\")) {\n                music.add((long)2l);\n            } else if (token.equals(\"\
    .|\")) {\n                music.add((long)1l);\n            }\n        }\n   \
    \     return music;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ r = new ArrayList<Long>();\n        for (String word : music_string.split(\"\
    \ \")) {\n            if (word.equals(\"o\")) {\n                r.add((long)4l);\n\
    \            } else if (word.equals(\"o|\")) {\n                r.add((long)2l);\n\
    \            } else if (word.equals(\".|\")) {\n                r.add((long)1l);\n\
    \            }\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \\\\s+\");\n        for (String note : notes) {\n            if (note.equals(\"\
    o\")) {\n                beats.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                beats.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                beats.add((long)1l);\n            }\n        }\n   \
    \     return beats;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (String note : music_string.split(\"\
    \ \")) {\n            if (note.equals(\"o\")) result.add((long)4l);\n        \
    \    else if (note.equals(\"o|\")) result.add((long)2l);\n            else if\
    \ (note.equals(\".|\")) result.add((long)1l);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your code here\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdue_a_9e.java:21: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes = music_string.split(\" \");\n        ArrayList<Long> arrayList = new\
    \ ArrayList<>();\n        for (String note : notes) {\n            if (note.equals(\"\
    o\")) {\n                arrayList.add((long) 4);\n            } else if (note.equals(\"\
    o|\")) {\n                arrayList.add((long) 2);\n            } else if (note.equals(\"\
    .|\")) {\n                arrayList.add((long) 1);\n            }\n        }\n\
    \        return arrayList;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ your code here\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwtiqjmxi.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n \
    \       int curr = 0;\n        while (curr < music_string.length()) {\n      \
    \      char curr_char = music_string.charAt(curr);\n            if (curr_char\
    \ == 'o') {\n                result.add((long)4l);\n                curr++;\n\
    \            } else if (curr_char == '.') {\n                result.add((long)1l);\n\
    \                curr += 2;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code here!\n        ArrayList<Long> abc = new ArrayList<Long>();\n    \
    \    for(int i=0;i<music_string.length();i++){\n            if(music_string.charAt(i)=='o'){\n\
    \                if(i<music_string.length()-1 && music_string.charAt(i+1)=='|'){\n\
    \                    abc.add((long)2);\n                    i++;\n           \
    \     }\n                else{\n                    abc.add((long)4);\n      \
    \          }\n            }\n            else if(music_string.charAt(i)=='.'){\n\
    \                abc.add((long)1);\n                i++;\n            }\n    \
    \    }\n        return abc;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ parsed_notes = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            switch (note) {\n   \
    \             case \"o\":\n                    parsed_notes.add((long)4l);\n \
    \                   break;\n                case \"o|\":\n                   \
    \ parsed_notes.add((long)2l);\n                    break;\n                case\
    \ \".|\":\n                    parsed_notes.add((long)1l);\n                 \
    \   break;\n            }\n        }\n        return parsed_notes;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long counter = 0;\n        // your\
    \ code starts here\n        char[] chars = music_string.toCharArray();\n     \
    \   for (int i = 0; i < chars.length; i++) {\n            if (chars[i] == 'o')\
    \ {\n                if (chars[i + 1] == '|') {\n                    result.add((long)\
    \ 2);\n                    i++;\n                } else {\n                  \
    \  result.add((long) 4);\n                }\n            } else if (chars[i] ==\
    \ '.') {\n                result.add((long) 1);\n                i++;\n      \
    \      }\n        }\n        // your code ends here\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 7 out of bounds for length 7\n\tat Problem.parseMusic(tmpk1o8irv8.java:25)\n\
    \tat Problem.main(tmpk1o8irv8.java:41)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ list=new ArrayList<Long>();\n        String[] split=music_string.split(\" \"\
    );\n        for(int i=0;i<split.length;i++){\n            if(split[i].equals(\"\
    o\")){\n                list.add((long)4l);\n            }\n            else if(split[i].equals(\"\
    o|\")){\n                list.add((long)2l);\n            }\n            else\
    \ if(split[i].equals(\".|\")){\n                list.add((long)1l);\n        \
    \    }\n        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ a = music_string.split(\" \");\n        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (String s : a) {\n            char c = s.charAt(0);\n           \
    \ switch (c) {\n                case 'o':\n                    ret.add((long)4l);\n\
    \                    break;\n                case 'o':\n                    ret.add((long)2l);\n\
    \                    break;\n                case '.':\n                    ret.add((long)1l);\n\
    \                    break;\n            }\n        }\n        return ret;\n \
    \   }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv10ry7va.java:27: error: duplicate case label\n               \
    \ case 'o':\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011543
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        char[] music_array = music_string.toCharArray();\n\
    \        // TODO: your code here\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcup3c1r.java:26)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        for (String i : music_string.split(\"\
    \ \")) {\n            switch (i) {\n                case \"o\":\n            \
    \        beats.add((long)4l);\n                    break;\n                case\
    \ \"o|\":\n                    beats.add((long)2l);\n                    break;\n\
    \                case \".|\":\n                    beats.add((long)1l);\n    \
    \                break;\n            }\n        }\n        return beats;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\"\
    )).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        char[] beats = music_string.toCharArray();\n\
    \        for (int i = 0; i < beats.length; i++) {\n            if (beats[i] ==\
    \ 'o') {\n                result.add((long)4l);\n            } else if (beats[i]\
    \ == '.') {\n                result.add((long)1l);\n            } else if (beats[i]\
    \ == '|') {\n                if (beats[i - 1] == 'o') {\n                    result.add((long)2l);\n\
    \                } else if (beats[i - 1] == '.') {\n                    result.add((long)1l);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mjqvjwh.java:39)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ ret = new ArrayList<Long>();\n        return ret;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprc57m0c0.java:24)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Here, write your code.\n        List<Long> l = new ArrayList<Long>();\n    \
    \    String[] arr = music_string.split(\" \");\n        for(String str : arr)\
    \ {\n            if(str.equals(\"o\"))\n                l.add((long)4);\n    \
    \        else if(str.equals(\"o|\"))\n                l.add((long)2);\n      \
    \      else if(str.equals(\".|\"))\n                l.add((long)1);\n        }\n\
    \        return new ArrayList<Long>(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Fill this in with your solution. You can use 'import java.util.*' to get access\
    \ to ArrayList and some other collection types.\n        // Also, you can use\
    \ 'import java.lang.reflect.*' to get access to the reflection API\n        //\
    \ Don't forget to include imports and method signature.\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] music = music_string.split(\"\
    \ \");\n        for (String note : music) {\n            result.add(parseNote(note));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_gbfldwa.java:25: error: cannot find symbol\n            result.add(parseNote(note));\n\
    \                       ^\n  symbol:   method parseNote(String)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        throw\
    \ new UnsupportedOperationException(\"Not implemented yet\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.parseMusic(tmp0rt4hg1g.java:19)\n\tat Problem.main(tmp0rt4hg1g.java:22)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        //put your code here\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogax5abl.java:25)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ tokens = music_string.split(\"\\\\s+\");\n        ArrayList<Long> res = new\
    \ ArrayList<Long>();\n        for (String t : tokens) {\n            if (t.equals(\"\
    o\")) res.add((long)4l);\n            else if (t.equals(\"o|\")) res.add((long)2l);\n\
    \            else if (t.equals(\".|\")) res.add((long)1l);\n        }\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        int\
    \ count = 0;\n        ArrayList<Long> results = new ArrayList<Long>();\n     \
    \   while (count < music_string.length()) {\n            char current = music_string.charAt(count);\n\
    \            if (current == 'o') {\n                if (count+1 < music_string.length()\
    \ && music_string.charAt(count+1) == '|') {\n                    results.add((long)2l);\n\
    \                    count++;\n                } else {\n                    results.add((long)4l);\n\
    \                }\n            } else if (current == '.') {\n               \
    \ results.add((long)1l);\n            }\n            count++;\n        }\n   \
    \     return results;\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        for (String s : music_string.split(\"\
    \ \")) {\n            if (s.equals(\"o\")) {\n                res.add((long)4l);\n\
    \            } else if (s.equals(\"o|\")) {\n                res.add((long)2l);\n\
    \            } else if (s.equals(\".|\")) {\n                res.add((long)1l);\n\
    \            }\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n\tArrayList<Long>\
    \ beats = new ArrayList<Long>();\n\t// System.out.println(music_string);\n\tString[]\
    \ notes = music_string.split(\" \");\n\tfor (String note : notes) {\n\t    //\
    \ System.out.println(note);\n\t    if (note.equals(\"o\")) {\n\t\tbeats.add((long)4l);\n\
    \t    } else if (note.equals(\"o|\")) {\n\t\tbeats.add((long)2l);\n\t    } else\
    \ if (note.equals(\".|\")) {\n\t\tbeats.add((long)1l);\n\t    }\n\t}\n\treturn\
    \ beats;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        // Your code here\n        music_string\
    \ = music_string.replaceAll(\"\\\\s+\",\"\");\n        char[] chars = music_string.toCharArray();\n\
    \        Long beats = 0l;\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (c == 'o') {\n               \
    \ if (i+1 < chars.length && chars[i+1] == '|') {\n                    result.add(2l);\n\
    \                    i += 1;\n                } else {\n                    result.add(4l);\n\
    \                }\n            } else if (c == '.') {\n                result.add(1l);\n\
    \                i += 1;\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ music_array = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) {\n                music_array.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                music_array.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                music_array.add((long)1l);\n            }\n        }\n\
    \        return music_array;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ answer = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            switch (note) {\n   \
    \             case \"o\":\n                    answer.add((long)4l);\n       \
    \             break;\n                case \"o|\":\n                    answer.add((long)2l);\n\
    \                    break;\n                case \".|\":\n                  \
    \  answer.add((long)1l);\n                    break;\n            }\n        }\n\
    \        return answer;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ music = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ ++i) {\n            if (music_string.charAt(i) == 'o') {\n                if\
    \ (i + 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n   \
    \                 music.add((long)2l);\n                    ++i;\n           \
    \     } else {\n                    music.add((long)4l);\n                }\n\
    \            } else if (music_string.charAt(i) == '.') {\n                if (i\
    \ + 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n      \
    \              music.add((long)1l);\n                    ++i;\n              \
    \  }\n            }\n        }\n        return music;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Implement your code here.\n        // You may add any helper functions you need\
    \ to implement this function.\n        // Note: This function is the only function\
    \ that you need to implement to pass this test case.\n        // Please do not\
    \ modify the function signatures of other functions.\n        // You may add private\
    \ functions if needed.\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp8drmogw0.java:27)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code here\n        return new ArrayList<Long>();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpac29c2yc.java:24)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (String s : music_string.split(\"\
    \ \")) {\n            switch (s) {\n                case \"o\":\n            \
    \        result.add((long)4l);\n                    break;\n                case\
    \ \"o|\":\n                    result.add((long)2l);\n                    break;\n\
    \                case \".|\":\n                    result.add((long)1l);\n   \
    \                 break;\n            }\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ BEGIN SOLUTION\n        ArrayList<Long> ret = new ArrayList<Long>();\n     \
    \   for (String st : music_string.split(\" \")) {\n            if (st.equals(\"\
    o\")) {\n                ret.add((long)4l);\n            } else if (st.equals(\"\
    o|\")) {\n                ret.add((long)2l);\n            } else if (st.equals(\"\
    .|\")) {\n                ret.add((long)1l);\n            }\n        }\n     \
    \   return ret;\n        // END SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011544
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ TODO: Implement this function.\n        ArrayList<Long> arrayList = new ArrayList<>();\n\
    \        int count = 0;\n        for (int i = 0; i < music_string.length(); i++)\
    \ {\n            if (music_string.charAt(i) == 'o') {\n                count++;\n\
    \            } else if (music_string.charAt(i) == '.') {\n                arrayList.add((long)\
    \ count);\n                count = 0;\n            }\n        }\n        arrayList.add((long)\
    \ count);\n        return arrayList;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo89rton9.java:34)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats_per_note = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ ++i) {\n            char c = music_string.charAt(i);\n            if (c == 'o')\
    \ {\n                beats_per_note.add((long)4l);\n            } else if (c ==\
    \ '.') {\n                beats_per_note.add((long)1l);\n            }\n     \
    \   }\n        return beats_per_note;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdkf9tomu.java:34)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes = music_string.split(\" \");\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (String note : notes) {\n            switch (note) {\n          \
    \      case \"o\":\n                    result.add((long)4l);\n              \
    \      break;\n                case \"o|\":\n                    result.add((long)2l);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.add((long)1l);\n                    break;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats_list = new ArrayList<Long>();\n        Long beat_value = null;\n     \
    \   boolean beat_value_initialised = false;\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                if\
    \ (beat_value_initialised == false) {\n                    beat_value = 4l;\n\
    \                    beat_value_initialised = true;\n                } else {\n\
    \                    beat_value = beat_value + 4l;\n                }\n      \
    \      } else if (music_string.charAt(i) == '|') {\n                if (beat_value_initialised\
    \ == false) {\n                    beat_value = 1l;\n                    beat_value_initialised\
    \ = true;\n                } else {\n                    beats_list.add(beat_value);\n\
    \                    beat_value = null;\n                    beat_value_initialised\
    \ = false;\n                }\n            } else if (music_string.charAt(i) ==\
    \ '.') {\n                if (beat_value_initialised == false) {\n           \
    \         beat_value = 2l;\n                    beat_value_initialised = true;\n\
    \                } else {\n                    beat_value = beat_value + 2l;\n\
    \                }\n            }\n        }\n        if (beat_value_initialised\
    \ == true) {\n            beats_list.add(beat_value);\n        }\n        return\
    \ beats_list;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjqdnahka.java:55)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        throw\
    \ new UnsupportedOperationException(\"Please implement the parseMusic method\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement the parseMusic method\n\tat Problem.parseMusic(tmpnsepqi41.java:19)\n\
    \tat Problem.main(tmpnsepqi41.java:22)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        //TODO: (opt) remove for loop\n    \
    \    for (String currNote : music_string.split(\" \")) {\n            char firstChar\
    \ = currNote.charAt(0);\n            if (firstChar == 'o') {\n               \
    \ if (currNote.length() == 1) {\n                    beats.add((long)4l);\n  \
    \              } else {\n                    beats.add((long)2l);\n          \
    \      }\n            } else {\n                beats.add((long)1l);\n       \
    \     }\n        }\n        return beats;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpnfpq3uw9.java:22)\n\
    \tat Problem.main(tmpnfpq3uw9.java:36)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ list = new ArrayList<Long>();\n        char[] array = music_string.toCharArray();\n\
    \        for (int i = 0; i < array.length; i++) {\n            if (array[i] ==\
    \ 'o') {\n                if (i + 1 < array.length && array[i + 1] == '|') {\n\
    \                    list.add((long) 2l);\n                    i++;\n        \
    \        } else {\n                    list.add((long) 4l);\n                }\n\
    \            } else if (array[i] == '.') {\n                list.add((long) 1l);\n\
    \                i++;\n            }\n        }\n        return list;\n    }\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011545
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes_array = music_string.split(\" \");\n        ArrayList<Long> duration_array\
    \ = new ArrayList<Long>();\n        for (String note : notes_array) {\n      \
    \      switch (note) {\n                case \"o\":\n                    duration_array.add((long)4l);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  duration_array.add((long)2l);\n                    break;\n               \
    \ case \".|\":\n                    duration_array.add((long)1l);\n          \
    \          break;\n            }\n        }\n        return duration_array;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ your code goes here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp9kujhxe4.java:23)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ your code starts here.\n        ArrayList<Long> a = new ArrayList<Long>();\n\
    \        String[] split_music = music_string.split(\" \");\n        for (String\
    \ music : split_music) {\n            if (music.equals(\"o\")) {\n           \
    \     a.add((long)4l);\n            } else if (music.equals(\"o|\")) {\n     \
    \           a.add((long)2l);\n            } else if (music.equals(\".|\")) {\n\
    \                a.add((long)1l);\n            }\n        }\n        return a;\n\
    \        // your code ends here.\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes = music_string.split(\" \");\n        long[] beats = new long[notes.length];\n\
    \        for (int i = 0; i < notes.length; i++) {\n            if (notes[i].equals(\"\
    o\")) {\n                beats[i] = 4;\n            } else if (notes[i].equals(\"\
    o|\")) {\n                beats[i] = 2;\n            } else if (notes[i].equals(\"\
    .|\")) {\n                beats[i] = 1;\n            }\n        }\n        return\
    \ new ArrayList<Long>(Arrays.asList(beats));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt3bwqys6.java:30: error: no suitable constructor found for ArrayList(List<long[]>)\n\
    \        return new ArrayList<Long>(Arrays.asList(beats));\n               ^\n\
    \    constructor ArrayList.ArrayList(int) is not applicable\n      (argument mismatch;\
    \ no instance(s) of type variable(s) T exist so that List<T> conforms to int)\n\
    \    constructor ArrayList.ArrayList(Collection<? extends Long>) is not applicable\n\
    \      (argument mismatch; inference variable T has incompatible bounds\n    \
    \      lower bounds: Long,Object\n          lower bounds: long[])\n  where T is\
    \ a type-variable:\n    T extends Object declared in method <T>asList(T...)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code goes here!\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpju8wzhc5.java:23)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        // ---\n        // FIXME\n        //\
    \ replace \"return new ArrayList<Long>();\" line with your code\n        // ---\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1o8iqwjb.java:28)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ parsed = new ArrayList<Long>();\n        for (String note : music_string.split(\"\
    \ \")) {\n            if (note.equals(\"o\")) {\n                parsed.add((long)4l);\n\
    \            } else if (note.equals(\"o|\")) {\n                parsed.add((long)2l);\n\
    \            } else if (note.equals(\".|\")) {\n                parsed.add((long)1l);\n\
    \            }\n        }\n        return parsed;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011545
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ pieces = music_string.split(\" \");\n        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (String piece : pieces) {\n            if (piece.equals(\"o\")) {\n\
    \                res.add((long)4l);\n            } else if (piece.equals(\"o|\"\
    )) {\n                res.add((long)2l);\n            } else if (piece.equals(\"\
    .|\")) {\n                res.add((long)1l);\n            }\n        }\n     \
    \   return res;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code is here\n    }\n    public static void main(String[] args) {\n   \
    \ assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx55vzoes.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp3f3r_12u.java:23)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ No other imports are allowed.\n        ////\n        // TODO: Implement me!\n\
    \        ////\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp9773926u.java:26)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ notes = new ArrayList<Long>();\n        // Complete your solution here.\n  \
    \      char[] c = music_string.toCharArray();\n        for(int i = 0; i < c.length;\
    \ i++){\n            if(c[i] == 'o'){\n                notes.add((long)4l);\n\
    \            }\n            else if(c[i] == '|'){\n                if(c[i-1] ==\
    \ '.'){\n                    notes.add((long)1l);\n                }\n       \
    \         else{\n                    notes.add((long)2l);\n                }\n\
    \            }\n        }\n        return notes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpla7cckzj.java:41)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (char c : music_string.toCharArray())\
    \ {\n            if (c == 'o') {\n                output.add((long)4l);\n    \
    \        } else if (c == '|') {\n                output.add((long)2l);\n     \
    \       } else if (c == '.') {\n                output.add((long)1l);\n      \
    \      }\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpud1sap5q.java:34)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        List<Long>\
    \ result = new ArrayList<>();\n        for (String s : music_string.split(\" \"\
    )) {\n            if (s.equals(\"o\")) {\n                result.add(4l);\n  \
    \          } else if (s.equals(\"o|\")) {\n                result.add(2l);\n \
    \           } else if (s.equals(\".|\")) {\n                result.add(1l);\n\
    \            }\n        }\n        return new ArrayList<Long>(result);\n    }\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                result.add((long)4l);\n\
    \            } else if (music_string.charAt(i) == '|') {\n                if (music_string.charAt(i\
    \ - 1) == 'o') {\n                    result.add((long)2l);\n                }\
    \ else {\n                    result.add((long)1l);\n                }\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxbzdtl9l.java:37)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ ret = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            switch (note) {\n   \
    \             case \"o\":\n                    ret.add((long)4l);\n          \
    \          break;\n                case \"o|\":\n                    ret.add((long)2l);\n\
    \                    break;\n                case \".|\":\n                  \
    \  ret.add((long)1l);\n                    break;\n            }\n        }\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) {\n                result.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                result.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                result.add((long)1l);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ write code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpt6okmhdu.java:23)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        final\
    \ String[] music_string_split = music_string.split(\"\");\n        final ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        final ArrayList<String> data = new\
    \ ArrayList<String>(Arrays.asList(music_string_split));\n        final ArrayList<String>\
    \ d = new ArrayList<String>();\n        for (String s : data) {\n            if\
    \ (s.equals(\" \")) {\n                if (d.size() == 1) {\n                \
    \    result.add((long)4l);\n                } else {\n                    final\
    \ ArrayList<String> dd = new ArrayList<String>(d);\n                    d.clear();\n\
    \                    dd.remove(\".\");\n                    dd.remove(\"|\");\n\
    \                    final String elem = dd.get(0);\n                    result.add((long)4l\
    \ / (long)Math.pow(2l, (long)dd.size()));\n                }\n            } else\
    \ {\n                d.add(s);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdzejy0q.java:43)\n"
  stdout: ''
  timestamp: 1660011546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ notes = new ArrayList<Long>();\n        String[] parts = music_string.split(\"\
    \ \");\n        for (String part : parts) {\n            if (part.length() ==\
    \ 1) {\n                notes.add((long)4l);\n            } else {\n         \
    \       notes.add((long)2l);\n            }\n        }\n        return notes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc8bo1u51.java:31)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        for (char c : music_string.toCharArray())\
    \ {\n            if (c == 'o') {\n                beats.add((long)4l);\n     \
    \       } else if (c == '|') {\n                beats.add((long)2l);\n       \
    \     } else if (c == '.') {\n                beats.add((long)1l);\n         \
    \   }\n        }\n        return beats;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgh27y7o.java:34)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ TODO: Implement this function.\n        String [] notes = music_string.split(\"\
    \ \");\n        ArrayList<Long> durations = new ArrayList<Long>();\n        for\
    \ (String note : notes) {\n            if (note.contains(\"|\")) {\n         \
    \       if (note.startsWith(\"o\")) {\n                    durations.add((long)2l);\n\
    \                } else {\n                    durations.add((long)1l);\n    \
    \            }\n            } else {\n                durations.add((long)4l);\n\
    \            }\n        }\n        return durations;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyeac0_7v.java:36)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ First of all, we will walk through the string and count how many notes are there\
    \ in total.\n        // Then we will fill in an arraylist with the correct number\
    \ of beats for each note.\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int count = 0;\n        for (int i = 0; i < music_string.length(); i++)\
    \ {\n            if (music_string.charAt(i) == 'o') {\n                count +=\
    \ 1;\n            }\n        }\n        for (int i = 0; i < count; i++) {\n  \
    \          result.add((long) 4l);\n        }\n        // Now we will walk through\
    \ the string again and replace the notes with their appropriate\n        // number\
    \ of beats.\n        for (int i = 0; i < music_string.length(); i++) {\n     \
    \       if (music_string.charAt(i) == 'o' && music_string.charAt(i + 1) == '|')\
    \ {\n                result.set(i, (long) 2l);\n            }\n            if\
    \ (music_string.charAt(i) == '.' && music_string.charAt(i + 1) == '|') {\n   \
    \             result.set(i, (long) 1l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 7\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpgjegktoh.java:34)\n\
    \tat Problem.main(tmpgjegktoh.java:45)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        char[]\
    \ notes = music_string.toCharArray();\n        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long count = 0;\n        char note;\n        long temp = 0;\n       \
    \ for (int i = 0; i < notes.length; i++) {\n            note = notes[i];\n   \
    \         if (note == 'o') {\n                if (temp != 0) {\n             \
    \       res.add(temp);\n                    temp = 0;\n                }\n   \
    \             count++;\n            } else if (note == '|') {\n              \
    \  temp++;\n            } else if (note == ' ') {\n                if (temp !=\
    \ 0) {\n                    res.add(temp);\n                    temp = 0;\n  \
    \              }\n                if (count != 0) {\n                    res.add(count);\n\
    \                    count = 0;\n                }\n            }\n        }\n\
    \        if (temp != 0) {\n            res.add(temp);\n            temp = 0;\n\
    \        }\n        if (count != 0) {\n            res.add(count);\n         \
    \   count = 0;\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwhzfhujg.java:57)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Define the pattern to search for\n        String re = \"[o|.]+\";\n        Pattern\
    \ p = Pattern.compile(re);\n        // Create a Matcher instance\n        Matcher\
    \ m = p.matcher(music_string);\n        // Define a list to hold the results\n\
    \        ArrayList<Long> res = new ArrayList<Long>();\n        // Loop through\
    \ all the matches and fill the result list with integers\n        while (m.find())\
    \ {\n            if (m.group().length() == 1) {\n                res.add((long)\
    \ 1l);\n            } else if (m.group().length() == 2) {\n                res.add((long)\
    \ 2l);\n            } else {\n                res.add((long) 4l);\n          \
    \  }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wmzigeb.java:21: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(re);\n        ^\n  symbol:   class Pattern\n  location: class\
    \ Problem\n/tmp/tmp1wmzigeb.java:21: error: cannot find symbol\n        Pattern\
    \ p = Pattern.compile(re);\n                    ^\n  symbol:   variable Pattern\n\
    \  location: class Problem\n/tmp/tmp1wmzigeb.java:23: error: cannot find symbol\n\
    \        Matcher m = p.matcher(music_string);\n        ^\n  symbol:   class Matcher\n\
    \  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011546
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        // Write your solution to this problem\
    \ here.\n        return beats;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7bb44sm.java:25)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ music_array = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                music_array.add((long)4l);\n\
    \            } else if (music_string.charAt(i) == '.') {\n                music_array.add((long)1l);\n\
    \            } else if (music_string.charAt(i) == '|') {\n                music_array.add((long)2l);\n\
    \            }\n        }\n        return music_array;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzctph5qx.java:34)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            switch (music_string.charAt(i)) {\n                case\
    \ 'o':\n                    result.add((long)4l);\n                    break;\n\
    \                case '|':\n                    result.add((long)2l);\n      \
    \              break;\n                case '.':\n                    result.add((long)1l);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrr4ccsx.java:38)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code goes here\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprpntun_w.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011546
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] arr = music_string.split(\"\
    \ \");\n        for (String item : arr) {\n            if (item.equals(\"o\"))\
    \ {\n                result.add((long)4l);\n            } else if (item.equals(\"\
    o|\")) {\n                result.add((long)2l);\n            } else if (item.equals(\"\
    .|\")) {\n                result.add((long)1l);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011547
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats_per_note = new ArrayList<Long>();\n        ArrayList<String> note_strings\
    \ = new ArrayList<String>(Arrays.asList(music_string.split(\" \")));\n       \
    \ for (String note_string : note_strings) {\n            if (note_string.equals(\"\
    o\")) {\n                beats_per_note.add((long)4l);\n            } else if\
    \ (note_string.equals(\"o|\")) {\n                beats_per_note.add((long)2l);\n\
    \            } else if (note_string.equals(\".|\")) {\n                beats_per_note.add((long)1l);\n\
    \            }\n        }\n        return beats_per_note;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            char first = note.charAt(0);\n\
    \            char last = note.charAt(note.length() - 1);\n            if (first\
    \ == 'o' && last == '|') {\n                output.add((long) 2l);\n         \
    \   } else if (first == 'o' && last == ' ') {\n                output.add((long)\
    \ 4l);\n            } else if (first == '.' && last == '|') {\n              \
    \  output.add((long) 1l);\n            }\n        }\n        return output;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpenexnucg.java:22)\n\
    \tat Problem.main(tmpenexnucg.java:35)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        var\
    \ result = new ArrayList<Long>();\n        var reader = new StringReader(music_string);\n\
    \        while (true) {\n            int i = 0;\n            do {\n          \
    \      try {\n                    char c = (char)reader.read();\n            \
    \        if (c == 'o') {\n                        result.add(4l);\n          \
    \          } else if (c == '.') {\n                        result.add(1l);\n \
    \                   } else if (c == '|') {\n                        result.add(2l);\n\
    \                    } else if (c == ' ') {\n                        break;\n\
    \                    } else if (c == 65535) {\n                        return\
    \ result;\n                    }\n                } catch (IOException e) {\n\
    \                    return result;\n                }\n            } while (true);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprru7n9j2.java:46)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ notes = new ArrayList<Long>();\n        String[] note_strings = music_string.split(\"\
    \ \");\n        for (String note_string : note_strings) {\n            switch\
    \ (note_string) {\n                case \"o\":\n                    notes.add((long)4l);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  notes.add((long)2l);\n                    break;\n                case \".|\"\
    :\n                    notes.add((long)1l);\n                    break;\n    \
    \            default:\n                    throw new IllegalArgumentException(\"\
    unknown note type\");\n            }\n        }\n        return notes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: unknown\
    \ note type\n\tat Problem.parseMusic(tmpim0q26y9.java:33)\n\tat Problem.main(tmpim0q26y9.java:39)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ See ProblemTests.java file for expected behavior.\n        ArrayList<Long> beats\
    \ = new ArrayList<Long>();\n        int i = 0;\n        while (i < music_string.length())\
    \ {\n            if (music_string.charAt(i) == 'o') {\n                if (i +\
    \ 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n        \
    \            beats.add((long)2l);\n                    i += 2;\n             \
    \   } else {\n                    beats.add((long)4l);\n                    i\
    \ += 1;\n                }\n            } else {\n                beats.add((long)1l);\n\
    \                i += 2;\n            }\n        }\n        return beats;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\"\
    )).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z9wkiao.java:40)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ music_array_list = new ArrayList<Long>();\n        long note_length = 1l;\n\
    \        int char_position = 0;\n        while (char_position < music_string.length())\
    \ {\n            if (music_string.charAt(char_position) == 'o') {\n          \
    \      if (char_position+1 < music_string.length() && music_string.charAt(char_position+1)\
    \ == '|') {\n                    note_length = 2l;\n                    char_position\
    \ += 1;\n                } else {\n                    note_length = 4l;\n   \
    \             }\n            } else if (music_string.charAt(char_position) ==\
    \ '.') {\n                note_length = 1l;\n            }\n            char_position\
    \ += 2;\n            music_array_list.add(note_length);\n        }\n        return\
    \ music_array_list;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo2kiw0gp.java:41)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            switch (music_string.charAt(i)) {\n                case\
    \ 'o':\n                    res.add((long)4l);\n                    break;\n \
    \               case '|':\n                    res.add((long)2l);\n          \
    \          break;\n                case '.':\n                    res.add((long)1l);\n\
    \                    break;\n            }\n        }\n        return res;\n \
    \   }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzl83r0b.java:38)\n"
  stdout: ''
  timestamp: 1660011547
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ music_array = new ArrayList<Long>();\n        String[] arr = music_string.split(\"\
    \");\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i].equals(\"\
    o\")) {\n                music_array.add((long)4l);\n            } else if (arr[i].equals(\"\
    o|\")) {\n                music_array.add((long)2l);\n            } else if (arr[i].equals(\"\
    .|\")) {\n                music_array.add((long)1l);\n            }\n        }\n\
    \        return music_array;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz71tzbdn.java:35)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            char current = music_string.charAt(i);\n            if (current\
    \ == 'o') {\n                result.add((long)4l);\n            } else if (current\
    \ == '.') {\n                result.add((long)1l);\n            } else if (current\
    \ == '|') {\n                result.add((long)2l);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjcfri5e.java:35)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code goes here\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuynjsauq.java:21: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        int index = 0;\n        while (index\
    \ < music_string.length()) {\n            if (music_string.charAt(index) == 'o')\
    \ {\n                if (index < music_string.length() - 1 && music_string.charAt(index\
    \ + 1) == '|') {\n                    result.add((long)2l);\n                \
    \    index += 2;\n                } else {\n                    result.add((long)4l);\n\
    \                    index += 1;\n                }\n            } else {\n  \
    \              result.add((long)1l);\n                index += 2;\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpguum2gvi.java:39)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ ret = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                if\
    \ (i < music_string.length() - 1 && music_string.charAt(i + 1) == '|') {\n   \
    \                 ret.add((long)2l);\n                    i++;\n             \
    \   } else {\n                    ret.add((long)4l);\n                }\n    \
    \        } else if (music_string.charAt(i) == '.') {\n                if (i <\
    \ music_string.length() - 1 && music_string.charAt(i + 1) == '|') {\n        \
    \            ret.add((long)1l);\n                    i++;\n                }\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ arr = music_string.split(\" \");\n        ArrayList<Long> list = new ArrayList<Long>();\n\
    \        for (String s : arr) {\n            switch (s) {\n                case\
    \ \"o\":\n                    list.add((long)4l);\n                    break;\n\
    \                case \"o|\":\n                    list.add((long)2l);\n     \
    \               break;\n                case \".|\":\n                    list.add((long)1l);\n\
    \                    break;\n            }\n        }\n        return list;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code goes here\n        char temp;\n        ArrayList<Long> beats = new\
    \ ArrayList<Long>();\n        for(int i = 0; i < music_string.length(); i++){\n\
    \            temp = music_string.charAt(i);\n            if(temp == 'o'){\n  \
    \              beats.add((long)4l);\n            }\n            else if(temp ==\
    \ '|'){\n                beats.add((long)2l);\n            }\n            else\
    \ if(temp == '.'){\n                beats.add((long)1l);\n            }\n    \
    \    }\n        return beats;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_llrbg7m.java:39)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ list = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                if\
    \ (i < music_string.length() - 1 && music_string.charAt(i + 1) == '|') {\n   \
    \                 list.add((long)2l);\n                    i++;\n            \
    \    } else {\n                    list.add((long)4l);\n                }\n  \
    \          } else if (music_string.charAt(i) == '.') {\n                if (i\
    \ < music_string.length() - 1 && music_string.charAt(i + 1) == '|') {\n      \
    \              list.add((long)1l);\n                    i++;\n               \
    \ }\n            }\n        }\n        return list;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpk74vbgf4.java:23)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        throw\
    \ new RuntimeException(\"Not Implemented!\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented!\n\
    \tat Problem.parseMusic(tmp5t87f4qz.java:19)\n\tat Problem.main(tmp5t87f4qz.java:22)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ TODO: solve\n        return new ArrayList<Long>();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjrjd8mq.java:24)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String [] tokens = music_string.split(\"\
    \ \");\n        for (String token : tokens) {\n            if (token.charAt(0)\
    \ == 'o') {\n                if (token.length() == 1) {\n                    result.add((long)4l);\n\
    \                } else {\n                    result.add((long)2l);\n       \
    \         }\n            } else {\n                result.add((long)1l);\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmphub2k3b5.java:22)\n\
    \tat Problem.main(tmphub2k3b5.java:35)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ your code starts here. Add any additional imports or variables above this line.\n\
    \        List<Long> listOfBeats = new ArrayList<Long>();\n        String[] notesArray\
    \ = music_string.split(\" \");\n        for (String note : notesArray) {\n   \
    \         switch (note) {\n                case \"o\":\n                    listOfBeats.add((long)\
    \ 4);\n                    break;\n                case \"o|\":\n            \
    \        listOfBeats.add((long) 2);\n                    break;\n            \
    \    case \".|\":\n                    listOfBeats.add((long) 1);\n          \
    \          break;\n            }\n        }\n        return new ArrayList<Long>(listOfBeats);\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ parsed_music = new ArrayList<Long>();\n        String[] parts = music_string.split(\"\
    \ \");\n        for (String part : parts) {\n            if (part.equals(\"o\"\
    )) {\n                parsed_music.add((long)4l);\n            } else if (part.equals(\"\
    o|\")) {\n                parsed_music.add((long)2l);\n            } else if (part.equals(\"\
    .|\")) {\n                parsed_music.add((long)1l);\n            }\n       \
    \ }\n        return parsed_music;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ (ArrayList<Long>) Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l, (long)2l,\
    \ (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.util.Arrays$ArrayList\
    \ cannot be cast to class java.util.ArrayList (java.util.Arrays$ArrayList and\
    \ java.util.ArrayList are in module java.base of loader 'bootstrap')\n\tat Problem.parseMusic(tmpnuz1onn3.java:19)\n\
    \tat Problem.main(tmpnuz1onn3.java:22)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code here\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6phqlnzc.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        for (String note : music_string.split(\"\
    \ \")) {\n            beats.add(note.equals(\"o\") ? 4l : 2l);\n        }\n  \
    \      return beats;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpet9vuoll.java:26)\n"
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) {\n                result.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                result.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                result.add((long)1l);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011547
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes = music_string.split(\" \");\n        ArrayList<Long> note_lengths = new\
    \ ArrayList<Long>();\n        for (String note : notes) {\n            if (note.equals(\"\
    o\")) {\n                note_lengths.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                note_lengths.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                note_lengths.add((long)1l);\n            }\n       \
    \ }\n        return note_lengths;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                if\
    \ (i + 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n   \
    \                 beats.add((long)2l);\n                    i++;\n           \
    \     } else {\n                    beats.add((long)4l);\n                }\n\
    \            } else if (music_string.charAt(i) == '.') {\n                if (i\
    \ + 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n      \
    \              beats.add((long)1l);\n                    i++;\n              \
    \  }\n            }\n        }\n        return beats;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ ret = new ArrayList<Long>();\n        for (String token : music_string.split(\"\
    \\\\s+\")) {\n            if (token.equals(\"o\")) {\n                ret.add((long)4l);\n\
    \            } else if (token.equals(\"o|\")) {\n                ret.add((long)2l);\n\
    \            } else if (token.equals(\".|\")) {\n                ret.add((long)1l);\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011548
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmhc3opr.java:24)\n"
  stdout: ''
  timestamp: 1660011549
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ >>> your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpx8hmae3p.java:23)\n"
  stdout: ''
  timestamp: 1660011549
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        char[] string_chars = music_string.toCharArray();\n\
    \        long beat_count = 0;\n        for (int i = 0; i < string_chars.length;\
    \ i++) {\n            if (string_chars[i] == 'o') {\n                result.add(4l);\n\
    \                if (i + 1 == string_chars.length) {\n                    result.add(4l);\n\
    \                }\n            } else if (string_chars[i] == '|') {\n       \
    \         if (string_chars[i - 1] == '.') {\n                    result.add(1l);\n\
    \                } else if (string_chars[i - 1] == 'o') {\n                  \
    \  result.add(2l);\n                }\n            } else if (string_chars[i]\
    \ == ' ') {\n                result.add(4l);\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiz6ye3fb.java:42)\n"
  stdout: ''
  timestamp: 1660011549
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        for (String note : music_string.split(\"\
    \ \")) {\n            if (note.equals(\"o\")) {\n                beats.add((long)4l);\n\
    \            } else if (note.equals(\"o|\")) {\n                beats.add((long)2l);\n\
    \            } else if (note.equals(\".|\")) {\n                beats.add((long)1l);\n\
    \            }\n        }\n        return beats;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011549
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        char [] chars = music_string.toCharArray();\n\
    \        long beats = 1;\n        for (int i = 0; i < chars.length; i++) {\n \
    \           if (chars[i] == 'o') {\n                if (i + 1 < chars.length &&\
    \ chars[i + 1] == '|') {\n                    beats = 2;\n                   \
    \ i += 1;\n                } else {\n                    beats = 4;\n        \
    \        }\n            } else if (chars[i] == '.') {\n                beats =\
    \ 1;\n            }\n            result.add(beats);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3d7qk9_c.java:39)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beatCounts = new ArrayList<Long>();\n        String notes = music_string.replaceAll(\"\
    \\\\s+\",\"\");\n        for (int i = 0; i < notes.length(); i++) {\n        \
    \    switch (notes.charAt(i)) {\n                case 'o':\n                 \
    \   beatCounts.add((long)4l);\n                    break;\n                case\
    \ '|':\n                    beatCounts.add((long)2l);\n                    break;\n\
    \                case '.':\n                    beatCounts.add((long)1l);\n  \
    \                  break;\n            }\n        }\n        return beatCounts;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8p3ldzft.java:39)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l, (long)2l,\
    \ (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd2ssgvo.java:22)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        String [] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) res.add((long)4l);\n            else if (note.equals(\"o|\")) res.add((long)2l);\n\
    \            else if (note.equals(\".|\")) res.add((long)1l);\n        }\n   \
    \     return res;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your solution below this line.\n        return new ArrayList<Long>();\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnx92qbi2.java:24)\n"
  stdout: ''
  timestamp: 1660011549
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        throw\
    \ new UnsupportedOperationException(\"Not implemented yet\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.parseMusic(tmp0rt4hg1g.java:19)\n\tat Problem.main(tmp0rt4hg1g.java:22)\n"
  stdout: ''
  timestamp: 1660011544
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        String[] music_str_arr = music_string.split(\"\
    \\\\s+\");\n        for (String note : music_str_arr) {\n            switch (note)\
    \ {\n                case \"o\":\n                    res.add((long)4l);\n   \
    \                 break;\n                case \"o|\":\n                    res.add((long)2l);\n\
    \                    break;\n                case \".|\":\n                  \
    \  res.add((long)1l);\n                    break;\n            }\n        }\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your solution below.\n        char[] music_arr = music_string.toCharArray();\n\
    \        ArrayList<Long> res = new ArrayList<Long>();\n        String temp = \"\
    \";\n        for (int i = 0; i < music_arr.length; i++) {\n            if (music_arr[i]\
    \ == 'o') {\n                if (temp == \"\") {\n                    res.add((long)4l);\n\
    \                } else {\n                    res.add((long)2l);\n          \
    \      }\n            } else if (music_arr[i] == '.') {\n                if (temp\
    \ == \"\") {\n                    res.add((long)1l);\n                } else {\n\
    \                    temp = \"\";\n                }\n            } else if (music_arr[i]\
    \ == '|') {\n                if (temp == \"\") {\n                    temp = \"\
    temp\";\n                } else {\n                    temp = \"\";\n        \
    \        }\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3z_hqdu.java:49)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.length() ==\
    \ 1) {\n                beats.add((long)4l);\n            } else {\n         \
    \       beats.add((long)2l);\n            }\n        }\n        return beats;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpru7q51ml.java:31)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long beat = 1;\n        boolean doubleBeat\
    \ = false;\n        boolean tripleBeat = false;\n        char[] music_array =\
    \ music_string.toCharArray();\n        for (int i = 0; i < music_array.length;\
    \ i++) {\n            if (music_array[i] == '.') {\n                beat = beat\
    \ / 2;\n            } else if (music_array[i] == '|') {\n                result.add(beat);\n\
    \                beat = 1;\n            } else if (music_array[i] == ' ') {\n\
    \                // skip\n            } else if (music_array[i] == 'o') {\n  \
    \              if (i + 1 < music_array.length && music_array[i + 1] == ' ') {\n\
    \                    result.add(beat);\n                    beat = 1;\n      \
    \          } else {\n                    if (i + 2 < music_array.length && music_array[i\
    \ + 2] == '|') {\n                        beat = beat * 2;\n                 \
    \   } else if (i + 3 < music_array.length && music_array[i + 3] == '|') {\n  \
    \                      beat = beat * 4;\n                    }\n             \
    \   }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4rdm_l22.java:49)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Initialize an array list to the length of the string, this will store the results.\n\
    \        ArrayList<Long> music_tokens = new ArrayList<Long>(Collections.nCopies(music_string.length(),\
    \ 0l));\n        // Now we're going to use a regular expression to parse the input.\n\
    \        // This is a compiled regex that splits on the ' ' (space) character.\n\
    \        Pattern space_splitter = Pattern.compile(\" \");\n        // Split the\
    \ string into a list of tokens.\n        String[] tokens = space_splitter.split(music_string);\n\
    \        // We're going to loop through the tokens, and assign the appropriate\
    \ number of beats to each.\n        for (int i = 0; i < tokens.length; i++) {\n\
    \            // Read the current token we're looping through.\n            String\
    \ token = tokens[i];\n            // Now check if it matches one of the note types.\n\
    \            if (token.equals(\"o\")) {\n                // Whole note, set the\
    \ value to four.\n                music_tokens.set(i, 4l);\n            } else\
    \ if (token.equals(\"o|\")) {\n                // Half note, set the value to\
    \ two.\n                music_tokens.set(i, 2l);\n            } else if (token.equals(\"\
    .|\")) {\n                // Quater note, set the value to one.\n            \
    \    music_tokens.set(i, 1l);\n            }\n        }\n        // Return the\
    \ list of tokens.\n        return music_tokens;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8st_v9tz.java:23: error: cannot find symbol\n        Pattern space_splitter\
    \ = Pattern.compile(\" \");\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmp8st_v9tz.java:23: error: cannot find symbol\n       \
    \ Pattern space_splitter = Pattern.compile(\" \");\n                         \
    \        ^\n  symbol:   variable Pattern\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n\tArrayList<Long>\
    \ beats = new ArrayList<Long>();\n\tfor (int i = 0; i < music_string.length();\
    \ i++) {\n\t    char c = music_string.charAt(i);\n\t    if (c == 'o') {\n\t\t\
    beats.add((long)4l);\n\t    } else if (c == '.') {\n\t\tbeats.add((long)1l);\n\
    \t    } else if (c == '|') {\n\t\tbeats.add((long)2l);\n\t    }\n\t}\n\treturn\
    \ beats;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpex_drqqa.java:35)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ notes = new ArrayList<Long>();\n        // TODO: Fix me!\n        return notes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3aspvw8p.java:25)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ >>>Your code goes here\n        ArrayList<Long> music_list = new ArrayList<Long>();\n\
    \        long count = 0;\n        char[] music_chars = music_string.toCharArray();\n\
    \        for (int i = 0; i < music_chars.length; i++) {\n            if (music_chars[i]\
    \ == 'o') {\n                if (music_chars[i + 1] == ' ') {\n              \
    \      count = 4;\n                } else if (music_chars[i + 1] == '|') {\n \
    \                   count = 2;\n                }\n                music_list.add(count);\n\
    \            } else if (music_chars[i] == '.') {\n                if (music_chars[i\
    \ + 1] == '|') {\n                    count = 1;\n                }\n        \
    \        music_list.add(count);\n            }\n        }\n        return music_list;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 7 out of bounds for length 7\n\tat Problem.parseMusic(tmp_63204w4.java:25)\n\
    \tat Problem.main(tmp_63204w4.java:42)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        Scanner scanner = new Scanner(music_string);\n\
    \        while (scanner.hasNext()) {\n            String note = scanner.next();\n\
    \            if (note.equals(\"o\")) {\n                beats.add((long)4l);\n\
    \            } else if (note.equals(\"o|\")) {\n                beats.add((long)2l);\n\
    \            } else if (note.equals(\".|\")) {\n                beats.add((long)1l);\n\
    \            }\n        }\n        return beats;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011550
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ parsed_music = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) {\n                parsed_music.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                parsed_music.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                parsed_music.add((long)1l);\n            }\n       \
    \ }\n        return parsed_music;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        // TODO\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehegich5.java:25)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write implementation here\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6tlykflq.java:20: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        for (String note : music_string.split(\"\
    \ \")) {\n            switch (note) {\n                case \"o\":\n         \
    \           out.add((long)4l);\n                    break;\n                case\
    \ \"o|\":\n                    out.add((long)2l);\n                    break;\n\
    \                case \".|\":\n                    out.add((long)1l);\n      \
    \              break;\n            }\n        }\n        return out;\n    }\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (music_string == null) {\n     \
    \       return result;\n        }\n        music_string = music_string.replaceAll(\"\
    \\\\s+\", \"\");\n        long count = 0;\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            char c = music_string.charAt(i);\n            switch (c)\
    \ {\n                case 'o':\n                    count += 4;\n            \
    \        break;\n                case '|':\n                    if (i > 0 && music_string.charAt(i\
    \ - 1) == 'o') {\n                        count += 2;\n                    } else\
    \ {\n                        count += 1;\n                    }\n            \
    \        break;\n                case '.':\n                    result.add(count);\n\
    \                    count = 0;\n                    break;\n                default:\n\
    \                    return result;\n            }\n        }\n        result.add(count);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo4u1r7xn.java:50)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n      ArrayList<Long>\
    \ result = new ArrayList<Long>();\n      StringTokenizer strtok = new StringTokenizer(music_string,\
    \ \" \");\n      while (strtok.hasMoreTokens()) {\n        String token = strtok.nextToken();\n\
    \        if (token.startsWith(\"o\")) {\n          result.add((long)4l);\n   \
    \     } else if (token.startsWith(\"o|\")) {\n          result.add((long)2l);\n\
    \        } else if (token.startsWith(\".|\")) {\n          result.add((long)1l);\n\
    \        }\n      }\n      return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptcrkt880.java:37)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            result.add(note.length()\
    \ == 1 ? 4l : 2l);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3b5shdr.java:27)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> output = new ArrayList<Long>();\n\
    \        ArrayList<Integer> position = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < music_string.length(); i++) {\n            if(music_string.charAt(i)\
    \ == ' ') {\n                position.add(i);\n            }\n        }\n    \
    \    position.add(music_string.length());\n        for (int i = 0; i < position.size()\
    \ - 1; i++) {\n            output.add(Long.parseLong(music_string.substring(position.get(i),\
    \ position.get(i + 1)).replace(\" \", \"\")));\n        }\n        for (int i\
    \ = 0; i < output.size(); i++) {\n            if(output.get(i) == (long) 4) {\n\
    \                result.add((long) 4);\n            }\n            else if(output.get(i)\
    \ == (long) 2) {\n                result.add((long) 2);\n            }\n     \
    \       else if(output.get(i) == (long) 1) {\n                result.add((long)\
    \ 1);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"o\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\
    \tat Problem.parseMusic(tmp6phlghgl.java:29)\n\tat Problem.main(tmp6phlghgl.java:46)\n"
  stdout: ''
  timestamp: 1660011550
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ TODO: Implement This!\n        char[] music = music_string.toCharArray();\n\
    \        int count = 0;\n        ArrayList<Long> beats = new ArrayList<Long>();\n\
    \        for (int i = 0; i < music.length; i++) {\n            if (music[i] ==\
    \ 'o') {\n                beats.add((long) 4);\n            } else if (music[i]\
    \ == '.') {\n                beats.add((long) 1);\n            } else if (music[i]\
    \ == '|') {\n                beats.add((long) 2);\n            }\n        }\n\
    \        return beats;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjczwxkbr.java:37)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        String music_str[] = music_string.split(\"\
    \ \");\n        for(int i=0;i<music_str.length;i++){\n            if(music_str[i].length()\
    \ == 1){\n                beats.add((long)4l);\n            }else{\n         \
    \       beats.add((long)2l);\n            }\n        }\n        return beats;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpamx7pi8k.java:31)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ noteLengths = new ArrayList<Long>();\n        List<String> notes = Arrays.asList(music_string.split(\"\
    \ \"));\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) {\n                noteLengths.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                noteLengths.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                noteLengths.add((long)1l);\n            }\n        }\n\
    \        return noteLengths;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ parsed_string = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                parsed_string.add((long)4l);\n\
    \            } else if (music_string.charAt(i) == '|') {\n                parsed_string.add((long)2l);\n\
    \            } else if (music_string.charAt(i) == '.') {\n                parsed_string.add((long)1l);\n\
    \            }\n        }\n        return parsed_string;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbuzqeve.java:34)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes = music_string.split(\" \");\n        ArrayList<Long> beats = new ArrayList<Long>();\n\
    \        for (String note : notes) {\n            switch (note) {\n          \
    \      case \"o\":\n                    beats.add((long)4l);\n               \
    \     break;\n                case \"o|\":\n                    beats.add((long)2l);\n\
    \                    break;\n                case \".|\":\n                  \
    \  beats.add((long)1l);\n                    break;\n            }\n        }\n\
    \        return beats;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Insert your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpfqc30luq.java:23)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] music_string_lst = music_string.split(\"\
    \ \");\n        for (String music : music_string_lst) {\n            if (music.equals(\"\
    o\")) {\n                result.add((long)4l);\n            } else if (music.equals(\"\
    o|\")) {\n                result.add((long)2l);\n            } else if (music.equals(\"\
    .|\")) {\n                result.add((long)1l);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        int pos = 0;\n        while (pos < music_string.length())\
    \ {\n            if (music_string.charAt(pos) == 'o') {\n                out.add((long)4l);\n\
    \                pos++;\n            } else if (music_string.charAt(pos) == '.')\
    \ {\n                out.add((long)1l);\n                pos += 2;\n         \
    \   }\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011556
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.equals(\"o\"\
    )) {\n                result.add((long)4l);\n            } else if (note.equals(\"\
    o|\")) {\n                result.add((long)2l);\n            } else if (note.equals(\"\
    .|\")) {\n                result.add((long)1l);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011547
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ BEGIN SOLUTION\n        ArrayList<Long> beat_durations = new ArrayList<Long>();\n\
    \        for (String note : music_string.split(\" \")) {\n            if (note.equals(\"\
    o\")) {\n                beat_durations.add((long)4l);\n            } else if\
    \ (note.equals(\"o|\")) {\n                beat_durations.add((long)2l);\n   \
    \         } else if (note.equals(\".|\")) {\n                beat_durations.add((long)1l);\n\
    \            }\n        }\n        return beat_durations;\n        // END SOLUTION\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ parseMusic((new String(\"o o| .| o| o| .| .| .| .| o o\")))\n        // (new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l, (long)2l,\
    \ (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n        ArrayList<Long>\
    \ al = new ArrayList<Long>();\n        List<String> l = new ArrayList<String>(Arrays.asList(music_string.split(\"\
    \ \")));\n        for (String i : l) {\n            char x = i.charAt(0);\n  \
    \          if (x == 'o') {\n                if (i.charAt(1) == '|') {\n      \
    \              al.add((long)2l);\n                } else {\n                 \
    \   al.add((long)4l);\n                }\n            } else {\n             \
    \   al.add((long)1l);\n            }\n        }\n        return al;\n    }\n \
    \   public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmprbvyghss.java:24)\n\
    \tat Problem.main(tmprbvyghss.java:38)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ words = music_string.split(\" \");\n        ArrayList<Long> arrList = new ArrayList<Long>();\n\
    \        for (String word : words) {\n            if (word.equals(\"o\")) {\n\
    \                arrList.add((long)4l);\n            } else if (word.equals(\"\
    o|\")) {\n                arrList.add((long)2l);\n            } else if (word.equals(\"\
    .|\")) {\n                arrList.add((long)1l);\n            }\n        }\n \
    \       return arrList;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ notes = music_string.split(\" \");\n        int noteLength = 0;\n        ArrayList<Long>\
    \ musicNotes = new ArrayList<Long>();\n        for (int i = 0; i < notes.length;\
    \ i++) {\n            if (notes[i].equals(\"o\")) {\n                noteLength\
    \ = 4;\n            } else if (notes[i].equals(\"o|\")) {\n                noteLength\
    \ = 2;\n            } else if (notes[i].equals(\".|\")) {\n                noteLength\
    \ = 1;\n            }\n            musicNotes.add((long)noteLength);\n       \
    \ }\n        return musicNotes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4pfzrmb6.java:35)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        String[]\
    \ split = music_string.split(\" \");\n        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (String s : split) {\n            switch (s) {\n                case\
    \ \"o\":\n                    ret.add((long)4l);\n                    break;\n\
    \                case \"o|\":\n                    ret.add((long)2l);\n      \
    \              break;\n                case \".|\":\n                    ret.add((long)1l);\n\
    \                    break;\n            }\n        }\n        return ret;\n \
    \   }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        int\
    \ counter = 0;\n        ArrayList<Long> out = new ArrayList<Long>();\n       \
    \ while (counter < music_string.length()) {\n            String currentChar =\
    \ Character.toString(music_string.charAt(counter));\n            if (currentChar.equals(\"\
    o\")) {\n                out.add((long)4l);\n                counter++;\n    \
    \        } else if (currentChar.equals(\".\")) {\n                out.add((long)1l);\n\
    \                counter += 2;\n            } else {\n                out.add((long)2l);\n\
    \                counter += 2;\n            }\n        }\n        return out;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc391v7aj.java:38)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                out.add((long)4l);\n\
    \            } else if (music_string.charAt(i) == '.') {\n                out.add((long)1l);\n\
    \            } else if (music_string.charAt(i) == '|') {\n                out.add((long)2l);\n\
    \            }\n        }\n        return out;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4g37ftou.java:34)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        StringTokenizer st = new StringTokenizer(music_string,\
    \ \" \");\n        while (st.hasMoreTokens()) {\n            String notes = st.nextToken();\n\
    \            if (notes.equals(\"o\")) {\n                out.add((long)4l);\n\
    \            } else if (notes.equals(\"o|\")) {\n                out.add((long)2l);\n\
    \            } else if (notes.equals(\".|\")) {\n                out.add((long)1l);\n\
    \            }\n        }\n        return out;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        return out;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk7una08v.java:24)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        throw\
    \ new RuntimeException(\"You need to implement this. You may write supporting\
    \ functions.\");\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: You need to implement\
    \ this. You may write supporting functions.\n\tat Problem.parseMusic(tmp5cd5vwh3.java:19)\n\
    \tat Problem.main(tmp5cd5vwh3.java:22)\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Convert the string in the following format \"abcd\" to [(a, b), (c, d)]\n  \
    \      return new ArrayList<Long>(\n            Arrays.asList(new MyMap().map(\n\
    \                music_string,\n                (ch1, ch2) -> (long) (ch1 == 'o'\
    \ ? 4 : ch1 == 'o' ? 2 : 1)\n            ))\n        );\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_kj0yah.java:21: error: cannot find symbol\n            Arrays.asList(new\
    \ MyMap().map(\n                              ^\n  symbol:   class MyMap\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011551
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp3f3r_12u.java:23)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            if (note.contains(\"\
    o\")) {\n                if (note.length() == 1) {\n                    result.add((long)4l);\n\
    \                } else {\n                    result.add((long)2l);\n       \
    \         }\n            } else {\n                result.add((long)1l);\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplnh8rkzh.java:35)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        char[]\
    \ chars = music_string.toCharArray();\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (chars[i] ==\
    \ 'o') {\n                if (i+1 < chars.length && chars[i+1] == '|') {\n   \
    \                 result.add((long)2l);\n                    i++;\n          \
    \      } else {\n                    result.add((long)4l);\n                }\n\
    \            } else if (chars[i] == '.') {\n                result.add((long)1l);\n\
    \                i++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats = new ArrayList<Long>();\n        char[] m = music_string.toCharArray();\n\
    \        for (int i = 0; i < m.length; i++) {\n            switch (m[i]) {\n \
    \               case 'o':\n                    beats.add((long)4l);\n        \
    \            break;\n                case '|':\n                    beats.add((long)2l);\n\
    \                    break;\n                case '.':\n                    beats.add((long)1l);\n\
    \                    break;\n                default:\n                    break;\n\
    \            }\n        }\n        return beats;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vdh4l48.java:41)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ notes = new ArrayList<Long>();\n        String[] strings = music_string.split(\"\
    \ \");\n        for (String string : strings) {\n            if (string.equals(\"\
    o\")) {\n                notes.add((long)4l);\n            } else if (string.equals(\"\
    o|\")) {\n                notes.add((long)2l);\n            } else if (string.equals(\"\
    .|\")) {\n                notes.add((long)1l);\n            }\n        }\n   \
    \     return notes;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0cszj5n1.java:24)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your code here\n        String s = \"\";\n        char[] chars = music_string.toCharArray();\n\
    \        ArrayList<Long> lengths = new ArrayList<Long>();\n        long currentLength\
    \ = 0;\n        boolean hasCurrent = false;\n        for (int i = 0; i < chars.length;\
    \ i++) {\n            char current = chars[i];\n            if (current == 'o')\
    \ {\n                currentLength = 4;\n                hasCurrent = true;\n\
    \            } else if (current == '|') {\n                if (i != 0 && chars[i\
    \ - 1] == 'o') {\n                    currentLength = 2;\n                   \
    \ hasCurrent = true;\n                } else if (i != 0 && chars[i - 1] == '.')\
    \ {\n                    currentLength = 1;\n                    hasCurrent =\
    \ true;\n                }\n            } else if (current == ' ') {\n       \
    \         if (hasCurrent) {\n                    lengths.add(currentLength);\n\
    \                    hasCurrent = false;\n                }\n            }\n \
    \       }\n        if (hasCurrent) {\n            lengths.add(currentLength);\n\
    \        }\n        return lengths;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp0uc0tcru.java:23)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ Write your solution here.\n        return new ArrayList<Long>();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctm3wqsm.java:24)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        //\
    \ your code goes here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp9kujhxe4.java:23)\n"
  stdout: ''
  timestamp: 1660011545
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ parsed_notes = new ArrayList<Long>();\n        ArrayList<Character> notes =\
    \ new ArrayList<Character>();\n        ArrayList<Character> delimiters = new ArrayList<Character>();\n\
    \        delimiters.add(new Character(' '));\n        delimiters.add(new Character('|'));\n\
    \        ArrayList<Integer> group_lengths = new ArrayList<Integer>();\n      \
    \  int delimiter_index = 0;\n        for (char n : music_string.toCharArray())\
    \ {\n            if (delimiters.contains(n)) {\n                delimiter_index++;\n\
    \            } else {\n                if (delimiter_index > group_lengths.size()\
    \ - 1) {\n                    group_lengths.add(1);\n                } else {\n\
    \                    group_lengths.set(delimiter_index, group_lengths.get(delimiter_index)\
    \ + 1);\n                }\n            }\n        }\n        System.out.println(group_lengths);\n\
    \        for (int l : group_lengths) {\n            if (l == 1) {\n          \
    \      parsed_notes.add((long) 1l);\n            } else if (l == 2) {\n      \
    \          parsed_notes.add((long) 2l);\n            } else if (l == 4) {\n  \
    \              parsed_notes.add((long) 4l);\n            }\n        }\n      \
    \  return parsed_notes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgrq0g__m.java:51)\n"
  stdout: '[]

    [1, 1, 1, 1]

    '
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)1l)))));\n\
    \    assert(parseMusic((\"o| o| .| .| o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\"o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpwool96.java:23)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ musical_notes = new ArrayList<Long>();\n        // TODO\n        return musical_notes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jdafx8_.java:25)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats_list = new ArrayList<Long>();\n        int len = music_string.length();\n\
    \        int count = 0;\n        while (count < len) {\n            if (music_string.charAt(count)\
    \ == 'o') {\n                if (count + 1 < len && music_string.charAt(count\
    \ + 1) == '|') {\n                    beats_list.add((long)2l);\n            \
    \        count = count + 2;\n                } else {\n                    beats_list.add((long)4l);\n\
    \                    count = count + 1;\n                }\n            } else\
    \ {\n                beats_list.add((long)1l);\n                count = count\
    \ + 2;\n            }\n        }\n        return beats_list;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\")).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l, (long)4l)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo97ckcog.java:40)\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpnl7zs3p8.java:22)\n"
  stdout: ''
  timestamp: 1660011542
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ out = new ArrayList<Long>();\n        String[] elements = music_string.split(\"\
    \ \");\n        for (String element : elements) {\n            if (element.equals(\"\
    o\")) {\n                out.add((long)4l);\n            } else if (element.equals(\"\
    o|\")) {\n                out.add((long)2l);\n            } else if (element.equals(\"\
    .|\")) {\n                out.add((long)1l);\n            }\n        }\n     \
    \   return out;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011552
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ beats_list = new ArrayList<Long>();\n        StringTokenizer tokenizer = new\
    \ StringTokenizer(music_string, \" |\");\n        String token;\n        while\
    \ (tokenizer.hasMoreTokens()) {\n            token = tokenizer.nextToken();\n\
    \            beats_list.add(beats_counter(token));\n        }\n        return\
    \ beats_list;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5u5u63tq.java:24: error: cannot find symbol\n            beats_list.add(beats_counter(token));\n\
    \                           ^\n  symbol:   method beats_counter(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011552
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return array list of integers corresponding to how many beats does each\n  \
    \  // not last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four\
    \ beats\n    // 'o|' - half note, lasts two beats\n    // '.|' - quater note,\
    \ lasts one beat\n    // >>> parseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)1l, (long)2l,\
    \ (long)2l, (long)1l, (long)1l, (long)1l, (long)1l, (long)4l, (long)4l)))\n  \
    \  public static ArrayList<Long> parseMusic(String music_string) {\n        ArrayList<Long>\
    \ l = new ArrayList<Long>();\n        String[] notes = music_string.split(\" \"\
    );\n        for (String note : notes) {\n            switch (note) {\n       \
    \         case \"o\":\n                    l.add((long)4l);\n                \
    \    break;\n                case \"o|\":\n                    l.add((long)2l);\n\
    \                    break;\n                case \".|\":\n                  \
    \  l.add((long)1l);\n                    break;\n            }\n        }\n  \
    \      return l;\n    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l, (long)4l,\
    \ (long)4l)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)1l, (long)1l)))));\n    assert(parseMusic((\"o| o| .| .| o o\
    \ o o\")).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)1l,\
    \ (long)1l, (long)4l, (long)4l, (long)4l, (long)4l)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)1l, (long)2l, (long)1l, (long)4l, (long)2l, (long)4l, (long)2l)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011552

language: java
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long x : arr) {\n            if\
    \ (sign(x) > 0) {\n                count++;\n            }\n        }\n      \
    \  return count;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppox2cn4y.java:22: error: cannot find symbol\n            if (sign(x)\
    \ > 0) {\n                ^\n  symbol:   method sign(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long result = 0;\n        for (Long l : arr) {\n           \
    \ if (0 < l) {\n                if (l < 10) {\n                    result += 1;\n\
    \                } else {\n                    result += 1;\n                \
    \    while (l >= 10) {\n                        l /= 10;\n                   \
    \ }\n                }\n            } else if (l < 0) {\n                l = -l;\n\
    \                if (l < 10) {\n                    result += 1;\n           \
    \     } else {\n                    result += 1;\n                    while (l\
    \ >= 10) {\n                        l /= 10;\n                    }\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_x74myb.java:47)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x < 0 ? x.toString().replace(\"\
    -\", \"\").chars().map(y -> Character.getNumericValue(y)).sum() > 0 : x.toString().chars().map(y\
    \ -> Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6r3ehcdi.java:24)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // REPLACE WITH YOUR CODE\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsk4evljv.java:26)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new UnsupportedOperationException(\"Please implement the\
    \ countNums method\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement the countNums method\n\tat Problem.countNums(tmpwawkspt2.java:20)\n\
    \tat Problem.main(tmpwawkspt2.java:23)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> sumDigits(x) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1qmzvfno.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> sumDigits(x) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(a -> sumDigits(a) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzd0c4hg.java:20: error: cannot find symbol\n        return arr.stream().filter(a\
    \ -> sumDigits(a) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long s = 0l;\n        for (long n : arr) {\n            long\
    \ x = n;\n            long sum = 0l;\n            if (x < 0l) {\n            \
    \    sum = -x % 10l;\n                x = -x / 10l;\n            }\n         \
    \   while (x > 0l) {\n                sum += x % 10l;\n                x /= 10l;\n\
    \            }\n            if (sum > 0l) s++;\n        }\n        return s;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpydpmqfsv.java:38)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> LongStream.of((x % 10), (x /\
    \ 10)).sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7202jdh5.java:28)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Let's take advantage of the fact that the sum of a digit\
    \ sequence is in\n        // O(log(n)) where n is the number of digits in the\
    \ sequence.\n        return arr.stream().filter(x -> x == 0l || x % 9 != 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiq9il4qo.java:26)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(num -> {\n            return signedDigitsSum(num)\
    \ > 0;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7v4011uu.java:21: error: cannot find symbol\n            return\
    \ signedDigitsSum(num) > 0;\n                   ^\n  symbol:   method signedDigitsSum(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long t = 0;\n        for (long el : arr) {\n            long\
    \ a = el;\n            long s = 0;\n            while (a != 0) {\n           \
    \     s += Math.abs(a % 10);\n                a /= 10;\n            }\n      \
    \      if (s > 0) {\n                t++;\n            }\n        }\n        return\
    \ t;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3j_zcvy.java:36)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new UnsupportedOperationException(\"method not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: method\
    \ not implemented\n\tat Problem.countNums(tmp5c2y5p1s.java:20)\n\tat Problem.main(tmp5c2y5p1s.java:23)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long counter = 0l;\n        long x;\n        long n;\n     \
    \   for (int i = 0; i < arr.size(); i++) {\n            x = 0l;\n            n\
    \ = arr.get(i);\n            if (n < 0l) {\n                n = -n;\n        \
    \    }\n            while (n > 0l) {\n                x += n % 10l;\n        \
    \        n /= 10l;\n            }\n            if (x > 0l) {\n               \
    \ counter++;\n            }\n        }\n        return counter;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6r4446we.java:41)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long num : arr) {\n          \
    \  long sum = 0;\n            if (num < 0) {\n                sum += -num % 10;\n\
    \                num = -num / 10;\n            }\n            while (num > 0)\
    \ {\n                sum += num % 10;\n                num /= 10;\n          \
    \  }\n            if (sum > 0) count++;\n        }\n        return count;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hfh1x6d.java:37)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> {\n            String str =\
    \ String.valueOf(x);\n            long sum = 0;\n            for (int i = 0; i\
    \ < str.length(); i++) {\n                char ch = str.charAt(i);\n         \
    \       if (ch == '-') {\n                    continue;\n                }\n \
    \               sum += (ch - '0');\n            }\n            return sum > 0;\n\
    \        }).count();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9iddkcp2.java:35)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new UnsupportedOperationException(\"Not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.countNums(tmp_83uw7w9.java:20)\n\tat Problem.main(tmp_83uw7w9.java:23)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yaglbdu.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugh0uchz.java:23)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // your code here\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpid3rv5zt.java:26)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x < 0 ? (-1 * x) % 9 != 0 :\
    \ x % 9 != 0).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9zkx529.java:24)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        // insert your solution here\n   \
    \     return count;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp90tgl8p5.java:27)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long res = 0;\n        for (long x : arr) {\n            res\
    \ += Integer.signum(Arrays.stream(String.valueOf(x).split(\"\")).mapToInt(Integer::parseInt).sum());\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat java.base/java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:214)\n\
    \tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.IntPipeline.reduce(IntPipeline.java:515)\n\tat\
    \ java.base/java.util.stream.IntPipeline.sum(IntPipeline.java:473)\n\tat Problem.countNums(tmpb4945wd4.java:22)\n\
    \tat Problem.main(tmpb4945wd4.java:28)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n != 0l && n.toString().chars().map(d\
    \ -> d - '0').sum() > 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptoo7uytr.java:26)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ret = 0;\n        for (Long it : arr) {\n            if\
    \ (it < 0) {\n                it = -it;\n            }\n            long sum =\
    \ 0;\n            while (it > 0) {\n                sum += it % 10;\n        \
    \        it /= 10;\n            }\n            if (sum > 0) {\n              \
    \  ret++;\n            }\n        }\n        return ret;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi097zsdr.java:38)\n"
  stdout: ''
  timestamp: 1660011398
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return (long)arr.stream().filter(x -> x.equals((long)0l) ? (int)arr.stream().mapToLong(n\
    \ -> Math.abs(n)).sum() > 0l : (int)Math.abs(x) > 0l).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdp_pi5o4.java:24)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // >>> countNums((new ArrayList<Long>(Arrays.asList())))\n \
    \       // (0l)\n        // >>> countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)11l, (long)-11l))))\n        // (1l)\n        // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n        // (3l)\n        final Function1<Long, Long>\
    \ signedDigits = new Function1<Long, Long>() {\n            public Long apply(final\
    \ Long _x) {\n                return _x;\n            }\n        };\n        Function1<Long,\
    \ ArrayList<Long>> signedDigits$1 = new Function1<Long, ArrayList<Long>>() {\n\
    \            public ArrayList<Long> apply(final Long number) {\n             \
    \   final Function1<Character, Long> charToInt = new Function1<Character, Long>()\
    \ {\n                    public Long apply(final Character c) {\n            \
    \            return Long.valueOf(Character.getNumericValue(c));\n            \
    \        }\n                };\n                Function1<Character, ArrayList<Long>>\
    \ charToInt$1 = new Function1<Character, ArrayList<Long>>() {\n              \
    \      public ArrayList<Long> apply(final Character c) {\n                   \
    \     return new ArrayList<Long>(Arrays.asList(charToInt.apply(c)));\n       \
    \             }\n                };\n                Function1<ArrayList<Long>,\
    \ ArrayList<Long>> flatten = new Function1<ArrayList<Long>, ArrayList<Long>>()\
    \ {\n                    public ArrayList<Long> apply(final ArrayList<Long> _x)\
    \ {\n                        return _x;\n                    }\n             \
    \   };\n                Function1<ArrayList<Long>, ArrayList<Long>> flatten$1\
    \ = new Function1<ArrayList<Long>, ArrayList<Long>>() {\n                    public\
    \ ArrayList<Long> apply(final ArrayList<Long> x) {\n                        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n                        for (Long x$1 : x) {\n\
    \                            res.addAll(flatten.apply(x$1));\n               \
    \        \n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpynp9b_sy.java:55: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpynp9b_sy.java:66: error: reached\
    \ end of file while parsing\n}\n ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011397
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n != 0 && n != -1).filter(n\
    \ -> {\n            long sum = 0l;\n            long iter = n;\n            boolean\
    \ neg = iter < 0;\n            if (neg) {\n                iter = -1 * iter;\n\
    \            }\n            while (iter > 0) {\n                sum += iter %\
    \ 10;\n                iter /= 10;\n            }\n            return (neg ? -1\
    \ * sum : sum) > 0;\n        }).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8uqqely.java:40)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> sumDigits(n) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpite206mp.java:20: error: cannot find symbol\n        return arr.stream().filter(n\
    \ -> sumDigits(n) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // REPLACE WITH YOUR CODE\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtfh8bxu.java:24)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long i : arr) {\n            sum\
    \ += (i > 0 ? (\"\" + i).chars().map(j -> j - '0').sum() : (\"\" + i).chars().map(j\
    \ -> j - '0').limit(1).sum() * -1) > 0 ? 1 : 0;\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpov9785m2.java:28)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Write a function to calculate the sum of the absolute values\
    \ of its digits\n        // >>> sumOfDigits((long)1l)\n        // (1l)\n     \
    \   // >>> sumOfDigits((long)-1l)\n        // (1l)\n        // >>> sumOfDigits((long)2l)\n\
    \        // (2l)\n        // >>> sumOfDigits((long)-2l)\n        // (2l)\n   \
    \     // >>> sumOfDigits((long)123l)\n        // (6l)\n        // >>> sumOfDigits((long)-123l)\n\
    \        // (6l)\n        long sumOfDigits(long x) {\n            // Implementation\
    \ goes here.\n            if (x == 0) return 0;\n            long absx = Math.abs(x);\n\
    \            long digits = 0;\n            while (absx > 0) {\n              \
    \  digits += absx % 10;\n                absx /= 10;\n            }\n        \
    \    return digits;\n        }\n        long count = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (sumOfDigits(arr.get(i)) > 0) count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqeo6c0d.java:33: error: ';' expected\n        long sumOfDigits(long\
    \ x) {\n                        ^\n/tmp/tmpzqeo6c0d.java:33: error: ';' expected\n\
    \        long sumOfDigits(long x) {\n                               ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011397
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> i.toString().chars().sum() >\
    \ 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphrv5sffb.java:24)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        long v;\n        while (!arr.isEmpty())\
    \ {\n            v = arr.remove(0);\n            if (v > 0) {\n              \
    \  if (v % 10 > 0) {\n                    count++;\n                }\n      \
    \      } else {\n                if (v % 10 < 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6on11nto.java:38)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        if (arr.size() == 0) {\n            return 0;\n        }\n \
    \       LongStream sum = arr.stream().map(x -> String.valueOf(x)).map(x -> {\n\
    \            int tmp = 0;\n            for (int i = 0; i < x.length(); i++) {\n\
    \                if (x.charAt(i) == '-') {\n                    tmp += 0;\n  \
    \              } else {\n                    tmp += Integer.parseInt(String.valueOf(x.charAt(i)));\n\
    \                }\n            }\n            return tmp;\n        });\n    \
    \    long x = sum.filter(x1 -> x1 > 0).count();\n        return x;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdilm7aew.java:23: error: incompatible types: no instance(s) of\
    \ type variable(s) R exist so that Stream<R> conforms to LongStream\n        LongStream\
    \ sum = arr.stream().map(x -> String.valueOf(x)).map(x -> {\n                \
    \                                                     ^\n  where R,T are type-variables:\n\
    \    R extends Object declared in method <R>map(Function<? super T,? extends R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        if(arr.size() == 0) {\n           \
    \ return count;\n        }\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          long new_num = 0;\n            if(arr.get(i) < 0) {\n             \
    \   new_num = 0 - arr.get(i);\n            } else {\n                new_num =\
    \ arr.get(i);\n            }\n            while(new_num > 0) {\n             \
    \   count += new_num % 10;\n                new_num /= 10;\n            }\n  \
    \      }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyvtr4by.java:40)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  long val = Math.abs(num);\n            long sum = 0;\n            while (val\
    \ > 0) {\n                sum += val % 10;\n                val /= 10;\n     \
    \       }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06evira0.java:36)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(e -> sumOfDigits(e) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0sa5yfwv.java:20: error: cannot find symbol\n        return arr.stream().filter(e\
    \ -> sumOfDigits(e) > 0).count();\n                                        ^\n\
    \  symbol:   method sumOfDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011398
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return (long)arr.stream().filter(p -> p > 0).filter(p -> {\n\
    \            long sum = 0;\n            while (p > 0) {\n                sum +=\
    \ p % 10;\n                p /= 10;\n            }\n            return sum > 0;\n\
    \        }).count();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbstqp96l.java:35)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(Problem::isNumeric).count();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo20lssei.java:20: error: invalid method reference\n        return\
    \ arr.stream().filter(Problem::isNumeric).count();\n                         \
    \          ^\n  cannot find symbol\n    symbol:   method isNumeric(T)\n    location:\
    \ class Problem\n  where T is a type-variable:\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011398
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long res = 0;\n        for (Long x : arr) {\n            res\
    \ += testLong(x);\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1h0zng8q.java:22: error: cannot find symbol\n            res +=\
    \ testLong(x);\n                   ^\n  symbol:   method testLong(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long result = 0l;\n        for (long num : arr) {\n        \
    \    long sum = 0l;\n            num = Math.abs(num);\n            while (num\
    \ > 0) {\n                sum += num % 10;\n                num /= 10;\n     \
    \       }\n            if (sum > 0) {\n                result++;\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprc7wpf03.java:36)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // What is the sum of the digits of a number x?\n        //\
    \ Sum = f(x) = x - (x // 10) * 10 + f(x // 10)\n        // 123 = 123 - (123 //\
    \ 10) * 10 + f(123 // 10)\n        // 123 = 123 - 12 * 10 + f(12)\n        //\
    \ 123 = 123 - 120 + f(12)\n        // 123 = 3 + f(12)\n        // f(12) = 12 -\
    \ (12 // 10) * 10 + f(12 // 10)\n        // f(12) = 12 - 1 * 10 + f(1)\n     \
    \   // f(12) = 2 + f(1)\n        // f(1) = 1 - (1 // 10) * 10 + f(1 // 10)\n \
    \       // f(1) = 1 - 0 * 10 + f(0)\n        // f(1) = 1 + f(0)\n        // f(0)\
    \ = 0\n        // f(12) = 2 + 1 + 0 = 3\n        // f(123) = 3 + 2 + 1 + 0 = 6\n\
    \        // What is the sum of the signed digits of a number x?\n        // Sign\
    \ = x // max(x // 10, 1)\n        // Sum = Sign * f(x)\n        // Sum = (x //\
    \ max(x // 10, 1)) * (x - (x // 10) * 10 + f(x // 10))\n        // Sum = (x //\
    \ max(x // 10, 1)) * (x - (x // 10) * 10 + (x // 10 - (x // 10 // 10) * 10 + f(x\
    \ // 10 // 10)))\n        // Sum = (x // max(x // 10, 1)) * (x - (x // 10) * 10\
    \ + (x // 10 - (x // 10 // 10) * 10 + (x // 10 // 10 - (x // 10 // 10 // 10) *\
    \ 10 + f(x // 10 // 10 // 10))))\n        // Sum = (x // max(x // 10, 1)) * (x\
    \ - (x // 10) * 10 + (x // 10 - (x // 10 // 10) * 10 + (x // 10 // 10 - (x //\
    \ 10 // 10 // 10)\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvxox5hue.java:42: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long output = 0l;\n        for (Long num : arr) {\n        \
    \    long sum = 0l;\n            while (num != 0) {\n                sum += num\
    \ % 10;\n                num /= 10;\n            }\n            if (sum > 0) {\n\
    \                output++;\n            }\n        }\n        return output;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2c8d385.java:39)\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return countNumsStrategy(arr);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0b7vzsst.java:20: error: cannot find symbol\n        return countNumsStrategy(arr);\n\
    \               ^\n  symbol:   method countNumsStrategy(ArrayList<Long>)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011399
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long cnt = 0;\n        for (Long v : arr) {\n            long\
    \ x = v;\n            long d = 0;\n            while (x != 0) {\n            \
    \    d += Math.abs(x % 10);\n                x /= 10;\n            }\n       \
    \     if (d > 0) {\n                cnt++;\n            }\n        }\n       \
    \ return cnt;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr42wbmam.java:36)\n"
  stdout: ''
  timestamp: 1660011400
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // replace the following line with your code\n        long count\
    \ = 0;\n        for (long num : arr) {\n            int digitSum = 0;\n      \
    \      boolean isNegative = false;\n            if (num < 0) {\n             \
    \   isNegative = true;\n                num = -num;\n            }\n         \
    \   while (num > 0) {\n                digitSum += num % 10;\n               \
    \ num /= 10;\n            }\n            if (isNegative) {\n                digitSum\
    \ += 1;\n            }\n            if (digitSum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe9nbs8wy.java:44)\n"
  stdout: ''
  timestamp: 1660011400
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ans = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int sum = 0;\n            long n = arr.get(i);\n            while\
    \ (n != 0) {\n                sum += Math.abs(n % 10);\n                n /= 10;\n\
    \            }\n            if (sum > 0) {\n                ans++;\n         \
    \   }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1otj_jab.java:36)\n"
  stdout: ''
  timestamp: 1660011401
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yaglbdu.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n != 0).map(n -> n < 0 ? -n\
    \ : n).mapToLong(n -> {\n            long sum = 0;\n            while (n > 0)\
    \ {\n                sum += n % 10;\n                n /= 10;\n            }\n\
    \            return sum;\n        }).filter(sum -> sum > 0).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfci1ogg0.java:31)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        //Type your solution here\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb8vr5i4.java:26)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(Problem::hasPositiveSumOfDigits).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcfx77b8p.java:20: error: invalid method reference\n        return\
    \ arr.stream().filter(Problem::hasPositiveSumOfDigits).count();\n            \
    \                       ^\n  cannot find symbol\n    symbol:   method hasPositiveSumOfDigits(T)\n\
    \    location: class Problem\n  where T is a type-variable:\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011401
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new RuntimeException(\"Not implemented!\");\n    }\n \
    \   public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented!\n\
    \tat Problem.countNums(tmpn12k3xuo.java:20)\n\tat Problem.main(tmpn12k3xuo.java:23)\n"
  stdout: ''
  timestamp: 1660011401
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long retVal = 0;\n        for (Long el : arr) {\n          \
    \  String s = Long.toString(el);\n            String signedDigits = \"\";\n  \
    \          if (s.charAt(0) == '-') {\n                signedDigits = s.substring(1);\n\
    \            } else {\n                signedDigits = s;\n            }\n    \
    \        long sum = 0;\n            for (int i = 0; i < signedDigits.length();\
    \ i++) {\n                sum += Character.getNumericValue(signedDigits.charAt(i));\n\
    \            }\n            if (sum > 0) {\n                retVal++;\n      \
    \      }\n        }\n        return retVal;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgvttfg1.java:41)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(val -> val > 0 && (val + \"\").chars().map(val2\
    \ -> val2 - 48).sum() > 0 || val < 0 && (val + \"\").chars().map(val2 -> val2\
    \ - 48).sum() < 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3y6yerq3.java:24)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> i.toString().chars().map(x ->\
    \ Character.getNumericValue(x)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnuppy6ws.java:24)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new UnsupportedOperationException(\"Not implemented yet\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.countNums(tmp7iakyel8.java:20)\n\tat Problem.main(tmp7iakyel8.java:23)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // >>> arr = [1, 2, 3]\n        // >>> sum(arr)\n        //\
    \ 6\n        return arr.stream().filter(x -> x % 11 > 0).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41n8tikh.java:31)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yaglbdu.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        for (Long i : arr) {\n           \
    \ int sum = 0;\n            while (i != 0) {\n                int digit = (int)\
    \ (i % 10);\n                sum += digit;\n                i /= 10;\n       \
    \     }\n            if (sum > 0) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7w01780x.java:40)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long l : arr) {\n            if\
    \ (l < 0) {\n                l = -l;\n            }\n            long sum1 = 0;\n\
    \            long r = 0;\n            while (l > 0) {\n                r = l %\
    \ 10;\n                sum1 += r;\n                l = l / 10;\n            }\n\
    \            if (sum1 > 0) {\n                sum++;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppq87uwrm.java:40)\n"
  stdout: ''
  timestamp: 1660011401
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.longValue() < 0 || x.longValue()\
    \ > 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sbqjqho.java:24)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x >= 0l).map(x -> {\n      \
    \      long _x = x;\n            long _ret = 0l;\n            while (_x > 0l)\
    \ {\n                _ret += _x % 10l;\n                _x /= 10l;\n         \
    \   }\n            return _ret;\n        }).filter(x -> x > 0l).count();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeuhvyk_f.java:36)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // >>> type(arr)\n        // <class 'list'>\n        // >>>\
    \ type(arr[0])\n        // <class 'int'>\n        long count = 0;\n        //\
    \ >>> type(count)\n        // <class 'int'>\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            // >>> type(arr[i])\n            // <class 'int'>\n    \
    \        if (longSumDigits(arr.get(i)) > 0) {\n                count += 1;\n \
    \           }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfiz_0_kk.java:30: error: cannot find symbol\n            if (longSumDigits(arr.get(i))\
    \ > 0) {\n                ^\n  symbol:   method longSumDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011401
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long output = 0l;\n        long sum = 0l;\n        long elem\
    \ = 0l;\n        long count = 0l;\n        long sign = 0l;\n        Iterator<Long>\
    \ it = arr.iterator();\n        while (it.hasNext()) {\n            elem = it.next();\n\
    \            sign = elem / abs(elem);\n            while (elem != 0l) {\n    \
    \            sum += sign * (elem % 10l);\n                elem /= 10l;\n     \
    \       }\n            if (sum > 0l) {\n                count += 1l;\n       \
    \     }\n            sum = 0l;\n        }\n        output = count;\n        return\
    \ output;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkcfyvcsp.java:28: error: cannot find symbol\n            sign =\
    \ elem / abs(elem);\n                          ^\n  symbol:   method abs(long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011401
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> numSum(i) > 0).count();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpit1f2rf1.java:20: error: cannot find symbol\n        return arr.stream().filter(i\
    \ -> numSum(i) > 0).count();\n                                        ^\n  symbol:\
    \   method numSum(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return (long)arr.stream().filter(n -> n.toString().chars().map(d\
    \ -> Character.getNumericValue(d)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5oimu2fj.java:24)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> getSumOfDigits(n) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8mrmq_z3.java:20: error: cannot find symbol\n        return arr.stream().filter(n\
    \ -> getSumOfDigits(n) > 0).count();\n                                       \
    \ ^\n  symbol:   method getSumOfDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        for (Long val : arr) {\n         \
    \   if (val < 0) {\n                val = val * -1;\n            }\n         \
    \   ArrayList<Long> digs = new ArrayList<Long>();\n            while (val > 0)\
    \ {\n                long num = val % 10;\n                digs.add(num);\n  \
    \              val = val / 10;\n            }\n            long sum = 0l;\n  \
    \          for (Long d : digs) {\n                sum = sum + d;\n           \
    \ }\n            if (sum > 0) {\n                count = count + 1;\n        \
    \    }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe827krel.java:43)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n\treturn 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehd415oa.java:25)\n"
  stdout: ''
  timestamp: 1660011402
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long elt : arr) {\n          \
    \  count += Math.abs(elt);\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvf8wig8g.java:28)\n"
  stdout: ''
  timestamp: 1660011403
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeizs6244.java:23)\n"
  stdout: ''
  timestamp: 1660011403
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long counter = 0;\n        for (Long i : arr) {\n          \
    \  long sumOfDigits = 0;\n            for (Character c : String.valueOf(i).toCharArray())\
    \ {\n                if (c == '-') {\n                    continue;\n        \
    \        }\n                sumOfDigits += Integer.parseInt(String.valueOf(c));\n\
    \            }\n            if (sumOfDigits > 0) {\n                counter++;\n\
    \            }\n        }\n        return counter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpltdn56px.java:37)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> sumOfDigits(x) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkul7b3ag.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> sumOfDigits(x) > 0).count();\n                                        ^\n\
    \  symbol:   method sumOfDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(num -> {\n            return Math.abs(num)\
    \ == num ? Integer.toString(num.intValue()).chars().sum() : Integer.toString(num.intValue()).chars().sum()\
    \ - '0';\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg426h1az.java:21: error: incompatible types: bad return type in\
    \ lambda expression\n            return Math.abs(num) == num ? Integer.toString(num.intValue()).chars().sum()\
    \ : Integer.toString(num.intValue()).chars().sum() - '0';\n                  \
    \                      ^\n    int cannot be converted to boolean\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        if (arr.size() == 0) {\n            return 0l;\n        }\n\
    \        int cnt = 0;\n        for (Long a : arr) {\n            if (a < 0) {\n\
    \                if (a / 10 != 0) {\n                    a = (long) ((long) -1\
    \ * a / 10);\n                }\n            }\n            String s = String.valueOf(a);\n\
    \            int sum = 0;\n            for (int i = 0; i < s.length(); i++) {\n\
    \                sum += Integer.parseInt(String.valueOf(s.charAt(i)));\n     \
    \       }\n            if (sum > 0) {\n                cnt++;\n            }\n\
    \        }\n        return (long) cnt;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.countNums(tmpi9cht3of.java:33)\n\tat Problem.main(tmpi9cht3of.java:43)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // YOUR CODE HERE\n        long sum = 0;\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n          \
    \  int count = 0;\n            while (num != 0) {\n                count += num\
    \ % 10;\n                num /= 10;\n            }\n            if (count > 0)\
    \ {\n                sum++;\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8lt0spli.java:41)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // start here\n        long count = 0;\n        for (long i\
    \ : arr) {\n            int sum = 0;\n            for (char c : Long.toString(i).toCharArray())\
    \ {\n                sum += Integer.parseInt(String.valueOf(c));\n           \
    \ }\n            if (sum > 0) {\n                count++;\n            }\n   \
    \     }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.countNums(tmpr7r_ni4i.java:25)\n\tat Problem.main(tmpr7r_ni4i.java:35)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(a -> (a < 0 ? a * -1 : a) % 9 !=\
    \ 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp77zt25ae.java:24)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ans = 0;\n        //TODO: edit this.\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkytujeoe.java:27)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(e -> {\n            String[] digits\
    \ = Long.toString(e).split(\"\");\n            return LongStream.range(0, digits.length).mapToLong(\n\
    \                i -> {\n                    if (i == 0 && digits[i].equals(\"\
    -\")) {\n                        return 0;\n                    } else {\n   \
    \                     return Long.parseLong(digits[i]);\n                    }\n\
    \                }\n            ).sum() > 0;\n        }).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8k7ut1yd.java:22: error: cannot find symbol\n            return\
    \ LongStream.range(0, digits.length).mapToLong(\n                            \
    \                         ^\n  symbol:   method mapToLong((i)->{ if [...]; } })\n\
    \  location: interface LongStream\n1 error\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // FIXME\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9pehhutk.java:26)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long a = 0;\n        for (long i = 0; i < arr.size(); i++) {\n\
    \            long x = arr.get((int)i);\n            boolean flag = false;\n  \
    \          if (x < 0) {\n                x = -x;\n                flag = true;\n\
    \            }\n            long sum = 0;\n            while (x > 0) {\n     \
    \           sum += x % 10;\n                x /= 10;\n            }\n        \
    \    if (flag) {\n                sum = -sum;\n            }\n            if (sum\
    \ > 0) {\n                a++;\n            }\n        }\n        return a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwh5rk1e.java:48)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  int sum = 0;\n            if (num < 0) {\n                num = -num;\n   \
    \             sum += -1;\n            }\n            while (num > 0) {\n     \
    \           sum += num % 10;\n                num /= 10;\n            }\n    \
    \        if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4sjnq9_2.java:39)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Fill in the code here\n        long out0 = 0l;\n        long\
    \ out1 = 0l;\n        for (Long i: arr) {\n            long t = 0l;\n        \
    \    long x = i;\n            while (x != 0l) {\n                long k = x %\
    \ 10l;\n                t = t + k;\n                x = x / 10l;\n           \
    \ }\n            if (t > 0l) {\n                out0 = out0 + 1l;\n          \
    \  }\n        }\n        return out0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6xxmskh.java:43)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        int idx = 0;\n        while (idx <\
    \ arr.size()) {\n            long v = arr.get(idx);\n            int sum = 0;\n\
    \            while (v != 0) {\n                sum += v % 10;\n              \
    \  v /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n            idx++;\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqu7l097p.java:42)\n"
  stdout: ''
  timestamp: 1660011404
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long num = arr.get(i);\n            if (num < 0) num = -num;\n\
    \            while (num > 0) {\n                sum += num % 10;\n           \
    \     num /= 10;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2y0v5qfu.java:33)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Replace the following line with your solution.\n        long\
    \ count = 0l;\n        long sum;\n        for (int i = 0; i < arr.size(); i++){\n\
    \          sum = 0l;\n          long num = arr.get(i);\n          if (num < 0){\n\
    \            num = num * -1;\n          }\n          do {\n            sum +=\
    \ num % 10;\n            num = num / 10;\n          } while (num > 0);\n     \
    \     if (sum > 0){\n            count += 1;\n          }\n        }\n       \
    \ return count;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn4yfif72.java:41)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return -1l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6idd2z0.java:23)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0).map(x -> {\n        \
    \    long sum = 0;\n            for (char c : String.valueOf(x).toCharArray())\
    \ {\n                sum += Integer.parseInt(String.valueOf(c));\n           \
    \ }\n            return sum;\n        }).filter(x -> x > 0).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu10j9rn7.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            String num = String.valueOf(arr.get(i));\n            for (int\
    \ k = 0; k < num.length(); k++) {\n                sum += Character.getNumericValue(num.charAt(k));\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return arr.size() - sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplk4kggby.java:34)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Your Code Here\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypjtr40u.java:26)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // *** IMPLEMENT ME! ***\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpisamb6cy.java:26)\n"
  stdout: ''
  timestamp: 1660011405
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        //i'm sure there's a better way to do this\n        long ret\
    \ = 0;\n        for (long l : arr) {\n            if (l < 0) {\n             \
    \   l = l * -1;\n            }\n            long sum = 0;\n            while (l\
    \ > 0) {\n                sum += l % 10;\n                l = l / 10;\n      \
    \      }\n            if (sum > 0) {\n                ret++;\n            }\n\
    \        }\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpomottlsu.java:39)\n"
  stdout: ''
  timestamp: 1660011406
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long a : arr) {\n            String\
    \ s = String.valueOf(a);\n            for (char c : s.toCharArray()) {\n     \
    \           count += Character.getNumericValue(c);\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92dgphiz.java:31)\n"
  stdout: ''
  timestamp: 1660011406
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0 || x < 0).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55wmedc2.java:24)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(v -> {\n            String s = String.valueOf(v);\n\
    \            int res = 0;\n            for (int i = 0; i < s.length(); i++) {\n\
    \                if (s.charAt(i) == '-') continue;\n                res += Integer.parseInt(String.valueOf(s.charAt(i)));\n\
    \            }\n            return res > 0;\n        }).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmagzwoe8.java:32)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return (long)arr.stream().filter(a -> a > 0).filter(a -> a.toString().chars().map(b\
    \ -> Character.getNumericValue(b)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnyew7sw.java:28)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> {\n            long n = Math.abs(x);\n\
    \            long sum = 0;\n            while (n > 0) {\n                sum +=\
    \ n % 10;\n                n /= 10;\n            }\n            return sum > 0;\n\
    \        }).count();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjiphv62.java:32)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new RuntimeException(\"Not Implemented\");\n    }\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented\n\
    \tat Problem.countNums(tmp_jd2ptjl.java:20)\n\tat Problem.main(tmp_jd2ptjl.java:23)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> Arrays.stream(x.toString().split(\"\
    \")).map(y -> Long.parseLong(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi46xngfq.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> Arrays.stream(x.toString().split(\"\")).map(y -> Long.parseLong(y)).sum()\
    \ > 0).count();\n                                                            \
    \                                             ^\n  symbol:   method sum()\n  location:\
    \ interface Stream<Long>\n1 error\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(e -> sumDigits(e) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdbzt4vhq.java:20: error: cannot find symbol\n        return arr.stream().filter(e\
    \ -> sumDigits(e) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long res = 0;\n        for (Long l : arr) {\n            res\
    \ += (sumDigits(l) > 0) ? 1 : 0;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3eh5vxd4.java:22: error: cannot find symbol\n            res +=\
    \ (sumDigits(l) > 0) ? 1 : 0;\n                    ^\n  symbol:   method sumDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // INSERT YOUR CODE HERE\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnmcedec.java:26)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        for (long n : arr) {\n           \
    \ int sum = 0;\n            for (char c : Long.toString(n).toCharArray()) {\n\
    \                sum += Character.getNumericValue(c);\n            }\n       \
    \     if (sum > 0) {\n                count++;\n            }\n        }\n   \
    \     return count;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1pd86xoj.java:34)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yaglbdu.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> {\n            long tmp = x;\n\
    \            long sum = 0;\n            while (tmp != 0) {\n                sum\
    \ += Math.abs(tmp % 10);\n                tmp /= 10;\n            }\n        \
    \    return sum > 0;\n        }).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81r6e4lc.java:32)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long item : arr) {\n         \
    \   long signedSum = 0;\n            if (item < 0) {\n                signedSum\
    \ -= item;\n            } else {\n                signedSum += item;\n       \
    \     }\n            while (signedSum > 0) {\n                signedSum -= (signedSum\
    \ % 10);\n                signedSum /= 10;\n            }\n            if (signedSum\
    \ != 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpprs5drjk.java:41)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynn59ofn.java:26)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long result = 0l;\n        for (long i = 0l; i < arr.size();\
    \ i++) {\n            result += (sum(arr.get((int)i)) > 0l) ? 1l : 0l;\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoiy5nwjf.java:22: error: cannot find symbol\n            result\
    \ += (sum(arr.get((int)i)) > 0l) ? 1l : 0l;\n                       ^\n  symbol:\
    \   method sum(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // your code here...\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwe7g9d6.java:26)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        if(arr.size() == 0) return 0;\n        long a = arr.get(0);\n\
    \        return (a > 0 && a % 9 != 0 ? 1 : 0) + countNums(new ArrayList<Long>(arr.subList(1,\
    \ arr.size())));\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj75_ip68.java:28)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> (Arrays.stream(BigInteger.valueOf(i).toString().split(\"\
    \")).map(l -> Long.parseLong(l)).reduce(0l, (a, b) -> a + b) > 0)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Long.parseLong(Long.java:701)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\
    \tat Problem.lambda$countNums$0(tmp4_egrd1y.java:20)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\
    \tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.reduce(ReferencePipeline.java:657)\n\
    \tat Problem.lambda$countNums$2(tmp4_egrd1y.java:20)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.countNums(tmp4_egrd1y.java:20)\n\tat Problem.main(tmp4_egrd1y.java:24)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> signedDigitsSum(n) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkpdpuwrt.java:20: error: cannot find symbol\n        return arr.stream().filter(n\
    \ -> signedDigitsSum(n) > 0).count();\n                                      \
    \  ^\n  symbol:   method signedDigitsSum(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(num -> sum(num) > 0).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2nszz9le.java:20: error: cannot find symbol\n        return arr.stream().filter(num\
    \ -> sum(num) > 0).count();\n                                          ^\n  symbol:\
    \   method sum(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        for (Long x : arr) {\n           \
    \ if (sum(digits(x)) > 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5tw7bw0i.java:22: error: cannot find symbol\n            if (sum(digits(x))\
    \ > 0) {\n                    ^\n  symbol:   method digits(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n\treturn arr.stream().filter(e -> {\n\t\tString str = e.toString();\n\
    \t\tif (str.charAt(0) == '-') {\n\t\t    str = str.substring(1);\n\t\t}\n\t\t\
    return Arrays.stream(str.split(\"\")).mapToInt(s -> Integer.parseInt(s)).sum()\
    \ > 0;\n\t    }).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrpdz2z4.java:30)\n"
  stdout: ''
  timestamp: 1660011409
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new RuntimeException(\"not yet implemented\");\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: not yet implemented\n\
    \tat Problem.countNums(tmpj030df3e.java:20)\n\tat Problem.main(tmpj030df3e.java:23)\n"
  stdout: ''
  timestamp: 1660011409
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> ((long)x).sumOfDigits().longValue()\
    \ > 0).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwgeyrcfc.java:20: error: long cannot be dereferenced\n        return\
    \ arr.stream().filter(x -> ((long)x).sumOfDigits().longValue() > 0).count();\n\
    \                                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1660011409
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(\n            (Long num) -> String.valueOf(num).chars().mapToLong(Character::getNumericValue).sum()\
    \ > 0\n        ).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq0zkudp.java:26)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long r = 0l;\n        for (Long x : arr) {\n            r +=\
    \ sumOfDigits(x);\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpudt_o7hf.java:22: error: cannot find symbol\n            r += sumOfDigits(x);\n\
    \                 ^\n  symbol:   method sumOfDigits(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ans = 0;\n        for (long i = 0; i < arr.size(); i++)\
    \ {\n            long tmp = arr.get((int)i);\n            long tmp_sum = 0;\n\
    \            while (tmp != 0) {\n                tmp_sum += Math.abs(tmp % 10);\n\
    \                tmp /= 10;\n            }\n            if (tmp_sum > 0) {\n \
    \               ans++;\n            }\n        }\n        return ans;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80yri0ia.java:36)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> {\n            long sum = (long)0;\n\
    \            long t = Math.abs(x);\n            while (t > 0) {\n            \
    \    sum += t % 10;\n                t /= 10;\n            }\n            return\
    \ sum > 0;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxk9gd6ju.java:32)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Your code here.\n        return arr.stream().filter(n ->\
    \ n != 0l).map(n -> Math.abs(n)).map(n -> String.valueOf(n)).map(s -> s.chars().map(c\
    \ -> Integer.parseInt(String.valueOf((char)c))).sum()).filter(s -> s > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsljmp9ly.java:25)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n != null && String.valueOf(n).chars().map(c\
    \ -> c - '0').sum() > 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2wwk_f_k.java:26)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // your code here\n        long l = 0;\n        for (long i\
    \ : arr) {\n            l += Math.abs(i) / 10 + Math.abs(i) % 10;\n        }\n\
    \        return l;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprh9hs73h.java:29)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ctr = 0l;\n        for (long a : arr) {\n            long\
    \ sm = 0l;\n            boolean neg = false;\n            if (a < 0l) {\n    \
    \            neg = true;\n                a = -a;\n            }\n           \
    \ while (a > 0l) {\n                sm += a % 10l;\n                a /= 10l;\n\
    \            }\n            if (neg) sm -= (2l * sm);\n            if (sm > 0l)\
    \ ctr++;\n        }\n        return ctr;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnojxhgl.java:43)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ y - 48).sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyoin7bv.java:26)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(e->sumDigits(e)>0).count();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppshywka7.java:20: error: cannot find symbol\n        return arr.stream().filter(e->sumDigits(e)>0).count();\n\
    \                                      ^\n  symbol:   method sumDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        if (arr.size() == 0) {\n            return 0;\n        }\n \
    \       long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      long n = arr.get(i);\n            if (n < 0) {\n                n = -n;\n\
    \            }\n            long n2 = n;\n            long s = 0;\n          \
    \  while (n2 > 0) {\n                s += n2 % 10;\n                n2 /= 10;\n\
    \            }\n            if (s > 0) {\n                sum++;\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6lccz9nt.java:43)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeizs6244.java:23)\n"
  stdout: ''
  timestamp: 1660011403
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeizs6244.java:23)\n"
  stdout: ''
  timestamp: 1660011403
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(el -> el > 0 && el % 10 > 0 || el\
    \ < 0 && el % 10 < 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvb43srfq.java:24)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> i > 0l).filter(i -> IntStream.of(i.toString().chars().toArray()).map(j\
    \ -> Character.getNumericValue(j)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92s5agh1.java:28)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0l && x != -x && sumDigits(x)\
    \ > 0l).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp97y6uxkr.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> x != 0l && x != -x && sumDigits(x) > 0l).count();\n                     \
    \                                         ^\n  symbol:   method sumDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long l : arr) {\n            long\
    \ lm = Math.abs(l);\n            int sum = 0;\n            while (lm > 0) {\n\
    \                sum += lm % 10;\n                lm /= 10;\n            }\n \
    \           if (sum > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxlsopny.java:36)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != null).filter(x -> (Math.abs(x)\
    \ > 0) ? true : false).filter(x -> x < 0 ? x % 10 == -1 ? true : false : true).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbxkmf9lc.java:24)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // REPLACE WITH YOUR CODE\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54_z58ua.java:26)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> getSignedDigits(x).stream().mapToLong(i\
    \ -> i).sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpftedzq4r.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> getSignedDigits(x).stream().mapToLong(i -> i).sum() > 0).count();\n     \
    \                                   ^\n  symbol:   method getSignedDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x != 0).filter(x -> {\n    \
    \        long xAbs = Math.abs(x);\n            long sum = 0;\n            while\
    \ (xAbs > 0) {\n                sum += xAbs % 10;\n                xAbs /= 10;\n\
    \            }\n            return sum > 0;\n        }).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6t4lbpi3.java:32)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Good luck!\n        return arr.stream().filter(i -> (i <\
    \ 0l ? i * -1l : i) % 9l > 0l).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmkkudly.java:25)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Implement me\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ufaiis8.java:26)\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        throw new UnsupportedOperationException(\"Problem.countNums\
    \ has not been implemented yet.\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.countNums\
    \ has not been implemented yet.\n\tat Problem.countNums(tmp6vrrsj2x.java:20)\n\
    \tat Problem.main(tmp6vrrsj2x.java:23)\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long i : arr) {\n            if\
    \ (i < 0) {\n                sum += -i % 10;\n                i /= 10;\n     \
    \       }\n            while (i > 0) {\n                sum += i % 10;\n     \
    \           i /= 10;\n            }\n        }\n        return sum > 0 ? 1 : 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99dc1jfk.java:35)\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> (x.intValue() - x.intValue()\
    \ / 10 * 10) != 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tj6_m1k.java:24)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x > 0 || x < 0).filter(x ->\
    \ Math.abs(x) >= 10).filter(x -> {\n            long value = Math.abs(x);\n  \
    \          long sum = 0;\n            while (value != 0) {\n                sum\
    \ += value % 10;\n                value /= 10;\n            }\n            return\
    \ sum > 0;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8u6ypjua.java:33)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ans = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long temp = arr.get(i);\n            long sum = 0;\n        \
    \    while (temp != 0) {\n                long signedDigit = temp % 10;\n    \
    \            sum += signedDigit;\n                temp /= 10;\n            }\n\
    \            if (sum > 0) {\n                ans++;\n            }\n        }\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbve0ia37.java:41)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ret = 0;\n        for (long x : arr) {\n            long\
    \ absX = Math.abs(x);\n            long absXSum = 0;\n            while (absX\
    \ > 0) {\n                absXSum += absX % 10;\n                absX /= 10;\n\
    \            }\n            if (absXSum > 0) {\n                ret++;\n     \
    \       }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmajtzeyf.java:36)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        for (long n : arr) {\n           \
    \ if (signSum(n) > 0) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5vyql2xk.java:22: error: cannot find symbol\n            if (signSum(n)\
    \ > 0) {\n                ^\n  symbol:   method signSum(long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n.toString().chars().map(c ->\
    \ c - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxjha5vd.java:26)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ans = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long tmp = 0;\n            long v = arr.get(i);\n           \
    \ if (v < 0) {\n                tmp += -v % 10;\n                v = -v / 10;\n\
    \            }\n            while (v > 0) {\n                tmp += v % 10;\n\
    \                v /= 10;\n            }\n            if (tmp > 0) ans++;\n  \
    \      }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfon6ms4e.java:38)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long res = 0;\n        for (Long l : arr) {\n            res\
    \ += sumOfDigits(l) > 0 ? 1 : 0;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkxqozoey.java:22: error: cannot find symbol\n            res +=\
    \ sumOfDigits(l) > 0 ? 1 : 0;\n                   ^\n  symbol:   method sumOfDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yaglbdu.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // retournez le nombre d'\xE9l\xE9ments de la liste dont la\
    \ somme des chiffres est positive\n        //\n        // Mettre votre code ici\n\
    \        //\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6itdajl3.java:29)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long nums = 0;\n        for (Long x : arr) {\n            long\
    \ temp = 0;\n            if (x < 0) {\n                long y = 0 - x;\n     \
    \           while (y > 0) {\n                    temp += y % 10;\n           \
    \         y /= 10;\n                }\n                temp = 0 - temp;\n    \
    \        } else {\n                while (x > 0) {\n                    temp +=\
    \ x % 10;\n                    x /= 10;\n                }\n            }\n  \
    \          if (temp > 0) {\n                nums++;\n            }\n        }\n\
    \        return nums;\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmv7sqhtl.java:48)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        if (arr.size() == 0) {\n            return 0l;\n        }\n\
    \        else {\n            long ans = 0l;\n            for (long i: arr) {\n\
    \                ans += (digitSum(i) > 0) ? 1l : 0l;\n            }\n        \
    \    return ans;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyrzynuay.java:26: error: cannot find symbol\n                ans\
    \ += (digitSum(i) > 0) ? 1l : 0l;\n                        ^\n  symbol:   method\
    \ digitSum(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(i -> i > 0).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8p88u76m.java:28)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> LongStream.of(x).sum() > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7ny79d8.java:28)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(Problem::sumDigits).count();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfzl_1j_p.java:20: error: invalid method reference\n        return\
    \ arr.stream().filter(Problem::sumDigits).count();\n                         \
    \          ^\n  cannot find symbol\n    symbol:   method sumDigits(T)\n    location:\
    \ class Problem\n  where T is a type-variable:\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ret = 0l;\n        for (long v : arr) {\n            long\
    \ sum = 0l;\n            long signed = v;\n            if (v < 0) {\n        \
    \        sum += (signed * -1);\n                signed = signed * -1;\n      \
    \      }\n            while (signed > 0) {\n                sum += signed % 10;\n\
    \                signed = signed / 10;\n            }\n            if (sum > 0)\
    \ ret++;\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwj49whfq.java:38)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> Math.abs(x) % 9 == 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn4eucnr8.java:24)\n"
  stdout: ''
  timestamp: 1660011414
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yaglbdu.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0l;\n        long sum = 0l;\n        long signedSum\
    \ = 0l;\n        long d = 0l;\n        long signedDigit = 0l;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            sum = 0l;\n            signedSum\
    \ = 0l;\n            d = Math.abs(arr.get(i));\n            signedDigit = arr.get(i)\
    \ / d;\n            while (d > 0) {\n                sum += d % 10;\n        \
    \        d /= 10;\n            }\n            signedSum = signedDigit * sum;\n\
    \            if (signedSum > 0) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.countNums(tmpeofxzonj.java:29)\n\tat Problem.main(tmpeofxzonj.java:43)\n"
  stdout: ''
  timestamp: 1660011414
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n\treturn arr.stream().filter(x -> {\n\t\tlong sum = 0;\n\t\tlong x_\
    \ = x < 0 ? -x : x;\n\t\twhile (x_ > 0) {\n\t\t    sum += x_ % 10;\n\t\t    x_\
    \ /= 10;\n\t\t}\n\t\treturn sum > 0;\n\t    }).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsavgc7s3.java:32)\n"
  stdout: ''
  timestamp: 1660011414
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            long\
    \ sum = 0;\n            long v = i;\n            if (v < 0) {\n              \
    \  v = v * -1;\n            }\n            while (v > 0) {\n                sum\
    \ += v % 10;\n                v = v / 10;\n            }\n            if (sum\
    \ > 0) {\n                count += 1;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstwsszo8.java:39)\n"
  stdout: ''
  timestamp: 1660011414
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Fill in the code below\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpya5b9wvg.java:26)\n"
  stdout: ''
  timestamp: 1660011414
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long counter = 0;\n        for (Long l : arr) {\n          \
    \  long sum = 0;\n            long tmp = Math.abs(l);\n            while (tmp\
    \ > 0) {\n                sum += tmp % 10;\n                tmp /= 10;\n     \
    \       }\n            if (sum > 0) counter++;\n        }\n        return counter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9u767tep.java:34)\n"
  stdout: ''
  timestamp: 1660011414
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long cnt = 0;\n        // cnt will store the number of elements\
    \ which has a sum of digits > 0.\n        // You must assign a value to the variable\
    \ cnt.\n        // Your code goes here...\n        for (long a : arr) {\n    \
    \        long tmp = a;\n            long sum = 0;\n            while (tmp != 0)\
    \ {\n                sum += Math.abs(tmp % 10);\n                tmp /= 10;\n\
    \            }\n            if (sum > 0) {\n                cnt++;\n         \
    \   }\n        }\n        return cnt;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz7w81u46.java:39)\n"
  stdout: ''
  timestamp: 1660011415
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugh0uchz.java:23)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x < 0).reduce(0l, (sum, x) ->\
    \ sum + 1);\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsa9l1bd.java:24)\n"
  stdout: ''
  timestamp: 1660011415
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> sumDigits(x) > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1qmzvfno.java:20: error: cannot find symbol\n        return arr.stream().filter(x\
    \ -> sumDigits(x) > 0).count();\n                                        ^\n \
    \ symbol:   method sumDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011395
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9v0uzlj.java:25)\n"
  stdout: ''
  timestamp: 1660011396
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(l -> l.equals(l) ? true : false).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiz361oix.java:24)\n"
  stdout: ''
  timestamp: 1660011415
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long ret = 0;\n        for (Long x : arr) {\n            int\
    \ sum = sumOfDigits(x);\n            if (sum > 0) {\n                ret++;\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwnrmpd62.java:22: error: cannot find symbol\n            int sum\
    \ = sumOfDigits(x);\n                      ^\n  symbol:   method sumOfDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011415
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // REPLACE WITH YOUR CODE\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54_z58ua.java:26)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x.toString().chars().map(y ->\
    \ Character.getNumericValue(y)).sum() > 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3rtmhtu.java:24)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(x -> x >= 0 ? x % 10 == x : x % 10\
    \ == -x).count();\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1w3p5ice.java:24)\n"
  stdout: ''
  timestamp: 1660011415
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long result = 0l;\n        for (long i : arr) {\n          \
    \  String str = String.valueOf(i);\n            int sum = 0;\n            if (str.startsWith(\"\
    -\")) {\n                sum = sum - (int) Character.getNumericValue(str.charAt(1));\n\
    \                for (int j = 2; j < str.length(); j++) {\n                  \
    \  sum = sum + (int) Character.getNumericValue(str.charAt(j));\n             \
    \   }\n            } else {\n                for (int j = 0; j < str.length();\
    \ j++) {\n                    sum = sum + (int) Character.getNumericValue(str.charAt(j));\n\
    \                }\n            }\n            if (sum > 0) {\n              \
    \  result++;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011415
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(n -> n.longValue() > 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4u8gjtji.java:28)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long c = 0;\n        for (Long l : arr) {\n            c +=\
    \ Math.abs(l) % 10;\n            l /= 10;\n            while (l != 0) {\n    \
    \            c += Math.abs(l) % 10;\n                l /= 10;\n            }\n\
    \        }\n        return c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpofrxyh7j.java:33)\n"
  stdout: ''
  timestamp: 1660011415
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return arr.stream().filter(p -> p.toString().chars().map(v ->\
    \ v - '0').sum() > 0).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzwkbhdx.java:26)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Write your code here.\n        // Good luck!\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph96s6wdu.java:27)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        return (long)arr.stream().filter(k -> {\n            long c\
    \ = k;\n            if (c < 0) c = -c;\n            long s = 0;\n            while\
    \ (c > 0) {\n                s += c % 10;\n                c /= 10;\n        \
    \    }\n            return s > 0;\n        }).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sedggqd.java:33)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long total = 0;\n        for (long i : arr) {\n            if\
    \ (i > 0) {\n                String[] digits = Long.toString(i).split(\"\");\n\
    \                int sum = 0;\n                for (String j : digits) {\n   \
    \                 sum += Integer.parseInt(j);\n                }\n           \
    \     if (sum > 0) {\n                    total++;\n                }\n      \
    \      } else {\n                String[] digits = Long.toString(i).substring(1).split(\"\
    \");\n                int sum = Integer.parseInt(Long.toString(i).substring(0,\
    \ 1));\n                for (String j : digits) {\n                    sum +=\
    \ Integer.parseInt(j);\n                }\n                if (sum > 0) {\n  \
    \                  total++;\n                }\n            }\n        }\n   \
    \     return total;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.countNums(tmp81q17fy7.java:33)\n\tat Problem.main(tmp81q17fy7.java:46)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long counter = 0;\n        for (Long current: arr) {\n     \
    \       long sum = 0;\n            String currentString = String.valueOf(current);\n\
    \            if (currentString.charAt(0) == '-') {\n                sum += Character.getNumericValue(currentString.charAt(1));\n\
    \            }\n            else {\n                sum += Character.getNumericValue(currentString.charAt(0));\n\
    \            }\n            for (int i = 1; i < currentString.length(); i++) {\n\
    \                sum += Character.getNumericValue(currentString.charAt(i));\n\
    \            }\n            if (sum > 0) {\n                counter++;\n     \
    \       }\n        }\n        return counter;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5x2ij_5r.java:41)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        if (arr.size() == 0) {\n            return 0;\n        }\n \
    \       long count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n    \
    \        long sum = 0;\n            long number = arr.get(i);\n            int\
    \ sign = number > 0 ? 1 : -1;\n            number = number * sign;\n         \
    \   while (number > 0) {\n                sum += number % 10;\n              \
    \  number /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmir_rcno.java:41)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long numPositive = 0;\n        for (Long x : arr) {\n      \
    \      String[] digits = String.valueOf(x).split(\"\");\n            int sum =\
    \ 0;\n            for (String s : digits) {\n                sum += Integer.parseInt(s);\n\
    \            }\n            if (sum > 0) {\n                numPositive++;\n \
    \           }\n        }\n        return numPositive;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.countNums(tmpv4o06zgw.java:25)\n\tat Problem.main(tmpv4o06zgw.java:35)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i = 0; i < arr.size(); i++)\
    \ {\n            long current = arr.get((int)i);\n            if (current < 0)\
    \ {\n                current = current * -1;\n            }\n            ArrayList<Long>\
    \ digits = new ArrayList<Long>();\n            while (current > 0) {\n       \
    \         digits.add(current % 10);\n                current = current / 10;\n\
    \            }\n            long sum = 0;\n            for (long j = 0; j < digits.size();\
    \ j++) {\n                sum = sum + digits.get((int)j);\n            }\n   \
    \         if (sum > 0) {\n                count = count + 1;\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzf7w3o6j.java:43)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long _sum=0l;\n        for(int _i=0;_i<arr.size();_i++) {\n\
    \            long _val=arr.get(_i);\n            _sum+=Math.abs(_val)/10+Math.abs(_val)%10;\n\
    \        }\n        return _sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnfrexrd9.java:29)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        int count = 0;\n        for (long i : arr) {\n            int\
    \ sum = 0;\n            if (i < 0) {\n                sum += Math.abs(i) % 10;\n\
    \                i = -i / 10;\n            }\n            while (i > 0) {\n  \
    \              sum += i % 10;\n                i /= 10;\n            }\n     \
    \       if (sum > 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2v02m6c8.java:39)\n"
  stdout: ''
  timestamp: 1660011416
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        // Good luck!\n        Long count = 0l;\n        for (Long i\
    \ = 0l; i < arr.size(); i++) {\n            if (arr.get(i.intValue()) == 0l) {\n\
    \                count = count + 1l;\n            } else {\n                Long\
    \ num = arr.get(i.intValue());\n                Long[] digits = new Long[0];\n\
    \                if (num < 0l) {\n                    digits = new Long[1];\n\
    \                    digits[0] = num;\n                } else {\n            \
    \        digits = new Long[String.valueOf(num).length()];\n                  \
    \  for (Long j = 0l; j < String.valueOf(num).length(); j++) {\n              \
    \          digits[j.intValue()] = Long.parseLong(String.valueOf(String.valueOf(num).charAt(j.intValue())));\n\
    \                    }\n                }\n                Long sum = 0l;\n  \
    \              for (Long j = 0l; j < digits.length; j++) {\n                 \
    \   sum = sum + digits[j.intValue()];\n                }\n                if (sum\
    \ != 0l) {\n                    count = count + 1l;\n                }\n     \
    \       }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjegyaf27.java:50)\n"
  stdout: ''
  timestamp: 1660011416

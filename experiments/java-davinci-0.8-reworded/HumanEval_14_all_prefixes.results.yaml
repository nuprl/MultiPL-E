language: java
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i += 1) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> out = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            out.add(string.substring(0,\
    \ i + 1));\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> x = new ArrayList<String>();\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            x.add(string.substring(0,\
    \ i + 1));\n        }\n        return x;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,i+1));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i += 1) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int limit = string.length();\n        for (int i = 0; i < limit; i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> retval = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            retval.add(string.substring(0,\
    \ i + 1));\n        }\n        return retval;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,i+1));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int len = 1; len <= string.length(); len++) {\n            result.add(string.substring(0,\
    \ len));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int index = 0; index < length;\
    \ index = index + 1) {\n            prefixes.add(string.substring(0, index + 1));\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i += 1) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    (?!^)\")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcyj28glc.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     int i = 0;\n        while (i < string.length()) {\n            result.add(string.substring(0,\
    \ i + 1));\n            i = i + 1;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return (new ArrayList<String>(Arrays.asList(string.split(\"\
    \"))));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4m4_wby_.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     int counter = 0;\n        while (counter < string.length()) {\n        \
    \    result.add(string.substring(0, counter + 1));\n            counter = counter\
    \ + 1;\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> arrayList = new ArrayList<String>();\n\
    \        String prefix = \"\";\n        for (Character character : string.toCharArray())\
    \ {\n            prefix += character;\n            arrayList.add(prefix);\n  \
    \      }\n        return arrayList;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // >>> allPrefixes(\"abc\")\n        // [\"a\", \"ab\", \"\
    abc\"]\n        return new ArrayList<String>(Arrays.asList(string.split(\"(?!^)\"\
    )));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9x6uow7.java:18)\n"
  stdout: ''
  timestamp: 1660011698
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // Fill in the function\n        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> xs = new ArrayList<String>();\n       \
    \ String x = \"\";\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        x += string.charAt(i);\n            xs.add(x);\n        }\n        return\
    \ xs;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    \")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vkbhp2f.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> toReturn = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            toReturn.add(string.substring(0,\
    \ i + 1));\n        }\n        return toReturn;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> pre = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            pre.add(string.substring(0,\
    \ i + 1));\n        }\n        return pre;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            list.add(string.substring(0,\
    \ i + 1));\n        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(IntStream.range(0,\
    \ string.length() + 1).mapToObj(i -> string.substring(0, i)).toArray(String[]::new)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgqspscs7.java:16)\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    \")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vkbhp2f.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  String currentPrefix = \"\";\n        for (Character c : string.toCharArray())\
    \ {\n            currentPrefix += c;\n            ans.add(currentPrefix);\n  \
    \      }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> out = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            out.add(string.substring(0,\
    \ i + 1));\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int n = string.length();\n        for (int i = 0; i < n; i++) {\n    \
    \        prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(IntStream.range(0, string.length()\
    \ + 1).mapToObj(i -> string.substring(0, i)).collect(Collectors.toList()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5wsgywkg.java:16)\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        int l = string.length();\n        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        String substring = string;\n        while\
    \ (l > 0) {\n            prefixes.add(substring);\n            substring = substring.substring(0,\
    \ substring.length() - 1);\n            l = l - 1;\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp27bt613n.java:25)\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       String prefix = \"\";\n        for (int i = 0; i < string.length(); i\
    \ += 1) {\n            prefix += string.charAt(i);\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<String>();\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            results.add(string.substring(0,\
    \ i + 1));\n        }\n        return results;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       StringBuilder builder = new StringBuilder();\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            builder.append(string.charAt(i));\n\
    \            prefixes.add(builder.toString());\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int n = string.length();\n        for (int i = 0; i < n; i++) {\n    \
    \        prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int i = 0;\n        while (i < string.length()) {\n            prefixes.add(string.substring(0,\
    \ i+1));\n            i = i + 1;\n        }\n        return prefixes;\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            list.add(string.substring(0,\
    \ i + 1));\n        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i += 1) {\n            allPrefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return allPrefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            prefixes.add(string.substring(0,i+1));\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    \")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vkbhp2f.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<String>();\n\
    \        allPrefixes.add(\"\");\n        for (int i = 0; i < string.length();\
    \ i++) {\n            allPrefixes.add(string.substring(0, i + 1));\n        }\n\
    \        return allPrefixes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovswjhqg.java:21)\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> results = new ArrayList<String>();\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            results.add(string.substring(0,\
    \ i + 1));\n        }\n        return results;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  int n = string.length();\n        for (int i = 0; i < n; i++) {\n         \
    \   res.add(string.substring(0, i + 1));\n        }\n        return res;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(prefixes(string));\n    }\n\
    \    public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpins2zjm5.java:13: error: cannot find symbol\n        return new\
    \ ArrayList<String>(prefixes(string));\n                                     ^\n\
    \  symbol:   method prefixes(String)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(string.chars().mapToObj(i ->\
    \ Character.toString((char)i)).collect(Collectors.toList()));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ejxl_kq.java:17)\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> out = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            out.add(string.substring(0,\
    \ i + 1));\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int index = 0; index < string.length(); index++) {\n            prefixes.add(string.substring(0,\
    \ index + 1));\n        }\n        return prefixes;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    \")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vkbhp2f.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> stringList = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            stringList.add(string.substring(0,\
    \ i + 1));\n        }\n        return stringList;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i += 1) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     result.add(\"\");\n        while (string.length() > 0) {\n            result.add(string);\n\
    \            string = string.substring(0, string.length() - 1);\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxxh71v0.java:22)\n"
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> array = new ArrayList<String>();\n    \
    \    for (int i = 0; i < string.length(); i++) {\n            array.add(string.substring(0,\
    \ i + 1));\n        }\n        return array;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    (?!^)\")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcyj28glc.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     result.add(string);\n        for (int i = 0; i < string.length() - 1; i++)\
    \ {\n            result.add(string.substring(0, string.length() - i - 1));\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_oxpe4ty.java:21)\n"
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> allPrefixes = new ArrayList<String>();\n\
    \        for (int index = 0; index < string.length(); index++) {\n           \
    \ allPrefixes.add(string.substring(0, index + 1));\n        }\n        return\
    \ allPrefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  int N = string.length();\n        for (int i = 0; i < N; i++) {\n         \
    \   ret.add(string.substring(0, i + 1));\n        }\n        return ret;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string, 0);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5yvr0_pq.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, 0);\n       \
    \        ^\n  required: String\n  found:    String,int\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int prefix_length = 1; prefix_length <= string.length(); prefix_length\
    \ += 1) {\n            prefixes.add(string.substring(0, prefix_length));\n   \
    \     }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int index = 0; index < string.length(); index += 1) {\n         \
    \   prefixes.add(string.substring(0, index + 1));\n        }\n        return prefixes;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(string.split(\"\
    \")));\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vkbhp2f.java:16)\n"
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        // BEGIN SOLUTION\n        ArrayList<String> prefixes = new\
    \ ArrayList<String>();\n        for (int i = 0; i < string.length(); i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;\n        // END SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> strings = new ArrayList<String>();\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            strings.add(string.substring(0,\
    \ i + 1));\n        }\n        return strings;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     int i = 0;\n        while (i < string.length()) {\n            output.add(string.substring(0,i+1));\n\
    \            i = i + 1;\n        }\n        return output;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> a = new ArrayList<String>();\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            a.add(string.substring(0,\
    \ i + 1));\n        }\n        return a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(\n            IntStream.range(0,\
    \ string.length() + 1)\n            .mapToObj(i -> string.substring(0, i))\n \
    \           .collect(Collectors.toList()));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphrnw5w7x.java:19)\n"
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Stream.iterate(1, i -> i + 1).limit(string.length()).map(i\
    \ -> string.substring(0, i)).collect(Collectors.toList()));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return allPrefixes(string, new ArrayList<String>());\n  \
    \  }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbvyzwz4i.java:13: error: method allPrefixes in class Problem cannot\
    \ be applied to given types;\n        return allPrefixes(string, new ArrayList<String>());\n\
    \               ^\n  required: String\n  found:    String,ArrayList<String>\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int index = 0; index < string.length(); index++) {\n            result.add(string.substring(0,\
    \ index + 1));\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> retList = new ArrayList<String>();\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            retList.add(string.substring(0,\
    \ i + 1));\n        }\n        return retList;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ret = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        StringBuilder sb = new StringBuilder();\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i += 1) {\n            sb.append(string.charAt(i));\n            result.add(sb.toString());\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        return new ArrayList<String>(Arrays.asList(\n           \
    \ string.split(\"(?!^)\")\n        ));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjanmdgvp.java:18)\n"
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int len = string.length();\n        for (int i = 0; i < len; i++) {\n\
    \            prefixes.add(string.substring(0, i + 1));\n        }\n        return\
    \ prefixes;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     int length = string.length();\n        for (int i = 0; i < length; i +=\
    \ 1) {\n            output.add(string.substring(0, i + 1));\n        }\n     \
    \   return output;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> rv = new ArrayList<String>();\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            rv.add(string.substring(0,\
    \ i + 1));\n        }\n        return rv;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> stringList = new ArrayList<String>();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            stringList.add(string.substring(0,\
    \ i + 1));\n        }\n        return stringList;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int i = 0;\n        while (i < string.length()) {\n            prefixes.add(string.substring(0,\
    \ i+1));\n            i += 1;\n        }\n        return prefixes;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"asdfgh\")).equals((new\
    \ ArrayList<String>(Arrays.asList((String)\"a\", (String)\"as\", (String)\"asd\"\
    , (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n    assert(allPrefixes((\"\
    WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"W\", (String)\"\
    WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011701
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i += 1) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            prefixes.add(string.substring(0, i + 1));\n        }\n      \
    \  return prefixes;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int k = 0; k < string.length(); k++) {\n            prefixes.add(string.substring(0,k+1));\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     int length = string.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            output.add(string.substring(0, i + 1));\n        }\n        return\
    \ output;\n    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> list = new ArrayList<String>();\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            list.add(string.substring(0,\
    \ i + 1));\n        }\n        return list;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       int length = string.length();\n        for (int index = 0; index < length;\
    \ index++) {\n            prefixes.add(string.substring(0, index + 1));\n    \
    \    }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> ans = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            ans.add(string.substring(0,\
    \ i + 1));\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011700
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       String prefix = \"\";\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            prefix += string.charAt(i);\n            prefixes.add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> out = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            out.add(string.substring(0,\
    \ i + 1));\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int prefixLength = 1; prefixLength <= string.length(); prefixLength++)\
    \ {\n            prefixes.add(string.substring(0, prefixLength));\n        }\n\
    \        return prefixes;\n    }\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  int length = string.length();\n        for (int i = 0; i < length; i++) {\n\
    \            res.add(string.substring(0, i + 1));\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> res = new ArrayList<String>();\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            res.add(string.substring(0,\
    \ i + 1));\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011702
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> output = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            output.add(string.substring(0,\
    \ i + 1));\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> result = new ArrayList<String>();\n   \
    \     for (int i = 0; i < string.length(); i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return array list of all prefixes from shortest to longest\
    \ of the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
    \ string) {\n        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       for (int i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011699

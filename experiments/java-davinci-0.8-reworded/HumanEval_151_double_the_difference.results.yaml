language: java
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long) lst.stream().filter(n\
    \ -> n % 2 == 1).map(n -> Math.pow(n, 2)).reduce(0l, (acc, x) -> acc + x);\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvake1fet.java:21: error: no suitable method found for reduce(long,(acc,x)->acc\
    \ + x)\n        return (long) lst.stream().filter(n -> n % 2 == 1).map(n -> Math.pow(n,\
    \ 2)).reduce(0l, (acc, x) -> acc + x);\n                                     \
    \                                              ^\n    method Stream.reduce(Double,BinaryOperator<Double>)\
    \ is not applicable\n      (argument mismatch; long cannot be converted to Double)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Double,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long diff = 0l;\n        for\
    \ (Float x : lst) {\n            if (x % 2 == 1) {\n                diff += (long)\
    \ Math.pow(x, 2);\n            }\n        }\n        return 2 * diff;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_le5rza.java:34)\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> x > 0 && x % 2 == 1).map(x -> x * x).reduce(0l, (x, y) -> x + y);\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbcn0a8k.java:21: error: no suitable method found for reduce(long,(x,y)->x\
    \ + y)\n        return lst.stream().filter(x -> x > 0 && x % 2 == 1).map(x ->\
    \ x * x).reduce(0l, (x, y) -> x + y);\n                                      \
    \                                      ^\n    method Stream.reduce(Float,BinaryOperator<Float>)\
    \ is not applicable\n      (argument mismatch; long cannot be converted to Float)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Float,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long squaresum = 0;\n\
    \        for (float num : lst) {\n            if (num > 0 && num == Math.floor(num))\
    \ {\n                squaresum += Math.pow(num, 2);\n            }\n        }\n\
    \        return squaresum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptb_y4wlw.java:31)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> x%2 == 1).mapToLong(Math::round).map(x -> x*x).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // Insert your code\
    \ here\n        long result = 0;\n        long even = 0;\n        long odd = 0;\n\
    \        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) %\
    \ 2 == 0) {\n                even += Math.pow(lst.get(i), 2);\n            } else\
    \ {\n                odd += Math.pow(lst.get(i), 2);\n            }\n        }\n\
    \        result = (long) (2 * (odd - even));\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptywe850e.java:37)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().mapToLong(x\
    \ -> (((x % 2) == 1) ? (long)(Math.pow(x, 2)) : 0)).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sumOfSquares\
    \ = 0;\n        for (float num : lst) {\n            if (num > 0 && Math.floor(num)\
    \ == num) {\n                if (num % 2 != 0) {\n                    sumOfSquares\
    \ += Math.pow(num, 2);\n                }\n            }\n        }\n        return\
    \ sumOfSquares;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return Stream.of(lst).flatMap(a\
    \ -> a.stream().filter(d -> d.longValue() > 0 && d.intValue() == d.longValue()\
    \ && d.longValue() % 2 == 1)).map(d -> d.longValue() * d.longValue()).reduce(0l,\
    \ (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)lst.stream().filter(x\
    \ -> Math.abs(x - Math.round(x)) < 0.001f).filter(x -> x % 2 == 1).map(x -> x\
    \ * x).reduce((x, y) -> x + y).orElse((long)0l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpva_numt9.java:21: error: incompatible types: long cannot be converted\
    \ to Float\n        return (long)lst.stream().filter(x -> Math.abs(x - Math.round(x))\
    \ < 0.001f).filter(x -> x % 2 == 1).map(x -> x * x).reduce((x, y) -> x + y).orElse((long)0l);\n\
    \                                                                            \
    \                                                                            \
    \   ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long res = 0l;\n \
    \       for (Float i : lst) {\n            if (i >= 0 && (int)i == i) {\n    \
    \            res += i % 2 == 0 ? i * i : 0;\n            }\n        }\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqqldsz0u.java:23: error: incompatible types: Float cannot be converted\
    \ to int\n            if (i >= 0 && (int)i == i) {\n                         \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    Not implemented yet!\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet!\n\tat Problem.doubleTheDifference(tmpzb6f2or9.java:21)\n\t\
    at Problem.main(tmpzb6f2or9.java:24)\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)lst.stream().filter(x\
    \ -> !(x.isNaN() || x.isInfinite() || x.floatValue() < 0)).map(x -> x.floatValue()).map(x\
    \ -> new BigDecimal(x).pow(2).floatValue()).reduce(0f, (x, y) -> x + y) * 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmpl1567k.java:21: error: incompatible types: Float cannot be converted\
    \ to long\n        return (long)lst.stream().filter(x -> !(x.isNaN() || x.isInfinite()\
    \ || x.floatValue() < 0)).map(x -> x.floatValue()).map(x -> new BigDecimal(x).pow(2).floatValue()).reduce(0f,\
    \ (x, y) -> x + y) * 2;\n                                                    \
    \                                                                            \
    \                                                   ^\n1 error\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long total = 0;\n\
    \        ArrayList<Float> newLst = new ArrayList<Float>();\n        for (Float\
    \ item : lst) {\n            if (item % 2 == 1) {\n                newLst.add(item);\n\
    \            }\n        }\n        for (Float item : newLst) {\n            total\
    \ += item * item;\n        }\n        return total;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)lst.stream().map(n\
    \ -> Math.abs(n)).map(n -> Math.floor(n)).filter(n -> !(n == 0)).map(n -> Math.pow(n,\
    \ 2)).reduce((n, m) -> n + m).orElse((long)0l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpctqn82b4.java:21: error: incompatible types: long cannot be converted\
    \ to Double\n        return (long)lst.stream().map(n -> Math.abs(n)).map(n ->\
    \ Math.floor(n)).filter(n -> !(n == 0)).map(n -> Math.pow(n, 2)).reduce((n, m)\
    \ -> n + m).orElse((long)0l);\n                                              \
    \                                                                            \
    \                                     ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    Problem is not defined\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ is not defined\n\tat Problem.doubleTheDifference(tmp7bnmo_3_.java:21)\n\tat\
    \ Problem.main(tmp7bnmo_3_.java:24)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float l : lst) {\n            if (l % 2 != 0 && l > 0) {\n       \
    \         sum += Math.pow(l, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if(lst.size() == 0)\
    \ return 0;\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++){\n\
    \            if(lst.get(i) % 2 != 0)\n                sum += Math.pow(lst.get(i),\
    \ 2);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfwzej3m.java:34)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return ((java.util.stream.Stream<Float>)\
    \ lst.stream()).mapToLong(n -> {\n            Long tmp = null;\n            return\
    \ (((tmp = (new Double(Math.floor(n)).longValue())) % 2) == 0 ? tmp : tmp * tmp);\n\
    \        }).reduce(0l, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzuxe10rx.java:28)\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long acc = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (isInteger(lst.get(i))\
    \ && lst.get(i) >= 0.0) {\n                acc += Math.pow(lst.get(i), 2);\n \
    \           }\n        }\n        return acc;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmbjui75g.java:23: error: cannot find symbol\n            if (isInteger(lst.get(i))\
    \ && lst.get(i) >= 0.0) {\n                ^\n  symbol:   method isInteger(Float)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new RuntimeException(\"\
    Not Implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented\n\
    \tat Problem.doubleTheDifference(tmp0ezc75g1.java:21)\n\tat Problem.main(tmp0ezc75g1.java:24)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)lst.stream().filter(i\
    \ -> i % 2 == 1).map(i -> i * i).reduce(0f, (i, j) -> i + j);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy916yqf_.java:21: error: incompatible types: Float cannot be converted\
    \ to long\n        return (long)lst.stream().filter(i -> i % 2 == 1).map(i ->\
    \ i * i).reduce(0f, (i, j) -> i + j);\n                                      \
    \                                          ^\n1 error\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // your code goes\
    \ here\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv4wg39w.java:26)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0l;\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp57k38uq.java:26)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() < 2)\
    \ {\n            return 0;\n        }\n        return 2 * ((long)lst.get(0)) *\
    \ ((long)lst.get(1));\n    }\n    public static void main(String[] args) {\n \
    \   assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw32ei889.java:24: error: incompatible types: Float cannot be converted\
    \ to long\n        return 2 * ((long)lst.get(0)) * ((long)lst.get(1));\n     \
    \                            ^\n/tmp/tmpw32ei889.java:24: error: incompatible\
    \ types: Float cannot be converted to long\n        return 2 * ((long)lst.get(0))\
    \ * ((long)lst.get(1));\n                                                    \
    \  ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        int result = 0;\n\
    \        for (int i = 0; i < lst.size(); i++) {\n            Float item = lst.get(i);\n\
    \            if (item > 0 && (int) item == item) {\n                result +=\
    \ item * item;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzjokxl2m.java:24: error: incompatible types: Float cannot be converted\
    \ to int\n            if (item > 0 && (int) item == item) {\n                \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // REPLACE THE BODY\
    \ OF THIS METHOD WITH YOUR OWN IMPLEMENTATION\n        return 0l;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprr4fxhsm.java:26)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return ((long)0l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr15j6df8.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        int s = 0;\n     \
    \   for (int i = 0; i < lst.size(); i++) {\n            int x = (int) lst.get(i);\n\
    \            if (x % 2 == 1 && x >= 0) {\n                s += x * x;\n      \
    \      }\n        }\n        return s;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_isbq_or.java:23: error: incompatible types: Float cannot be converted\
    \ to int\n            int x = (int) lst.get(i);\n                            \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        for (int i = 0; i < lst.size(); i++) {\n            Float x = lst.get(i);\n\
    \            if (x >= 0 && x % 1 == 0) {\n                if (x % 2 == 1) {\n\
    \                    result += x * x;\n                }\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0l;\n\
    \        for (Float x : lst) {\n            if (x.isNaN() == false && x.isInfinite()\
    \ == false && x.isInteger() == true && x.longValue() > 0l) {\n               \
    \ if (x.longValue() % 2l == 1l) {\n                    result += (x.longValue()\
    \ * x.longValue());\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ovtx7ao.java:23: error: cannot find symbol\n            if (x.isNaN()\
    \ == false && x.isInfinite() == false && x.isInteger() == true && x.longValue()\
    \ > 0l) {\n                                                                  ^\n\
    \  symbol:   method isInteger()\n  location: variable x of type Float\n1 error\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new RuntimeException(\"\
    Not implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.doubleTheDifference(tmph0vne955.java:21)\n\tat Problem.main(tmph0vne955.java:24)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // >>> YOUR CODE HERE\n\
    \        long res = 0l;\n        for (Float f : lst) {\n            long f_long\
    \ = (long)f;\n            long abs_f_long = Math.abs(f_long);\n            if\
    \ (abs_f_long == f_long && abs_f_long % 2 == 1) {\n                res += f_long\
    \ * f_long;\n            }\n        }\n        return res;\n        // END\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxe_z043.java:24: error: incompatible types: Float cannot be converted\
    \ to long\n            long f_long = (long)f;\n                              \
    \  ^\n1 error\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        for (Float n : lst) {\n            if (n > 0) {\n                if (n\
    \ % 2 != 0) {\n                    result += n * n;\n                }\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      int counter = 0;\n        while (counter < lst.size()) {\n            if\
    \ (lst.get(counter) > 0 && lst.get(counter) % 1 == 0) {\n                if (lst.get(counter)\
    \ % 2 == 1) {\n                    sum += lst.get(counter) * lst.get(counter);\n\
    \                }\n            }\n            counter++;\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf23pbz_q.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // +++ your code here\
    \ +++\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3gsfkfu3.java:26)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long) lst.stream().map(x\
    \ -> x).filter(x -> (x % 2) == 1).map(x -> Math.pow(x, 2)).reduce(0d, (x, y) ->\
    \ x + y);\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2iya6xe0.java:21: error: incompatible types: Double cannot be converted\
    \ to long\n        return (long) lst.stream().map(x -> x).filter(x -> (x % 2)\
    \ == 1).map(x -> Math.pow(x, 2)).reduce(0d, (x, y) -> x + y);\n              \
    \                                                                            \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) return 0;\n        return lst.stream().filter(x -> x > 0).map(x -> (long)\
    \ Math.pow(x, 2)).reduce((x, y) -> x + y).get();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmoini8w9.java:26)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // lst = ignoreEvens(lst);\n\
    \        lst = ignoreNegatives(lst);\n        lst = ignoreNonIntegers(lst);\n\
    \        // return sumSquares(lst);\n        return sumOfSquaresOfOdds(lst);\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1r1tcvbi.java:22: error: cannot find symbol\n        lst = ignoreNegatives(lst);\n\
    \              ^\n  symbol:   method ignoreNegatives(ArrayList<Float>)\n  location:\
    \ class Problem\n/tmp/tmp1r1tcvbi.java:23: error: cannot find symbol\n       \
    \ lst = ignoreNonIntegers(lst);\n              ^\n  symbol:   method ignoreNonIntegers(ArrayList<Float>)\n\
    \  location: class Problem\n/tmp/tmp1r1tcvbi.java:25: error: cannot find symbol\n\
    \        return sumOfSquaresOfOdds(lst);\n               ^\n  symbol:   method\
    \ sumOfSquaresOfOdds(ArrayList<Float>)\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long) Math.pow(lst.stream().mapToDouble(Double::new).map(x\
    \ -> x % 2 == 1 ? x : 0).map(x -> x * x).sum(), 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgsvackqv.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        for (Float v : lst) {\n            long x = Math.round(v);\n        \
    \    if (x > 0 && x % 2 == 1) {\n                result += x * x;\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // >>> START sol\n\
    \        return lst.stream()\n                .filter(\n                     \
    \   (val) -> {\n                            return val % 2 == 1;\n           \
    \             }\n                )\n                .filter(\n               \
    \         (val) -> {\n                            return val >= 0;\n         \
    \               }\n                )\n                .mapToLong(\n          \
    \              (val) -> {\n                            return (long)Math.pow(val,\
    \ 2);\n                        }\n                )\n                .sum();\n\
    \        // <<< END sol\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    Problem.doubleTheDifference() has not been implemented yet\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.doubleTheDifference()\
    \ has not been implemented yet\n\tat Problem.doubleTheDifference(tmpim8w9ldv.java:21)\n\
    \tat Problem.main(tmpim8w9ldv.java:24)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long r1 = 0;\n   \
    \     long r2 = 0;\n        for (Float i : lst) {\n            if (i > 0) {\n\
    \                r1 += i;\n            }\n            if (i % 2 == 0) {\n    \
    \            r2 += i;\n            }\n        }\n        return r1 - r2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_jvgnydl.java:35)\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) > 0\
    \ && lst.get(i) % 2 == 1) {\n                sum += Math.pow(lst.get(i), 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    Need to implement this.\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Need\
    \ to implement this.\n\tat Problem.doubleTheDifference(tmpjba4ero1.java:21)\n\t\
    at Problem.main(tmpjba4ero1.java:24)\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long total = 0;\n\
    \        for (Float x : lst) {\n            if (x % 2 == 1) {\n              \
    \  total += x * x;\n            }\n        }\n        return total;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new NotImplementedException();\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpego4p1j1.java:21: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sumOfSquares\
    \ = 0;\n        for (Float f : lst) {\n            if ((f == Math.floor(f)) &&\
    \ (f > 0)) {\n                if (f % 2 != 0) {\n                    sumOfSquares\
    \ += Math.pow(f, 2);\n                }\n            }\n        }\n        return\
    \ sumOfSquares;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> x % 2 == 1 && (int)x == x).mapToLong(x -> (long)x * (long)x).sum();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd6yjq_rn.java:21: error: incompatible types: Float cannot be converted\
    \ to int\n        return lst.stream().filter(x -> x % 2 == 1 && (int)x == x).mapToLong(x\
    \ -> (long)x * (long)x).sum();\n                                             \
    \              ^\n/tmp/tmpd6yjq_rn.java:21: error: incompatible types: Float cannot\
    \ be converted to long\n        return lst.stream().filter(x -> x % 2 == 1 &&\
    \ (int)x == x).mapToLong(x -> (long)x * (long)x).sum();\n                    \
    \                                                                    ^\n/tmp/tmpd6yjq_rn.java:21:\
    \ error: incompatible types: Float cannot be converted to long\n        return\
    \ lst.stream().filter(x -> x % 2 == 1 && (int)x == x).mapToLong(x -> (long)x *\
    \ (long)x).sum();\n                                                          \
    \                                        ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long ret = 0;\n  \
    \      for (Float e : lst) {\n            if (e % 1 == 0 && e % 2 == 1 && e >=\
    \ 0) {\n                ret += e * e;\n            }\n        }\n        return\
    \ ret;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum1 = 0;\n \
    \       long sum2 = 0;\n        for (int i = 0; i < lst.size(); i++) {\n     \
    \       Float num = lst.get(i);\n            if (isInteger(num) && num > 0) {\n\
    \                if (num % 2 == 0) {\n                    sum1 += num * num;\n\
    \                } else {\n                    sum2 += num * num;\n          \
    \      }\n            }\n        }\n        return sum2 - sum1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg5k1y3x1.java:25: error: cannot find symbol\n            if (isInteger(num)\
    \ && num > 0) {\n                ^\n  symbol:   method isInteger(Float)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        int sum = 0;\n   \
    \     for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) > 0 &&\
    \ (lst.get(i) % 1 == 0)) {\n                if (lst.get(i) % 2 == 1) {\n     \
    \               sum += Math.pow(lst.get(i), 2);\n                }\n         \
    \   }\n        }\n        return sum * 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3x4sfvj.java:33)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)Stream.iterate(lst,\
    \ x1 -> {\n            if (x1.isEmpty()) {\n                return new ArrayList<>();\n\
    \            } else {\n                return new ArrayList<Float>(x1.subList(1,\
    \ x1.size()));\n            }\n        }).limit(lst.size()).mapToDouble(x -> {\n\
    \            if (x.isEmpty()) {\n                return 0;\n            } else\
    \ {\n                return x.get(0);\n            }\n        }).filter(x -> {\n\
    \            if (x > (long)0l) {\n                return x % (long)2l == (long)1l;\n\
    \            } else {\n                return false;\n            }\n        }).map(x\
    \ -> {\n            return x * x;\n        }).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        double sum1 = 0.0;\n\
    \        double sum2 = 0.0;\n        double sum3 = 0.0;\n        for (Float elt\
    \ : lst) {\n            if (elt % 1 == 0 && elt > 0) {\n                sum1 +=\
    \ Math.pow(elt, 2);\n            }\n            if (elt % 1 == 0 && elt < 0) {\n\
    \                sum2 += Math.pow(elt, 2);\n            }\n            if (elt\
    \ % 1 != 0) {\n                sum3 += 0;\n            }\n        }\n        return\
    \ (long)(sum1 - sum2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82syqqkb.java:39)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long x = (long)lst.get(0);\n\
    \        long y = (long)lst.get(lst.size() - 1);\n        return (long)(Math.pow(x\
    \ - y, 2));\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_4cqm3dv.java:24: error: incompatible types: Float cannot be converted\
    \ to long\n        long x = (long)lst.get(0);\n                              ^\n\
    /tmp/tmp_4cqm3dv.java:25: error: incompatible types: Float cannot be converted\
    \ to long\n        long y = (long)lst.get(lst.size() - 1);\n                 \
    \             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        try {\n          \
    \  double avg = lst.stream().mapToDouble(i -> i).average().getAsDouble();\n  \
    \          double sum = lst.stream().mapToDouble(i -> i).sum();\n            return\
    \ (long)((sum - avg) * 2);\n        } catch (Exception ex) {\n            return\
    \ 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5np3ucu.java:31)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (float f : lst) {\n            if (f >= 0 && f % 2 == 1) {\n      \
    \          sum += f * f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010360
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long counter = 0;\n\
    \        if (lst.size() == 0) {\n            return counter;\n        }\n    \
    \    for (Float i : lst) {\n            if (i >= 0 && i % 2 == 1) {\n        \
    \        counter += i * i;\n            }\n        }\n        return counter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long num = 0l;\n \
    \       if (lst.size() > 1) {\n            for (int i = 0; i < lst.size(); i++)\
    \ {\n                if (lst.get(i) == 0)\n                    lst.remove(i);\n\
    \            }\n            num = (long)Math.pow(lst.get(0), 2);\n           \
    \ for (int i = 1; i < lst.size(); i++) {\n                if (lst.get(i) > 0)\n\
    \                    num = num - (long)Math.pow(lst.get(i), 2);\n            }\n\
    \        }\n        return num;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7qctedc.java:37)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        // Insert your code here.\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (lst.get(i) < 0) {\n                continue;\n          \
    \  }\n            if (lst.get(i) % 2 == 0) {\n                continue;\n    \
    \        }\n            result += Math.pow(lst.get(i), 2);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // lst: the given\
    \ array list of numbers.\n        return /*... your code here ...*/;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3yeqq5f3.java:22: error: incompatible types: missing return value\n\
    \        return /*... your code here ...*/;\n        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    Question 2\");\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Question\
    \ 2\n\tat Problem.doubleTheDifference(tmpnd1qjsiz.java:21)\n\tat Problem.main(tmpnd1qjsiz.java:24)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        double sum = 0;\n        for\
    \ (Float x : lst) {\n            if (x.intValue() == x && x >= 0) {\n        \
    \        if (x % 2 == 1) {\n                    sum += x * x;\n              \
    \  }\n            }\n        }\n        return (long) (sum * 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsqti8tx.java:36)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sumOfSquaresOfOddNumbers\
    \ = 0;\n        // write your code here\n        return sumOfSquaresOfOddNumbers;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fco_6km.java:27)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // Replace the following\
    \ line with your answer.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdgzh0ag.java:26)\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new Error(\"\
    Not Implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.Error: Not Implemented\n\tat Problem.doubleTheDifference(tmpptbd0aa3.java:21)\n\
    \tat Problem.main(tmpptbd0aa3.java:24)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n      long sum = 0;\n    \
    \  for (int i = 0; i < lst.size(); i++) {\n        if ((lst.get(i) % 2) == 1 &&\
    \ lst.get(i) >= 0) {\n          sum += Math.pow(lst.get(i), 2);\n        }\n \
    \     }\n      return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (lst.stream().filter(x\
    \ -> x == 0f || Math.floor(x) != x || x < 0f).count() == lst.size()) ? 0l : lst.stream().filter(x\
    \ -> x != 0f && Math.floor(x) == x && x > 0f).map(x -> x.intValue()).reduce((x,\
    \ y) -> x + y).get() * 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7v79e9pe.java:25)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum1 = 0;\n \
    \       long sum2 = 0;\n        long sum = 0;\n        int i = 0;\n        while\
    \ (i < lst.size()) {\n            if (lst.get(i) % 2 == 0) {\n               \
    \ sum1 += lst.get(i) * lst.get(i);\n            } else {\n                sum2\
    \ += lst.get(i) * lst.get(i);\n            }\n            i += 1;\n        }\n\
    \        sum = sum1 - sum2;\n        sum = sum * 2;\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3yeqz2w_.java:39)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    delete this line and implement your code here!\");\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: delete\
    \ this line and implement your code here!\n\tat Problem.doubleTheDifference(tmp4caf8w59.java:21)\n\
    \tat Problem.main(tmp4caf8w59.java:24)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // Write your code\
    \ here.\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5y2b7_xx.java:26)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result;\n   \
    \     long temp = (long)0l;\n        for (Float a : lst) {\n            if (a\
    \ % (long)2l == (long)1l && a > (long)0l) {\n                temp += (long)Math.pow(a,\
    \ (long)2l);\n            }\n        }\n        result = temp;\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        {\n            long\
    \ var_1_out = 0l;\n            {\n                for (Float var_1 : lst) {\n\
    \                    {\n                        var_1_out = (var_1_out + (var_1\
    \ * var_1));\n                    }\n                }\n            }\n      \
    \      return var_1_out;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp56sw55sb.java:26: error: incompatible types: possible lossy conversion\
    \ from float to long\n                        var_1_out = (var_1_out + (var_1\
    \ * var_1));\n                                               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long oddSquares =\
    \ 0;\n        for (Float f : lst) {\n            if ((f % 2) == 1 && (f >= 0))\
    \ {\n                oddSquares += (f * f);\n            }\n        }\n      \
    \  return oddSquares;\n    }\n    public static void main(String[] args) {\n \
    \   assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = (long)0l;\n\
    \        long sumOfOdds = (long)0l;\n        for (Float element : lst) {\n   \
    \         if (element % (long)2l == (long)1l && element >= (long)0l) {\n     \
    \           sumOfOdds += element;\n            }\n            sum += element;\n\
    \        }\n        return sum - sumOfOdds;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkkdztf55.java:33)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        ArrayList<Float> filtered\
    \ = new ArrayList<Float>();\n        for (Float elem : lst) {\n            if\
    \ ((Math.abs(elem) - (double)Math.abs(elem)) == 0.0) {\n                filtered.add(elem);\n\
    \            }\n        }\n        long tot = 0;\n        for (Float elem : filtered)\
    \ {\n            if (elem % 2 != 0) {\n                tot += elem * elem;\n \
    \           }\n        }\n        return tot;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpode00hhw.java:40)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sumOfSquaresOfOddNumbers\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 1) {\n            if (lst.get(i)\
    \ % 2 == 1) {\n                sumOfSquaresOfOddNumbers += Math.pow(lst.get(i),\
    \ 2);\n            }\n        }\n        return 2 * sumOfSquaresOfOddNumbers;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu5zsz50n.java:31)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n\t// Insert your code here\n\
    \treturn 0l;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2p6cwqoo.java:26)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (((long)f) % 2 == 1) {\n        \
    \        sum += f * f;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjrl42j_v.java:23: error: incompatible types: Float cannot be converted\
    \ to long\n            if (((long)f) % 2 == 1) {\n                       ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return ((Stream<Float>)lst.stream()).filter(x\
    \ -> new Boolean((((x.intValue()) % (2)) != (0)))).map(x -> x.doubleValue()).map(x\
    \ -> x.doubleValue()).mapToDouble(x -> x).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpff9qevkt.java:21: warning: [removal] Boolean(boolean) in Boolean\
    \ has been deprecated and marked for removal\n        return ((Stream<Float>)lst.stream()).filter(x\
    \ -> new Boolean((((x.intValue()) % (2)) != (0)))).map(x -> x.doubleValue()).map(x\
    \ -> x.doubleValue()).mapToDouble(x -> x).sum();\n                           \
    \                              ^\n/tmp/tmpff9qevkt.java:21: error: incompatible\
    \ types: possible lossy conversion from double to long\n        return ((Stream<Float>)lst.stream()).filter(x\
    \ -> new Boolean((((x.intValue()) % (2)) != (0)))).map(x -> x.doubleValue()).map(x\
    \ -> x.doubleValue()).mapToDouble(x -> x).sum();\n                           \
    \                                                                            \
    \                                                                           ^\n\
    1 error\n1 warning\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0 && f % 1 == 0 && f % 2 ==\
    \ 1) {\n                sum += f * f;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 1l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp45n1o_64.java:24)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        for (Float i : lst) {\n            if (i % 2 != 0 && i >= 0) {\n    \
    \            result += i * i;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new UnsupportedOperationException(\"\
    Problem: doubleTheDifference(ArrayList<Float> lst)\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem:\
    \ doubleTheDifference(ArrayList<Float> lst)\n\tat Problem.doubleTheDifference(tmpkn2pujpj.java:21)\n\
    \tat Problem.main(tmpkn2pujpj.java:24)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n\tif(lst.size() == 0) {\n\t\
    \    return 0;\n\t}\n\telse {\n\t    long sum = 0;\n\t    for(int i = 0; i < lst.size();\
    \ i++) {\n\t\tif(Math.abs(lst.get(i) % 2) == 1 && lst.get(i) >= 0) {\n\t\t   \
    \ sum += Math.pow(lst.get(i), 2);\n\t\t}\n\t    }\n\t    return sum;\n\t}\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        BigInteger sum = BigInteger.valueOf(0);\n\
    \        BigInteger sqrd;\n        for (Float x : lst) {\n            if (x.intValue()\
    \ > 0 && x.intValue() % 2 == 1) {\n                sqrd = BigInteger.valueOf(x.intValue()).pow(2);\n\
    \                sum = sum.add(sqrd);\n            }\n        }\n        return\
    \ sum.longValue();\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010361
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // Implement me!\n\
    \        long product = 1;\n        long sum = 0;\n        for (float v : lst)\
    \ {\n            if (v >= 0 && (float) (int) v == v) {\n                if (v\
    \ % 2 == 1) {\n                    product *= v;\n                } else {\n \
    \                   sum += v;\n                }\n            }\n        }\n \
    \       return (product - sum) * 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpysyju3cq.java:36)\n"
  stdout: ''
  timestamp: 1660010361
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long ans = 0;\n  \
    \      for (float i : lst) {\n            if (i >= 0 && i % 2 == 1) {\n      \
    \          ans += i * i;\n            }\n        }\n        return ans;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        long result = 0;\n        for\
    \ (Float item : lst) {\n            if ((item > 0) && (item % 2 == 1)) {\n   \
    \             result += item * item;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf23pbz_q.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long count = 0;\n\
    \        long i = 0;\n        while (i < lst.size()) {\n            long item\
    \ = (long) lst.get((int) i);\n            if ((item > 0) && (item % 2 == 1)) {\n\
    \                count = count + (item * item);\n            }\n            i\
    \ = i + 1;\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpou9uqelp.java:24: error: incompatible types: Float cannot be converted\
    \ to long\n            long item = (long) lst.get((int) i);\n                \
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)IntStream.range(0,\
    \ lst.size()).mapToObj(x -> lst.get(x)).filter(x -> (x % 2 == 1)).mapToDouble(x\
    \ -> x * x).sum();\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            if ((lst.get(i) % 1)\
    \ == 0 && lst.get(i) > 0) {\n                sum += lst.get(i) * lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1zps_4gn.java:31)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(f\
    \ -> f > 0 && f % 1 == 0).filter(f -> f % 2 == 1).map(f -> f * f).reduce(0l, (a,\
    \ b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp909xdell.java:21: error: no suitable method found for reduce(long,(a,b)->a\
    \ + b)\n        return lst.stream().filter(f -> f > 0 && f % 1 == 0).filter(f\
    \ -> f % 2 == 1).map(f -> f * f).reduce(0l, (a, b) -> a + b);\n              \
    \                                                                            \
    \          ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not applicable\n\
    \      (argument mismatch; long cannot be converted to Float)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Float,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long res = 0l;\n \
    \       for (Float n : lst) {\n            if ((n >= 0f) && (n == Math.floor(n)))\
    \ {\n                long val = Math.round(n);\n                if (val % 2 ==\
    \ 1) {\n                    res += (val * val);\n                }\n         \
    \   }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long i = 0l;\n   \
    \     long j = 0l;\n        long k = 0l;\n        long __return = 0l;\n      \
    \  while (((((i) < (lst.size()))) && (((lst.get(i)) >= (0f))))) {\n          \
    \  {\n                float __tmp_var1 = (lst.get(i));\n                if (((__tmp_var1)\
    \ == ((float)(long)__tmp_var1))) {\n                    k = (long)__tmp_var1;\n\
    \                }\n            }\n            if (((k) % (2l))) {\n         \
    \       j = (j) + ((k) * (k));\n            }\n            i = (i) + (1l);\n \
    \       }\n        __return = j;\n        return __return;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3u4nt3q.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        while (((((i) < (lst.size()))) && (((lst.get(i)) >=\
    \ (0f))))) {\n                                                     ^\n/tmp/tmpr3u4nt3q.java:27:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \            float __tmp_var1 = (lst.get(i));\n                              \
    \              ^\n/tmp/tmpr3u4nt3q.java:32: error: incompatible types: long cannot\
    \ be converted to boolean\n            if (((k) % (2l))) {\n                 \
    \    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // >>> Solution\n\
    \        long sumOddSquare = lst.stream().map(x -> (long) Math.pow(x, 2))\n  \
    \                           .filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x +\
    \ y);\n        return sumOddSquare;\n        // <<< Solution\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxym4nmv.java:32)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().reduce(0l,\
    \ (acc, elem) -> {\n            if (((elem > 0) && (elem == Math.floor(elem)))\
    \ && ((elem % 2) != 0)) {\n                return acc + (long)(elem * elem);\n\
    \            } else {\n                return acc;\n            }\n        },\
    \ (acc, val) -> {\n            if (((val > 0) && (val == Math.floor(val))) &&\
    \ ((val % 2) != 0)) {\n                return acc + (long)(val * val);\n     \
    \       } else {\n                return acc;\n            }\n        });\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        ArrayList<Float> oddSquares\
    \ = new ArrayList<Float>();\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if ((i % 2 == 1) && (lst.get(i) % 1 == 0)) {\n                oddSquares.add((float)Math.pow(lst.get(i),\
    \ 2));\n            }\n        }\n        return oddSquares.stream().mapToLong(x\
    \ -> (long)x).sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3a2d3ilg.java:27: error: incompatible types: Float cannot be converted\
    \ to long\n        return oddSquares.stream().mapToLong(x -> (long)x).sum();\n\
    \                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)lst.stream().mapToDouble(x\
    \ -> Math.pow(x, 2)).filter(x -> x % 2 == 1).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jcjmbyg.java:28)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // Your code goes\
    \ here.\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk9mukfy.java:26)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        double sum1 = 0;\n\
    \        double sum2 = 0;\n        for (Float x : lst) {\n            if (x %\
    \ 2 == 0) {\n                sum1 += x * x;\n            } else {\n          \
    \      sum2 += x * x;\n            }\n        }\n        return (long) (2 * sum2\
    \ - sum1);\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx5wqjur.java:34)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // REPLACE THIS LINE\
    \ WITH YOUR CODE\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqgrjc899.java:26)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        for (float item : lst) {\n            long itemAsInt = Math.round(item);\n\
    \            if (itemAsInt % 2 == 1 && itemAsInt >= 0) {\n                result\
    \ += itemAsInt * itemAsInt;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new Error(\"\
    Not yet implemented.\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.Error: Not yet implemented.\n\t\
    at Problem.doubleTheDifference(tmp669_dznt.java:21)\n\tat Problem.main(tmp669_dznt.java:24)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(x\
    \ -> (int)x % 2 == 1 && x >= 0).map(x -> x * x).reduce(0L, (a, b) -> a + b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqud1k7gi.java:21: error: incompatible types: Float cannot be converted\
    \ to int\n        return lst.stream().filter(x -> (int)x % 2 == 1 && x >= 0).map(x\
    \ -> x * x).reduce(0L, (a, b) -> a + b);\n                                   \
    \          ^\n/tmp/tmpqud1k7gi.java:21: error: no suitable method found for reduce(long,(a,b)->a\
    \ + b)\n        return lst.stream().filter(x -> (int)x % 2 == 1 && x >= 0).map(x\
    \ -> x * x).reduce(0L, (a, b) -> a + b);\n                                   \
    \                                               ^\n    method Stream.reduce(Float,BinaryOperator<Float>)\
    \ is not applicable\n      (argument mismatch; long cannot be converted to Float)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Float,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float num : lst) {\n            if (num > 0 && num == Math.floor(num))\
    \ {\n                sum += Math.pow(num, 2);\n            }\n        }\n    \
    \    return 2 * sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3gf52fi.java:31)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().mapToLong(n\
    \ -> (long) (Math.pow(n, 2))).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpusfeeopq.java:25)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().mapToLong(v\
    \ -> {\n            if (v % 2 == 0) {\n                return 0l;\n          \
    \  }\n            return Math.round(Math.pow(v, 2));\n        }).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kh5potb.java:33)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long ret = 0;\n  \
    \      for (Float i : lst) {\n            if ((int)i % 2 == 1) {\n           \
    \     ret += i * i;\n            }\n        }\n        return ret;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpme_kvt7s.java:23: error: incompatible types: Float cannot be converted\
    \ to int\n            if ((int)i % 2 == 1) {\n                     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long ans = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            float x = lst.get(i);\n\
    \            if (x % 1 == 0 && x > 0) {\n                ans += Math.pow(x, 2);\n\
    \            }\n        }\n        return ans;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpokmuq669.java:32)\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() > 0)\
    \ {\n            return (long)lst.stream().filter(n -> n > 0).filter(n -> n %\
    \ 2 == 1).map(n -> n * n).reduce((n1, n2) -> n1 + n2).get();\n        } else {\n\
    \            return 0;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpptmbesbm.java:22: error: incompatible types: Float cannot be converted\
    \ to long\n            return (long)lst.stream().filter(n -> n > 0).filter(n ->\
    \ n % 2 == 1).map(n -> n * n).reduce((n1, n2) -> n1 + n2).get();\n           \
    \                                                                            \
    \                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf23pbz_q.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long r = 0l;\n   \
    \     for (Float x : lst) {\n            if (x.intValue() > 0 && x.intValue()\
    \ % 2 == 1) {\n                r += x.intValue() * x.intValue();\n           \
    \ }\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010364
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        for (Float x : lst) {\n            if (x > 0 && x % 2 == 1) {\n     \
    \           result += x * x;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        LongBiFunction<Long>\
    \ sumOfSquaresOfOddNumbers = (acc, next) -> {\n            return !next.equals(0l)\
    \ && next % 2 == 1 ? acc + (long)Math.pow(next, 2) : acc;\n        };\n      \
    \  return lst.stream().reduce(0l, sumOfSquaresOfOddNumbers, (acc, next) -> acc\
    \ + next);\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt3hwk4r2.java:21: error: cannot find symbol\n        LongBiFunction<Long>\
    \ sumOfSquaresOfOddNumbers = (acc, next) -> {\n        ^\n  symbol:   class LongBiFunction\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)lst.stream().filter(x\
    \ -> (x >= 0 && x % 2 == 1)).map(x -> x * x).reduce(0.0f, (x, y) -> x + y);\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps4bqi4wa.java:21: error: incompatible types: Float cannot be converted\
    \ to long\n        return (long)lst.stream().filter(x -> (x >= 0 && x % 2 == 1)).map(x\
    \ -> x * x).reduce(0.0f, (x, y) -> x + y);\n                                 \
    \                                                           ^\n1 error\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // your code here\n\
    \        return 0l;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt7d43ck.java:26)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        // *** Your code goes\
    \ here ***\n        throw new UnsupportedOperationException(\"Not implemented\
    \ yet.\");\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet.\n\tat Problem.doubleTheDifference(tmpk3niofoo.java:22)\n\t\
    at Problem.main(tmpk3niofoo.java:25)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new RuntimeException(\"\
    Not implemented.\");\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented.\n\
    \tat Problem.doubleTheDifference(tmpawc18feh.java:21)\n\tat Problem.main(tmpawc18feh.java:24)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (1l);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5fsdz23.java:24)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf23pbz_q.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        throw new RuntimeException(\"\
    Not implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.doubleTheDifference(tmph0vne955.java:21)\n\tat Problem.main(tmph0vne955.java:24)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long)0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf23pbz_q.java:25)\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        /* write your code\
    \ here */\n        long sum = 0;\n        for (Float f : lst) {\n            if\
    \ ((f > 0) && (f.intValue() == f)) {\n                if (f.intValue() % 2 ==\
    \ 1) {\n                    sum += f * f;\n                }\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return ((long)lst.stream().filter(x\
    \ -> ( x >= 0 && ((double)(x) % (double)(1l) == (double)(0l)) )).map(x -> ( x\
    \ * x )).reduce((x, y) -> ( x + y )).orElse((long)0l)) - ((long)lst.stream().filter(x\
    \ -> ( x < 0 && ((double)(x) % (double)(1l) == (double)(0l)) )).map(x -> ( x *\
    \ x )).reduce((x, y) -> ( x + y )).orElse((long)0l));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkccmxnky.java:21: error: incompatible types: long cannot be converted\
    \ to Float\n        return ((long)lst.stream().filter(x -> ( x >= 0 && ((double)(x)\
    \ % (double)(1l) == (double)(0l)) )).map(x -> ( x * x )).reduce((x, y) -> ( x\
    \ + y )).orElse((long)0l)) - ((long)lst.stream().filter(x -> ( x < 0 && ((double)(x)\
    \ % (double)(1l) == (double)(0l)) )).map(x -> ( x * x )).reduce((x, y) -> ( x\
    \ + y )).orElse((long)0l));\n                                                \
    \                                                                            \
    \                                      ^\n/tmp/tmpkccmxnky.java:21: error: incompatible\
    \ types: long cannot be converted to Float\n        return ((long)lst.stream().filter(x\
    \ -> ( x >= 0 && ((double)(x) % (double)(1l) == (double)(0l)) )).map(x -> ( x\
    \ * x )).reduce((x, y) -> ( x + y )).orElse((long)0l)) - ((long)lst.stream().filter(x\
    \ -> ( x < 0 && ((double)(x) % (double)(1l) == (double)(0l)) )).map(x -> ( x *\
    \ x )).reduce((x, y) -> ( x + y )).orElse((long)0l));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                       ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n2 errors\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if(lst.size() == 0) {\n            return 0;\n        }\n        long max_odd\
    \ = 0;\n        long min_odd = 0;\n        boolean min_set = false;\n        boolean\
    \ max_set = false;\n        for(Float f : lst) {\n            if(f == 0) {\n \
    \               continue;\n            }\n            if(f % 1 != 0) {\n     \
    \           continue;\n            }\n            if(f < 0) {\n              \
    \  continue;\n            }\n            long num = f.longValue();\n         \
    \   if(num % 2 == 0) {\n                continue;\n            }\n           \
    \ if(!min_set) {\n                min_odd = num;\n                min_set = true;\n\
    \            }\n            if(num > max_odd) {\n                max_odd = num;\n\
    \            }\n            if(num < min_odd) {\n                min_odd = num;\n\
    \            }\n        }\n        return (long)(2 * (Math.pow(max_odd, 2) - Math.pow(min_odd,\
    \ 2)));\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5tbkvn0.java:58)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        else {\n            DoubleStream\
    \ strm = lst.stream().filter(x -> x % 2 == 1 && x >= 0).mapToDouble(x -> x * x);\n\
    \            return strm.sum();\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmbosnfz7.java:26: error: incompatible types: possible lossy conversion\
    \ from double to long\n            return strm.sum();\n                      \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgtx0sp3.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return -1l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoceeotza.java:24)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (int i = 0; i < lst.size(); i++) {\n            float el = lst.get(i);\n\
    \            if (el % 2 == 1 && (long)el == el) {\n                sum += el *\
    \ el;\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return Long.parseLong(\"\
    0\");\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wln1x5l.java:25)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return lst.stream().filter(item\
    \ -> item % 2 != 0).reduce(0l, (item, acc) -> (long)(acc + item * item));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6ay7c95y.java:21: error: no suitable method found for reduce(long,(item,acc)[...]item))\n\
    \        return lst.stream().filter(item -> item % 2 != 0).reduce(0l, (item, acc)\
    \ -> (long)(acc + item * item));\n                                           \
    \              ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not\
    \ applicable\n      (argument mismatch; long cannot be converted to Float)\n \
    \   method Stream.<U>reduce(U,BiFunction<U,? super Float,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      long count = 0;\n        for (Float value : lst) {\n            if ((value\
    \ % 2) == 0) {\n                count = count + value;\n            } else {\n\
    \                sum = sum + value;\n            }\n        }\n        return\
    \ (sum - count) * 2;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpurp09fic.java:25: error: incompatible types: possible lossy conversion\
    \ from float to long\n                count = count + value;\n               \
    \               ^\n/tmp/tmpurp09fic.java:27: error: incompatible types: possible\
    \ lossy conversion from float to long\n                sum = sum + value;\n  \
    \                        ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0;\n\
    \        int size = lst.size();\n        boolean isOdd = false;\n        int i\
    \ = 0;\n        while (i < size) {\n            if (isOdd) {\n               \
    \ float f = lst.get(i);\n                float f_squared = f * f;\n          \
    \      if (f_squared > 0) {\n                    result += f_squared;\n      \
    \          }\n            }\n            isOdd = !isOdd;\n            i = i +\
    \ 1;\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubx9c3ft.java:40)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            try {\n                if (f > 0 &&\
    \ f == (float)(int)f) {\n                    long f2 = f * f;\n              \
    \      if (f2 % 2 != 0) {\n                        sum += f2;\n              \
    \      }\n                }\n            } catch (Exception e) {\n           \
    \     continue;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv456u433.java:24: error: incompatible types: Float cannot be converted\
    \ to int\n                if (f > 0 && f == (float)(int)f) {\n               \
    \                               ^\n/tmp/tmpv456u433.java:25: error: incompatible\
    \ types: possible lossy conversion from float to long\n                    long\
    \ f2 = f * f;\n                                ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (lst.stream().filter(val\
    \ -> val >= 0 && val % 1 == 0).mapToLong(val -> (long) Math.pow(val, 2)).sum());\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqy60613.java:25)\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1gmilv2.java:25)\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long result = 0l;\n\
    \        // BEGIN SOLUTION\n        boolean isOdd = true;\n        for (Float\
    \ a : lst) {\n            if (a.intValue() > 0 && a.intValue() % 2 == 1) {\n \
    \               result += a * a;\n            }\n        }\n        // END SOLUTION\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n\t\n\t\treturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgt6wqla6.java:26)\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long val = 0;\n  \
    \      if (lst.size() > 0) {\n            long squareOfFirstNumber = (long)Math.pow(lst.get(0),\
    \ 2);\n            long squareOfLastNumber = (long)Math.pow(lst.get(lst.size()\
    \ - 1), 2);\n            long result = Math.abs(squareOfFirstNumber - squareOfLastNumber);\n\
    \            val = result * 2;\n        }\n        return val;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6421plm9.java:32)\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (float f : lst) {\n            if ((f > 0) && (f % 1 == 0) && (f %\
    \ 2 == 1)) {\n                sum += f * f;\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        return (long) StreamSupport.stream(lst.spliterator(),\
    \ false).filter(x -> Integer.class.isInstance(x)).filter(x -> x % 2 == 1).map(x\
    \ -> x*x).reduce(0l, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpewe44ngy.java:21: error: no suitable method found for reduce(long,(x,y)->x\
    \ + y)\n        return (long) StreamSupport.stream(lst.spliterator(), false).filter(x\
    \ -> Integer.class.isInstance(x)).filter(x -> x % 2 == 1).map(x -> x*x).reduce(0l,\
    \ (x, y) -> x + y);\n                                                        \
    \                                                                            \
    \               ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not\
    \ applicable\n      (argument mismatch; long cannot be converted to Float)\n \
    \   method Stream.<U>reduce(U,BiFunction<U,? super Float,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        double sum = 0.0;\n\
    \        for (Float x : lst) {\n            if ((x % 2) == 1) {\n            \
    \    sum += (x * x);\n            }\n        }\n        return (long) sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010365
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long num = 0l;\n \
    \       for (float x : lst) {\n            if ((x > (long)0l) && (x % (long)2l\
    \ == (long)1l)) {\n                num += x * x;\n            }\n        }\n \
    \       return num;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010365

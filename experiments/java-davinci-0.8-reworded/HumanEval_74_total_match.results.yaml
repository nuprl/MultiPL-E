language: java
name: HumanEval_74_total_match
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return new ArrayList<String>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotcyzbgq.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String s : lst1) {\n            total1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 < total2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg49i1r7p.java:45)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> lst3 = new ArrayList<String>();\n\
    \        // your code here\n        return lst3;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu43tr0f1.java:30)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String s : lst1) {\n            sum1 += s.length();\n        }\n \
    \       for (String s : lst2) {\n            sum2 += s.length();\n        }\n\
    \        if (sum1 <= sum2) {\n            return lst1;\n        } else {\n   \
    \         return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        long total1 = lst1.stream().mapToInt(s ->\
    \ s.length()).sum();\n        long total2 = lst2.stream().mapToInt(s -> s.length()).sum();\n\
    \        return total1 < total2 ? lst1 : lst2;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqd25oc0z.java:35)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if(lst1.size() == 0) {\n            return\
    \ lst1;\n        }\n        if(lst2.size() == 0) {\n            return lst2;\n\
    \        }\n        if(lst1.size() == lst2.size()) {\n            return lst1;\n\
    \        }\n        int total1 = 0;\n        int total2 = 0;\n        for(String\
    \ item : lst1) {\n            total1 += item.length();\n        }\n        for(String\
    \ item : lst2) {\n            total2 += item.length();\n        }\n        if(total1\
    \ < total2) {\n            return lst1;\n        }\n        else {\n         \
    \   return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbepqv8cr.java:50)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int totalChars1 = lst1.stream().mapToInt(String::length).sum();\n\
    \        int totalChars2 = lst2.stream().mapToInt(String::length).sum();\n   \
    \     if (totalChars1 == totalChars2) {\n            return lst1;\n        } else\
    \ if (totalChars1 < totalChars2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Enter code here\n        return lst1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp831qzbst.java:29)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        \n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpe2zv6odu.java:28)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int totalCharCountOfLst1 = 0;\n        int\
    \ totalCharCountOfLst2 = 0;\n        for (String eachString : lst1) {\n      \
    \      totalCharCountOfLst1 += eachString.length();\n        }\n        for (String\
    \ eachString : lst2) {\n            totalCharCountOfLst2 += eachString.length();\n\
    \        }\n        if (totalCharCountOfLst1 < totalCharCountOfLst2) {\n     \
    \       return lst1;\n        } else {\n            return lst2;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxikn6dtr.java:45)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = lst1.stream().reduce(0, (a,\
    \ s) -> a + s.length(), (a, b) -> a + b);\n        int total2 = lst2.stream().reduce(0,\
    \ (a, s) -> a + s.length(), (a, b) -> a + b);\n        return total1 <= total2\
    \ ? lst1 : lst2;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return (lst1.stream().map(s -> s.length()).reduce(0,\
    \ (a, b) -> a + b) < lst2.stream().map(s -> s.length()).reduce(0, (a, b) -> a\
    \ + b)) ? lst1 : lst2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d0v81pf.java:33)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return lst1;\n        } else if (lst1.size() == 0) {\n      \
    \      return lst2;\n        } else if (lst2.size() == 0) {\n            return\
    \ lst1;\n        } else {\n            int total = 0;\n            int total2\
    \ = 0;\n            for (String item : lst1) {\n                total += item.length();\n\
    \            }\n            for (String item : lst2) {\n                total2\
    \ += item.length();\n            }\n            if (total < total2) {\n      \
    \          return lst1;\n            } else if (total > total2) {\n          \
    \      return lst2;\n            } else {\n                return lst1;\n    \
    \        }\n        }\n    }\n    public static void main(String[] args) {\n \
    \   assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiggxiyp2.java:56)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Your code here\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpsy8c6r0b.java:28)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = lst1.stream().mapToInt(s ->\
    \ s.length()).sum();\n        int total2 = lst2.stream().mapToInt(s -> s.length()).sum();\n\
    \        if (total1 == total2) return lst1;\n        return total1 < total2 ?\
    \ lst1 : lst2;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return lst1;\n        }\n        if (lst1.size() == 0) {\n  \
    \          return lst2;\n        }\n        if (lst2.size() == 0) {\n        \
    \    return lst1;\n        }\n        long total1 = 0;\n        long total2 =\
    \ 0;\n        for (String s : lst1) {\n            total1 += s.length();\n   \
    \     }\n        for (String s : lst2) {\n            total2 += s.length();\n\
    \        }\n        if (total1 < total2) {\n            return lst1;\n       \
    \ }\n        if (total2 < total1) {\n            return lst2;\n        }\n   \
    \     return lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyx16xcjm.java:57)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Length = 0;\n        int lst2Length\
    \ = 0;\n        for (String string : lst1) {\n            lst1Length += string.length();\n\
    \        }\n        for (String string : lst2) {\n            lst2Length += string.length();\n\
    \        }\n        if (lst1Length == lst2Length) {\n            return lst1;\n\
    \        } else if (lst1Length < lst2Length) {\n            return lst1;\n   \
    \     } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String s: lst1) {\n            sum1 += s.length();\n        }\n  \
    \      for (String s: lst2) {\n            sum2 += s.length();\n        }\n  \
    \      if (sum1 == sum2) {\n            return lst1;\n        }\n        if (sum1\
    \ < sum2) {\n            return lst1;\n        }\n        return lst2;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Helpers.println(Helpers.toString(lst1));\n\
    \        // Helpers.println(Helpers.toString(lst2));\n        int lst1Total =\
    \ 0;\n        int lst2Total = 0;\n        for (String s : lst1) {\n          \
    \  lst1Total += s.length();\n        }\n        for (String s : lst2) {\n    \
    \        lst2Total += s.length();\n        }\n        if (lst1Total < lst2Total)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6_xo_yi.java:47)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1TotalChars = 0;\n        int lst2TotalChars\
    \ = 0;\n        for (String s : lst1) {\n            lst1TotalChars += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2TotalChars += s.length();\n\
    \        }\n        if (lst1TotalChars == lst2TotalChars) {\n            return\
    \ lst1;\n        } else if (lst1TotalChars < lst2TotalChars) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Size = lst1.stream().reduce(0, (a,\
    \ b) -> a + b.length(), (a, b) -> a + b);\n        int lst2Size = lst2.stream().reduce(0,\
    \ (a, b) -> a + b.length(), (a, b) -> a + b);\n        if (lst1Size == lst2Size)\
    \ {\n            return lst1;\n        } else if (lst1Size < lst2Size) {\n   \
    \         return lst1;\n        } else {\n            return lst2;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int c1 = lst1.stream().mapToInt(s -> s.length()).sum();\n\
    \        int c2 = lst2.stream().mapToInt(s -> s.length()).sum();\n        return\
    \ c1 > c2 ? lst2 : c1 < c2 ? lst1 : lst1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String s : lst1) {\n            total1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 < total2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg49i1r7p.java:45)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        int i = 0;\n        while (i < lst1.size()) {\n            total1 +=\
    \ lst1.get(i).length();\n            i += 1;\n        }\n        i = 0;\n    \
    \    while (i < lst2.size()) {\n            total2 += lst2.get(i).length();\n\
    \            i += 1;\n        }\n        if (total1 <= total2) {\n           \
    \ return lst1;\n        } else {\n            return lst2;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // *** your code here ***\n        int sum1\
    \ = lst1.stream().mapToInt(String::length).sum();\n        int sum2 = lst2.stream().mapToInt(String::length).sum();\n\
    \        if (sum1 == sum2) {\n            return lst1;\n        } else if (sum1\
    \ < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return new ArrayList<String>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotcyzbgq.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return (lst1.size() == lst2.size()) ? lst1\
    \ : (lst1.size() < lst2.size()) ? lst1 : lst2;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp9giocdo.java:28)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Your code goes here!\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzhgwga06.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        String k;\n        String v;\n        String\
    \ lst11;\n        String lst22;\n        ArrayList<String> lst12;\n        ArrayList<String>\
    \ lst21;\n        k = (String)\"\";\n        v = (String)\"\";\n        lst11\
    \ = (String)\"\";\n        lst22 = (String)\"\";\n        lst12 = new ArrayList<String>();\n\
    \        lst21 = new ArrayList<String>();\n        for (int i = 0; i < lst1.size();\
    \ i++) {\n            lst11 = lst1.get(i);\n            lst12.add(lst11);\n  \
    \      }\n        for (int i = 0; i < lst2.size(); i++) {\n            lst22 =\
    \ lst2.get(i);\n            lst21.add(lst22);\n        }\n        int a = 0;\n\
    \        int b = 0;\n        for (int i = 0; i < lst12.size(); i++) {\n      \
    \      k = lst12.get(i);\n            a = a + k.length();\n        }\n       \
    \ for (int i = 0; i < lst21.size(); i++) {\n            v = lst21.get(i);\n  \
    \          b = b + v.length();\n        }\n        if (a > b) {\n            return\
    \ lst2;\n        } else {\n            return lst1;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int total1 = 0;\n        int total2 = 0;\n        // get the totals\n\
    \        for (String string: lst1) {\n            total1 += string.length();\n\
    \        }\n        for (String string: lst2) {\n            total2 += string.length();\n\
    \        }\n        // return the one with the lowest total\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else if (total2 < total1) {\n\
    \            return lst2;\n        } else {\n            return lst1;\n      \
    \  }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int x = 0;\n        int y = 0;\n        for\
    \ (String s: lst1) {\n            x += s.length();\n        }\n        for (String\
    \ s: lst2) {\n            y += s.length();\n        }\n        if (x > y) {\n\
    \            return lst2;\n        } else {\n            return lst1;\n      \
    \  }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // your code here\n        ArrayList<String>\
    \ res = new ArrayList<String>();\n        int sum1 = 0;\n        int sum2 = 0;\n\
    \        for (String s: lst1) {\n            sum1 += s.length();\n        }\n\
    \        for (String s: lst2) {\n            sum2 += s.length();\n        }\n\
    \        return sum1 < sum2 ? lst1 : sum1 > sum2 ? lst2 : lst1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return new ArrayList<String>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotcyzbgq.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Given two array lists lst1 and lst2, return\
    \ the array list that has the total number\n        // of chars in the strings\
    \ of the array list less than the other array list. \n        // If the two array\
    \ lists have the same number of chars, return the first array list.\n        int\
    \ total1 = 0;\n        int total2 = 0;\n        int i = 0;\n        while (i <\
    \ lst1.size()) {\n            total1 = total1 + lst1.get(i).length();\n      \
    \      i = i + 1;\n        }\n        i = 0;\n        while (i < lst2.size())\
    \ {\n            total2 = total2 + lst2.get(i).length();\n            i = i +\
    \ 1;\n        }\n        if (total1 <= total2) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        System.out.println(\"Expected: \" + \"[]\"\
    );\n        System.out.println(\"Actual: \" + lst1);\n        System.out.println(\"\
    Expected: \" + \"[hi, admin]\");\n        System.out.println(\"Actual: \" + lst2);\n\
    \        System.out.println(\"Expected: \" + \"[hI, hi, hi]\");\n        System.out.println(\"\
    Actual: \" + lst1);\n        System.out.println(\"Expected: \" + \"[1, 2, 3, 4,\
    \ 5]\");\n        System.out.println(\"Actual: \" + lst2);\n        return lst1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuvou_3b.java:36)\n"
  stdout: 'Expected: []

    Actual: []

    Expected: [hi, admin]

    Actual: []

    Expected: [hI, hi, hi]

    Actual: []

    Expected: [1, 2, 3, 4, 5]

    Actual: []

    Expected: []

    Actual: [hi, admin]

    Expected: [hi, admin]

    Actual: [hi, hi]

    Expected: [hI, hi, hi]

    Actual: [hi, admin]

    Expected: [1, 2, 3, 4, 5]

    Actual: [hi, hi]

    '
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0) return lst1;\n    \
    \    if (lst2.size() == 0) return lst2;\n        int total1 = lst1.stream().mapToInt(s\
    \ -> s.length()).sum();\n        int total2 = lst2.stream().mapToInt(s -> s.length()).sum();\n\
    \        if (total1 < total2) return lst1;\n        else if (total2 < total1)\
    \ return lst2;\n        else return lst1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // todo\n        return new ArrayList<String>();\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3j4yvai.java:29)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n\
    \        for (String item : lst1) {\n            count1 += item.length();\n  \
    \      }\n        for (String item : lst2) {\n            count2 += item.length();\n\
    \        }\n        if (count1 < count2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp69m3ft49.java:45)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String s : lst1) {\n            sum1 += s.length();\n        }\n \
    \       for (String s : lst2) {\n            sum2 += s.length();\n        }\n\
    \        if (sum1 == sum2) {\n            return lst1;\n        } else if (sum1\
    \ < sum2) {\n            return lst1;\n        } else {\n            return lst2;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // write your code here\n        int len1\
    \ = 0;\n        int len2 = 0;\n        int len1len = lst1.size();\n        int\
    \ len2len = lst2.size();\n        for (int i = 0; i < len1len; i++) {\n      \
    \      len1 += lst1.get(i).length();\n        }\n        for (int i = 0; i < len2len;\
    \ i++) {\n            len2 += lst2.get(i).length();\n        }\n        if (len1\
    \ == len2) {\n            return lst1;\n        }\n        else if (len1 < len2)\
    \ {\n            return lst1;\n        }\n        else {\n            return lst2;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = lst1.stream().mapToInt(s ->\
    \ s.length()).sum();\n        int total2 = lst2.stream().mapToInt(s -> s.length()).sum();\n\
    \        if (total1 == total2) {\n            return lst1;\n        } else if\
    \ (total1 < total2) {\n            return lst1;\n        } else {\n          \
    \  return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String s : lst1) {\n            lst1Total += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2Total += s.length();\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp73efbnyi.java:45)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int s1 = 0;\n        int s2 = 0;\n      \
    \  for (String str : lst1) {\n            s1 += str.length();\n        }\n   \
    \     for (String str : lst2) {\n            s2 += str.length();\n        }\n\
    \        if (s1 <= s2) {\n            return lst1;\n        } else {\n       \
    \     return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Problem 46\n        return lst1;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9zywl4z_.java:29)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        \n        int totalChars1 = 0;\n        int\
    \ totalChars2 = 0;\n        \n        for (String str : lst1) {\n            totalChars1\
    \ += str.length();\n        }\n        \n        for (String str : lst2) {\n \
    \           totalChars2 += str.length();\n        }\n        \n        if (totalChars1\
    \ == totalChars2) {\n            return lst1;\n        } else if (totalChars1\
    \ < totalChars2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> temp1 = new ArrayList<String>();\n\
    \        ArrayList<String> temp2 = new ArrayList<String>();\n        temp1.addAll(lst1);\n\
    \        temp2.addAll(lst2);\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String str: temp1) {\n            total1 += str.length();\n    \
    \    }\n        for (String str: temp2) {\n            total2 += str.length();\n\
    \        }\n        if (total1 < total2) {\n            return temp1;\n      \
    \  } else {\n            return temp2;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgxkb0mp.java:49)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String s : lst1) {\n            sum1 += s.length();\n        }\n \
    \       for (String s : lst2) {\n            sum2 += s.length();\n        }\n\
    \        if (sum1 < sum2) {\n            return lst1;\n        } else {\n    \
    \        return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpre5_osf0.java:45)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // your code here\n        return lst1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtby1kfx.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = totalString(lst1);\n       \
    \ int total2 = totalString(lst2);\n        if (total1 == total2) {\n         \
    \   return lst1;\n        } else if (total1 < total2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphpfg2l8s.java:24: error: cannot find symbol\n        int total1\
    \ = totalString(lst1);\n                     ^\n  symbol:   method totalString(ArrayList<String>)\n\
    \  location: class Problem\n/tmp/tmphpfg2l8s.java:25: error: cannot find symbol\n\
    \        int total2 = totalString(lst2);\n                     ^\n  symbol:  \
    \ method totalString(ArrayList<String>)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Your code here\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl39l7c_1.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Count = 0;\n        int lst2Count\
    \ = 0;\n        for (String s : lst1) {\n            lst1Count += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2Count += s.length();\n\
    \        }\n        if (lst1Count < lst2Count) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxudxrrz6.java:45)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return totalMatchHelper(lst1, lst2) ? lst1\
    \ : lst2;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa252e_o9.java:24: error: cannot find symbol\n        return totalMatchHelper(lst1,\
    \ lst2) ? lst1 : lst2;\n               ^\n  symbol:   method totalMatchHelper(ArrayList<String>,ArrayList<String>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String word : lst1) {\n            lst1Total += word.length();\n\
    \        }\n        for (String word : lst2) {\n            lst2Total += word.length();\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvgrbt_l.java:45)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // return totalMatch_helper(lst1, lst2);\n\
    \        return (lst1.stream().mapToInt(String::length).sum() < lst2.stream().mapToInt(String::length).sum())\
    \ ? lst1 : lst2;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbylu6sm.java:34)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // your code here\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzoatf_v4.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> ans = new ArrayList<String>();\n\
    \        if(lst1.size() == 0 && lst2.size() == 0) {\n            return ans;\n\
    \        }\n        // if(lst1.size() == 0) {\n        //     return lst2;\n \
    \       // }\n        // if(lst2.size() == 0) {\n        //     return lst1;\n\
    \        // }\n        int ans1 = 0;\n        int ans2 = 0;\n        // if(lst1.size()\
    \ == 0) {\n        //     ans = lst2;\n        // }\n        // if(lst2.size()\
    \ == 0) {\n        //     ans = lst1;\n        // }\n        // if(lst1.size()\
    \ == 0 && lst2.size() == 0) {\n        //     ans = new ArrayList<String>();\n\
    \        // }\n        for(int i = 0; i < lst1.size(); i++) {\n            ans1\
    \ += lst1.get(i).length();\n        }\n        for(int i = 0; i < lst2.size();\
    \ i++) {\n            ans2 += lst2.get(i).length();\n        }\n        if(ans1\
    \ < ans2) {\n            ans = lst1;\n        }\n        else if(ans1 > ans2)\
    \ {\n            ans = lst2;\n        }\n        else {\n            ans = lst1;\n\
    \        }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return new ArrayList<String>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotcyzbgq.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> retVal = lst1;\n      \
    \  int len1 = lst1.stream().map(s -> s.length()).reduce(0, (a, b) -> a + b);\n\
    \        int len2 = lst2.stream().map(s -> s.length()).reduce(0, (a, b) -> a +\
    \ b);\n        if (len1 > len2) {\n            retVal = lst2;\n        }\n   \
    \     return retVal;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmper3_azc6.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n    int sum1 = 0;\n    int sum2 = 0;\n    ArrayList<String>\
    \ list1 = new ArrayList<String>();\n    ArrayList<String> list2 = new ArrayList<String>();\n\
    \    list1 = lst1;\n    list2 = lst2;\n    if (list1.size() == 0 && list2.size()\
    \ == 0) {\n    return list1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2l9v1ljj.java:33: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return lst1;\n        } else if (lst1.size() == 0 && lst2.size()\
    \ != 0) {\n            return lst2;\n        } else if (lst1.size() != 0 && lst2.size()\
    \ == 0) {\n            return lst1;\n        } else {\n            int lst1Length\
    \ = 0;\n            int lst2Length = 0;\n            for (String element : lst1)\
    \ {\n                lst1Length += element.length();\n            }\n        \
    \    for (String element : lst2) {\n                lst2Length += element.length();\n\
    \            }\n            if (lst1Length < lst2Length) {\n                return\
    \ lst1;\n            } else if (lst1Length > lst2Length) {\n                return\
    \ lst2;\n            } else {\n                return lst1;\n            }\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk21bxke9.java:56)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int totalChars1 = 0;\n        int totalChars2\
    \ = 0;\n        for (String string : lst1) {\n            totalChars1 += string.length();\n\
    \        }\n        for (String string : lst2) {\n            totalChars2 += string.length();\n\
    \        }\n        if (totalChars1 < totalChars2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpns7l385o.java:45)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1totalChar = 0;\n        int lst2totalChar\
    \ = 0;\n        for (String s : lst1) {\n            lst1totalChar += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2totalChar += s.length();\n\
    \        }\n        if (lst1totalChar < lst2totalChar) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8elsm5m.java:45)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n\
    \        for (String s : lst1) {\n            count1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            count2 += s.length();\n        }\n\
    \        if (count1 <= count2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0) {\n            return\
    \ lst1;\n        }\n        if (lst2.size() == 0) {\n            return lst2;\n\
    \        }\n        int sum1 = 0;\n        int sum2 = 0;\n        for (String\
    \ s : lst1) {\n            sum1 += s.length();\n        }\n        for (String\
    \ s : lst2) {\n            sum2 += s.length();\n        }\n        if (sum1 ==\
    \ sum2) {\n            return lst1;\n        }\n        if (sum1 < sum2) {\n \
    \           return lst1;\n        }\n        return lst2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code after this line\n    \
    \    int totalLst1 = 0;\n        int totalLst2 = 0;\n        for (String str :\
    \ lst1) {\n            totalLst1 += str.length();\n        }\n        for (String\
    \ str : lst2) {\n            totalLst2 += str.length();\n        }\n        if\
    \ (totalLst1 < totalLst2) {\n            return lst1;\n        } else {\n    \
    \        return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cyek7f3.java:46)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Count = 0;\n        int lst2Count\
    \ = 0;\n        for (String str : lst1) {\n            lst1Count += str.length();\n\
    \        }\n        for (String str : lst2) {\n            lst2Count += str.length();\n\
    \        }\n        if (lst1Count < lst2Count) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmnbrpy1g.java:45)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String str : lst1) {\n            lst1Total += str.length();\n\
    \        }\n        for (String str : lst2) {\n            lst2Total += str.length();\n\
    \        }\n        if (lst1Total == lst2Total) {\n            return lst1;\n\
    \        } else if (lst1Total < lst2Total) {\n            return lst1;\n     \
    \   } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Your Code \n        return null;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpq3vn_odo.java:28)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        Integer total1 = 0;\n        Integer total2\
    \ = 0;\n        Integer i = 0;\n        while (i < lst1.size()) {\n          \
    \  total1 = total1 + lst1.get(i).length();\n            i = i + 1;\n        }\n\
    \        i = 0;\n        while (i < lst2.size()) {\n            total2 = total2\
    \ + lst2.get(i).length();\n            i = i + 1;\n        }\n        if (total1\
    \ < total2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjzv6g8wq.java:49)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // your code here\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzoatf_v4.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int length1 = lst1.stream().mapToInt(string\
    \ -> string.length()).sum();\n        int length2 = lst2.stream().mapToInt(string\
    \ -> string.length()).sum();\n        if (length1 == length2) return lst1;\n \
    \       return length1 < length2 ? lst1 : lst2;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ return lst1;\n        int total1 = lst1.stream().mapToInt(String::length).sum();\n\
    \        int total2 = lst2.stream().mapToInt(String::length).sum();\n        if\
    \ (total1 > total2) return lst2;\n        else return lst1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return new ArrayList<String>();\n        }\n        // sum chars\
    \ in lst1\n        String lst1str = String.join(\"\", lst1);\n        int sum1\
    \ = 0;\n        for (int i = 0; i < lst1str.length(); i++) {\n            sum1\
    \ += (int)lst1str.charAt(i);\n        }\n        // sum chars in lst2\n      \
    \  String lst2str = String.join(\"\", lst2);\n        int sum2 = 0;\n        for\
    \ (int i = 0; i < lst2str.length(); i++) {\n            sum2 += (int)lst2str.charAt(i);\n\
    \        }\n        // if sum of chars in lst1 < sum of chars in lst2\n      \
    \  if (sum1 < sum2) {\n            return lst1;\n        }\n        return lst2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa5y7gwoe.java:52)\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        throw new NotImplementedException();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0qjyx5do.java:24: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Sum = 0;\n        int lst2Sum = 0;\n\
    \        for (String s : lst1) {\n            lst1Sum += s.length();\n       \
    \ }\n        for (String s : lst2) {\n            lst2Sum += s.length();\n   \
    \     }\n        if (lst1Sum < lst2Sum) {\n            return lst1;\n        }\
    \ else {\n            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp45sqm0vt.java:45)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result;\n        int sum1\
    \ = 0;\n        int sum2 = 0;\n        for (String s : lst1) {\n            sum1\
    \ += s.length();\n        }\n        for (String s : lst2) {\n            sum2\
    \ += s.length();\n        }\n        if (sum1 > sum2) {\n            result =\
    \ lst2;\n        } else {\n            result = lst1;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1sum = 0;\n        int lst2sum = 0;\n\
    \        for (String str : lst1) {\n            lst1sum += str.length();\n   \
    \     }\n        for (String str : lst2) {\n            lst2sum += str.length();\n\
    \        }\n        if (lst1sum == lst2sum) {\n            return lst1;\n    \
    \    } else if (lst1sum < lst2sum) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1TotalChars = 0;\n        int lst2TotalChars\
    \ = 0;\n        for (String word : lst1) {\n            lst1TotalChars += word.length();\n\
    \        }\n        for (String word : lst2) {\n            lst2TotalChars +=\
    \ word.length();\n        }\n        return lst1TotalChars <= lst2TotalChars ?\
    \ lst1 : lst2;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int length1 = lst1.stream().map(String::length).reduce(0,\
    \ Integer::sum);\n        int length2 = lst2.stream().map(String::length).reduce(0,\
    \ Integer::sum);\n        if (length1 < length2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3mr09j9.java:39)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.stream().reduce(0, (acc,\
    \ x) -> acc + x.length(), (acc1, acc2) -> acc1 + acc2);\n        int len2 = lst2.stream().reduce(0,\
    \ (acc, x) -> acc + x.length(), (acc1, acc2) -> acc1 + acc2);\n        return\
    \ len1 < len2 ? lst1 : len1 > len2 ? lst2 : lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return new ArrayList<String>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotcyzbgq.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code here\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpslkjq07y.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String str : lst1) {\n            lst1Total += str.length();\n\
    \        }\n        for (String str : lst2) {\n            lst2Total += str.length();\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4fiyshqw.java:45)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int numChars1 = 0;\n        int numChars2\
    \ = 0;\n        for (String s : lst1) {\n            numChars1 += s.length();\n\
    \        }\n        for (String s : lst2) {\n            numChars2 += s.length();\n\
    \        }\n        if (numChars1 < numChars2) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphhdx3e8.java:45)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int L1 = lst1.stream().mapToInt(String::length).sum();\n\
    \        int L2 = lst2.stream().mapToInt(String::length).sum();\n        if (L1\
    \ == L2) {\n            return lst1;\n        } else if (L1 < L2) {\n        \
    \    return lst1;\n        } else {\n            return lst2;\n        }\n   \
    \ }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String s : lst1) {\n            total1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 == total2) {\n            return lst1;\n        } else if\
    \ (total1 < total2) {\n            return lst1;\n        } else {\n          \
    \  return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int c1 = 0;\n        int c2 = 0;\n      \
    \  for (String s : lst1) {\n            c1 += s.length();\n        }\n       \
    \ for (String s : lst2) {\n            c2 += s.length();\n        }\n        if\
    \ (c1 < c2) {\n            return lst1;\n        } else {\n            return\
    \ lst2;\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbkzhw1ed.java:45)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        //TODO: write your code here\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpjxx8hlza.java:28)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Place your code here\n        return new\
    \ ArrayList<String>();\n    }\n    public static void main(String[] args) {\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsu7tmcfa.java:29)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Fill in your solution here\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmp0ary0px3.java:28)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // replace 'throw new RuntimeException()'\
    \ with actual code of this function\n        throw new RuntimeException();\n \
    \   }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException\n\tat Problem.totalMatch(tmpytxsn7ey.java:25)\n\
    \tat Problem.main(tmpytxsn7ey.java:28)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String word: lst1) {\n            sum1 += word.length();\n       \
    \ }\n        for (String word: lst2) {\n            sum2 += word.length();\n \
    \       }\n        if (sum1 < sum2) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozsb1q33.java:45)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = totalMatchHelper(lst1);\n  \
    \      int total2 = totalMatchHelper(lst2);\n        if (total1 < total2) {\n\
    \            return lst1;\n        } else {\n            return lst2;\n      \
    \  }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv5rx096i.java:24: error: cannot find symbol\n        int total1\
    \ = totalMatchHelper(lst1);\n                     ^\n  symbol:   method totalMatchHelper(ArrayList<String>)\n\
    \  location: class Problem\n/tmp/tmpv5rx096i.java:25: error: cannot find symbol\n\
    \        int total2 = totalMatchHelper(lst2);\n                     ^\n  symbol:\
    \   method totalMatchHelper(ArrayList<String>)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // write your code here\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpajohsffz.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        throw new RuntimeException(\"Not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.totalMatch(tmpxg6894qm.java:24)\n\tat Problem.main(tmpxg6894qm.java:27)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ return lst1;\n        if (lst1.size() == 0) return lst2;\n        if (lst2.size()\
    \ == 0) return lst1;\n        int sum1 = 0;\n        int sum2 = 0;\n        for\
    \ (String item: lst1) {\n            sum1 += item.length();\n        }\n     \
    \   for (String item: lst2) {\n            sum2 += item.length();\n        }\n\
    \        if (sum1 == sum2) return lst1;\n        return sum1 < sum2 ? lst1 : lst2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1o034da.java:46)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0) {\n            return\
    \ lst1;\n        }\n        if (lst2.size() == 0) {\n            return lst2;\n\
    \        }\n        if (count(lst1) < count(lst2)) {\n            return lst1;\n\
    \        }\n        return lst2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxu0gbkz5.java:30: error: cannot find symbol\n        if (count(lst1)\
    \ < count(lst2)) {\n            ^\n  symbol:   method count(ArrayList<String>)\n\
    \  location: class Problem\n/tmp/tmpxu0gbkz5.java:30: error: cannot find symbol\n\
    \        if (count(lst1) < count(lst2)) {\n                          ^\n  symbol:\
    \   method count(ArrayList<String>)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // return totalMatch\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmppiasu03l.java:28)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String val : lst1) {\n            sum1 += val.length();\n        }\n\
    \        for (String val : lst2) {\n            sum2 += val.length();\n      \
    \  }\n        if (sum1 <= sum2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String s: lst1) {\n            sum1 += s.length();\n        }\n  \
    \      for (String s: lst2) {\n            sum2 += s.length();\n        }\n  \
    \      if (sum1 < sum2) {\n            return lst1;\n        } else {\n      \
    \      return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_w1tebav.java:45)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code here.\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3w96lfji.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1CharCount = 0;\n        int lst2CharCount\
    \ = 0;\n        for (String str : lst1) {\n            lst1CharCount += str.length();\n\
    \        }\n        for (String str : lst2) {\n            lst2CharCount += str.length();\n\
    \        }\n        if (lst1CharCount < lst2CharCount) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfe2ha4cp.java:45)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> min = new ArrayList<String>();\n\
    \        ArrayList<String> max = new ArrayList<String>();\n        ArrayList<String>\
    \ tempLst = new ArrayList<String>();\n        int numChars1 = 0;\n        int\
    \ numChars2 = 0;\n        for (String s : lst1) {\n            numChars1 += s.length();\n\
    \        }\n        for (String s : lst2) {\n            numChars2 += s.length();\n\
    \        }\n        if (numChars1 < numChars2) {\n            min = lst1;\n  \
    \          max = lst2;\n        } else if (numChars1 > numChars2) {\n        \
    \    min = lst2;\n            max = lst1;\n        } else {\n            return\
    \ lst1;\n        }\n        return min;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size()==0) {\n            return\
    \ lst1;\n        }\n        if (lst2.size()==0) {\n            return lst2;\n\
    \        }\n        ArrayList<String> newLst = new ArrayList<String>();\n    \
    \    for (String el : lst1) {\n            newLst.add(el);\n        }\n      \
    \  for (String el : lst2) {\n            newLst.add(el);\n        }\n        int\
    \ count1 = 0;\n        int count2 = 0;\n        for (String el : lst1) {\n   \
    \         count1 += el.length();\n        }\n        for (String el : lst2) {\n\
    \            count2 += el.length();\n        }\n        if (count1<count2) {\n\
    \            return lst1;\n        }\n        else if (count2<count1) {\n    \
    \        return lst2;\n        }\n        else {\n            return lst1;\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Add your code here\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnya8gicj.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // TODO: Your code here\n        int lst1Length\
    \ = 0;\n        int lst2Length = 0;\n        for (String s : lst1)\n         \
    \   lst1Length += s.length();\n        for (String s : lst2)\n            lst2Length\
    \ += s.length();\n        if (lst1Length == lst2Length)\n            return lst1;\n\
    \        return lst1Length < lst2Length ? lst1 : lst2;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmper3_azc6.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int len1 = lst1.stream().map(s -> s.length()).reduce(0,\
    \ (a, b) -> a + b);\n        int len2 = lst2.stream().map(s -> s.length()).reduce(0,\
    \ (a, b) -> a + b);\n        if (len1 == len2) {\n            return lst1;\n \
    \       } else if (len1 < len2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmper3_azc6.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1_size = 0;\n        int lst2_size\
    \ = 0;\n        for (String str: lst1) {\n            lst1_size += str.length();\n\
    \        }\n        for (String str: lst2) {\n            lst2_size += str.length();\n\
    \        }\n        if (lst1_size < lst2_size) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc5zpxc5.java:45)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int totalChars1 = 0;\n        int totalChars2\
    \ = 0;\n        for (String item : lst1) {\n            totalChars1 += item.length();\n\
    \        }\n        for (String item : lst2) {\n            totalChars2 += item.length();\n\
    \        }\n        if (totalChars1 < totalChars2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0s9y_1_0.java:45)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int totalLength1 = lst1.stream().reduce(0,\
    \ (a,b) -> (a + b.length()), (a,b) -> (a + b));\n        int totalLength2 = lst2.stream().reduce(0,\
    \ (a,b) -> (a + b.length()), (a,b) -> (a + b));\n        if (totalLength1 < totalLength2)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2ntjka1.java:39)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      int length1 = lst1.size();\n        int length2 = lst2.size();\n      \
    \  for (int i = 0; i < length1; i++) {\n            sum1 += lst1.get(i).length();\n\
    \        }\n        for (int i = 0; i < length2; i++) {\n            sum2 += lst2.get(i).length();\n\
    \        }\n        if (sum1 < sum2) {\n            return lst1;\n        } else\
    \ {\n            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4wsu6ayv.java:47)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // ...\n        return null;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpu_kkqjjc.java:28)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> set1 = lst1;\n        ArrayList<String>\
    \ set2 = lst2;\n        int set1Total = 0;\n        int set2Total = 0;\n     \
    \   for (String i : set1) {\n            set1Total += i.length();\n        }\n\
    \        for (String i : set2) {\n            set2Total += i.length();\n     \
    \   }\n        if (set1Total < set2Total) {\n            return set1;\n      \
    \  } else {\n            return set2;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnhk9q6s.java:47)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code here\n        int len1\
    \ = lst1.stream().mapToInt(String::length).sum();\n        int len2 = lst2.stream().mapToInt(String::length).sum();\n\
    \        return len1 <= len2 ? lst1 : lst2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // return the array list that has total number\
    \ of chars in the all strings of the array list less than the other array list.\n\
    \        // if the two array lists have the same number of chars, return the first\
    \ array list.\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmp7l5teanr.java:29)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code here\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpn36kx0bh.java:28)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1CharCount = 0;\n        int lst2CharCount\
    \ = 0;\n        for (String i : lst1) {\n            lst1CharCount += i.length();\n\
    \        }\n        for (String i : lst2) {\n            lst2CharCount += i.length();\n\
    \        }\n        if (lst1CharCount == lst2CharCount) {\n            return\
    \ lst1;\n        } else if (lst1CharCount < lst2CharCount) {\n            return\
    \ lst1;\n        } else {\n            return lst2;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() > lst2.size()) {\n      \
    \      return lst2;\n        }\n        else if (lst1.size() < lst2.size()) {\n\
    \            return lst1;\n        }\n        else {\n            int sumLst1\
    \ = 0;\n            int sumLst2 = 0;\n            for (String el : lst1) {\n \
    \               sumLst1 += el.length();\n            }\n            for (String\
    \ el : lst2) {\n                sumLst2 += el.length();\n            }\n     \
    \       if (sumLst1 > sumLst2) {\n                return lst2;\n            }\n\
    \            else if (sumLst1 < sumLst2) {\n                return lst1;\n   \
    \         }\n            else {\n                return lst1;\n            }\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp53ixfoi.java:56)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmper3_azc6.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int totalLengthLst1 = lst1.stream().mapToInt(String::length).sum();\n\
    \        int totalLengthLst2 = lst2.stream().mapToInt(String::length).sum();\n\
    \        return totalLengthLst1 < totalLengthLst2 ? lst1 : totalLengthLst1 > totalLengthLst2\
    \ ? lst2 : lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return new ArrayList<String>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotcyzbgq.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code here\n        // Return\
    \ value must not be null\n        return new ArrayList<String>();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpahh8i3jy.java:30)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String s : lst1) {\n            total1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 < total2) return lst1;\n        else return lst2;\n    }\n\
    \    public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpws5v5kui.java:42)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1total = 0;\n        int lst2total\
    \ = 0;\n        for (String s : lst1) {\n            lst1total += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2total += s.length();\n\
    \        }\n        if (lst1total == lst2total) {\n            return lst1;\n\
    \        }\n        if (lst1total < lst2total) {\n            return lst1;\n \
    \       }\n        else {\n            return lst2;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> res;\n        int count1\
    \ = 0;\n        int count2 = 0;\n        for (String i : lst1) {\n           \
    \ count1 += i.length();\n        }\n        for (String i : lst2) {\n        \
    \    count2 += i.length();\n        }\n        if (count1 == count2) {\n     \
    \       res = lst1;\n        } else if (count1 < count2) {\n            res =\
    \ lst1;\n        } else {\n            res = lst2;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String s: lst1) {\n            lst1Total += s.length();\n\
    \        }\n        for (String s: lst2) {\n            lst2Total += s.length();\n\
    \        }\n        if (lst1Total <= lst2Total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = lst1.stream().map(e -> e.length()).reduce(0,\
    \ (a, b) -> a + b);\n        int total2 = lst2.stream().map(e -> e.length()).reduce(0,\
    \ (a, b) -> a + b);\n        if (total1 < total2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm14nc0yd.java:39)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String s : lst1) {\n            lst1Total += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2Total += s.length();\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp73efbnyi.java:45)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Problem solution here...\n        return\
    \ lst1;\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4g4r3e71.java:29)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Count = 0;\n        int lst2Count\
    \ = 0;\n        for (String str : lst1) {\n            lst1Count += str.length();\n\
    \        }\n        for (String str : lst2) {\n            lst2Count += str.length();\n\
    \        }\n        if (lst1Count < lst2Count) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmnbrpy1g.java:45)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // You have to fill in the details of this\
    \ function\n        // and delete the return statement below.\n        return\
    \ new ArrayList<String>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt5oqltwl.java:30)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // int total1 = 0;\n        // int total2\
    \ = 0;\n        // for (String s : lst1) {\n        //     total1 += s.length();\n\
    \        // }\n        // for (String s : lst2) {\n        //     total2 += s.length();\n\
    \        // }\n        // if (total1 <= total2) {\n        //     return lst1;\n\
    \        // } else {\n        //     return lst2;\n        // }\n        // //\
    \ use stream to calculate total length\n        // int total1 = lst1.stream().map(s\
    \ -> s.length()).reduce(0, (x, y) -> x + y);\n        // int total2 = lst2.stream().map(s\
    \ -> s.length()).reduce(0, (x, y) -> x + y);\n        // return total1 <= total2\
    \ ? lst1 : lst2;\n        // use sum\n        int total1 = lst1.stream().mapToInt(s\
    \ -> s.length()).sum();\n        int total2 = lst2.stream().mapToInt(s -> s.length()).sum();\n\
    \        return total1 <= total2 ? lst1 : lst2;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        //\n        // Your code goes here\n    \
    \    //\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmp_4kwhkoj.java:30)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = lst1.stream().mapToInt(String::length).sum();\n\
    \        int lst2Total = lst2.stream().mapToInt(String::length).sum();\n     \
    \   if (lst1Total == lst2Total) {\n            return lst1;\n        } else if\
    \ (lst1Total < lst2Total) {\n            return lst1;\n        } else {\n    \
    \        return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // Write your code here\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpslkjq07y.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int count1 = lst1.stream().mapToInt(x ->\
    \ x.length()).sum();\n        int count2 = lst2.stream().mapToInt(x -> x.length()).sum();\n\
    \        return count1 == count2 ? lst1 : count1 < count2 ? lst1 : lst2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int count1 = 0;\n        int count2 = 0;\n\
    \        for (String word : lst1) {\n            count1 += word.length();\n  \
    \      }\n        for (String word : lst2) {\n            count2 += word.length();\n\
    \        }\n        if (count1 < count2) {\n            return lst1;\n       \
    \ } else {\n            return lst2;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3w9cx9d.java:45)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return lst1;\n        } else if (lst1.size() == 0 && lst2.size()\
    \ != 0) {\n            return lst2;\n        } else if (lst1.size() != 0 && lst2.size()\
    \ == 0) {\n            return lst1;\n        } else {\n            int total1\
    \ = 0;\n            int total2 = 0;\n            for (int i = 0; i < lst1.size();\
    \ i++) {\n                total1 += lst1.get(i).length();\n            }\n   \
    \         for (int i = 0; i < lst2.size(); i++) {\n                total2 += lst2.get(i).length();\n\
    \            }\n            if (total1 > total2) {\n                return lst2;\n\
    \            } else if (total1 < total2) {\n                return lst1;\n   \
    \         } else {\n                return lst1;\n            }\n        }\n \
    \   }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp439jrhjk.java:56)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String s : lst1) {\n            total1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 == total2) {\n            return lst1;\n        } else if\
    \ (total1 < total2) {\n            return lst1;\n        } else {\n          \
    \  return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0) return lst1;\n    \
    \    if (lst2.size() == 0) return lst2;\n        int sum1 = 0;\n        int sum2\
    \ = 0;\n        for (String s : lst1) sum1 += s.length();\n        for (String\
    \ s : lst2) sum2 += s.length();\n        if (sum1 == sum2) return lst1;\n    \
    \    return sum1 < sum2 ? lst1 : lst2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Chars = 0;\n        int lst2Chars\
    \ = 0;\n        for (String s : lst1) {\n            lst1Chars += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2Chars += s.length();\n\
    \        }\n        if (lst1Chars < lst2Chars) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp866m6yp7.java:45)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String i : lst1) {\n            sum1 += i.length();\n        }\n \
    \       for (String i : lst2) {\n            sum2 += i.length();\n        }\n\
    \        if (sum1 < sum2) {\n            return lst1;\n        } else {\n    \
    \        return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiio4cuzr.java:45)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int t1 = 0;\n        int t2 = 0;\n      \
    \  for (String s: lst1)\n            t1 += s.length();\n        for (String s:\
    \ lst2)\n            t2 += s.length();\n        if (t1 > t2)\n            return\
    \ lst2;\n        else\n            return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> short_lst;\n        ArrayList<String>\
    \ long_lst;\n        if (lst1.size() > lst2.size()) {\n            short_lst =\
    \ lst2;\n            long_lst = lst1;\n        } else {\n            short_lst\
    \ = lst1;\n            long_lst = lst2;\n        }\n        int sum1 = 0;\n  \
    \      int sum2 = 0;\n        for (String s: lst1) {\n            sum1 += s.length();\n\
    \        }\n        for (String s: lst2) {\n            sum2 += s.length();\n\
    \        }\n        if (sum1 < sum2) {\n            return lst1;\n        } else\
    \ if (sum2 < sum1) {\n            return lst2;\n        } else {\n           \
    \ return lst1;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // enter your code here\n        int lst1total\
    \ = 0;\n        int lst2total = 0;\n        for (String i : lst1) {\n        \
    \    lst1total += i.length();\n        }\n        for (String i : lst2) {\n  \
    \          lst2total += i.length();\n        }\n        if (lst1total < lst2total)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_w3jv__2.java:46)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if (lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return new ArrayList<String>();\n        } else if (lst1.size()\
    \ != 0 && lst2.size() == 0) {\n            return lst1;\n        } else if (lst1.size()\
    \ == 0 && lst2.size() != 0) {\n            return lst2;\n        } else {\n  \
    \          int lst1Length = 0;\n            int lst2Length = 0;\n            for\
    \ (String s : lst1) {\n                lst1Length += s.length();\n           \
    \ }\n            for (String s : lst2) {\n                lst2Length += s.length();\n\
    \            }\n            if (lst1Length < lst2Length) {\n                return\
    \ lst1;\n            } else if (lst1Length > lst2Length) {\n                return\
    \ lst2;\n            } else {\n                return lst1;\n            }\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxw6pw9oq.java:56)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String s: lst1) {\n            lst1Total += s.length();\n\
    \        }\n        for (String s: lst2) {\n            lst2Total += s.length();\n\
    \        }\n        if (lst1Total <= lst2Total) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        String lst1Str = String.join(\"\", lst1);\n\
    \        String lst2Str = String.join(\"\", lst2);\n        if (lst1Str.length()\
    \ < lst2Str.length()) {\n            return lst1;\n        } else {\n        \
    \    return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mlz72mf.java:39)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = lst1.stream().mapToInt(s ->\
    \ s.length()).sum();\n        int total2 = lst2.stream().mapToInt(s -> s.length()).sum();\n\
    \        if (total1 < total2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnr3st31i.java:39)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = 0;\n        int lst2Total\
    \ = 0;\n        for (String s : lst1) {\n            lst1Total += s.length();\n\
    \        }\n        for (String s : lst2) {\n            lst2Total += s.length();\n\
    \        }\n        if (lst1Total < lst2Total) {\n            return lst1;\n \
    \       } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp73efbnyi.java:45)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if(total(lst1) < total(lst2)) return lst1;\n\
    \        return lst2;\n    }\n    public static void main(String[] args) {\n \
    \   assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbnsxqf9n.java:24: error: cannot find symbol\n        if(total(lst1)\
    \ < total(lst2)) return lst1;\n           ^\n  symbol:   method total(ArrayList<String>)\n\
    \  location: class Problem\n/tmp/tmpbnsxqf9n.java:24: error: cannot find symbol\n\
    \        if(total(lst1) < total(lst2)) return lst1;\n                        \
    \ ^\n  symbol:   method total(ArrayList<String>)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int size1 = lst1.stream().mapToInt(String::length).sum();\n\
    \        int size2 = lst2.stream().mapToInt(String::length).sum();\n        return\
    \ size1 < size2 ? lst1 : lst2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppeperfmf.java:35)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int total1 = 0;\n        int total2 = 0;\n        for (String item: lst1)\
    \ {\n            total1 += item.length();\n        }\n        for (String item:\
    \ lst2) {\n            total2 += item.length();\n        }\n        if (total1\
    \ < total2) {\n            result = lst1;\n        } else if (total1 > total2)\
    \ {\n            result = lst2;\n        } else {\n            result = lst1;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        if(lst1.size() == 0 && lst2.size() == 0)\
    \ {\n            return lst1;\n        }\n        else if(lst1.size() == 0) {\n\
    \            return lst2;\n        }\n        else if(lst2.size() == 0) {\n  \
    \          return lst1;\n        }\n        else {\n            // return Collections.max(Arrays.asList(lst1,\
    \ lst2),\n            //     Comparator.comparingInt(a -> a.stream().mapToInt(String::length).sum()));\n\
    \            int sum1 = 0;\n            int sum2 = 0;\n            for(String\
    \ str : lst1) {\n                sum1 += str.length();\n            }\n      \
    \      for(String str : lst2) {\n                sum2 += str.length();\n     \
    \       }\n            if(sum1 < sum2) {\n                return lst1;\n     \
    \       }\n            else if(sum2 < sum1) {\n                return lst2;\n\
    \            }\n            else {\n                return lst1;\n           \
    \ }\n        }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvggihlr9.java:63)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return lst1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6_i0i7r6.java:28)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      int i = 0;\n        while (i < lst1.size()) {\n            sum1 += lst1.get(i).length();\n\
    \            i = i + 1;\n        }\n        i = 0;\n        while (i < lst2.size())\
    \ {\n            sum2 += lst2.get(i).length();\n            i = i + 1;\n     \
    \   }\n        if (sum1 < sum2) {\n            return lst1;\n        } else {\n\
    \            return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2atlhvp4.java:49)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Total = lst1.stream().reduce(0, (x,y)\
    \ -> x + y.length(), (x,y) -> x + y);\n        int lst2Total = lst2.stream().reduce(0,\
    \ (x,y) -> x + y.length(), (x,y) -> x + y);\n        if (lst1Total <= lst2Total)\
    \ {\n            return lst1;\n        } else {\n            return lst2;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        throw new UnsupportedOperationException(\"\
    Method totalMatch has not been implemented yet.\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Method\
    \ totalMatch has not been implemented yet.\n\tat Problem.totalMatch(tmp5ny4za00.java:24)\n\
    \tat Problem.main(tmp5ny4za00.java:27)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // your code goes here\n        if (lst1.size()\
    \ == 0 && lst2.size() == 0) {\n            return new ArrayList<String>();\n \
    \       } else if (lst1.size() == 0 && lst2.size() != 0) {\n            return\
    \ lst2;\n        } else if (lst1.size() != 0 && lst2.size() == 0) {\n        \
    \    return lst1;\n        } else {\n            int countLst1 = 0;\n        \
    \    int countLst2 = 0;\n            for (int i = 0; i < lst1.size(); i++) {\n\
    \                countLst1 += lst1.get(i).length();\n            }\n         \
    \   for (int i = 0; i < lst2.size(); i++) {\n                countLst2 += lst2.get(i).length();\n\
    \            }\n            if (countLst1 < countLst2) {\n                return\
    \ lst1;\n            } else if (countLst1 > countLst2) {\n                return\
    \ lst2;\n            } else {\n                return lst1;\n            }\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4oxi84fr.java:57)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // write code here\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmp4m5rj8ee.java:28)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int lst1Size = 0;\n        int lst2Size =\
    \ 0;\n        if (lst1.size() == 0) {\n            return lst2;\n        }\n \
    \       if (lst2.size() == 0) {\n            return lst1;\n        }\n       \
    \ for (String str: lst1) {\n            lst1Size += str.length();\n        }\n\
    \        for (String str: lst2) {\n            lst2Size += str.length();\n   \
    \     }\n        if (lst1Size < lst2Size) {\n            return lst1;\n      \
    \  }\n        else if (lst2Size < lst1Size) {\n            return lst2;\n    \
    \    }\n        else {\n            return lst1;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpel8zv67p.java:56)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // your code here\n        return null;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpcia5alls.java:28)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String str : lst1)\n            total1 += str.length();\n      \
    \  for (String str : lst2)\n            total2 += str.length();\n        if (total1\
    \ < total2)\n            return lst1;\n        else\n            return lst2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(totalMatch((new\
    \ ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr6k9sqi0.java:42)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = 0;\n        int total2 = 0;\n\
    \        for (String s : lst1) {\n            total1 += s.length();\n        }\n\
    \        for (String s : lst2) {\n            total2 += s.length();\n        }\n\
    \        if (total1 == total2) {\n            return lst1;\n        } else if\
    \ (total1 < total2) {\n            return lst1;\n        } else {\n          \
    \  return lst2;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new ArrayList<String>(Arrays.asList()))).equals((new\
    \ ArrayList<String>(Arrays.asList()))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpteypn19e.java:27)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int sum1 = 0;\n        int sum2 = 0;\n  \
    \      for (String s : lst1) {\n            sum1 += s.length();\n        }\n \
    \       for (String s : lst2) {\n            sum2 += s.length();\n        }\n\
    \        if (sum1 <= sum2) {\n            return lst1;\n        } else {\n   \
    \         return lst2;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())), (new\
    \ ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        // TODO\n        return null;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.totalMatch(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpskwk7cxq.java:28)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts two array lists of strings\
    \ and returns the array list that has \n    // total number of chars in the all\
    \ strings of the array list less than the other array list.\n    // if the two\
    \ array lists have the same number of chars, return the first array list.\n  \
    \  // Examples\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n\
    \    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    ))))\n    // (new ArrayList<String>(Arrays.asList((String)\"hI\", (String)\"Hi\"\
    )))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    hi\", (String)\"admin\", (String)\"project\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))\n    // >>> totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\"))))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
    4\")))\n    public static ArrayList<String> totalMatch(ArrayList<String> lst1,\
    \ ArrayList<String> lst2) {\n        int total1 = lst1.stream().map(s -> s.length()).reduce(0,\
    \ (x, y) -> x + y);\n        int total2 = lst2.stream().map(s -> s.length()).reduce(0,\
    \ (x, y) -> x + y);\n        if (total1 < total2) {\n            return lst1;\n\
    \        } else {\n            return lst2;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"\
    admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))).equals((new ArrayList<String>(Arrays.asList((String)\"hi\", (String)\"hi\"\
    )))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hi\"\
    , (String)\"hi\", (String)\"admin\", (String)\"project\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    4\"))), (new ArrayList<String>(Arrays.asList((String)\"1\", (String)\"2\", (String)\"\
    3\", (String)\"4\", (String)\"5\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    4\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"Hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hi\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hI\", (String)\"hi\", (String)\"hi\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\"))), (new ArrayList<String>(Arrays.asList((String)\"hI\"\
    , (String)\"hi\", (String)\"hii\")))).equals((new ArrayList<String>(Arrays.asList((String)\"\
    hi\", (String)\"admin\")))));\n    assert(totalMatch((new ArrayList<String>(Arrays.asList())),\
    \ (new ArrayList<String>(Arrays.asList((String)\"this\")))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(totalMatch((new ArrayList<String>(Arrays.asList((String)\"this\"))),\
    \ (new ArrayList<String>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd60ayaug.java:39)\n"
  stdout: ''
  timestamp: 1660011524

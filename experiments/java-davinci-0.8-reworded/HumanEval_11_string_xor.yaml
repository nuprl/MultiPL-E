name: HumanEval_11_string_xor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Input are two strings a and b consisting only of 1s and\
  \ 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n\
  \    // >>> stringXor((\"010\"), (\"110\"))\n    // (\"100\")\n    public static\
  \ String stringXor(String a, String b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(stringXor((\"\
  111000\"), (\"101010\")).equals((\"010010\")));\n    assert(stringXor((\"1\"), (\"\
  1\")).equals((\"0\")));\n    assert(stringXor((\"0101\"), (\"0000\")).equals((\"\
  0101\")));\n    }\n\n}\n"
completions: ["        StringBuilder c = new StringBuilder();\n        for (int i\
    \ = 0; i < a.length(); i++) {\n            c.append(a.charAt(i) ^ b.charAt(i));\n\
    \        }\n        return c.toString();", "        char[] aChars = a.toCharArray();\n\
    \        char[] bChars = b.toCharArray();\n        char[] result = new char[aChars.length];\n\
    \        for (int i = 0; i < aChars.length; i++) {\n            result[i] = (aChars[i]\
    \ == bChars[i]) ? '0' : '1';\n        }\n        return new String(result);",
  "        // Convert to bytes\n        byte[] byteA = new BigInteger(a, 2).toByteArray();\n\
    \        byte[] byteB = new BigInteger(b, 2).toByteArray();\n        byte[] byteResult\
    \ = new byte[Math.max(byteA.length, byteB.length)];\n        for (int i = 0; i\
    \ < byteResult.length; i++) {\n            byteResult[i] = (byte) (byteA[i] ^\
    \ byteB[i]);\n        }\n        // Convert back to string\n        return new\
    \ BigInteger(byteResult).toString(2);", "        String s = \"\";\n        for\
    \ (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\n\
    \                s += \"0\";\n            else\n                s += \"1\";\n\
    \        }\n        return s;", "        int minLen = Math.min(a.length(), b.length());\n\
    \        int maxLen = Math.max(a.length(), b.length());\n        StringBuilder\
    \ ans = new StringBuilder();\n        for (int i = 0; i < minLen; i++) {\n   \
    \         if (a.charAt(i) == b.charAt(i)) {\n                ans.append(\"0\"\
    );\n            } else {\n                ans.append(\"1\");\n            }\n\
    \        }\n        for (int i = minLen; i < maxLen; i++) {\n            if (a.length()\
    \ > b.length()) {\n                ans.append(a.charAt(i));\n            } else\
    \ {\n                ans.append(b.charAt(i));\n            }\n        }\n    \
    \    return ans.toString();", "        // YOUR CODE HERE\n        return \"\";",
  "        int aLength = a.length();\n        int bLength = b.length();\n        String\
    \ longest = aLength > bLength ? a : b;\n        String shortest = aLength > bLength\
    \ ? b : a;\n        String result = \"\";\n        for (int i = 0; i < longest.length();\
    \ i++) {\n            if (i < shortest.length()) {\n                if (longest.charAt(i)\
    \ == shortest.charAt(i)) {\n                    result += \"0\";\n           \
    \     } else {\n                    result += \"1\";\n                }\n    \
    \        } else {\n                result += longest.charAt(i);\n            }\n\
    \        }\n        return result;", "        int len = Math.max(a.length(), b.length());\n\
    \        a = String.format(\"%0\" + len + \"d\", new BigInteger(a));\n       \
    \ b = String.format(\"%0\" + len + \"d\", new BigInteger(b));\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < len; i++) {\n       \
    \     if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"0\");\n \
    \           } else {\n                sb.append(\"1\");\n            }\n     \
    \   }\n        return sb.toString();", "        char[] aAsArray = a.toCharArray();\n\
    \        char[] bAsArray = b.toCharArray();\n        char[] result = new char[aAsArray.length];\n\
    \        for (int i = 0; i < aAsArray.length; i++) {\n            result[i] =\
    \ (aAsArray[i] == bAsArray[i]) ? '0' : '1';\n        }\n        return new String(result);",
  "        String[] d = {a, b};\n        int[] x = new int[a.length()];\n        String\
    \ res = \"\";\n        for (int i = 0; i < a.length(); i++) {\n            for\
    \ (int j = 0; j < 2; j++) {\n                x[i] = x[i] + Character.getNumericValue(d[j].charAt(i));\n\
    \            }\n            if (x[i] == 1 || x[i] == 3) {\n                res\
    \ = res + \"1\";\n            } else {\n                res = res + \"0\";\n \
    \           }\n        }\n        return res;", "        StringBuilder builder\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         builder.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return\
    \ builder.toString();", "        StringBuilder stringBuilder = new StringBuilder();\n\
    \        int n = a.length();\n        for (int i = 0; i < n; i++) {\n        \
    \    if (a.charAt(i) == b.charAt(i)) {\n                stringBuilder.append(\"\
    0\");\n            } else {\n                stringBuilder.append(\"1\");\n  \
    \          }\n        }\n        return stringBuilder.toString();", "        String\
    \ result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n           \
    \ if (a.charAt(i) == b.charAt(i)) {\n                result += \"0\";\n      \
    \      } else {\n                result += \"1\";\n            }\n        }\n\
    \        return result;", "        // Fill in your code here\n        String result\
    \ = \"\";\n        String c;\n        String d;\n        String res;\n       \
    \ if (a.length() > b.length()) {\n            c = a;\n            d = b;\n   \
    \     } else {\n            c = b;\n            d = a;\n        }\n        int\
    \ k = 0;\n        for (int i = 0; i < c.length(); i++) {\n            if (i <\
    \ d.length()) {\n                if (c.charAt(i) == d.charAt(i)) {\n         \
    \           res = \"0\";\n                } else {\n                    res =\
    \ \"1\";\n                }\n            } else {\n                res = c.charAt(i)\
    \ + \"\";\n            }\n            result = result + res;\n        }\n    \
    \    return result;", "        // You can use the library method Integer.parseInt(a,\
    \ 2) to convert a to an integer,\n        // and then convert the answer back\
    \ to a string of 1s and 0s.\n        return Integer.toBinaryString(Integer.parseInt(a,\
    \ 2) ^ Integer.parseInt(b, 2));", "        String c = \"\";\n        if (a.length()\
    \ != b.length())\n            throw new IllegalArgumentException(\"Inputs must\
    \ be the same length\");\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         if (a.charAt(i) == b.charAt(i))\n                c += \"0\";\n     \
    \       else\n                c += \"1\";\n        }\n        return c;", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", '        return "";', "        StringBuilder\
    \ res = new StringBuilder();\n        if (a.length() > b.length()) {\n       \
    \     b = String.format(\"%0\" + a.length() + \"d\", Integer.parseInt(b));\n \
    \       } else if (a.length() < b.length()) {\n            a = String.format(\"\
    %0\" + b.length() + \"d\", Integer.parseInt(a));\n        }\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n\
    \                res.append(\"0\");\n            } else {\n                res.append(\"\
    1\");\n            }\n        }\n        return res.toString();", "        //\
    \ Implement your solution here.\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append(\"0\");\n            } else {\n  \
    \              sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  '        return "";', "        // STUB.  Replace the following line with the correct\
    \ code.\n        return \"STUB\";", "        return IntStream.range(0, a.length())\n\
    \            .mapToObj(i -> (a.charAt(i) == b.charAt(i)) ? \"0\" : \"1\")\n  \
    \          .collect(Collectors.joining());", "        if (a.length() != b.length())\
    \ throw new RuntimeException(\"Lengths must be the same.\");\n        StringBuilder\
    \ res = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            res.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n\
    \        return res.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append( (a.charAt(i)\
    \ == b.charAt(i)) ? \"0\" : \"1\");\n        }\n        return sb.toString();",
  "        // Fill in code here\n        String ans = \"\";\n        for(int i = 0;\
    \ i < a.length(); i++){\n            if(a.charAt(i) == b.charAt(i)){\n       \
    \         ans += \"0\";\n            }\n            else{\n                ans\
    \ += \"1\";\n            }\n        }\n        return ans;", '        throw new
    RuntimeException("Not implemented");', "        if (a.length() != b.length())\n\
    \            throw new IllegalArgumentException(\"stringXor: input strings have\
    \ different length.\");\n        char[] chars = new char[a.length()];\n      \
    \  for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\n\
    \                chars[i] = '0';\n            else\n                chars[i] =\
    \ '1';\n        }\n        return new String(chars);", "        //Write your solution\
    \ here\n        int n = a.length();\n        int m = b.length();\n        int\
    \ k = Math.max(n, m);\n        char[] ans = new char[k];\n        int flag = 0;\n\
    \        while (n > 0 && m > 0) {\n            if (a.charAt(n - 1) == b.charAt(m\
    \ - 1)) {\n                ans[k - 1] = (char) (flag + '0');\n               \
    \ flag = 0;\n            } else {\n                if (flag == 0) {\n        \
    \            ans[k - 1] = '1';\n                } else {\n                   \
    \ ans[k - 1] = '0';\n                }\n            }\n            k--;\n    \
    \        n--;\n            m--;\n        }\n        while (n > 0) {\n        \
    \    if (a.charAt(n - 1) == '1') {\n                if (flag == 0) {\n       \
    \             ans[k - 1] = '1';\n                } else {\n                  \
    \  ans[k - 1] = '0';\n                }\n            } else {\n              \
    \  ans[k - 1] = (char) (flag + '0');\n                flag = 0;\n            }\n\
    \            k--;\n            n--;\n        }\n        while (m > 0) {\n    \
    \        if (b.charAt(m - 1) == '1') {\n                if (flag == 0) {\n   \
    \                 ans[k - 1] = '1';\n                } else {\n              \
    \      ans[k - 1] = '0';\n                }\n            } else {\n          \
    \      ans[k - 1] = (char) (flag + '0');\n                flag = 0;\n        \
    \    }\n            k--;\n            m--;\n        }\n        if (flag == 1)\
    \ {\n            ans[0] = '1';\n            return new String(ans);\n        }\
    \ else {\n            return new String(ans, 1, ans.length - 1);\n        }",
  '        return "";', '        return "";', "        if (a.length() != b.length())\
    \ {\n            throw new IllegalArgumentException(\"Strings must be of equal\
    \ length!\");\n        }\n        String res = \"\";\n        for (int i = 0;\
    \ i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n    \
    \            res += \"0\";\n            } else {\n                res += \"1\"\
    ;\n            }\n        }\n        return res;", "        String result = \"\
    \";\n        String digits = \"01\";\n        String compare = digits.substring(1);\n\
    \        String one = digits.substring(0, 1);\n        String zero = digits.substring(1,\
    \ 2);\n        int i = 0;\n        while (i < a.length()) {\n            String\
    \ temp1 = a.substring(i, i + 1);\n            String temp2 = b.substring(i, i\
    \ + 1);\n            if (temp1.equals(temp2)) {\n                result = result\
    \ + zero;\n            } else {\n                result = result + one;\n    \
    \        }\n            i = i + 1;\n        }\n        return result;", "    \
    \    int length = Math.max(a.length(), b.length());\n        a = String.format(\"\
    %0\" + length + \"d\", Long.parseLong(a));\n        b = String.format(\"%0\" +\
    \ length + \"d\", Long.parseLong(b));\n        String ans = \"\";\n        for\
    \ (int i = 0; i < length; i++) {\n            int aa = a.charAt(i) - '0';\n  \
    \          int bb = b.charAt(i) - '0';\n            ans += (aa ^ bb);\n      \
    \  }\n        return ans;", "        if (a.length() != b.length()) {\n       \
    \     throw new IllegalArgumentException(\"the strings are of unequal length\"\
    );\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n\
    \                sb.append(\"0\");\n            } else {\n                sb.append(\"\
    1\");\n            }\n        }\n        return sb.toString();", "\tStringBuilder\
    \ result = new StringBuilder();\n\tfor (int i = 0; i < a.length(); i++) {\n\t\
    \    if (a.charAt(i) == b.charAt(i)) {\n\t\tresult.append(\"0\");\n\t    } else\
    \ {\n\t\tresult.append(\"1\");\n\t    }\n\t}\n\treturn result.toString();", " \
    \       String res = \"\";\n        for (int i = 0; i < a.length(); i++) {\n \
    \           if (a.charAt(i) == b.charAt(i)) {\n                res += \"0\";\n\
    \            } else {\n                res += \"1\";\n            }\n        }\n\
    \        return res;", "        assert a.length() == b.length();\n        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            result.append(a.charAt(i) ^ b.charAt(i));\n        }\n      \
    \  return result.toString();", "        char[] arrayA = a.toCharArray();\n   \
    \     char[] arrayB = b.toCharArray();\n        char[] arrayC = new char[arrayA.length];\n\
    \        for (int i = 0; i < arrayA.length; i++) {\n            if (arrayA[i]\
    \ == arrayB[i]) {\n                arrayC[i] = '0';\n            } else {\n  \
    \              arrayC[i] = '1';\n            }\n        }\n        return new\
    \ String(arrayC);", "        String ans = \"\";\n        for (int i = 0; i < a.length();\
    \ i++) {\n            ans += (a.charAt(i) == b.charAt(i)) ? '0' : '1';\n     \
    \   }\n        return ans;", '        return "";', "        char[] chars = new\
    \ char[a.length()];\n        for (int i = 0; i < a.length(); i++) {\n        \
    \    chars[i] = a.charAt(i) == b.charAt(i) ? '0' : '1';\n        }\n        return\
    \ new String(chars);", "        StringBuilder sb = new StringBuilder();\n    \
    \    // Perform binary XOR on the two inputs\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(Character.forDigit(Character.digit(a.charAt(i),\
    \ 2) ^ Character.digit(b.charAt(i), 2), 2));\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i))\n                sb.append(\"\
    0\");\n            else\n                sb.append(\"1\");\n        }\n      \
    \  return sb.toString();", "        if (a.length() != b.length()) {\n        \
    \    throw new IllegalArgumentException(\"different lengths!\");\n        }\n\
    \        char[] chars = new char[a.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            chars[i] = a.charAt(i) == b.charAt(i) ? '0' : '1';\n   \
    \     }\n        return new String(chars);", "        // Implement this placeholder.\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\
    \ {\n                sb.append(\"0\");\n            } else {\n               \
    \ sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  "        char[] ret = new char[a.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            ret[i] = (a.charAt(i) == b.charAt(i)) ? '0' : '1';\n   \
    \     }\n        return new String(ret);", "        // Inputs are guaranteed to\
    \ be equal length.\n        int len = a.length();\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = 0; i < len; i++) {\n            if\
    \ (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"0\");\n        \
    \    } else {\n                sb.append(\"1\");\n            }\n        }\n \
    \       return sb.toString();", "      StringBuilder sb = new StringBuilder();\n\
    \      for (int i = 0; i < a.length(); i++) {\n        sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? '0' : '1');\n      }\n      return sb.toString();", "        int[]\
    \ ai = new int[a.length()];\n        int[] bi = new int[b.length()];\n       \
    \ for (int i = 0; i < a.length(); i++)\n            ai[i] = Integer.parseInt(a.substring(i,\
    \ i + 1));\n        for (int i = 0; i < b.length(); i++)\n            bi[i] =\
    \ Integer.parseInt(b.substring(i, i + 1));\n        int[] ci = new int[Math.max(a.length(),\
    \ b.length())];\n        for (int i = 0; i < ci.length; i++)\n            ci[i]\
    \ = (i < a.length() ? ai[i] : 0) ^ (i < b.length() ? bi[i] : 0);\n        return\
    \ Arrays.stream(ci).mapToObj(Integer::toString).collect(Collectors.joining());",
  '        return "";', "        String result = \"\"; \n        for (int i = 0; i\
    \ < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\n        \
    \        result += \"0\";\n            else\n                result += \"1\";\n\
    \        }\n        return result;", "        String r = \"\";\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            r += (a.charAt(i) == b.charAt(i))\
    \ ? \"0\" : \"1\";\n        }\n        return r;", "        byte[] byte1 = new\
    \ BigInteger(a, 2).toByteArray();\n        byte[] byte2 = new BigInteger(b, 2).toByteArray();\n\
    \        byte[] res = new byte[byte1.length];\n        for (int i = 0; i < byte1.length;\
    \ i++) {\n            res[i] = (byte) (byte1[i] ^ byte2[i]);\n        }\n    \
    \    return new BigInteger(res).toString(2);", "        String result = \"\";\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result += ((a.charAt(i)\
    \ ^ b.charAt(i)) == 1) ? \"1\" : \"0\";\n        }\n        return result;", " \
    \       String res = \"\";\n        for (int i = 0; i < a.length(); i++) {\n \
    \           if (a.charAt(i) == b.charAt(i)) {\n                res += \"0\";\n\
    \            } else {\n                res += \"1\";\n            }\n        }\n\
    \        return res;", "        if (a.length() != b.length()) {\n            throw\
    \ new IllegalArgumentException(\"length of string \" + a + \" (\" + a.length()\
    \ + \") is not equal to length of string \" + b + \" (\" + b.length() + \")\"\
    );\n        }\n        if (a.length() < 1) {\n            throw new IllegalArgumentException(\"\
    Length of string is \" + a.length() + \" but should be at least 1\");\n      \
    \  }\n        String result = \"\";\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            if (a.charAt(i) == '0' && b.charAt(i) == '0') {\n           \
    \     result += \"0\";\n            } else if (a.charAt(i) == '1' && b.charAt(i)\
    \ == '1') {\n                result += \"0\";\n            } else {\n        \
    \        result += \"1\";\n            }\n        }\n        return result;",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        // YOUR CODE HERE\n     \
    \   return null;", "        String result = \"\";\n        for (int i = 0; i <\
    \ a.length(); i++) {\n            result += (a.charAt(i) == b.charAt(i)) ? \"\
    0\" : \"1\";\n        }\n        return result;", "        String result = \"\"\
    ;\n        int length = a.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            char ac = a.charAt(i);\n            char bc = b.charAt(i);\n\
    \            if (ac == bc) {\n                result += \"0\";\n            }\
    \ else {\n                result += \"1\";\n            }\n        }\n       \
    \ return result;", "        // Implement this placeholder.\n        return \"\"\
    ;", "        if (a.length() != b.length())\n            throw new IllegalArgumentException(\"\
    Strings must be the same length\");\n        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return result.toString();",
  '        throw new RuntimeException("Not implemented");', '        throw new RuntimeException("Not
    implemented yet");', '        return "";', "        int N = a.length();\n    \
    \    char [] res = new char[N];\n        for (int i = 0; i < N; i++) {\n     \
    \       if (a.charAt(i) == b.charAt(i))\n                res[i] = '0';\n     \
    \       else\n                res[i] = '1';\n        }\n        return new String(res);",
  "        String result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i))\n                result += \"0\"\
    ;\n            else\n                result += \"1\";\n        }\n        return\
    \ result;", "        // Convert the input strings to integers\n        BigInteger\
    \ a_integer = new BigInteger(a, 2);\n        BigInteger b_integer = new BigInteger(b,\
    \ 2);\n        // Perform XOR\n        BigInteger result = a_integer.xor(b_integer);\n\
    \        // Convert back to string and return\n        return result.toString(2);",
  "        // TODO: YOUR CODE HERE\n        char[] a2 = a.toCharArray();\n       \
    \ char[] b2 = b.toCharArray();\n        int length = a2.length;\n        char[]\
    \ result = new char[length];\n        for (int i = 0; i < length; i++) {\n   \
    \         if (a2[i] == b2[i]) {\n                result[i] = '0';\n          \
    \  } else {\n                result[i] = '1';\n            }\n        }\n    \
    \    return String.valueOf(result);", "        assert a.length() == b.length();\n\
    \        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            int a1 = a.charAt(i)\
    \ - '0';\n            int b1 = b.charAt(i) - '0';\n            int xor = a1 ^\
    \ b1;\n            sb.append(xor);\n        }\n        return sb.toString();",
  "        int aa = Integer.parseInt(a, 2);\n        int bb = Integer.parseInt(b,\
    \ 2);\n        int rr = aa ^ bb;\n        return Integer.toBinaryString(rr);",
  "        // Your code goes here.\n        String result = \"\";\n        int len\
    \ = Math.max(a.length(), b.length());\n        for (int i = 0; i < len; i++) {\n\
    \            String x = Character.toString(a.charAt(i % a.length()));\n      \
    \      String y = Character.toString(b.charAt(i % b.length()));\n            result\
    \ += Integer.toString(Integer.parseInt(x) ^ Integer.parseInt(y));\n        }\n\
    \        return result;", "        String ret = \"\";\n        int n = a.length();\n\
    \        for (int i = 0; i < n; i++) {\n            char c1 = a.charAt(i);\n \
    \           char c2 = b.charAt(i);\n            if (c1 == c2) {\n            \
    \    ret += \"0\";\n            } else {\n                ret += \"1\";\n    \
    \        }\n        }\n        return ret;", '        return "";', "        if\
    \ (a.length() != b.length()) {\n            throw new IllegalArgumentException(\"\
    length of input strings not the same\");\n        }\n        var r = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            r.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return r.toString();", "  \
    \      // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\
    \ {\n                sb.append(\"0\");\n            } else {\n               \
    \ sb.append(\"1\");\n            }\n        }\n        return sb.toString();",
  "        int len = a.length();\n        String res = \"\";\n        for (int i =\
    \ 0; i < len; i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n        \
    \        res += \"0\";\n            } else {\n                res += \"1\";\n\
    \            }\n        }\n        return res;", "        if (a.length() != b.length())\n\
    \            throw new RuntimeException(\"strings are not of same length\");\n\
    \        String result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n\
    \            int x = a.charAt(i) - '0';\n            int y = b.charAt(i) - '0';\n\
    \            result += x ^ y;\n        }\n        return result;", '      return
    new BigInteger(a, 2).xor(new BigInteger(b, 2)).toString(2);', "        String\
    \ c = \"\";\n        if (a.length() != b.length()) {\n            System.out.println(\"\
    Error: length mismatch\");\n            return null;\n        }\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            c += (a.charAt(i) == b.charAt(i))\
    \ ? \"0\" : \"1\";\n        }\n        return c;", "        char[] aa = a.toCharArray();\n\
    \        char[] bb = b.toCharArray();\n        char[] cc = new char[aa.length];\n\
    \        for (int i = 0; i < aa.length; i++) {\n            cc[i] = (aa[i] ==\
    \ bb[i]) ? '0' : '1';\n        }\n        return new String(cc);", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? \"0\" : \"1\");\n        }\n\
    \        return sb.toString();", '        return "";', "        if (a.length()\
    \ != b.length())\n            throw new IllegalArgumentException();\n        int[]\
    \ aints = a.chars().map(ch -> ch - '0').toArray();\n        int[] bints = b.chars().map(ch\
    \ -> ch - '0').toArray();\n        int[] xor = new int[aints.length];\n      \
    \  for (int i = 0; i < aints.length; i++) {\n            xor[i] = aints[i] ^ bints[i];\n\
    \        }\n        StringBuilder stringBuilder = new StringBuilder();\n     \
    \   Arrays.stream(xor).forEach(x -> stringBuilder.append(x));\n        return\
    \ stringBuilder.toString();", "\t\t\n\t\tint value = Integer.parseInt(a, 2) ^\
    \ Integer.parseInt(b, 2);\n\t\tString result = Integer.toBinaryString(value);\n\
    \t\twhile(result.length() < a.length()) {\n\t\t\tresult = \"0\" + result;\n\t\t\
    }\n\t\treturn result;", "        char[] aa = a.toCharArray();\n        char[]\
    \ bb = b.toCharArray();\n        int n = aa.length;\n        int m = bb.length;\n\
    \        char[] res = new char[n > m ? n : m];\n        for (int i = 0; i < n;\
    \ i++) {\n            if (bb[i] == '1') {\n                if (aa[i] == '1') {\n\
    \                    res[i] = '0';\n                } else {\n               \
    \     res[i] = '1';\n                }\n            } else {\n               \
    \ res[i] = aa[i];\n            }\n        }\n        for (int i = n; i < m; i++)\
    \ {\n            res[i] = bb[i];\n        }\n        return String.valueOf(res);",
  "        // TODO: Implement me\n        char[] result = new char[a.length()];\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result[i] = (a.charAt(i)\
    \ == b.charAt(i)) ? '0' : '1';\n        }\n        return new String(result);",
  "        // Implement solution here\n        return null;", "        String result\
    \ = \"\";\n        for (int i = 0; i < a.length(); i++) {\n            result\
    \ += a.charAt(i) == b.charAt(i) ? \"0\" : \"1\";\n        }\n        return result;",
  "        int[] result = new int[a.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            result[i] = (a.charAt(i) == b.charAt(i)) ? 0 : 1;\n    \
    \    }\n        return new String(result, 0, result.length);", '        return
    "";', "        int[] aa = a.chars().map(c -> c-'0').toArray();\n        int[]\
    \ bb = b.chars().map(c -> c-'0').toArray();\n        int[] cc = new int[Math.max(aa.length,\
    \ bb.length)];\n        for (int i = 0; i < cc.length; i++) {\n            cc[i]\
    \ = (i < aa.length ? aa[i] : 0) ^ (i < bb.length ? bb[i] : 0);\n        }\n  \
    \      return Arrays.stream(cc).mapToObj(i -> i+\"\").collect(Collectors.joining());",
  "        // Your code goes here.\n        return \"\";", "      StringBuilder sb\
    \ = new StringBuilder();\n      for (int i = 0; i < a.length(); i++) {\n     \
    \   sb.append(a.charAt(i) == b.charAt(i) ? \"0\" : \"1\");\n      }\n      return\
    \ sb.toString();", '        return "";', "        String res = \"\";\n       \
    \ int a_len = a.length();\n        int b_len = b.length();\n        int max =\
    \ Math.max(a_len, b_len);\n        if (a_len < max) {\n            a = \"0\".repeat(max\
    \ - a_len) + a;\n        }\n        if (b_len < max) {\n            b = \"0\"\
    .repeat(max - b_len) + b;\n        }\n        for (int i = 0; i < max; i++) {\n\
    \            res += a.charAt(i) == b.charAt(i) ? \"0\" : \"1\";\n        }\n \
    \       return res;", "        // You cannot use the Java XOR operator (\"^\"\
    ).\n        char[] aChars = a.toCharArray();\n        char[] bChars = b.toCharArray();\n\
    \        char[] result = new char[aChars.length];\n        for (int i = 0; i <\
    \ aChars.length; i++) {\n            result[i] = aChars[i] != bChars[i] ? '1'\
    \ : '0';\n        }\n        return new String(result);", "        String result\
    \ = \"\";\n        char[] aa = a.toCharArray();\n        char[] bb = b.toCharArray();\n\
    \        int len = aa.length > bb.length ? aa.length : bb.length;\n        for\
    \ (int i = 0; i < len; i++) {\n            char ac = i < aa.length ? aa[i] : '0';\n\
    \            char bc = i < bb.length ? bb[i] : '0';\n            if (ac == bc)\
    \ {\n                result += \"0\";\n            } else {\n                result\
    \ += \"1\";\n            }\n        }\n        return result;", "        // put\
    \ your code here\n        char[] arrayA = a.toCharArray();\n        char[] arrayB\
    \ = b.toCharArray();\n        char[] arrayC = new char[arrayA.length];\n     \
    \   String finalResult = \"\";\n        for (int i = 0; i < arrayA.length; i++)\
    \ {\n            int x = Character.getNumericValue(arrayA[i]);\n            int\
    \ y = Character.getNumericValue(arrayB[i]);\n            int z = x ^ y;\n    \
    \        finalResult += z;\n        }\n        return finalResult;", "       \
    \ // From stack overflow\n        // https://stackoverflow.com/questions/12138986/string-to-binary-and-binary-to-string-java\n\
    \        byte[] byteA = a.getBytes();\n        byte[] byteB = b.getBytes();\n\
    \        byte[] byteC = new byte[byteA.length];\n        for (int i = 0; i < byteA.length;\
    \ i++) {\n            byteC[i] = (byte) (byteA[i] ^ byteB[i]);\n        }\n  \
    \      return new String(byteC);", "        int[] aDigits = new int[a.length()];\n\
    \        int[] bDigits = new int[b.length()];\n        int[] xor = new int[a.length()];\n\
    \        for (int i = 0; i < a.length(); i++) {\n            aDigits[i] = Character.getNumericValue(a.charAt(i));\n\
    \            bDigits[i] = Character.getNumericValue(b.charAt(i));\n          \
    \  xor[i] = aDigits[i] ^ bDigits[i];\n        }\n        return Arrays.toString(xor).replaceAll(\"\
    \\\\D\", \"\");", "        if (a.length() != b.length()) throw new RuntimeException(\"\
    Not same length\");\n        StringBuilder sb = new StringBuilder();\n       \
    \ for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i))\
    \ sb.append(\"0\");\n            else sb.append(\"1\");\n        }\n        return\
    \ sb.toString();", "        // Convert string to char array\n        char[] charsA\
    \ = a.toCharArray();\n        char[] charsB = b.toCharArray();\n        // Define\
    \ new char array with length = max(a.length, b.length)\n        char[] charsC\
    \ = new char[Math.max(charsA.length, charsB.length)];\n        // Fill it with\
    \ 0s\n        Arrays.fill(charsC, '0');\n        // Perform XOR on each pair of\
    \ bits and store it in charsC\n        for (int i = 0; i < charsA.length; i++)\
    \ {\n            if (charsA[i] == '1' ^ charsB[i] == '1')\n                charsC[i]\
    \ = '1';\n        }\n        // Convert result to String\n        return new String(charsC);",
  "\t    StringBuffer r = new StringBuffer();\n\t    for (int i = 0; i < a.length();\
    \ i++) {\n\t        int aDigit = Integer.parseInt(a.substring(i, i + 1));\n\t\
    \        int bDigit = Integer.parseInt(b.substring(i, i + 1));\n\t        r.append(aDigit\
    \ ^ bDigit);\n\t    }\n\t    return r.toString();", "        // Write your code\
    \ here\n        return \"\";", "        int x = Integer.parseInt(a, 2);\n    \
    \    int y = Integer.parseInt(b, 2);\n        StringBuilder sb = new StringBuilder();\n\
    \        int z = x ^ y;\n        while (z > 0) {\n            sb.append(z % 2);\n\
    \            z = z / 2;\n        }\n        sb.reverse();\n        return sb.toString();",
  "        if (a.length() != b.length()) {\n            throw new IllegalArgumentException(\"\
    a and b must be of equal length\");\n        }\n        char[] res = new char[a.length()];\n\
    \        for (int i = 0; i < a.length(); i++) {\n            res[i] = (a.charAt(i)\
    \ == b.charAt(i)) ? '0' : '1';\n        }\n        return new String(res);", " \
    \       final char[] ac = a.toCharArray();\n        final char[] bc = b.toCharArray();\n\
    \        final char[] cc = new char[ac.length];\n        for (int i = 0; i < ac.length;\
    \ i++) {\n            cc[i] = ac[i] == bc[i] ? '0' : '1';\n        }\n       \
    \ return new String(cc);", '        //TODO', "        // Assume inputs are of\
    \ equal length.\n        int n = a.length();\n        StringBuffer sb = new StringBuffer();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(a.charAt(i) == b.charAt(i)\
    \ ? \"0\" : \"1\");\n        }\n        return sb.toString();", "        // >>>\
    \ stringXor((\"010\"), (\"110\"))\n        // (\"100\")\n        // >>> stringXor((\"\
    100\"), (\"001\"))\n        // (\"101\")\n        // >>> stringXor((\"110\"),\
    \ (\"000\"))\n        // (\"110\")\n        // >>> stringXor((\"101\"), (\"111\"\
    ))\n        // (\"010\")\n        // >>> stringXor((\"011\"), (\"101\"))\n   \
    \     // (\"110\")\n        // >>> stringXor((\"001\"), (\"111\"))\n        //\
    \ (\"110\")\n        // >>> stringXor((\"010\"), (\"000\"))\n        // (\"010\"\
    )\n        // >>> stringXor((\"000\"), (\"011\"))\n        // (\"011\")\n    \
    \    // >>> stringXor((\"001\"), (\"011\"))\n        // (\"010\")\n        //\
    \ >>> stringXor((\"110\"), (\"101\"))\n        // (\"011\")\n        return \"\
    \";", "        String s = \"\";\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            if (a.charAt(i) == b.charAt(i))\n                s += \"0\";\n\
    \            else\n                s += \"1\";\n        }\n        return s;",
  "        int n = a.length();\n        int m = b.length();\n        char[] res =\
    \ new char[n];\n        for (int i = 0; i < n; i++) {\n            char c1 = a.charAt(i);\n\
    \            char c2 = b.charAt(i);\n            if (c1 == c2) {\n           \
    \     res[i] = '0';\n            } else {\n                res[i] = '1';\n   \
    \         }\n        }\n        return new String(res);", "        char[] aArr\
    \ = a.toCharArray();\n        char[] bArr = b.toCharArray();\n        char[] result\
    \ = new char[aArr.length];\n        int i = 0;\n        while (i < aArr.length)\
    \ {\n            if (aArr[i] == bArr[i]) {\n                result[i] = '0';\n\
    \            } else {\n                result[i] = '1';\n            }\n     \
    \       i += 1;\n        }\n        return new String(result);", "        String\
    \ result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n           \
    \ result += ((a.charAt(i) == b.charAt(i)) ? \"0\" : \"1\");\n        }\n     \
    \   return result;", "        String result = \"\";\n        // result = Integer.toBinaryString(Integer.parseInt(a,\
    \ 2) ^ Integer.parseInt(b, 2));\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            if (a.charAt(i) == b.charAt(i)) {\n                result +=\
    \ \"0\";\n            } else {\n                result += \"1\";\n           \
    \ }\n        }\n        return result;", "        int len = a.length();\n    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < len;\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i))\n                sb.append(\"\
    0\");\n            else\n                sb.append(\"1\");\n        }\n      \
    \  return sb.toString();", '        throw new RuntimeException("unimplemented");',
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i) ^ b.charAt(i));\n\
    \        }\n        return result.toString();", "        final int ALEN = a.length();\n\
    \        final int BLEN = b.length();\n        int n = 0;\n        char[] chars\
    \ = null;\n        if (ALEN == BLEN) {\n            n = ALEN;\n            chars\
    \ = new char[n];\n            for (int i = 0; i < n; i++) {\n                if\
    \ (a.charAt(i) == b.charAt(i)) {\n                    chars[i] = '0';\n      \
    \          } else {\n                    chars[i] = '1';\n                }\n\
    \            }\n        } else if (ALEN > BLEN) {\n            n = ALEN;\n   \
    \         chars = new char[n];\n            int zeros = ALEN - BLEN;\n       \
    \     for (int i = 0; i < zeros; i++) {\n                chars[i] = a.charAt(i);\n\
    \            }\n            for (int i = zeros; i < n; i++) {\n              \
    \  if (a.charAt(i) == b.charAt(i - zeros)) {\n                    chars[i] = '0';\n\
    \                } else {\n                    chars[i] = '1';\n             \
    \   }\n            }\n        } else {\n            n = BLEN;\n            chars\
    \ = new char[n];\n            int zeros = BLEN - ALEN;\n            for (int i\
    \ = 0; i < zeros; i++) {\n                chars[i] = b.charAt(i);\n          \
    \  }\n            for (int i = zeros; i < n; i++) {\n                if (a.charAt(i\
    \ - zeros) == b.charAt(i)) {\n                    chars[i] = '0';\n          \
    \      } else {\n                    chars[i] = '1';\n                }\n    \
    \        }\n        }\n        return new String(chars);", "        byte[] byteA\
    \ = a.getBytes();\n        byte[] byteB = b.getBytes();\n        byte[] byteResult\
    \ = new byte[byteA.length];\n        for (int i = 0; i < byteA.length; i++) {\n\
    \            byteResult[i] = (byte) (byteA[i] ^ byteB[i]);\n        }\n      \
    \  return new String(byteResult);", "        // >>> stringXor((\"010\"), (\"110\"\
    ))\n        // (\"100\")\n        //assertEquals(\"100\", stringXor(\"010\", \"\
    110\"));\n        // >>> stringXor((\"010\"), (\"010\"))\n        // (\"000\"\
    )\n        //assertEquals(\"000\", stringXor(\"010\", \"010\"));\n        // >>>\
    \ stringXor((\"111\"), (\"111\"))\n        // (\"000\")\n        //assertEquals(\"\
    000\", stringXor(\"111\", \"111\"));\n        // >>> stringXor((\"0101\"), (\"\
    0101\"))\n        // (\"0000\")\n        //assertEquals(\"0000\", stringXor(\"\
    0101\", \"0101\"));\n        //assertEquals(\"10101\", stringXor(\"0101\", \"\
    11111\"));\n        //assertEquals(\"10101\", stringXor(\"11111\", \"0101\"));\n\
    \        //assertEquals(\"11111\", stringXor(\"0101\", \"10101\"));\n        //assertEquals(\"\
    11111\", stringXor(\"10101\", \"0101\"));\n        //assertEquals(\"00000\", stringXor(\"\
    0101\", \"1010101\"));\n        //assertEquals(\"00000\", stringXor(\"1010101\"\
    , \"0101\"));\n        String result = \"\";\n        for (int i = 0; i < a.length();\
    \ i++) {\n            int aI = Integer.parseInt(a.substring(i, i + 1));\n    \
    \        int bI = Integer.parseInt(b.substring(i, i + 1));\n            if (aI\
    \ == bI) {\n                result += \"0\";\n            } else {\n         \
    \       result += \"1\";\n            }\n        }\n        return result;", " \
    \       if (a.length() != b.length()) {\n            throw new RuntimeException(\"\
    Strings must be of equal length\");\n        }\n        char[] as = a.toCharArray();\n\
    \        char[] bs = b.toCharArray();\n        char[] out = new char[as.length];\n\
    \        for (int i = 0; i < as.length; i++) {\n            if (as[i] == bs[i])\
    \ {\n                out[i] = '0';\n            } else {\n                out[i]\
    \ = '1';\n            }\n        }\n        return new String(out);", '        return
    "";', '        return new BigInteger(a, 2).xor(new BigInteger(b, 2)).toString(2);',
  "        // Implement this placeholder.\n        return \"\";", "        if (a.length()\
    \ != b.length()) {\n            throw new IllegalArgumentException(\"Strings must\
    \ be the same length\");\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();", " \
    \       int m = a.length();\n        int n = b.length();\n        int minLength\
    \ = Math.min(m, n);\n        char[] c = new char[minLength];\n        for (int\
    \ i = 0; i < minLength; i++) {\n            if (a.charAt(i) == b.charAt(i))\n\
    \                c[i] = '0';\n            else\n                c[i] = '1';\n\
    \        }\n        return new String(c);", "        // Your code here.\n    \
    \    char[] tempA = a.toCharArray();\n        char[] tempB = b.toCharArray();\n\
    \        String result = \"\";\n        for(int i = 0; i < tempA.length; i++){\n\
    \          if(tempA[i] == tempB[i]){\n            result += \"0\";\n         \
    \ }else{\n            result += \"1\";\n          }\n        }\n        return\
    \ result;", "        int[] c = new int[a.length()];\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            int a_val = Integer.parseInt(a.substring(i,\
    \ i + 1));\n            int b_val = Integer.parseInt(b.substring(i, i + 1));\n\
    \            if (a_val == b_val) {\n                c[i] = 0;\n            } else\
    \ {\n                c[i] = 1;\n            }\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < c.length; i++) {\n  \
    \          sb.append(c[i]);\n        }\n        return sb.toString();", "    \
    \    /* ... */\n        return null;", "        // Write code here.\n        char[]\
    \ aa = a.toCharArray();\n        char[] bb = b.toCharArray();\n        if (aa.length\
    \ < bb.length) {\n            char[] temp = aa;\n            aa = bb;\n      \
    \      bb = temp;\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = aa.length - 1, j = bb.length - 1; i >= 0; i--, j--) {\n\
    \            char ac = aa[i];\n            char bc = '0';\n            if (j >=\
    \ 0) {\n                bc = bb[j];\n            }\n            sb.append(ac ^\
    \ bc);\n        }\n        return sb.reverse().toString();", "        byte[] byteArray1\
    \ = a.getBytes();\n        byte[] byteArray2 = b.getBytes();\n        byte[] byteArray3\
    \ = new byte[byteArray1.length];\n        for (int i = 0; i < byteArray1.length;\
    \ i++) {\n            byteArray3[i] = (byte) (byteArray1[i] ^ byteArray2[i]);\n\
    \        }\n        return new String(byteArray3);", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return sb.toString();",
  "        String result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                result += \"0\"\
    ;\n            } else {\n                result += \"1\";\n            }\n   \
    \     }\n        return result;", "        String result = \"\";\n        String[]\
    \ num1 = a.split(\"\");\n        String[] num2 = b.split(\"\");\n        if (num1.length\
    \ == num2.length) {\n            for (int i = 0; i < num1.length; i++) {\n   \
    \             if (num1[i].equals(num2[i])) {\n                    result += \"\
    0\";\n                } else {\n                    result += \"1\";\n       \
    \         }\n            }\n        }\n        return result;", "        // throw\
    \ new UnsupportedOperationException(\"Not implemented\");\n        if (a.length()\
    \ != b.length()) {\n            return \"\";\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? \"0\" : \"1\");\n        }\n\
    \        return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                result.append(\"0\");\n            } else {\n\
    \                result.append(\"1\");\n            }\n        }\n        return\
    \ result.toString();", "        StringBuilder sb = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();", '        throw new
    UnsupportedOperationException("Not implemented");', '        return "";', '        return
    null;', "        if (a.length() != b.length())\n            throw new IllegalArgumentException(\"\
    A:length=\" + a.length() + \" != B:length=\" + b.length());\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i))\n                sb.append('0');\n\
    \            else\n                sb.append('1');\n        }\n        return\
    \ sb.toString();", "        String ret = \"\";\n        for (int i = 0; i < a.length();\
    \ i++) {\n            ret += (a.charAt(i) == b.charAt(i)) ? \"0\" : \"1\";\n \
    \       }\n        return ret;", "        if (a.length() != b.length()) {\n  \
    \          throw new IllegalArgumentException(\"Both strings must be of same length.\"\
    );\n        }\n        String result = \"\";\n        for (int i = 0; i < a.length();\
    \ i++) {\n            result += (a.charAt(i) == b.charAt(i)) ? \"0\" : \"1\";\n\
    \        }\n        return result;", "        int minLen = Math.min(a.length(),\
    \ b.length());\n        char[] aChars = a.toCharArray();\n        char[] bChars\
    \ = b.toCharArray();\n        char[] chars = new char[minLen];\n        for (int\
    \ i = 0; i < minLen; i++) {\n            chars[i] = (aChars[i] == bChars[i]) ?\
    \ '0' : '1';\n        }\n        return new String(chars);", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return\
    \ sb.toString();", "        if (a.length() != b.length()) throw new RuntimeException(\"\
    String lengths do not match.\");\n        StringBuilder c = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) c.append(\"0\");\n            else c.append(\"1\");\n        }\n\
    \        return c.toString();", "        // Fill in here\n        return \"\";",
  '        return "";', '        // Your code here!', "        String ans = \"\";\n\
    \        for (int i = 0; i < a.length(); i++) {\n            int first = Character.getNumericValue(a.charAt(i));\n\
    \            int second = Character.getNumericValue(b.charAt(i));\n          \
    \  if (first == second) {\n                ans += \"0\";\n            } else {\n\
    \                ans += \"1\";\n            }\n        }\n        return ans;",
  '        return "";', "        if (a.length() != b.length()) {\n            throw\
    \ new IllegalArgumentException();\n        }\n        // Convert both strings\
    \ to strings of ASCII bytes.\n        byte[] aBytes = a.getBytes();\n        byte[]\
    \ bBytes = b.getBytes();\n        byte[] cBytes = new byte[aBytes.length];\n \
    \       for (int i = 0; i < aBytes.length; i++) {\n            cBytes[i] = (byte)(aBytes[i]\
    \ ^ bBytes[i]);\n        }\n        return new String(cBytes);", '        return
    "";', "        StringBuilder str = new StringBuilder();\n        for (int i =\
    \ 0; i < a.length(); i++) {\n            str.append(a.charAt(i) == b.charAt(i)\
    \ ? \"0\" : \"1\");\n        }\n        return str.toString();", "        assert(a.length()\
    \ == b.length());\n        assert(a.chars().allMatch(c -> c == '0' || c == '1'));\n\
    \        assert(b.chars().allMatch(c -> c == '0' || c == '1'));\n        String\
    \ res = \"\";\n        for (int i = 0; i < a.length(); i++) {\n            int\
    \ x = Integer.parseInt(a.substring(i, i + 1));\n            int y = Integer.parseInt(b.substring(i,\
    \ i + 1));\n            res += (x ^ y);\n        }\n        return res;", "  \
    \      String result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n\
    \            result += (a.charAt(i) == b.charAt(i)) ? '0' : '1';\n        }\n\
    \        return result;", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();", " \
    \     String res = \"\";\n      for (int i = 0; i < a.length(); i++) {\n     \
    \   if (a.charAt(i) == b.charAt(i)) {\n          res += \"0\";\n        } else\
    \ {\n          res += \"1\";\n        }\n      }\n      return res;", "      \
    \  // your code here...\n        int lengA = a.length();\n        int lengB =\
    \ b.length();\n        char[] result = new char[Math.max(lengA, lengB)];\n   \
    \     for (int i = 0; i < Math.max(lengA, lengB); i++) {\n            if (i <\
    \ lengA && i < lengB) {\n                if (a.charAt(i) == b.charAt(i)) {\n \
    \                   result[i] = '0';\n                } else {\n             \
    \       result[i] = '1';\n                }\n            } else if (i < lengA)\
    \ {\n                result[i] = a.charAt(i);\n            } else {\n        \
    \        result[i] = b.charAt(i);\n            }\n        }\n        return new\
    \ String(result);", "        // ----------------------------------------\n   \
    \     // Write your code below.\n        // ----------------------------------------\n\
    \        char[] a_arr = a.toCharArray();\n        char[] b_arr = b.toCharArray();\n\
    \        char[] result = new char[a_arr.length];\n        for (int i = 0; i <\
    \ a_arr.length; i++) {\n            if (a_arr[i] == b_arr[i]) {\n            \
    \    result[i] = '0';\n            } else {\n                result[i] = '1';\n\
    \            }\n        }\n        return new String(result);\n        // ----------------------------------------",
  "        char[] out = new char[a.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                out[i]\
    \ = '0';\n            } else {\n                out[i] = '1';\n            }\n\
    \        }\n        return new String(out);", "        if (a.length() != b.length())\n\
    \            throw new IllegalArgumentException();\n        String result = \"\
    \";\n        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i)\
    \ == b.charAt(i))\n                result += \"0\";\n            else\n      \
    \          result += \"1\";\n        }\n        return result;", "        // Implement\
    \ me.\n        byte[] byteA = a.getBytes();\n        byte[] byteB = b.getBytes();\n\
    \        byte[] byteC = new byte[byteA.length];\n        for (int i = 0; i < byteA.length;\
    \ i++) {\n            byteC[i] = (byte) (byteA[i] ^ byteB[i]);\n        }\n  \
    \      return new String(byteC);", "        // Your code here\n        return\
    \ null;", "        // add your code here.\n        // (a, b) is one possible tuple\
    \ of inputs you can use\n        // (the other ones are: (a, c), (b, c), and (a,\
    \ d))\n        // You can change them to your liking but they have to be tuples\
    \ of Strings\n        Pair<String, String> inputs = new Pair<>(a, b);\n      \
    \  // Fill in this function to return the correct output\n        return \"\";",
  "        if (a.length() != b.length()) {\n            throw new IllegalArgumentException(\"\
    Cannot XOR strings of different lengths\");\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"0\"\
    );\n            } else {\n                sb.append(\"1\");\n            }\n \
    \       }\n        return sb.toString();", "        // Your code here.\n     \
    \   return \"\";", "        // your code here\n        return new BinaryNumber(a).xor(new\
    \ BinaryNumber(b)).toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                result.append(\"0\");\n            } else {\n\
    \                result.append(\"1\");\n            }\n        }\n        return\
    \ result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                result.append(\"0\");\n            } else {\n\
    \                result.append(\"1\");\n            }\n        }\n        return\
    \ result.toString();", "        int n = a.length();\n        int m = b.length();\n\
    \        if (n != m) {\n            throw new IllegalArgumentException();\n  \
    \      }\n        char[] x = a.toCharArray();\n        char[] y = b.toCharArray();\n\
    \        char[] z = new char[n];\n        for (int i = 0; i < n; i++) {\n    \
    \        if (x[i] == y[i]) {\n                z[i] = '0';\n            } else\
    \ {\n                z[i] = '1';\n            }\n        }\n        return new\
    \ String(z);", "        // Fill in your code here.\n        char[] aStr = a.toCharArray();\n\
    \        char[] bStr = b.toCharArray();\n        char[] result = new char[aStr.length];\n\
    \        for (int i = 0; i < aStr.length; i++) {\n            result[i] = (aStr[i]\
    \ == bStr[i]) ? '0' : '1';\n        }\n        return new String(result);", '        throw
    new RuntimeException("Implement me!");', "        if (a.length() == 0) return\
    \ b;\n        if (b.length() == 0) return a;\n        StringBuilder ret = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   if (a.charAt(i) == b.charAt(i)) {\n                ret.append(\"0\");\n  \
    \          } else {\n                ret.append(\"1\");\n            }\n     \
    \   }\n        return ret.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();", " \
    \       String result = \"\";\n        for (int i = 0; i < a.length(); i++) {\n\
    \            result += (a.charAt(i) ^ b.charAt(i));\n        }\n        return\
    \ result;", "        byte[] a_bytes = a.getBytes();\n        byte[] b_bytes =\
    \ b.getBytes();\n        int len = a_bytes.length;\n        byte[] result = new\
    \ byte[len];\n        for (int i = 0; i < len; i++) {\n            result[i] =\
    \ (byte)(a_bytes[i] ^ b_bytes[i]);\n        }\n        return new String(result);",
  "        //TODO\n        return \"\";", "        String ans = \"\";\n        for\
    \ (int i = 0; i < a.length(); i++) {\n            int numA = a.charAt(i) - '0';\n\
    \            int numB = b.charAt(i) - '0';\n            if (numA + numB == 1)\
    \ {\n                ans += \"1\";\n            } else {\n                ans\
    \ += \"0\";\n            }\n        }\n        return ans;", '        return null;',
  "        StringBuilder result = new StringBuilder();\n        int string_len = a.length();\n\
    \        for (int i = 0; i < string_len; i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                result.append(\"0\");\n            } else {\n\
    \                result.append(\"1\");\n            }\n        }\n        return\
    \ result.toString();", "        // Your code here\n        return null;", '        return
    "";', "        if (a.length() != b.length()) {\n            throw new IllegalArgumentException(\"\
    Inputs must be same length\");\n        }\n        String out = \"\";\n      \
    \  for (int i = 0; i < a.length(); i++) {\n            out += a.charAt(i) == b.charAt(i)\
    \ ? '0' : '1';\n        }\n        return out;", "        int[] aArr = new int[a.length()];\n\
    \        int[] bArr = new int[b.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            aArr[i] = Integer.parseInt(a.substring(i, i + 1));\n   \
    \     }\n        for (int i = 0; i < b.length(); i++) {\n            bArr[i] =\
    \ Integer.parseInt(b.substring(i, i + 1));\n        }\n        int[] result =\
    \ new int[aArr.length];\n        for (int i = 0; i < aArr.length; i++) {\n   \
    \         result[i] = aArr[i] ^ bArr[i];\n        }\n        StringBuffer sb =\
    \ new StringBuffer();\n        for (int i = 0; i < result.length; i++) {\n   \
    \         sb.append(result[i]);\n        }\n        return sb.toString();", " \
    \       // Write your code here...\n        char[] output = new char[a.length()];\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                output[i] = '0';\n            } else {\n   \
    \             output[i] = '1';\n            }\n        }\n        return new String(output);",
  "        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();", "        String result = \"\";\n \
    \       int[] aa = new int[a.length()];\n        int[] bb = new int[b.length()];\n\
    \        for (int i = 0; i < a.length(); i++) {\n            aa[i] = Integer.parseInt(String.valueOf(a.charAt(i)));\n\
    \        }\n        for (int i = 0; i < b.length(); i++) {\n            bb[i]\
    \ = Integer.parseInt(String.valueOf(b.charAt(i)));\n        }\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            if (aa[i] == bb[i]) {\n         \
    \       result += \"0\";\n            } else {\n                result += \"1\"\
    ;\n            }\n        }\n        return result;", "        // your code here\n\
    \        if (a.length() != b.length()) return \"\";\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"0\");\n\
    \            } else {\n                sb.append(\"1\");\n            }\n    \
    \    }\n        return sb.toString();", "      String result = \"\";\n      for\
    \ (int i = 0; i < a.length(); i++) {\n        int aInt = Integer.parseInt(a.substring(i,\
    \ i + 1));\n        int bInt = Integer.parseInt(b.substring(i, i + 1));\n    \
    \    result += String.valueOf(aInt ^ bInt);\n      }\n      return result;", '        //
    Fill in this implementation.', "        if (a.length() != b.length()) {\n    \
    \        return \"\";\n        }\n        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return result.toString();", "        //\
    \ Write your solution here.\n        return \"\";", "        int[] arr = new int[a.length()];\n\
    \        for (int i = 0; i < a.length(); i++) {\n            arr[i] = Character.getNumericValue(a.charAt(i))\
    \ ^ Character.getNumericValue(b.charAt(i));\n        }\n        return Arrays.toString(arr);",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();"]
stop_tokens:
- "\n    }\n"

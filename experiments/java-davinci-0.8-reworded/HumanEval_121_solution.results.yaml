language: java
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ if (lst.size() < 2) {\n            return 0;\n        } else {\n           \
    \ int n = lst.size();\n            return lst.get(0) + lst.get(2) + solution(new\
    \ ArrayList<Long>(lst.subList(1, n - 1)));\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.solution(tmpn_hfgvpi.java:22)\n\tat Problem.solution(tmpn_hfgvpi.java:22)\n\
    \tat Problem.main(tmpn_hfgvpi.java:26)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        // Your code goes here.\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8n1qlvc5.java:23)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your solution goes here\n        return 0l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi657xn72.java:22)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().reduce(\n            0l,\n            (acc, el) -> {\n \
    \               if (el % 2 != 0) {\n                    return acc;\n        \
    \        }\n                return acc + el;\n            }\n        );\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6tjo0g9n.java:29)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here!\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa05s4obj.java:22)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return -1;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvd_irbdn.java:21)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Given a non-empty array list of integers, return the sum of all of the odd\
    \ elements that are in even positions.\n        // Examples\n        // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l))))\n \
    \       // (12l)\n        // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n        // (9l)\n        // >>>\
    \ solution((new ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l,\
    \ (long)321l))))\n        // (0l)\n        long result = 0;\n        for (int\
    \ i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0) {\n             \
    \   if (lst.get(i) % 2 == 1) {\n                    result += lst.get(i);\n  \
    \              }\n            }\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Insert your solution here\n        int sum = 0;\n        for (int i = 0;\
    \ i < lst.size(); i+=2) {\n            if (lst.get(i) % 2 != 0) {\n          \
    \      sum += lst.get(i);\n            }\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(i -> i % 2 != 0).filter(i -> (lst.indexOf(i) % 2\
    \ == 0)).mapToLong(Number::longValue).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrie9oym.java:22)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code goes here\n        return lst.stream().filter(x -> x%2==1 && lst.indexOf(x)%2==0).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgokwi3mz.java:23)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> lst.get(i) %\
    \ 2 == 1)\n            .filter(i -> i % 2 == 0)\n            .mapToLong(i -> lst.get(i))\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().collect(Tuple.collector(Tuple::getLong0, Tuple::getLong1,\
    \ (a, b) -> a.add(b))).getLong1();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprk7dxt0s.java:18: error: invalid method reference\n        return\
    \ lst.stream().collect(Tuple.collector(Tuple::getLong0, Tuple::getLong1, (a, b)\
    \ -> a.add(b))).getLong1();\n                                                \
    \    ^\n  cannot find symbol\n    symbol:   method getLong0()\n    location: class\
    \ Tuple\n/tmp/tmprk7dxt0s.java:18: error: invalid method reference\n        return\
    \ lst.stream().collect(Tuple.collector(Tuple::getLong0, Tuple::getLong1, (a, b)\
    \ -> a.add(b))).getLong1();\n                                                \
    \                     ^\n  cannot find symbol\n    symbol:   method getLong1()\n\
    \    location: class Tuple\n2 errors\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        boolean isEven = true;\n        for (long i : lst)\
    \ {\n            if ((i % 2) == 1 && isEven) {\n                result += i;\n\
    \            }\n            isEven = !isEven;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long ret = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                ret += lst.get(i);\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(i -> i % 2 ==\
    \ 0)\n                .filter(i -> lst.get(i) % 2 == 1)\n                .mapToLong(i\
    \ -> lst.get(i))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long res = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                res += lst.get(i);\n\
    \            }\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long total = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n       \
    \     if (lst.get(i) % 2 == 1) {\n                total += lst.get(i);\n     \
    \       }\n        }\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ int index = 0;\n        long sum = 0;\n        while (index < lst.size()) {\n\
    \            Long elem = lst.get(index);\n            if (index % 2 == 0 && elem\
    \ % 2 == 1) {\n                sum += elem;\n            }\n            index++;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long ret = 0l;\n        for (int i = 0; i < lst.size(); i += 2) {\n        \
    \    if (lst.get(i) % 2 == 1) {\n                ret += lst.get(i);\n        \
    \    }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Set your solution here.\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptabpn02q.java:22)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ int size = lst.size();\n        long total = 0;\n        for (int i = 0; i <\
    \ size; i++) {\n            if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n       \
    \         total += lst.get(i);\n            }\n        }\n        return total;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ if(lst == null) return 0;\n        int sum = 0;\n        for(int i = 0; i <\
    \ lst.size(); i++) {\n            if(i % 2 == 0 && lst.get(i) % 2 != 0) {\n  \
    \              sum += lst.get(i);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                        .filter(i ->\
    \ i % 2 == 0)\n                        .filter(i -> lst.get(i) % 2 == 1)\n   \
    \                     .mapToLong(i -> lst.get(i))\n                        .sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return StreamSupport.stream(Spliterators.spliteratorUnknownSize(lst.listIterator(),\
    \ Spliterator.ORDERED), false).filter(a -> a % 2 != 0).collect(Collectors.summingLong(Long::longValue));\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0mj5vmx.java:21)\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(i -> i % 2 == 1).filter(i -> (lst.indexOf(i) + 1)\
    \ % 2 == 0).mapToLong(i -> i).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2km_6qv.java:21)\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code goes here\n        long res = 0;\n        if (lst.size() == 0)\
    \ {\n            return res;\n        }\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 0 && lst.get(i) % 2 != 0) {\n             \
    \   res += lst.get(i);\n            }\n        }\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                result += lst.get(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> (x % 2) == 1).filter(x -> (lst.indexOf(x) %\
    \ 2) == 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_vohbya.java:22)\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // >>> YOUR SOLUTION\n        // complete the solution method\n        if (lst.size()\
    \ == 0) {\n            return 0l;\n        } else {\n            long sum = 0l;\n\
    \            for (int i = 0; i < lst.size(); i++) {\n                if (i % 2\
    \ == 0 && lst.get(i) % 2 == 1) {\n                    sum += lst.get(i);\n   \
    \             }\n            }\n            return sum;\n        }\n    }\n  \
    \  public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ throw new NotImplementedException();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb_s1lint.java:18: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your solution goes here.\n        long result = 0;\n        for (int i =\
    \ 0; i < lst.size(); i += 2) {\n            Long l = lst.get(i);\n           \
    \ if (l % 2 == 1) {\n                result += l;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(i -> i % 2 ==\
    \ 0)\n                .filter(i -> lst.get(i) % 2 == 1)\n                .mapToLong(i\
    \ -> lst.get(i))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n      \
    \      if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                result += lst.get(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> (i % 2 == 0))\n\
    \            .filter(i -> (lst.get(i) % 2 == 1))\n            .mapToLong(i ->\
    \ lst.get(i))\n            .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvpvl2t5_.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        int i = 0;\n        for (long l : lst) {\n         \
    \   if (i % 2 == 0 && l % 2 == 1) {\n                sum += l;\n            }\n\
    \            i++;\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i+=2) {\n           \
    \ if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvpvl2t5_.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                        .filter(i ->\
    \ i % 2 == 0)\n                        .filter(i -> lst.get(i) % 2 == 1)\n   \
    \                     .mapToLong(i -> lst.get(i)).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(i -> (i % 2)\
    \ == 0)\n                .filter(i -> (lst.get(i) % 2) == 1)\n               \
    \ .mapToLong(i -> lst.get(i))\n                .sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 1;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgy_j7nf.java:21)\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Insert your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsx63mnwg.java:22)\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> i % 2 == 0)\n\
    \            .filter(i -> lst.get(i) % 2 == 1)\n            .mapToLong(i -> lst.get(i))\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code goes here\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i+=2) {\n            if (lst.get(i) % 2 != 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(l -> l % 2 == 1).filter(l -> lst.indexOf(l) % 2 ==\
    \ 0).mapToLong(l -> l).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4768umwy.java:22)\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(i -> i % 2 ==\
    \ 0)\n                .filter(i -> lst.get(i) % 2 == 1)\n                .mapToLong(i\
    \ -> lst.get(i))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        // -------------------------\n        // Write your code\
    \ below\n        // -------------------------\n        for (int i = 0; i < lst.size();\
    \ i += 2) {\n            if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        // -------------------------\n        // Write\
    \ your code above\n        // -------------------------\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011369
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> (x % 2) == 1).collect(Collectors.summingLong(x\
    \ -> x));\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps234pjtl.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(i -> i % 2 ==\
    \ 0)\n                .filter(i -> lst.get(i) % 2 == 1)\n                .mapToLong(i\
    \ -> lst.get(i))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here\n        int sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 0 && lst.get(i) % 2 != 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().reduce(0l, (x, y) -> (x + (y % 2 == 0 ? (y + 1) % 2 * y\
    \ : 0)));\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzp5n74ku.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(a -> a % 2 != 0).mapToLong(a -> (long)a).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpteco9c.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your Code Here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzrd5y6_.java:22)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 != 0).mapToLong(x -> x).reduce(0l, (x,\
    \ y) -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0tew95l.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(e -> e%2==1).filter(e -> lst.indexOf(e)%2==0).mapToLong(e\
    \ -> e).sum();\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp421rl5cr.java:22)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(x -> x % 2 ==\
    \ 0)\n                .filter(x -> lst.get(x) % 2 == 1)\n                .mapToLong(x\
    \ -> lst.get(x))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Given an array of integers\n        // Return the sum of all the even indexed\
    \ odd numbers\n        // Return a long\n        return lst.stream().filter(obj\
    \ -> (obj%2 == 1 && lst.indexOf(obj)%2 == 0)).reduce(0l, (obj1, obj2) -> (obj1\
    \ + obj2));\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdudm8qfg.java:25)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ throw new UnsupportedOperationException(\"Please remove this statement and implement\
    \ your solution.\");\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ remove this statement and implement your solution.\n\tat Problem.solution(tmp8d9h9t7c.java:18)\n\
    \tat Problem.main(tmp8d9h9t7c.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> Math.abs(x % 2) == 1).reduce(0l, (x, y) -> x\
    \ + y);\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptedziw32.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ int i = 0;\n        long ans = 0l;\n        while (i < lst.size()) {\n     \
    \       if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                ans += lst.get(i);\n\
    \            }\n            i += 1;\n        }\n        return ans;\n    }\n \
    \   public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long res = 0;\n        int i = 0;\n        while (i < lst.size()) {\n      \
    \      if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                res += lst.get(i);\n\
    \            }\n            i += 1;\n        }\n        return res;\n    }\n \
    \   public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ if (lst.size() <= 1) {\n            return 0;\n        }\n        long sum =\
    \ 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 ==\
    \ 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> i % 2 == 0)\n\
    \            .filter(i -> lst.get(i) % 2 == 1)\n            .mapToLong(i -> lst.get(i))\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().reduce(0l, (x, y) -> x + y);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_aokc9dt.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0l;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobcupl47.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> i % 2 == 0)\n\
    \            .filter(i -> lst.get(i) % 2 == 1)\n            .mapToLong(i -> lst.get(i))\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0l;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobcupl47.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   long num = lst.get(i);\n            if (num % 2 == 1) {\n                sum\
    \ += num;\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvpvl2t5_.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).mapToLong(x -> x).skip(1).filter(x\
    \ -> x % 2 == 1).sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm31c24bq.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                        .filter(x ->\
    \ x % 2 == 0)\n                        .filter(x -> lst.get(x) % 2 == 1)\n   \
    \                     .mapToLong(x -> lst.get(x)).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Type your solution here\n        long res = 0;\n        for (int i = 0; i\
    \ < lst.size(); i++) {\n            if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n\
    \                res += lst.get(i);\n            }\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Type your solution in Java here\n        long[] oddElements = lst.stream().filter(x\
    \ -> x % 2 != 0).toArray();\n        long[] evenIndices = Arrays.stream(oddElements).filter(x\
    \ -> x % 2 == 0).toArray();\n        return Arrays.stream(evenIndices).reduce(0,\
    \ (sum, x) -> sum + x);\n    }\n    public static void main(String[] args) {\n\
    \    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphf6q1qsy.java:19: error: incompatible types: Object[] cannot be\
    \ converted to long[]\n        long[] oddElements = lst.stream().filter(x -> x\
    \ % 2 != 0).toArray();\n                                                     \
    \                    ^\n1 error\n"
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long retval = 0;\n        for (int index = 0; index < lst.size(); index++) {\n\
    \            if (index % 2 == 0 && lst.get(index) % 2 == 1) {\n              \
    \  retval += lst.get(index);\n            }\n        }\n        return retval;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long solution = 0;\n        for (int i = 0; i < lst.size(); i++) {\n       \
    \     if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                solution += lst.get(i);\n\
    \            }\n        }\n        return solution;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ Long max = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                max += lst.get(i);\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011371
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().mapToLong(x -> x).filter(x -> x % 2 != 0).filter(x -> lst.indexOf(x)\
    \ % 2 == 0).sum();\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxk4hzppx.java:22)\n"
  stdout: ''
  timestamp: 1660011371
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(e -> (lst.indexOf(e) & 1) == 0).filter(e -> (e &\
    \ 1) == 1).mapToLong(e -> e).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1k1b6qe.java:22)\n"
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i+=2) {\n           \
    \ if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long[] ar1 = new long[lst.size()];\n        long oddSum = 0;\n        for (int\
    \ i = 0; i < lst.size(); i++){\n            ar1[i] = lst.get(i);\n           \
    \ if (i % 2 == 0 && ar1[i] % 2 != 0){\n                oddSum += ar1[i];\n   \
    \         }\n        }\n        return oddSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        // BEGIN SOLUTION\n        for (int i = 0; i < lst.size();\
    \ i += 2) {\n            if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        // END SOLUTION\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011371
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpax2umkk7.java:22)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ ArrayList<Long> odds = new ArrayList<Long>();\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n             \
    \   odds.add(lst.get(i));\n            }\n        }\n        long sum = 0;\n \
    \       for (int i = 0; i < odds.size(); i++) {\n            sum += odds.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().reduce(0l, (r, v, i) -> (i % 2 == 0 && v % 2 == 1) ? r +\
    \ v : r);\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz5iukyt9.java:18: error: no suitable method found for reduce(long,(r,v,i)->([...]v\
    \ : r)\n        return lst.stream().reduce(0l, (r, v, i) -> (i % 2 == 0 && v %\
    \ 2 == 1) ? r + v : r);\n                           ^\n    method Stream.reduce(Long,BinaryOperator<Long>)\
    \ is not applicable\n      (argument mismatch; incompatible parameter types in\
    \ lambda expression)\n    method Stream.<U>reduce(U,BiFunction<U,? super Long,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here!\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i += 2) {\n            if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011371
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long total = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n       \
    \     if (lst.get(i) % 2 == 1) {\n                total += lst.get(i);\n     \
    \       }\n        }\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> (x % 2) == 1).mapToLong(x -> x).reduce(0, (x,\
    \ y) -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0o3k1cx0.java:21)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 != 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // TODO: Fill in the solution\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfvv68b3x.java:22)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().collect(Collectors.toList()).stream().skip(1).collect(Collectors.toList()).stream().filter(n\
    \ -> (new BigInteger(n.toString())).testBit(0)).mapToLong(Long::longValue).reduce(0,\
    \ (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdzztz1x.java:21)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // YOUR CODE HERE\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 0 && lst.get(i) % 2 != 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long s = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            Long\
    \ val = lst.get(i);\n            if (val % 2 == 1 && i % 2 == 0) {\n         \
    \       s += val;\n            }\n        }\n        return s;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n      \
    \      if (lst.get(i) % 2 == 1) {\n                result += lst.get(i);\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> (i % 2 == 0))\n\
    \            .filter(i -> (lst.get(i) % 2 == 1))\n            .mapToLong(i ->\
    \ lst.get(i))\n            .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your Code Here\n        long result = 0;\n        long i = 0;\n        Iterator<Long>\
    \ it = lst.iterator();\n        while (it.hasNext()) {\n            if (i % 2\
    \ == 0 && it.next() % 2 != 0) {\n                result += it.next();\n      \
    \      }\n            i++;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypa87col.java:31)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(v -> lst.indexOf(v) % 2 == 0).filter(v -> v % 2 ==\
    \ 1).mapToLong(v -> v).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xa8asi2.java:22)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long s = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                s += lst.get(i);\n  \
    \          }\n        }\n        return s;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long acc = 0;\n        boolean is_odd = false;\n        for (int i = 0; i <\
    \ lst.size(); i++) {\n            if (is_odd && (lst.get(i) % 2 == 1)) {\n   \
    \             acc += lst.get(i);\n            }\n            is_odd = !is_odd;\n\
    \        }\n        return acc;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu6wwpfk.java:29)\n"
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long acc = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                acc += lst.get(i);\n\
    \            }\n        }\n        return acc;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here.\n        return lst.stream().filter(i -> i % 2 != 0).reduce(0l,\
    \ (a,b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpik1jkosq.java:22)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ int size = lst.size();\n        long result = 0;\n        for (int index = 0;\
    \ index < size; index += 2) {\n            long number = lst.get(index);\n   \
    \         if (number % 2 == 1) {\n                result += number;\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1)\n                sum += lst.get(i);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // BEGIN CODE HERE\n        long ret = 0l;\n        for (int i = 0; i < lst.size();\
    \ i += 2) {\n            if (lst.get(i) % 2 == 1) {\n                ret += lst.get(i);\n\
    \            }\n        }\n        return ret;\n        // END CODE HERE\n   \
    \ }\n    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> (lst.indexOf(x) % 2 == 0)).filter(x -> (x %\
    \ 2 == 1)).mapToLong(x -> x).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuapcp7r8.java:22)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        boolean isEven = true;\n        for (long num : lst)\
    \ {\n            if (isEven && num % 2 != 0) {\n                sum += num;\n\
    \            }\n            isEven = !isEven;\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfr3_14p3.java:21)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your solution here\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0onsrm1.java:22)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ ArrayList<Long> oddInEvenPositions = new ArrayList<Long>();\n        for (int\
    \ i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0 && lst.get(i) % 2\
    \ == 1) {\n                oddInEvenPositions.add(lst.get(i));\n            }\n\
    \        }\n        long sum = 0;\n        for (int i = 0; i < oddInEvenPositions.size();\
    \ i++) {\n            sum += oddInEvenPositions.get(i);\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(i -> i % 2 == 1).filter(i -> lst.indexOf(i) % 2 ==\
    \ 0).mapToLong(i -> i).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mo2m_la.java:22)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return (long)lst.stream().mapToLong(i -> i.longValue()).filter(i -> i % 2 ==\
    \ 1l).filter(i -> i % 2 == 0l).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwavy_rgg.java:21)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, Long::sum);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjq4iunm.java:21)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long val = (long)0l;\n        for (int i = 0; i < lst.size(); i++) {\n     \
    \       if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                val += lst.get(i);\n\
    \            }\n        }\n        return val;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n        .filter(i -> i % 2 == 0)\n  \
    \      .filter(i -> lst.get(i) % 2 == 1)\n        .mapToLong(i -> lst.get(i))\n\
    \        .sum();\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(idx -> idx % 2 ==\
    \ 0)\n            .filter(idx -> lst.get(idx) % 2 == 1)\n            .mapToLong(idx\
    \ -> lst.get(idx))\n            .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ int i = 0;\n        long result = 0;\n        while (i < lst.size()) {\n   \
    \         if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                result +=\
    \ lst.get(i);\n            }\n            i++;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long total = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n       \
    \     long e = lst.get(i);\n            if (e % 2 == 1) {\n                total\
    \ += e;\n            }\n        }\n        return total;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code here\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i+=2) {\n            long num = lst.get(i);\n            if (num % 2 != 0) {\n\
    \                sum += num;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long r = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n           \
    \ if (lst.get(i) % 2 == 1)\n                r += lst.get(i);\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return lst.stream().filter(i -> i % 2 == 1).reduce(0l,\
    \ (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuan4rdjc.java:24)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        long i = 0;\n        while (i < lst.size()) {\n     \
    \       if (lst.get((int)i) % 2 != 0 && i % 2 == 0) {\n                sum +=\
    \ lst.get((int)i);\n            }\n            i += 1;\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(e -> (e % 2 == 1)).filter(e -> (lst.indexOf(e) %\
    \ 2 == 0)).reduce(0l, (a, b) -> (a + b));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaz4tdx0.java:22)\n"
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ throw new RuntimeException(\"implement me!\");\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: implement me!\n\
    \tat Problem.solution(tmpt25g7uab.java:18)\n\tat Problem.main(tmpt25g7uab.java:21)\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7z9xwqh5.java:22)\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7z9xwqh5.java:22)\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7z9xwqh5.java:22)\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(v -> v % 2 != 0).reduce(0l, (acc, v) -> acc + v,\
    \ (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjlr3z7m.java:21)\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ final ArrayList<Long> nums = lst;\n        final boolean[] conditions = {\n\
    \            lst.size() > 0 && lst.size() < 1e5\n        };\n        final Pair<Object,\
    \ String>[] tests = {\n            new Pair<Object, String>(new Problem().solutionMethod(nums),\
    \ \"solutionMethod\")\n        };\n        TestSuite.test(conditions, tests);\n\
    \        return new Problem().solutionMethod(nums);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4ny0sua9.java:23: error: cannot find symbol\n            new Pair<Object,\
    \ String>(new Problem().solutionMethod(nums), \"solutionMethod\")\n          \
    \                                        ^\n  symbol:   method solutionMethod(ArrayList<Long>)\n\
    \  location: class Problem\n/tmp/tmp4ny0sua9.java:22: error: generic array creation\n\
    \        final Pair<Object, String>[] tests = {\n                            \
    \                 ^\n/tmp/tmp4ny0sua9.java:25: error: cannot find symbol\n   \
    \     TestSuite.test(conditions, tests);\n        ^\n  symbol:   variable TestSuite\n\
    \  location: class Problem\n/tmp/tmp4ny0sua9.java:26: error: cannot find symbol\n\
    \        return new Problem().solutionMethod(nums);\n                        \
    \    ^\n  symbol:   method solutionMethod(ArrayList<Long>)\n  location: class\
    \ Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        int i = 0;\n        while (i < lst.size()) {\n      \
    \      if (lst.get(i) % 2 != 0 && i % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n            i += 1;\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011374
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your code\n        if (lst.size() == 0) return 0;\n        long sum = 0;\n\
    \        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 0 &&\
    \ lst.get(i) % 2 != 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return (long)0l;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwq_51lrk.java:21)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1)\n                sum += lst.get(i);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long res = 0;\n        for (int i = 0; i < lst.size(); i+=2) {\n           \
    \ if (lst.get(i) % 2 == 1) {\n                res += lst.get(i);\n           \
    \ }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        int i = 0;\n        while (i < lst.size()) {\n      \
    \      if (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n            i += 1;\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long res = 0l;\n        for (int i = 0; i < lst.size(); i += 2) {\n        \
    \    if (lst.get(i) % 2 != 0) {\n                res += lst.get(i);\n        \
    \    }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ throw new Exception(\"Not implemented\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq6wb_22t.java:18: error: unreported exception Exception; must be\
    \ caught or declared to be thrown\n        throw new Exception(\"Not implemented\"\
    );\n        ^\n1 error\n"
  stdout: ''
  timestamp: 1660011374
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(e -> e % 2 == 1).reduce(0l, (a, b) -> a + b);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgetan8dv.java:21)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n      \
    \      if (lst.get(i) % 2 == 1) {\n                result += lst.get(i);\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011372
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0;\n        for (int i = 0; i < lst.size(); i++) {\n         \
    \   long current = lst.get(i);\n            if (i % 2 == 0 && current % 2 == 1)\
    \ {\n                result += current;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long result = 0l;\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_nyyaxa.java:22)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long acc = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                acc += lst.get(i);\n\
    \            }\n        }\n        return acc;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ if (lst.size() < 2) {\n            return 0;\n        }\n        long sum =\
    \ 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            long el =\
    \ lst.get(i);\n            if (el % 2 == 1) {\n                sum += el;\n  \
    \          }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0l;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobcupl47.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).mapToLong(x -> x).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphol1so9s.java:21)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> i % 2 == 0)\n\
    \            .filter(i -> lst.get(i) % 2 == 1)\n            .mapToLong(i -> lst.get(i))\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ Long r = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                r += lst.get(i);\n  \
    \          }\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ ArrayList<Long> even = new ArrayList<Long>();\n        ArrayList<Long> odd =\
    \ new ArrayList<Long>();\n        long res = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 0) {\n                even.add(lst.get(i));\n\
    \            } else {\n                odd.add(lst.get(i));\n            }\n \
    \       }\n        for (int i = 0; i < even.size(); i++) {\n            if (even.get(i)\
    \ % 2 != 0) {\n                res += even.get(i);\n            }\n        }\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return -1;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvd_irbdn.java:21)\n"
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n         \
    \   if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n            .filter(i -> i % 2 == 0)\n\
    \            .filter(i -> lst.get(i) % 2 == 1)\n            .mapToLong(i -> lst.get(i))\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011368
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long res = 0;\n        int i = 0;\n        for (long itm : lst) {\n        \
    \    if (i % 2 == 0 && itm % 2 == 1) {\n                res += itm;\n        \
    \    }\n            i += 1;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        //         System.out.println(lst);\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            if (lst.get(i)\
    \ % 2 == 1) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().collect(Collectors.partitioningBy(x -> x % 2 != 0)).get(true).stream().mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlulpyk3.java:21)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Your solution here\n        if (lst.size() == 0) {\n            return 0;\n\
    \        }\n        return IntStream.range(0, lst.size())\n        .filter(i ->\
    \ lst.get(i) % 2 == 1)\n        .filter(i -> i % 2 == 0)\n        .mapToLong(i\
    \ -> lst.get(i))\n        .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long res = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                res += lst.get(i);\n\
    \            }\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 != 0).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuiiaxwb1.java:22)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnuyi795.java:21)\n"
  stdout: ''
  timestamp: 1660011370
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // Insert solution here\n        long result = 0l;\n        for (int i = 0;\
    \ i < lst.size(); i+=2) {\n            if (lst.get(i) % 2 != 0) result += lst.get(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1)\n                sum += lst.get(i);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ throw new RuntimeException(\"Not Implemented\");\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented\n\
    \tat Problem.solution(tmpukggbmi5.java:18)\n\tat Problem.main(tmpukggbmi5.java:21)\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1)\n                sum += lst.get(i);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011373
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return IntStream.range(0, lst.size())\n                .filter(i -> i % 2 ==\
    \ 0)\n                .filter(i -> lst.get(i) % 2 == 1)\n                .mapToLong(i\
    \ -> lst.get(i))\n                .sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm3s1cyr0.java:18: error: incompatible types: <null> cannot be converted\
    \ to long\n        return null;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011375
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011367
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers, return the sum\
    \ of all of the odd elements that are in even positions.\n    // Examples\n  \
    \  // >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ // int counter = 0;\n        // long sum = 0;\n        // for (int i = 0; i\
    \ < lst.size(); i++) {\n        //     if (i % 2 == 0) {\n        //         if\
    \ (lst.get(i) % 2 != 0) {\n        //             sum += lst.get(i);\n       \
    \ //         }\n        //     }\n        // }\n        // return sum;\n     \
    \   return lst.stream().filter(x -> lst.indexOf(x) % 2 == 0).filter(x -> x % 2\
    \ != 0).reduce(0l, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_p42oj9.java:32)\n"
  stdout: ''
  timestamp: 1660011375

name: HumanEval_25_factorize
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return array list of prime factors of given integer in the\
  \ order from smallest to largest.\n    // Each of the factors should be array listed\
  \ number of times corresponding to how many times it appeares in factorization.\n\
  \    // Input number should be equal to the product of all factors\n    // >>> factorize((8l))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)2l)))\n   \
  \ // >>> factorize((25l))\n    // (new ArrayList<Long>(Arrays.asList((long)5l, (long)5l)))\n\
  \    // >>> factorize((70l))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)5l, (long)7l)))\n    public static ArrayList<Long> factorize(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(factorize((2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l)))));\n    assert(factorize((4l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)2l)))));\n    assert(factorize((8l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)2l)))));\n    assert(factorize((57l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)19l)))));\n    assert(factorize((3249l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)3l, (long)19l, (long)19l)))));\n\
  \    assert(factorize((185193l)).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l, (long)19l, (long)19l, (long)19l)))));\n    assert(factorize((20577l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)19l, (long)19l, (long)19l)))));\n\
  \    assert(factorize((18l)).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)3l, (long)3l)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

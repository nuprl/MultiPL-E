name: HumanEval_66_digitSum
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Task\n    // Write a function that takes a string as input\
  \ and returns the sum of the upper characters only'\n    // ASCII codes.\n    //\
  \ Examples:\n    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"\
  ))\n    // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
  helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n  \
  \  // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    public static long digitSum(String\
  \ s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(digitSum((\"\
  \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
  abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
  woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
  \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\")) ==\
  \ (327l));\n    }\n\n}\n"
completions: ['        // your code here', '        return 0;', "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0l;", '        return s.chars().filter(i -> i >= 65 && i <=
    90).sum();', "        return s.chars().map(c -> c - 'A' + 1).filter(n -> n > 0).sum();",
  '        return s.chars().filter(c -> c >= 65 && c <= 90).sum();', "        // ADD\
    \ CODE HERE\n        int res = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                res += c;\n            }\n        }\n        return res;",
  '        return s.chars().filter(Character::isUpperCase).sum();', "        //YOUR\
    \ CODE HERE\n        long result = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            int asc = (int) c;\n\
    \            if(asc >= 65 && asc <= 90) {\n                result += asc;\n  \
    \          }\n        }\n        return result;", '        return s.chars().filter(x
    -> x >= 65 && x <= 90).sum();', "        long res = 0l;\n        // Code Here\n\
    \        return res;", '        return (long)s.chars().filter(c -> Character.isUpperCase(c)).sum();',
  '        return s.chars().filter(x -> Character.isUpperCase(x)).sum();', '        return
    s.chars().filter(Character::isUpperCase).map(i -> (char) i).sum();', "       \
    \ long result = 0;\n        for (int i = 0; i < s.length(); i++) {\n         \
    \   char c = s.charAt(i);\n            if (c >= 'A' && c <= 'Z') {\n         \
    \       result += (int) c;\n            }\n        }\n        return result;",
  '        return s.chars().filter(c -> c >= 65 && c <= 90).sum();', "        // Your\
    \ code here\n        return 0;", "        long sum = 0l;\n        for (char c\
    \ : s.toCharArray()) {\n            int ascii = (int) c;\n            if (ascii\
    \ >= 65 && ascii <= 90) {\n                sum += ascii;\n            }\n    \
    \    }\n        return sum;", '        return s.chars().reduce(0, (a, x) -> x
    < 97 ? a + x : a);', '        return s.chars().filter(c -> c >= 65 && c <= 90).sum();',
  "        long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     char c = s.charAt(i);\n            if (c >= 'A' && c <= 'Z') {\n       \
    \         sum += c;\n            }\n        }\n        return sum;", '        return
    s.chars().filter(Character::isUpperCase).sum();', '        return 0;', '        return
    s.chars().reduce(0, (x, y) -> x + (y >= 65 && y <= 90 ? y : 0));', '        return
    s.chars().map(i -> i <= 90 ? i : 0).sum();', '        return s.chars().filter(Character::isUpperCase).sum();',
  "        String alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n        String[] alphabetArray\
    \ = alphabet.split(\"\");\n        String[] stringArray = s.split(\"\");\n   \
    \     long sum = 0l;\n        for (int i = 0; i < stringArray.length; i++) {\n\
    \            int num = 0;\n            int letterPos = Arrays.asList(alphabetArray).indexOf(stringArray[i].toLowerCase());\n\
    \            if (letterPos > -1) {\n                num = 65 + letterPos;\n  \
    \          }\n            if (stringArray[i].equals(stringArray[i].toUpperCase()))\
    \ {\n                sum += num;\n            }\n        }\n        return sum;",
  "        return Arrays.stream(s.split(\"\")).mapToLong(\n            c -> {\n  \
    \              return c.matches(\"[A-Z]\") ? (long) c.charAt(0) : 0l;\n      \
    \      }\n        ).sum();", "        long result = 0l;\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                result += s.charAt(i);\n            }\n        }\n      \
    \  return result;", '        return -1l;', '        return 0l;', "        long\
    \ ret = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char ch\
    \ = s.charAt(i);\n            if (ch >= 'A' && ch <= 'Z')\n                ret\
    \ += (int)ch;\n        }\n        return ret;", "        long sum = 0;\n     \
    \   for (char x : s.toCharArray()) {\n            if (x >= 'A' && x <= 'Z') {\n\
    \                sum += x;\n            }\n        }\n        return sum;", '        return
    s.chars().filter(x -> x >= 65 && x <= 90).sum();', "        if (s.length() ==\
    \ 0) {\n            return 0;\n        } else {\n            long sum = s.chars().filter(ch\
    \ -> ch >= 65 && ch <= 90).sum();\n            return sum;\n        }", "    \
    \    // Your code here\n        return null;", '        return s.chars().filter(Character::isUpperCase).sum();',
  "        // Your code here\n        return 0l;", '        return 0;', '        return
    s.chars().filter(Character::isUpperCase).sum();', "        char[] chars = s.toCharArray();\n\
    \        int sum = 0;\n        for (char c : chars) {\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                sum += (int) c;\n            }\n        }\n\
    \        return sum;", "        int result = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n        \
    \        result += s.charAt(i);\n        }\n        return result;", "       \
    \ // the or (|) operator\n        // this | operator is a bitwise operator to\
    \ test bit values\n        // the good thing about this operator is that it will\
    \ test each bit\n        // independently and give a result\n        // so if\
    \ we test the string s value to the ascii value of 'A'\n        // and then do\
    \ the or (|) bitwise operator with the ascii value of 'Z'\n        // we will\
    \ get a result that is one of these two values\n        // so now we can do some\
    \ magic on the result to get the sum of the\n        // uppercase letters\n  \
    \      // so we will create a stream out of the string\n        // and then we\
    \ test each character in the string to the two ascii\n        // values and then\
    \ make a list out of the result\n        // after that we will sum the numbers\
    \ in the list and return the result\n        long sum = s.chars().map(c -> c |\
    \ 'A' | 'Z').sum();\n        return sum;", "        return s.chars().map(e ->\
    \ e >= 'A' && e <= 'Z' ? e : 0).sum();", '        return s.chars().map(c -> (c
    >= 65 && c <= 90) ? c : 0).sum();', '        throw new UnsupportedOperationException("Write
    me!");', "        return IntStream.range(0, s.length())\n            .map(i ->\
    \ s.charAt(i))\n            .filter(c -> Character.isUpperCase(c))\n         \
    \   .map(c -> (int) c)\n            .sum();", '        throw new UnsupportedOperationException("Problem
    6 not implemented");', "        // input is a string\n        // output is a long\n\
    \        // this is like a modulus problem\n        int sum = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n    \
    \        int ascii_val = (int) c;\n            if (65 <= ascii_val && ascii_val\
    \ <= 90) {\n                sum += ascii_val;\n            }\n        }\n    \
    \    return sum;", "        long sum = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char a = s.charAt(i);\n            if (Character.isUpperCase(a))\n\
    \                sum += a;\n        }\n        return sum;", '        return 0l;',
  "        long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     int c = s.charAt(i);\n            if (c >= 65 && c <= 90) {\n          \
    \      sum += c;\n            }\n        }\n        return sum;", "        if\
    \ (s == null) {\n            return 0l;\n        }\n        long res = 0l;\n \
    \       for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                res += (int) c;\n\
    \            }\n        }\n        return res;", '        // Enter your code here',
  "        return \n            s.chars()\n            .map(i -> i >= 65 && i <= 90\
    \ ? i : 0)\n            .sum();", '        // Your code here', "        // Write\
    \ a function that takes a string as input and returns the sum of the upper characters\
    \ only'\n        // ASCII codes.\n        return (\n            (int)(\n     \
    \           s.chars().map(\n                    (int i) -> {\n               \
    \         //System.out.println(\"char \" + (char)i);\n                       \
    \ return ((char)i);\n                    }\n                ).filter(\n      \
    \              (char c) -> {\n                        //System.out.println(\"\
    isUpper \" + c);\n                        return (char)(((int)c) & 32) == 0;\n\
    \                    }\n                ).map(\n                    (char c) ->\
    \ {\n                        //System.out.println(\"ascii \" + (int)c);\n    \
    \                    return (int)c;\n                    }\n                ).sum()\n\
    \            )\n        );", '        return Arrays.stream(s.split("")).filter(a
    -> a.matches("[A-Z]")).mapToInt(a -> ((int) a.charAt(0))).sum();', "        //\
    \ #2\n        // return (long) s.chars().filter(x -> x > 64 && x < 91).sum();\n\
    \        // #3\n        // return (long) s.chars().filter(x -> x > 64 && x < 91).reduce(0,\
    \ Integer::sum);\n        // #4\n        // return (long) s.chars().filter(x ->\
    \ x > 64 && x < 91).boxed().collect(Collectors.summingInt(Integer::intValue));\n\
    \        // #5\n        // return (long) s.chars().filter(x -> x > 64 && x < 91).boxed().collect(Collectors.reducing(0,\
    \ Integer::sum));\n        // #6\n        // return (long) s.chars().filter(x\
    \ -> x > 64 && x < 91).boxed().collect(Collectors.reducing(0, Integer::sum, Integer::sum));\n\
    \        // #7\n        // return (long) s.chars().filter(x -> x > 64 && x < 91).reduce(0,\
    \ Integer::sum, Integer::sum);\n        // #8\n        // return (long) s.chars().filter(x\
    \ -> x > 64 && x < 91).boxed().collect(Collectors.reducing(0, Integer::sum, Integer::sum));\n\
    \        // #9\n        // return (long) s.chars().map(x -> x == Character.toUpperCase(x)\
    \ ? x : 0).sum();\n        // #10\n        // return (long) s.chars().map(x ->\
    \ x == Character.toUpperCase(x) ? x : 0).reduce(0, Integer::sum);\n        //\
    \ #11\n        // return (long) s.chars().map(x -> x == Character.toUpperCase(x)\
    \ ? x : 0).boxed().collect(Collectors.summingInt(Integer::intValue));\n      \
    \  // #12\n        // return (long) s.chars().map(x -> x == Character.toUpperCase(x)\
    \ ? x : 0).boxed().collect(Collectors.reducing(0, Integer::sum));\n        //\
    \ #13\n        // return (long) s.chars", "        int[] charList = s.chars().filter(c\
    \ -> Character.isUpperCase(c)).toArray();\n        long sum = 0;\n        for\
    \ (int i : charList) {\n            sum += i;\n        }\n        return sum;",
  '        return s.chars().filter(Character::isUpperCase).sum();', "        long\
    \ sum = 0l;\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                sum += (int) s.charAt(i);\n            }\n        }\n   \
    \     return sum;", '        return s.chars().map(c -> Character.isUpperCase(c)
    ? c : 0).sum();', '        return s.chars().filter(Character::isUpperCase).sum();',
  "        if (s == null)\n            return -1;\n        long sum = 0;\n       \
    \ for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) >= 'A' &&\
    \ s.charAt(i) <= 'Z')\n                sum += s.charAt(i);\n        }\n      \
    \  return sum;", '        return 0;', '        return s.chars().filter(c -> c
    >= 65 && c <= 90).sum();', '        return s.chars().filter(x -> x >= 65 && x
    <= 90).sum();', '        return (long)s.chars().filter(c -> c > 64 && c < 91).sum();',
  '        return 0l;', "        return s.chars().filter(i -> (char)i >= 'A' && (char)i\
    \ <= 'Z').sum();", '        return null;', '        return s.chars().filter(Character::isUpperCase).sum();',
  "        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    int a = (int) s.charAt(i);\n            sum += a;\n        }\n        return\
    \ sum;", "        // Your code here\n        return -1;", "        return s.chars().map(c\
    \ -> c - 'A' >= 0 && c - 'A' < 26 ? c : 0).sum();", "        return s.chars().map(i\
    \ -> i >= 'A' && i <= 'Z' ? i : 0).sum();", "        int sum = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z') {\n                sum += s.charAt(i);\n            }\n        }\n \
    \       return sum;", "        // Ascii ranges:\n        // A 65-90\n        //\
    \ a 97-122\n        // lowercase ints:\n        // 97-122\n        // uppercase\
    \ ints:\n        // 65-90\n        int lowerBound = 97;\n        int upperBound\
    \ = 122;\n        int ascSum = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            int ascii = (int) s.charAt(i);\n            if (ascii >= 65 &&\
    \ ascii <= 90) {\n                ascSum += ascii;\n            }\n        }\n\
    \        return ascSum;", "        return IntStream.range(0, s.length())\n   \
    \                     .map(i -> (int) s.charAt(i))\n                        .filter(c\
    \ -> c >= 65 && c <= 90)\n                        .sum();", '        return s.chars().filter(c
    -> Character.isUpperCase(c)).sum();', '        return 0l;', '        // enter
    your code here', '        return -1l;', "        // BEGIN SOLUTION\n        long\
    \ sum = 0;\n        for (char c : s.toCharArray()) {\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                sum += c;\n            }\n        }\n      \
    \  return sum;\n        // END SOLUTION", "        // Write your code here.\n\
    \        return Arrays.stream(s.split(\"\")).mapToLong(c -> c.charAt(0)).filter(i\
    \ -> i >= 65 && i <= 90).sum();", "        int sum = 0;\n        for (char c :\
    \ s.toCharArray()) {\n            if (c >= 'A' && c <= 'Z') {\n              \
    \  sum += (int) c;\n            }\n        }\n        return sum;", '        return
    s.chars().map(x -> x > 90 ? 0 : x).sum();', '        return 0;', '        return
    ((long) s.chars().filter(x -> x < 91).sum());', '        return (long)s.chars().reduce(0,
    (a, b) -> a + ((Character.isUpperCase(b)) ? b : 0));', "        long sum = 0l;\n\
    \        s.chars().forEach(e -> {\n            if (e >= 65 && e <= 90) {\n   \
    \             sum += e;\n            }\n        });\n        return sum;", " \
    \       int result = 0;\n        for (char c : s.toCharArray()) {\n          \
    \  if (c >= 'A' && c <= 'Z') {\n                result += c;\n            }\n\
    \        }\n        return result;", '        return s.chars().filter(Character::isUpperCase).sum();',
  "        final String string = s.toUpperCase();\n        return string.chars().map(x\
    \ -> {\n            char c = (char) x;\n            return (long) Character.getNumericValue(c);\n\
    \        }).filter(x -> {\n            return x >= 10;\n        }).reduce(0l,\
    \ (x, y) -> {\n            return x + y;\n        });", '        return s.chars().map(Character::toUpperCase).map(Character::getNumericValue).filter(i
    -> i >= 10).sum();', '        return s.chars().filter(c -> Character.isUpperCase(c)).sum();',
  '        return Arrays.stream(s.split("")).mapToLong(x -> x.chars().filter(c ->
    Character.isUpperCase(c)).sum()).sum();', '        return (long) s.chars().filter(Character::isUpperCase).sum();',
  '        return Stream.of(s.split("")).mapToLong(x -> x.matches("[A-Z]") ? Long.parseLong(x,
    36) - 9 : 0).sum();', "        long res = 0l;\n        for (char c : s.toCharArray())\n\
    \            if ((int) c >= 65 && (int) c <= 90)\n                res += (int)\
    \ c;\n        return res;", "        long sum = 0;\n        for (int i = 0; i\
    \ < s.length(); i++) {\n            int ascii = s.charAt(i);\n            if (Character.isUpperCase(ascii))\
    \ {\n                sum += ascii;\n            }\n        }\n        return sum;",
  "        return (int) IntStream.range(0, s.length())\n            .mapToObj(i ->\
    \ s.charAt(i))\n            .filter(c -> c > 64 && c < 91)\n            .mapToInt(c\
    \ -> (int) c)\n            .sum();", "        // Write your solution here!\n \
    \       return s.chars().filter(i -> i > 64 && i < 91).sum();", "        // SOLUTION_BEGIN\n\
    \        long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n     \
    \       char c = s.charAt(i);\n            if (Character.isUpperCase(c)) {\n \
    \               sum += (int) c;\n            }\n        }\n        return sum;\n\
    \        // SOLUTION_END", "        char[] ca = s.toCharArray();\n        long\
    \ total = 0;\n        for (char c : ca) {\n            int dec = c;\n        \
    \    if (dec >= 65 && dec <= 90) {\n                total += dec;\n          \
    \  }\n        }\n        return total;", "        long result = 0;\n        for\
    \ (char i : s.toCharArray()) {\n            if (i >= 'A' && i <= 'Z') {\n    \
    \            result += i;\n            }\n        }\n        return result;",
  '        throw new RuntimeException("Not Implemented");', "        int result =\
    \ 0;\n        int length = s.length();\n        for (int i = 0; i < length; i++)\
    \ {\n            int asc = s.charAt(i);\n            if (asc >= 65 && asc <= 90)\
    \ {\n                result += asc;\n            }\n        }\n        return\
    \ result;", '        return 0l;', '        return 0;', "        // Your code here.\n\
    \        return 0l;", "        long sum = 0;\n        for (char c : s.toCharArray())\
    \ {\n            if (Character.isUpperCase(c)) {\n                sum += (int)\
    \ c;\n            }\n        }\n        return sum;", "        // Write your code\
    \ here\n        long result = 0l;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            if (Character.isUpperCase(s.charAt(i)))\n                result\
    \ += s.charAt(i);\n        }\n        return result;", "        int sum = 0;\n\
    \        for (char c : s.toCharArray()) {\n            int tmp = (int) c;\n  \
    \          if (tmp >= 65 && tmp <= 90) {\n                sum += tmp;\n      \
    \      }\n        }\n        return sum;", '        return Arrays.stream(s.split("")).mapToLong(c
    -> c.matches("[A-Z]") ? c.codePointAt(0) : 0).sum();', "        // Sample code\n\
    \        // return s.chars().map(x -> x >= 65 && x <= 90 ? x : 0).sum();\n   \
    \     // It runs a regular function on each element of the stream, so it's not\
    \ functional.\n        // Fixing it:\n        return s.chars().map(x -> x >= 65\
    \ && x <= 90 ? x : 0).reduce(0, (sum, x) -> sum + x);", "        return IntStream.range(0,\
    \ s.length())\n            .map(i -> s.charAt(i))\n            .filter(ch -> ch\
    \ >= 'A' && ch <= 'Z')\n            .sum();", '        return Stream.of(s.split("")).filter(x
    -> x.toUpperCase().equals(x)).mapToLong(x -> (long)x.codePointAt(0)).sum();',
  "        long total = 0l;\n        for (int i = 0; i < s.length(); i++) {\n    \
    \        if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                total\
    \ += s.charAt(i);\n            }\n        }\n        return total;", '        return
    (long)0;', "        char c = 0;\n        long value = 0l;\n        for (int i\
    \ = 0; i < s.length(); i++) {\n            c = s.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                value += c;\n            }\n        }\n        return value;",
  "        if (s.length() == 0) {\n            return 0l;\n        }\n        int\
    \ val = s.codePointAt(0);\n        if (val >= 65 && val <= 90) {\n           \
    \ return val + digitSum(s.substring(1));\n        }\n        return digitSum(s.substring(1));",
  "        return s.chars().reduce(0, (acc, c) -> {\n            return Character.isUpperCase(c)\
    \ ? acc + c : acc;\n        });", "        long sum = 0;\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                sum += (int) s.charAt(i);\n            }\n        }\n   \
    \     return sum;", "        //BEGIN\n        String res = s.toUpperCase();\n\
    \        int l = res.length();\n        int sum = 0;\n        int i = 0;\n   \
    \     while (i < l) {\n            sum += res.charAt(i);\n            i++;\n \
    \       }\n        return sum;\n        //END", "        char[] chars = s.toCharArray();\n\
    \        long sum = 0;\n        for (char c : chars) {\n            if (c >= 'A'\
    \ && c <= 'Z') {\n                sum += c;\n            }\n        }\n      \
    \  return sum;", "        return s.chars().map(x -> x>='A' && x<='Z' ? x : 0).sum();",
  '        return s.chars().map(i -> (i - 64) * (i - 64) * (i - 64)).sum();', "  \
    \      return (long)\n                s.chars()\n                        .filter(Character::isUpperCase)\n\
    \                        .sum();", '        return s.chars().filter(a -> a > 64
    && a < 91).sum();', '        return 0l;', "        // BEGIN SOLUTION\n       \
    \ return s.chars().mapToObj(Integer::valueOf).filter(i -> i > 64 && i < 91).mapToLong(i\
    \ -> i).sum();\n        // END SOLUTION", "        // \"string\" is a sequence\
    \ of characters.\n        // \"char\" is a 2-byte type in Java.\n        // In\
    \ ASCII, uppercase characters have codes in the range [65, 90]\n        long sum\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += c;\n        \
    \    }\n        }\n        return sum;", '        return (long) s.chars().filter(Character::isUpperCase).sum();',
  "        char[] arr = s.toCharArray();\n        long num = 0;\n        for (char\
    \ ch : arr) {\n            if (Character.isUpperCase(ch)) {\n                num\
    \ += ch;\n            }\n        }\n        return num;", '        return 0;',
  '        return (long)s.chars().filter(x -> x >= 65 && x <= 90).sum();', '        //
    Your code here', "        long ans = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (Character.isUpperCase(s.charAt(i))) {\n            \
    \    ans += s.charAt(i);\n            }\n        }\n        return ans;", "  \
    \      // Solution\n        // Convert the given string to an array of characters\n\
    \        // then filter out the upper case characters and use\n        // the\
    \ ASCII codes of those upper case characters to\n        // return the sum.\n\
    \        return s.chars()\n            .filter(x -> Character.isUpperCase(x))\n\
    \            .sum();", "        // return (long)s.chars().filter(c -> c >= 65\
    \ && c <= 90).sum();\n        long sum = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (c >= 65 && c <= 90)\
    \ {\n                sum += c;\n            }\n        }\n        return sum;",
  '        return s.chars().filter(i -> i >= 65 && i <= 90).sum();', '        return
    0l;', "        return s.chars().map(c -> c >= 'A' && c <= 'Z' ? c : 0).sum();",
  "        // bin/compile-and-run Problem.java\n        return s.chars().map(c ->\
    \ c > 64 && c < 91 ? c : 0).sum();", '        return s.chars().filter(c -> Character.isUpperCase(c)).map(Character::getNumericValue).sum();',
  "        long sum = 0;\n        for (char i : s.toCharArray()) {\n            if\
    \ (Character.isUpperCase(i)) {\n                sum += (int) i;\n            }\n\
    \        }\n        return sum;", "        // TODO\n        return 0;", "    \
    \    long sum = 0;\n        for (char c : s.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sum += (int) c;\n            }\n        }\n        return\
    \ sum;", '        return (int) s.chars().filter(Character::isUpperCase).sum();',
  '        return (0l);', "        long sum = 0l;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c))\n\
    \                sum += c;\n        }\n        return sum;", '        return 0;',
  "\t\t// Add your solution here!\n        return Arrays.stream(s.split(\"\")).mapToLong(e\
    \ -> e.charAt(0)).filter(c -> c >= 'A' && c <= 'Z').sum();", "        return s.chars().map(Character::toUpperCase).filter(c\
    \ -> c >= 'A' && c <= 'Z').sum();", "        if (s == null) {\n            return\
    \ 0l;\n        }\n        return s.codePoints().filter(cp -> cp >= 'A' && cp <=\
    \ 'Z').sum();", "        long solution = 0;\n        // Your Code Here\n     \
    \   return solution;", "        // Write your code here\n        char[] uppers\
    \ = s.toUpperCase().toCharArray();\n        long res = 0;\n        for (char i\
    \ : uppers) {\n            res += i;\n        }\n        return res;", '        return
    s.chars().map(x -> Character.isUpperCase(x) ? x : 0).sum();', "        return\
    \ s.chars().map(c -> c >= 'A' && c <= 'Z' ? c : 0).sum();", '        // Your Code
    Here.', "        long ans = 0;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            int x = (int) c;\n           \
    \ if (x > 64 && x < 91) {\n                ans += x;\n            }\n        }\n\
    \        return ans;", "        long sum = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            sum += s.charAt(i);\n        }\n        return sum;", " \
    \       long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      char ch = s.charAt(i);\n            if (ch >= 'A' && ch <= 'Z') {\n   \
    \             sum += ch;\n            }\n        }\n        return sum;", "  \
    \      return s.chars().filter(p -> p >= 'A' && p <= 'Z').sum();", '        return
    Arrays.stream(s.split("")).filter(x -> x.matches("[A-Z]")).mapToLong(x -> (long)x.charAt(0)).sum();',
  '        return s.chars().reduce(0, (acc, x) -> Character.isUpperCase(x) ? acc +
    x : acc);', "        // Your Code Here\n        return 0l;", "        return s.chars().filter(c\
    \ -> c >= 'A' && c <= 'Z').sum();", "        return Long.valueOf(s.chars().filter(i\
    \ -> i > 'Z').sum());", "        return s.chars().map(i -> i >= 'A' && i <= 'Z'\
    \ ? i : 0).sum();", '        return Stream.of(s.split("")).filter(x -> x.matches("[A-Z]")).mapToLong(x
    -> (long) x.charAt(0)).sum();', "        long sum = 0;\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                sum += s.charAt(i);\n            }\n        }\n        return\
    \ sum;", '        return s.chars().filter(i -> Character.isUpperCase(i)).sum();',
  "        if (s.length() == 0) {\n            return 0l;\n        }\n        long\
    \ res = 0l;\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                res += (int)s.charAt(i);\n            }\n        }\n    \
    \    return res;", "        long sum = 0;\n        for (char c : s.toCharArray())\
    \ {\n            if (Character.isUpperCase(c))\n                sum += (int) c;\n\
    \        }\n        return sum;", "        return s.chars().map(c -> c >= 'A'\
    \ && c <= 'Z' ? c : 0).sum();", "\t\n\treturn 1;", "        return s.chars().filter(i\
    \ -> i >= 'A' && i <= 'Z').sum();", '        return (long)s.chars().filter(x ->
    x >= 65 && x <= 90).sum();', "        int res = 0;\n        for (int i = 0; i\
    \ < s.length(); i++) {\n            int code = (int) s.charAt(i);\n          \
    \  if (code >= 65 && code <= 90) {\n                res += code;\n           \
    \ }\n        }\n        return res;", '        return 0l;', "        long result\
    \ = 0;\n        for (char c : s.toCharArray()) {\n            int characterAscii\
    \ = (int) c;\n            if (characterAscii >= 65 && characterAscii <= 90) {\n\
    \                result += characterAscii;\n            }\n        }\n       \
    \ return result;", "        // Write your code here\n        return (long)1;",
  "        long sum = 0;\n        for (char ch : s.toCharArray()) {\n            if\
    \ (Character.isUpperCase(ch)) {\n                sum += (int) ch;\n          \
    \  }\n        }\n        return sum;", "      int sum = 0;\n      for (int i =\
    \ 0; i < s.length(); i++) {\n        int ascii = (int) s.charAt(i);\n        if\
    \ (ascii >= 65 && ascii <= 90) {\n          sum += ascii;\n        }\n      }\n\
    \      return sum;", "        long sum = 0;\n        for (char c : s.toCharArray())\
    \ {\n            if (c >= 'A' && c <= 'Z') {\n                sum += c;\n    \
    \        }\n        }\n        return sum;", "        return IntStream.range(0,\
    \ s.length())\n                .map(i -> (int) s.charAt(i))\n                .filter(c\
    \ -> c >= 65 && c <= 90)\n                .sum();", '        return s.chars().map(i
    -> Character.isUpperCase(i) ? i : 0).sum();', "        char[] chars = s.toCharArray();\n\
    \        int result = 0;\n        for (char c : chars) {\n            if (c >=\
    \ 'A' && c <= 'Z') {\n                result += c;\n            }\n        }\n\
    \        return result;", '        return -1l;', "        long ans = 0;\n    \
    \    for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                ans += s.charAt(i);\n            }\n        }\n        return\
    \ ans;", "        // BEGIN\n        return -1;\n        // END", "        long\
    \ res = 0;\n        for (char c : s.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                res += (int) c;\n            }\n        }\n        return\
    \ res;", "        // write your code here\n        return 0l;", '        return
    (long)s.chars().filter(i -> i >= 65 && i <= 90).sum();', "        int len = s.length();\n\
    \        long sum = 0;\n        for (int i = 0; i < len; i++) {\n            if\
    \ (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                sum += s.charAt(i);\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    for (char c : s.toCharArray()) {\n            if (Character.isUpperCase(c))\
    \ {\n                sum += (int) c;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isUpperCase(c))\
    \ {\n                sum += (int) c;\n            }\n        }\n        return\
    \ sum;"]
stop_tokens:
- "\n    }\n"

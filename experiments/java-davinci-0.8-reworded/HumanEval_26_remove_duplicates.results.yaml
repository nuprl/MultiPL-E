language: java
name: HumanEval_26_remove_duplicates
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> hashmap = new HashMap<Long, Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Long key = numbers.get(i);\n\
    \            if (hashmap.containsKey(key)) {\n                hashmap.put(key,\
    \ hashmap.get(key) + 1);\n            } else {\n                hashmap.put(key,\
    \ 1L);\n            }\n        }\n        ArrayList<Long> out = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Long key = numbers.get(i);\n\
    \            if (hashmap.get(key) == 1) {\n                out.add(key);\n   \
    \         }\n        }\n        return out;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mghtcxv.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakcbbame.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // write your code here\n        return numbers;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp780nl8bo.java:20)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (Long number : numbers) {\n            if (!result.contains(number)) {\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2e5zhhfi.java:25)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> numbers_ = new ArrayList<Long>();\n    \
    \    for (long number : numbers) {\n            if (!numbers_.contains(number))\
    \ {\n                numbers_.add(number);\n            }\n        }\n       \
    \ return numbers_;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9r4g50d.java:25)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> uniques = new ArrayList<Long>();\n     \
    \   for (Long number : numbers) {\n            if (!uniques.contains(number))\
    \ {\n                uniques.add(number);\n            }\n        }\n        return\
    \ uniques;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzb0hu94m.java:25)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        throw new UnsupportedOperationException(\"This operation\
    \ is not yet supported.\");\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: This\
    \ operation is not yet supported.\n\tat Problem.removeDuplicates(tmpd4cnprj1.java:14)\n\
    \tat Problem.main(tmpd4cnprj1.java:17)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        LinkedHashSet<Long> newNumbers = new LinkedHashSet<>();\n\
    \        for (Long number : numbers) {\n            newNumbers.add(number);\n\
    \        }\n        return new ArrayList<Long>(newNumbers);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94tbqcqg.java:23)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // TODO: Implement Method\n        return null;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp_i98a56q.java:18)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n      return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptgjssewk.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        //\n        // BEGIN SOLUTION\n        //\n        for (int\
    \ i = 0; i < numbers.size(); i++) {\n            for (int j = 0; j < numbers.size();\
    \ j++) {\n                if (i != j && numbers.get(i).equals(numbers.get(j)))\
    \ {\n                    numbers.remove(j);\n                    numbers.remove(i);\n\
    \                    i--;\n                    break;\n                }\n   \
    \         }\n        }\n        return numbers;\n        //\n        // END SOLUTION\n\
    \        //\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Your code here\n        return new ArrayList<Long>();\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffx2kl82.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        //YOUR CODE HERE\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpzp5vzir4.java:18)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        throw new UnsupportedOperationException(\"Problem not solved\
    \ yet.\");\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ not solved yet.\n\tat Problem.removeDuplicates(tmp69qlc4h8.java:14)\n\tat Problem.main(tmp69qlc4h8.java:17)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for\
    \ (Long number : numbers) {\n            if (!ans.contains(number)) {\n      \
    \          ans.add(number);\n            }\n        }\n        return ans;\n \
    \   }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo38f_p8k.java:25)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // IMPLEMENT ME\n        Set<Long> set = new HashSet<Long>();\n\
    \        for (Long number : numbers) {\n            set.add(number);\n       \
    \ }\n        return new ArrayList<Long>(set);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp68oy9hoo.java:24)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Long> set = new HashMap<Long, Long>();\n        for (Long l :\
    \ numbers) {\n            if (set.containsKey(l)) {\n                set.put(l,\
    \ set.get(l) + 1);\n            } else {\n                set.put(l, 1l);\n  \
    \          }\n        }\n        for (Long l : numbers) {\n            if (set.get(l)\
    \ == 1) {\n                result.add(l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return (ArrayList<Long>) numbers.stream().distinct().collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4c4ng0_3.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  int prevSize = -1;\n        // TODO:\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpke8jhowq.java:21)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Set<Long> set = new HashSet<Long>();\n        ArrayList<Long>\
    \ list = new ArrayList<Long>();\n        for (Long number : numbers) {\n     \
    \       if (!set.contains(number)) {\n                set.add(number);\n     \
    \           list.add(number);\n            }\n        }\n        return list;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdl7zckfl.java:27)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        if (numbers == null) {\n            return null;\n     \
    \   }\n        HashSet<Long> seen = new HashSet<Long>();\n        HashSet<Long>\
    \ repeated = new HashSet<Long>();\n        for (Long number : numbers) {\n   \
    \         if (seen.contains(number)) {\n                repeated.add(number);\n\
    \            } else {\n                seen.add(number);\n            }\n    \
    \    }\n        numbers.removeAll(repeated);\n        return numbers;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  // put your code here\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpelxn3rk_.java:20)\n"
  stdout: ''
  timestamp: 1660011044
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mghtcxv.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        if (numbers == null) {\n            return numbers;\n  \
    \      }\n        for (int i = numbers.size() - 1; i >= 0; i--) {\n          \
    \  if (Collections.frequency(numbers, numbers.get(i)) > 1) {\n               \
    \ numbers.remove(i);\n            }\n        }\n        return numbers;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2xm2guk.java:27)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        ArrayList<Long>\
    \ dups = new ArrayList<Long>();\n        for (Long num : numbers) {\n        \
    \    if (ans.contains(num)) {\n                dups.add(num);\n            } else\
    \ {\n                ans.add(num);\n            }\n        }\n        ans.removeAll(dups);\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> new_array = new ArrayList<Long>();\n   \
    \     for (Long i : numbers) {\n            if (Collections.frequency(numbers,\
    \ i) == 1) {\n                new_array.add(i);\n            }\n        }\n  \
    \      return new_array;\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakcbbame.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n \
    \       // count the number of times each number occurs\n        for (Long x :\
    \ numbers) {\n            Long y = map.get(x);\n            if (y == null) {\n\
    \                map.put(x, (long)1);\n            } else {\n                map.put(x,\
    \ y + (long)1);\n            }\n        }\n        // remove duplicates\n    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        for (Long x : numbers)\
    \ {\n            Long y = map.get(x);\n            if (y == (long)1) {\n     \
    \           result.add(x);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        long[] input = numbers.stream().mapToLong(value -> value).toArray();\n\
    \        long[] output = new long[input.length];\n        int newSize = 0;\n \
    \       for (int i = 0; i < input.length; i++) {\n            boolean found =\
    \ false;\n            for (int j = 0; j < i; j++) {\n                if (input[i]\
    \ == input[j]) {\n                    found = true;\n                    break;\n\
    \                }\n            }\n            if (!found) {\n               \
    \ output[newSize++] = input[i];\n            }\n        }\n        ArrayList<Long>\
    \ solution = new ArrayList<Long>();\n        for (int i = 0; i < newSize; i++)\
    \ {\n            solution.add(output[i]);\n        }\n        return solution;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpppo269j1.java:38)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Your code here.\n        // You can use the method contains()\
    \ of the ArrayList class to check whether a list already contains a number or\
    \ not.\n        // Example: If you have a list named numbers that contains (long)1l,\
    \ (long)2l, (long)3l, and you want to check whether it contains (long)2l, you\
    \ can use numbers.contains((long)2l).\n        // If you need help with syntax,\
    \ refer to the Java quick reference in the syllabus, or the Java API, or just\
    \ ask!\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa1n0ffxq.java:18: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // REPLACE WITH YOUR CODE\n        return new ArrayList<Long>();\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_e38937.java:19)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        final HashMap<Long, Long> m = new HashMap<Long, Long>();\n\
    \        final ArrayList<Long> l = new ArrayList<Long>();\n        for (Long i\
    \ : numbers) {\n            if (m.containsKey(i)) {\n                m.put(i,\
    \ m.get(i) + 1l);\n            } else {\n                m.put(i, 1l);\n     \
    \       }\n        }\n        for (Long i : numbers) {\n            if (m.get(i)\
    \ == 1l) {\n                l.add(i);\n            }\n        }\n        return\
    \ l;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Write your code here\n        return null;\n    }\n \
    \   public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp2h8eelsa.java:18)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Boolean> dups = new HashMap<Long, Boolean>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num\
    \ : numbers) {\n            if (dups.containsKey(num)) {\n                if (dups.get(num)\
    \ == false) {\n                    dups.put(num, true);\n                }\n \
    \           } else {\n                dups.put(num, false);\n                result.add(num);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp367u9ir.java:31)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        int size = numbers.size();\n        HashMap<Long, Integer>\
    \ hm = new HashMap<Long, Integer>();\n        for (int i = 0; i < size; i++) {\n\
    \            long number = numbers.get(i);\n            if (hm.containsKey(number))\
    \ {\n                hm.put(number, hm.get(number) + 1);\n            } else {\n\
    \                hm.put(number, 1);\n            }\n        }\n        for (int\
    \ i = 0; i < size; i++) {\n            long number = numbers.get(i);\n       \
    \     if (hm.get(number) > 1) {\n                numbers.remove(i);\n        \
    \        size--;\n                i--;\n            }\n        }\n        return\
    \ numbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> t = new ArrayList<Long>();\n        // >>> numbers\n      \
    \  // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)2l,\
    \ (long)4l)))\n        for (int i = 0; i < numbers.size(); i++) {\n          \
    \  if (t.contains(numbers.get(i))) {\n                continue;\n            }\n\
    \            if (result.contains(numbers.get(i))) {\n                result.remove(numbers.get(i));\n\
    \                t.add(numbers.get(i));\n            } else {\n              \
    \  result.add(numbers.get(i));\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        throw new UnsupportedOperationException(\"Problem.removeDuplicates\
    \ has not been implemented yet.\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.removeDuplicates\
    \ has not been implemented yet.\n\tat Problem.removeDuplicates(tmpnhwk3_j3.java:14)\n\
    \tat Problem.main(tmpnhwk3_j3.java:17)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> comp = new ArrayList<Long>();\n        for (Long number : numbers)\
    \ {\n            if (!comp.contains(number)) {\n                comp.add(number);\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcseu_134.java:27)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> output = new ArrayList<Long>();\n      \
    \  for (Long num : numbers) {\n            if (!output.contains(num)) {\n    \
    \            output.add(num);\n            }\n        }\n        return output;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy_vh0lh.java:25)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (int i = 0; i < numbers.size(); i++) {\n            if (Collections.frequency(numbers,\
    \ numbers.get(i)) == 1) {\n                result.add(numbers.get(i));\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> results = new ArrayList<Long>();\n     \
    \   ArrayList<Long> toRemove = new ArrayList<Long>();\n        for (int idx1 =\
    \ 0; idx1 < numbers.size(); idx1++) {\n            int occurrences = 0;\n    \
    \        for (int idx2 = 0; idx2 < numbers.size(); idx2++) {\n               \
    \ if (numbers.get(idx1).equals(numbers.get(idx2))) {\n                    occurrences\
    \ += 1;\n                }\n            }\n            if (occurrences == 1) {\n\
    \                results.add(numbers.get(idx1));\n            }\n        }\n \
    \       return results;\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        HashMap<Long,\
    \ Boolean> have_seen = new HashMap<Long, Boolean>();\n        for (Long elem :\
    \ numbers) {\n            if (!have_seen.containsKey(elem)) {\n              \
    \  have_seen.put(elem, true);\n                ans.add(elem);\n            }\n\
    \        }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyb3uiwxn.java:27)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Integer> hm = new HashMap<Long, Integer>();\n        for (int\
    \ i = 0; i < numbers.size(); i++) {\n            if (hm.containsKey(numbers.get(i)))\
    \ {\n                hm.put(numbers.get(i), hm.get(numbers.get(i)) + 1);\n   \
    \         } else {\n                hm.put(numbers.get(i), 1);\n            }\n\
    \        }\n        for (int i = 0; i < numbers.size(); i++) {\n            if\
    \ (hm.get(numbers.get(i)) == 1) {\n                result.add(numbers.get(i));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Integer> counts = new HashMap<Long, Integer>();\n        for\
    \ (Long n : numbers) {\n            if (counts.containsKey(n)) {\n           \
    \     counts.put(n, counts.get(n) + 1);\n            } else {\n              \
    \  counts.put(n, 1);\n            }\n        }\n        for (Long n : numbers)\
    \ {\n            if (counts.get(n) == 1) {\n                result.add(n);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Integer> counts = new HashMap<Long, Integer>();\n        for\
    \ (Long x : numbers) {\n            if (counts.containsKey(x)) {\n           \
    \     counts.put(x, counts.get(x) + 1);\n            } else {\n              \
    \  counts.put(x, 1);\n            }\n        }\n        for (Long x : numbers)\
    \ {\n            if (counts.get(x) == 1) {\n                result.add(x);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Answer:\n        // In the hash map, construct keys that\
    \ are the original numbers and values are the original numbers' counts.\n    \
    \    // Add numbers to new array list as they do not appear more than once in\
    \ the hash map.\n        HashMap<Long, Long> h = new HashMap<Long, Long>();\n\
    \        for (Long num : numbers) {\n            h.put(num, h.getOrDefault(num,\
    \ (long)0l) + (long)1l);\n        }\n        ArrayList<Long> n = new ArrayList<Long>();\n\
    \        for (Long num : numbers) {\n            if (h.get(num) == (long)1l) {\n\
    \                n.add(num);\n            }\n        }\n        return n;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (Long i : numbers) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskhagcsb.java:25)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        Set<Long>\
    \ set = new HashSet<Long>();\n        for (Long num : numbers) {\n           \
    \ if (!set.contains(num)) {\n                set.add(num);\n                ans.add(num);\n\
    \            }\n        }\n        return ans;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjnefpjk.java:27)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // version 1.1\n        // Set<Long> set = new HashSet<Long>();\n\
    \        // numbers.removeIf(n -> !set.add(n));\n        // return numbers;\n\
    \        // version 1.2\n        // Map<Long, Integer> map = new HashMap<Long,\
    \ Integer>();\n        // for (Long n : numbers) {\n        //     map.put(n,\
    \ map.getOrDefault(n, 0) + 1);\n        // }\n        // List<Long> list = new\
    \ ArrayList<Long>();\n        // for (Map.Entry<Long, Integer> e : map.entrySet())\
    \ {\n        //     if (e.getValue() == 1) {\n        //         list.add(e.getKey());\n\
    \        //     }\n        // }\n        // return new ArrayList<Long>(list);\n\
    \        // version 1.3\n        Map<Long, Integer> map = new HashMap<Long, Integer>();\n\
    \        for (Long n : numbers) {\n            map.put(n, map.getOrDefault(n,\
    \ 0) + 1);\n        }\n        return new ArrayList<Long>(map.keySet());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2cl0tgn.java:40)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> noDups = new ArrayList<Long>();\n      \
    \  for (Long x : numbers) {\n            if (!noDups.contains(x)) {\n        \
    \        noDups.add(x);\n            }\n        }\n        return noDups;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp95_rcvbw.java:25)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ret = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            if (ret.indexOf(numbers.get(i))\
    \ == -1) {\n                ret.add(numbers.get(i));\n            }\n        }\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv5yh5wct.java:25)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> noDuplicates = new ArrayList<Long>();\n\
    \        for (Long i : numbers) {\n            if (!noDuplicates.contains(i))\
    \ {\n                noDuplicates.add(i);\n            }\n        }\n        return\
    \ noDuplicates;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7f9cv18_.java:25)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n \
    \       for (Long number : numbers) {\n            Long count = map.get(number);\n\
    \            if (count == null) {\n                map.put(number, (long)1l);\n\
    \            } else {\n                map.put(number, count + (long)1l);\n  \
    \          }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long number : numbers) {\n            Long count = map.get(number);\n\
    \            if (count == (long)1l) {\n                result.add(number);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> output = new ArrayList<Long>();\n      \
    \  HashMap<Long, Long> numberMap = new HashMap<Long, Long>();\n        for (Long\
    \ number : numbers) {\n            if (numberMap.containsKey(number)) {\n    \
    \            numberMap.put(number, numberMap.get(number) + 1);\n            }\
    \ else {\n                numberMap.put(number, 1l);\n            }\n        }\n\
    \        for (Long number : numbers) {\n            if (numberMap.get(number)\
    \ == 1) {\n                output.add(number);\n            }\n        }\n   \
    \     return output;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> count = new HashMap<Long, Integer>();\n\
    \        for (Long n : numbers) {\n            if (count.containsKey(n)) {\n \
    \               count.put(n, count.get(n) + 1);\n            } else {\n      \
    \          count.put(n, 1);\n            }\n        }\n        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (Long n : numbers) {\n        \
    \    if (count.get(n) == 1) {\n                output.add(n);\n            }\n\
    \        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Method 1: Use Java's Set and\n        // HashSet does\
    \ not allow duplicates, and maintains the order of the elements\n        ArrayList<Long>\
    \ array = new ArrayList<>();\n        Set<Long> set = new HashSet<>(numbers);\n\
    \        array.addAll(set);\n        return array;\n        // Method 2: Can also\
    \ use Java's TreeSet, which sorts the elements as it adds them\n        // to\
    \ the set (implements the SortedSet interface)\n        // Method 3: Iterate through\
    \ the arraylist, putting each value into a hashset,\n        // and removing that\
    \ value if it is already in the hashset\n        // Method 4: Create a hashmap\
    \ where the keys are the arraylist elements, and the\n        // values are the\
    \ number of times that key occurs. Iterate through the hashmap\n        // and\
    \ delete any that have > 1 as the value.\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_62nqbo.java:31)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // TODO: Implement\n        return numbers;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgi3x9z9.java:20)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (Long num : numbers) {\n            if (!result.contains(num)) {\n    \
    \            result.add(num);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0n_ror2.java:25)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  Set<Long> seen = new HashSet<Long>();\n        for (Long number : numbers)\
    \ {\n            if (!seen.contains(number)) {\n                seen.add(number);\n\
    \                result.add(number);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ndj296o.java:27)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // YOUR CODE HERE\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmptllhfvxg.java:18)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> cleaned = new ArrayList<Long>();\n     \
    \   HashMap<Long, Integer> hashCount = new HashMap<Long, Integer>();\n       \
    \ for (Long number : numbers) {\n            hashCount.put(number, hashCount.getOrDefault(number,\
    \ 0) + 1);\n        }\n        for (Long number : numbers) {\n            if (hashCount.get(number)\
    \ == 1) {\n                cleaned.add(number);\n            }\n        }\n  \
    \      return cleaned;\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakcbbame.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // your code goes here\n        return numbers;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzp6hlb9w.java:20)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Solution:\n        // 1. Make a set and iterate through\
    \ the array list\n        // 2. If element is not in the set, add it to the array\
    \ list, otherwise add it to the set\n        // 3. Return the array list\n   \
    \     // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)2l, (long)4l)))\n        // >>> newNumbers = (new ArrayList<Long>())\n\
    \        // >>> numbersSet = (new HashSet<Long>())\n        // >>> for (number:\
    \ numbers) {\n        // ...     if (!numbersSet.contains(number)) {\n       \
    \ // ...         newNumbers.add(number)\n        // ...     }\n        // ...\
    \     numbersSet.add(number)\n        // ... }\n        // >>> newNumbers\n  \
    \      // (new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)4l)))\n\
    \        ArrayList<Long> newNumbers = new ArrayList<Long>();\n        HashSet<Long>\
    \ numbersSet = new HashSet<Long>();\n        for (Long number: numbers) {\n  \
    \          if (!numbersSet.contains(number)) {\n                newNumbers.add(number);\n\
    \            }\n            numbersSet.add(number);\n        }\n        return\
    \ newNumbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_dxq_vl.java:42)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> answer = new ArrayList<Long>();\n      \
    \  HashMap<Long, Long> count = new HashMap<Long, Long>();\n        for (Long item\
    \ : numbers) {\n            if (count.containsKey(item)) {\n                Long\
    \ current_count = count.get(item);\n                count.put(item, current_count\
    \ + 1);\n            } else {\n                count.put(item, 1L);\n        \
    \    }\n        }\n        for (Long item : numbers) {\n            if (count.get(item)\
    \ == 1) {\n                answer.add(item);\n            }\n        }\n     \
    \   return answer;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long,Integer> map = new HashMap<Long,Integer>();\n\
    \        for (Long n : numbers) {\n            map.put(n, (map.get(n) != null\
    \ ? map.get(n) : 0) + 1);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (Long n : numbers) {\n            if (map.get(n) <= 1) {\n      \
    \          ret.add(n);\n            }\n        }\n        return ret;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Set<Long> set = new HashSet<Long>();\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long number : numbers) {\n   \
    \         if (!set.contains(number)) {\n                set.add(number);\n   \
    \             result.add(number);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4omawdh.java:27)\n"
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // FILL CODE HERE\n        HashMap<Long,Integer> map = new\
    \ HashMap<>();\n        for(Long i : numbers){\n            if(map.containsKey(i)){\n\
    \                map.put(i,map.get(i)+1);\n            }else{\n              \
    \  map.put(i,1);\n            }\n        }\n        ArrayList<Long> ans = new\
    \ ArrayList<>();\n        for(int i=0;i<numbers.size();i++){\n            if(map.get(numbers.get(i))==1){\n\
    \                ans.add(numbers.get(i));\n            }\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> out = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> counters = new HashMap<Long, Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            Long curr = numbers.get(i);\n            if (counters.containsKey(curr))\
    \ {\n                counters.put(curr, counters.get(curr) + 1l);\n          \
    \  } else {\n                counters.put(curr, 1l);\n            }\n        }\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Long curr = numbers.get(i);\n\
    \            if (counters.get(curr) == 1l) {\n                out.add(curr);\n\
    \            }\n        }\n        return out;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> output = new ArrayList<Long>();\n      \
    \  for (Long num : numbers) {\n            if (!output.contains(num)) {\n    \
    \            output.add(num);\n            }\n        }\n        return output;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy_vh0lh.java:25)\n"
  stdout: ''
  timestamp: 1660011046
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Integer> freq = new HashMap<Long, Integer>();\n        for (Long\
    \ i : numbers) {\n            if (freq.containsKey(i)) {\n                freq.put(i,\
    \ freq.get(i) + 1);\n            } else {\n                freq.put(i, 1);\n \
    \           }\n        }\n        for (Long i : numbers) {\n            if (freq.get(i)\
    \ == 1) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011048
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> unique = new HashMap<Long, Long>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (unique.containsKey(number)) {\n              \
    \  unique.put(number, unique.get(number) + 1);\n            } else {\n       \
    \         unique.put(number, 1l);\n            }\n        }\n        for (Long\
    \ number : numbers) {\n            if (unique.get(number) == 1) {\n          \
    \      result.add(number);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        int k = numbers.size();\n        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        HashMap<Long, Integer> m = new HashMap<Long,\
    \ Integer>();\n        for (int i = 0; i < k; i++) {\n            long x = numbers.get(i);\n\
    \            if (m.containsKey(x)) {\n                m.put(x, m.get(x) + 1);\n\
    \            } else {\n                m.put(x, 1);\n            }\n        }\n\
    \        for (int i = 0; i < k; i++) {\n            long x = numbers.get(i);\n\
    \            if (m.get(x) == 1) {\n                result.add(x);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  Set<Long> deduped = new HashSet<Long>();\n        for (Long n : numbers) {\n\
    \            if (!deduped.contains(n)) {\n                deduped.add(n);\n  \
    \              result.add(n);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7p_2ydy.java:27)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // REPLACE THE BODY OF THIS METHOD WITH YOUR OWN IMPLEMENTATION\n\
    \        return new ArrayList<Long>();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp860_913r.java:19)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        Set<Long>\
    \ uniques = new HashSet<Long>();\n        for (Long number : numbers) {\n    \
    \        if (!uniques.contains(number)) {\n                res.add(number);\n\
    \                uniques.add(number);\n            }\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvj2mvc94.java:27)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Implement your solution here\n        int result = 0;\n\
    \        int count = 0;\n        int bit;\n        int arr[] = new int[32];\n\
    \        for(int i = 0; i < numbers.size(); i++) {\n            int n = numbers.get(i).intValue();\n\
    \            for(int j = 0; j < 32; j++) {\n                bit = (n >> j) & 1;\n\
    \                arr[j] += bit;\n            }\n        }\n        for(int j =\
    \ 0; j < 32; j++) {\n            if(arr[j] > 0) {\n                result = result\
    \ | (1 << j);\n            }\n        }\n        return numbers;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv0sgmxt.java:36)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mghtcxv.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> cnt = new HashMap<Long, Integer>();\n\
    \        for (Long number : numbers) {\n            cnt.put(number, cnt.getOrDefault(number,\
    \ 0) + 1);\n        }\n        ArrayList<Long> ans = new ArrayList<Long>();\n\
    \        for (Long number : numbers) {\n            if (cnt.get(number) == 1)\
    \ {\n                ans.add(number);\n            }\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> unique_numbers = new ArrayList<Long>();\n\
    \        if (numbers.size() == 0) {\n            return unique_numbers;\n    \
    \    }\n        HashMap<Long, Long> number_counts = new HashMap<Long, Long>();\n\
    \        for (Long number : numbers) {\n            if (number_counts.containsKey(number))\
    \ {\n                number_counts.put(number, number_counts.get(number) + 1);\n\
    \            } else {\n                number_counts.put(number, 1l);\n      \
    \      }\n        }\n        for (Long number : numbers) {\n            if (number_counts.get(number)\
    \ == 1) {\n                unique_numbers.add(number);\n            }\n      \
    \  }\n        return unique_numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr416qc1.java:19)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Keep track of elements that have occurred with a boolean\
    \ array of size max element.\n        long min = numbers.stream().min(Long::compare).get();\n\
    \        long max = numbers.stream().max(Long::compare).get();\n        long size\
    \ = max - min + 1;\n        boolean[] hasOccurred = new boolean[(int)size];\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!hasOccurred[(int)(number - min)]) {\n       \
    \         result.add(number);\n                hasOccurred[(int)(number - min)]\
    \ = true;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.NoSuchElementException: No value\
    \ present\n\tat java.base/java.util.Optional.get(Optional.java:143)\n\tat Problem.removeDuplicates(tmpod6fs6pw.java:15)\n\
    \tat Problem.main(tmpod6fs6pw.java:29)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        int count;\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            count = 0;\n            for (int j = 0; j < numbers.size();\
    \ j++) {\n                if (numbers.get(i) == numbers.get(j)) {\n          \
    \          count++;\n                }\n            }\n            if (count >\
    \ 1) {\n                numbers.remove(i);\n                i--;\n           \
    \ }\n        }\n        return numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02w6wdzv.java:32)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> toReturn = new ArrayList<Long>();\n    \
    \    Set<Long> toFind = new HashSet<Long>();\n        for (Long num : numbers)\
    \ {\n            if (!toFind.contains(num)) {\n                toReturn.add(num);\n\
    \                toFind.add(num);\n            }\n        }\n        return toReturn;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpspl7i0t7.java:27)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> hm = new HashMap<Long, Integer>();\n        for (Long i : numbers)\
    \ {\n            if (hm.containsKey(i)) {\n                hm.put(i, hm.get(i)\
    \ + 1);\n            } else {\n                hm.put(i, 1);\n            }\n\
    \        }\n        for (Long i : numbers) {\n            if (hm.get(i) == 1)\
    \ {\n                ans.add(i);\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr416qc1.java:19)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  // your code goes here\n        for (Long n : numbers) {\n            if (!result.contains(n))\
    \ {\n                result.add(n);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpog3fjegk.java:26)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> l = new ArrayList<Long>();\n        Set<Long>\
    \ s = new HashSet<Long>();\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            Long n = numbers.get(i);\n            if (!s.contains(n)) {\n   \
    \             s.add(n);\n                l.add(n);\n            }\n        }\n\
    \        return l;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5y4_zet7.java:28)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mghtcxv.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        int n = numbers.size();\n        for (int i = 0; i < n;\
    \ i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (numbers.get(i).equals(numbers.get(j)))\
    \ {\n                    numbers.remove(j);\n                    n--;\n      \
    \              j--;\n                }\n            }\n        }\n        return\
    \ numbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeq8texp1.java:29)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Set<Long> set = new HashSet<Long>();\n        ArrayList<Long>\
    \ uniques = new ArrayList<Long>();\n        for (Long number : numbers) {\n  \
    \          if (!set.contains(number)) {\n                set.add(number);\n  \
    \              uniques.add(number);\n            }\n        }\n        return\
    \ uniques;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumyesbda.java:27)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        List<Long> filtered = new ArrayList<Long>();\n        if\
    \ (numbers == null) {\n            return null;\n        }\n        for (Long\
    \ num : numbers) {\n            if (!filtered.contains(num)) {\n             \
    \   filtered.add(num);\n            }\n        }\n        return new ArrayList<Long>(filtered);\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1agpe12n.java:28)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        if (numbers == null) {\n            return null;\n     \
    \   }\n        HashMap<Long, Integer> numCounts = new HashMap<Long, Integer>();\n\
    \        for (Long n : numbers) {\n            if (numCounts.containsKey(n)) {\n\
    \                numCounts.put(n, numCounts.get(n) + 1);\n            } else {\n\
    \                numCounts.put(n, 1);\n            }\n        }\n        ArrayList<Long>\
    \ output = new ArrayList<Long>();\n        for (Long n : numbers) {\n        \
    \    if (numCounts.get(n) == 1) {\n                output.add(n);\n          \
    \  }\n        }\n        return output;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> out = new ArrayList<Long>();\n        HashMap<Long,\
    \ Long> counter = new HashMap<Long, Long>();\n        for (Long n : numbers) {\n\
    \            if (counter.containsKey(n)) {\n                counter.put(n, counter.get(n)\
    \ + 1l);\n            } else {\n                counter.put(n, 1l);\n        \
    \    }\n        }\n        for (Long n : numbers) {\n            if (counter.get(n)\
    \ == 1l) {\n                out.add(n);\n            }\n        }\n        return\
    \ out;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  Set<Long> added = new HashSet<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            Long number = numbers.get(i);\n            if (!added.contains(number))\
    \ {\n                result.add(number);\n                added.add(number);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvipvsyj3.java:28)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Map<Long, Long> frequencies = new HashMap<Long, Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Long number =\
    \ numbers.get(i);\n            if (frequencies.containsKey(number)) {\n      \
    \          frequencies.put(number, frequencies.get(number) + 1l);\n          \
    \  } else {\n                frequencies.put(number, 1l);\n            }\n   \
    \     }\n        ArrayList<Long> duplicates = new ArrayList<Long>();\n       \
    \ for (int i = 0; i < numbers.size(); i++) {\n            Long number = numbers.get(i);\n\
    \            if (frequencies.get(number) > 1l) {\n                duplicates.add(number);\n\
    \            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Long number =\
    \ numbers.get(i);\n            if (!duplicates.contains(number)) {\n         \
    \       result.add(number);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr416qc1.java:19)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> copy = new ArrayList<Long>(numbers);\n        Set<Long> seen\
    \ = new HashSet<Long>();\n        for (int i = 0; i < copy.size(); i++) {\n  \
    \          Long num = copy.get(i);\n            if (!seen.contains(num)) {\n \
    \               seen.add(num);\n                result.add(num);\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjuwuor3g.java:29)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        throw new Error(\"Not implemented\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.Error: Not implemented\n\tat Problem.removeDuplicates(tmpl4k8t30t.java:14)\n\
    \tat Problem.main(tmpl4k8t30t.java:17)\n"
  stdout: ''
  timestamp: 1660011050
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        for (int i = 0; i < numbers.size(); i++) {\n           \
    \ for (int j = 0; j < numbers.size(); j++) {\n                if (i != j && numbers.get(i)\
    \ == numbers.get(j)) {\n                    numbers.remove(j);\n             \
    \       j--;\n                }\n            }\n        }\n        return numbers;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bfpzhws.java:27)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> seen = new ArrayList<Long>();\n        for (Long i : numbers)\
    \ {\n            if (!seen.contains(i)) {\n                seen.add(i);\n    \
    \            result.add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc1pwls1j.java:27)\n"
  stdout: ''
  timestamp: 1660011050
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> h = new HashMap<Long, Integer>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Long x = numbers.get(i);\n\
    \            if (h.containsKey(x)) {\n                h.put(x, h.get(x) + 1);\n\
    \            } else {\n                h.put(x, 1);\n            }\n        }\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i =\
    \ 0; i < numbers.size(); i++) {\n            Long x = numbers.get(i);\n      \
    \      if (h.get(x) == 1) {\n                result.add(x);\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011050
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            Long number = numbers.get(i);\n\
    \            int count = 0;\n            for (int j = 0; j < numbers.size(); j++)\
    \ {\n                if (numbers.get(j).equals(number)) {\n                  \
    \  count++;\n                }\n            }\n            if (count == 1) {\n\
    \                ans.add(number);\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // make set from array list\n        Set<Long> numSet =\
    \ new HashSet<>(numbers);\n        // convert back to array list\n        ArrayList<Long>\
    \ numList = new ArrayList<>(numSet);\n        return numList;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xg8zgs3.java:23)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mghtcxv.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Map<Long, Integer> numberCounts = new HashMap<Long, Integer>();\n\
    \        for (Long number : numbers) {\n            numberCounts.put(number, numberCounts.getOrDefault(number,\
    \ 0) + 1);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (Long number : numbers) {\n            if (numberCounts.get(number)\
    \ == 1) {\n                res.add(number);\n            }\n        }\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Set<Long> setOfNumbers = new HashSet<>();\n        ArrayList<Long>\
    \ uniqueNumbers = new ArrayList<>();\n        for (Long num : numbers) {\n   \
    \         if (!setOfNumbers.contains(num)) {\n                setOfNumbers.add(num);\n\
    \                uniqueNumbers.add(num);\n            }\n        }\n        return\
    \ uniqueNumbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwiqz6rlo.java:27)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> distinctNumbers = new ArrayList<Long>();\n\
    \        ArrayList<Long> duplicateNumbers = new ArrayList<Long>();\n        for\
    \ (Long number : numbers) {\n            if (distinctNumbers.contains(number))\
    \ {\n                distinctNumbers.remove(number);\n                duplicateNumbers.add(number);\n\
    \            } else if (!duplicateNumbers.contains(number)) {\n              \
    \  distinctNumbers.add(number);\n            }\n        }\n        return distinctNumbers;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Remove duplicates, keeping only the first occurrence.\n\
    \        // As we go through the list, add each element to a hash set.\n     \
    \   // If we find that the element is already in the hash set,\n        // remove\
    \ it from the array list.\n        HashSet<Long> set = new HashSet<Long>();\n\
    \        for (int i = 0; i < numbers.size(); ++i) {\n            Long n = numbers.get(i);\n\
    \            if (set.contains(n)) {\n                numbers.remove(i);\n    \
    \            --i;\n            } else {\n                set.add(n);\n       \
    \     }\n        }\n        return numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3_spc0h.java:33)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        var seen = new HashSet<Long>();\n        var toRemove =\
    \ new HashSet<Long>();\n        var result = new ArrayList<Long>();\n        for\
    \ (var num : numbers) {\n            if (seen.contains(num)) {\n             \
    \   toRemove.add(num);\n            } else {\n                seen.add(num);\n\
    \            }\n        }\n        for (var num : numbers) {\n            if (!toRemove.contains(num))\
    \ {\n                result.add(num);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> seen = new ArrayList<Long>();\n        for (Long number : numbers)\
    \ {\n            if (!(seen.contains(number))) {\n                result.add(number);\n\
    \                seen.add(number);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos7h7zgv.java:27)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakcbbame.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(numbers.stream().distinct().collect(Collectors.toList()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlz7m6zv.java:19)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        int count =\
    \ 0;\n        for (Long l : numbers) {\n            count = map.getOrDefault(l,\
    \ 0);\n            map.put(l, count + 1);\n        }\n        for (Long l : numbers)\
    \ {\n            if (map.get(l) == 1) {\n                result.add(l);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> list = new ArrayList<Long>();\n        HashSet<Long>\
    \ set = new HashSet<Long>();\n        for (Long number : numbers) {\n        \
    \    if (!set.contains(number)) {\n                set.add(number);\n        \
    \        list.add(number);\n            }\n        }\n        return list;\n \
    \   }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp876t4bpv.java:27)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // TODO:\n        // Implement this function.\n        //\
    \ Create a new array list of longs,\n        // and fill it with numbers from\
    \ the input argument array list\n        // that occur only once.\n        //\
    \ If a number occurs multiple times, remove it from the list.\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpp54fcngc.java:23)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (Long x : numbers) {\n            if (!(result.contains(x))) {\n      \
    \          result.add(x);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rup5hkr.java:25)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        if (numbers == null) {\n            return null;\n     \
    \   }\n        Map<Long, Integer> countMap = new HashMap<Long, Integer>();\n \
    \       // count how many times each number appears\n        for (Long number\
    \ : numbers) {\n            Integer count = countMap.get(number);\n          \
    \  if (count == null) {\n                countMap.put(number, 1);\n          \
    \  } else {\n                countMap.put(number, count + 1);\n            }\n\
    \        }\n        ArrayList<Long> answer = new ArrayList<Long>();\n        for\
    \ (Long number : numbers) {\n            Integer count = countMap.get(number);\n\
    \            if (count == 1) {\n                answer.add(number);\n        \
    \    }\n        }\n        return answer;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        long numbersSize = numbers.size();\n        // >>> numbers\n\
    \        // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)2l,\
    \ (long)4l)))\n        // >>> numbersSize\n        // 5l\n        ArrayList<Long>\
    \ numbersWithoutDuplicates = new ArrayList<Long>();\n        // >>> numbersWithoutDuplicates\n\
    \        // []\n        HashMap<Long, Long> numberToOccurrences = new HashMap<Long,\
    \ Long>();\n        // >>> numberToOccurrences\n        // {}\n        for (long\
    \ i = 0l; i < numbersSize; i++) {\n            long number = numbers.get((int)i);\n\
    \            // >>> number\n            // 1l\n            long occurrences =\
    \ 0l;\n            if (numberToOccurrences.containsKey(number)) {\n          \
    \      occurrences = numberToOccurrences.get(number);\n            }\n       \
    \     occurrences = occurrences + 1l;\n            numberToOccurrences.put(number,\
    \ occurrences);\n        }\n        // >>> numberToOccurrences\n        // {1l=1l,\
    \ 2l=2l, 3l=1l, 4l=1l}\n        for (long i = 0l; i < numbersSize; i++) {\n  \
    \          long number = numbers.get((int)i);\n            // >>> number\n   \
    \         // 1l\n            if (numberToOccurrences.get(number) == 1l) {\n  \
    \              numbersWithoutDuplicates.add(number);\n            }\n        }\n\
    \        // >>> numbersWithoutDuplicates\n        // [1l, 3l, 4l]\n        return\
    \ numbersWithoutDuplicates;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ret = new ArrayList<Long>();\n        ArrayList<Long>\
    \ occured = new ArrayList<Long>();\n        for (Long x : numbers) {\n       \
    \     if (!occured.contains(x)) {\n                ret.add(x);\n             \
    \   occured.add(x);\n            }\n        }\n        return ret;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9szfg5f2.java:27)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        List<Long> list = numbers.stream().distinct().collect(Collectors.toList());\n\
    \        ArrayList<Long> result = new ArrayList<Long>(list);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5mqsd17.java:21)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> uniques = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!uniques.contains(number)) {\n               \
    \ uniques.add(number);\n                result.add(number);\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpileh1wbm.java:27)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        ArrayList<Long>\
    \ numbers2 = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            numbers2.add(numbers.get(i));\n        }\n        Collections.sort(numbers2);\n\
    \        int count = 0;\n        int prev_number = -1;\n        for (int i = 0;\
    \ i < numbers2.size(); i++) {\n            if (numbers2.get(i) == prev_number)\
    \ {\n                count++;\n            } else {\n                count = 1;\n\
    \            }\n            if (count == 1) {\n                res.add(numbers2.get(i));\n\
    \            }\n            prev_number = numbers2.get(i).intValue();\n      \
    \  }\n        return res;\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplzb7dmb1.java:38)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Fill this in.\n        ArrayList<Long> numbers2 = new\
    \ ArrayList<Long>();\n        for (Long number : numbers) {\n            if (!numbers2.contains(number))\
    \ {\n                numbers2.add(number);\n            }\n        }\n       \
    \ return numbers2;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8k8y8tw.java:26)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> counts = new HashMap<Long, Integer>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        numbers.forEach(x\
    \ -> {\n            counts.put(x, counts.getOrDefault(x, 0) + 1);\n        });\n\
    \        numbers.forEach(x -> {\n            if (counts.get(x) == 1) {\n     \
    \           result.add(x);\n            }\n        });\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n \
    \       ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long n : numbers)\
    \ {\n            if (map.containsKey(n)) {\n                Long new_n = map.get(n)\
    \ + 1l;\n                map.put(n, new_n);\n            } else {\n          \
    \      map.put(n, 1l);\n            }\n        }\n        for (Long n : numbers)\
    \ {\n            if (map.get(n) == 1l) {\n                ans.add(n);\n      \
    \      }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> uniqueNumbers = new ArrayList<Long>();\n\
    \        HashMap<Long, Long> numberOccurences = new HashMap<Long, Long>();\n \
    \       for (int i = 0; i < numbers.size(); i++) {\n            if (numberOccurences.containsKey(numbers.get(i)))\
    \ {\n                numberOccurences.put(numbers.get(i), numberOccurences.get(numbers.get(i))\
    \ + 1l);\n            } else {\n                numberOccurences.put(numbers.get(i),\
    \ 1l);\n            }\n        }\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            if (numberOccurences.get(numbers.get(i)) == 1l) {\n    \
    \            uniqueNumbers.add(numbers.get(i));\n            }\n        }\n  \
    \      return uniqueNumbers;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(numbers.stream().distinct().collect(Collectors.toList()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlz7m6zv.java:19)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> nonDuplicates = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            int numOccurrences\
    \ = 0;\n            for (int j = 0; j < numbers.size(); j++) {\n             \
    \   if (numbers.get(i).equals(numbers.get(j))) {\n                    numOccurrences++;\n\
    \                }\n            }\n            if (numOccurrences == 1) {\n  \
    \              nonDuplicates.add(numbers.get(i));\n            }\n        }\n\
    \        return nonDuplicates;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        throw new RuntimeException(\"Error: \" + \"removeDuplicates\
    \ not implemented.\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Error: removeDuplicates\
    \ not implemented.\n\tat Problem.removeDuplicates(tmpiccez0ai.java:14)\n\tat Problem.main(tmpiccez0ai.java:17)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> uniqueNumbers = new ArrayList<Long>();\n\
    \        for (Long number : numbers) {\n            if (!uniqueNumbers.contains(number))\
    \ {\n                uniqueNumbers.add(number);\n            }\n        }\n  \
    \      return uniqueNumbers;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5c92c9k0.java:25)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n        // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n        ArrayList<Long> uniqueNumbers = new ArrayList<Long>();\n\
    \        for (Long number : numbers) {\n            if (!uniqueNumbers.contains(number))\
    \ {\n                uniqueNumbers.add(number);\n            }\n        }\n  \
    \      return uniqueNumbers;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqs824s5.java:27)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> answer = new ArrayList<Long>();\n      \
    \  Set<Long> uniqueNumbers = new HashSet<Long>();\n        for (int i = 0; i <\
    \ numbers.size(); i++) {\n            Long x = numbers.get(i);\n            if\
    \ (!uniqueNumbers.contains(x)) {\n                answer.add(x);\n           \
    \     uniqueNumbers.add(x);\n            }\n        }\n        return answer;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1t4w9_1.java:28)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      int count = map.get(number);\n                map.put(number, count + 1);\n\
    \            } else {\n                map.put(number, 1);\n            }\n  \
    \      }\n        for (Long number : numbers) {\n            if (map.get(number)\
    \ == 1) {\n                result.add(number);\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> newNumbers = new ArrayList<Long>();\n  \
    \      HashSet<Long> aSet = new HashSet<Long>();\n        for (Long aLong : numbers)\
    \ {\n            if (!aSet.contains(aLong)) {\n                aSet.add(aLong);\n\
    \                newNumbers.add(aLong);\n            }\n        }\n        return\
    \ newNumbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk24q1wuc.java:27)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n \
    \       for (Long number : numbers) {\n            if (map.containsKey(number))\
    \ {\n                map.put(number, map.get(number) + 1);\n            } else\
    \ {\n                map.put(number, 1l);\n            }\n        }\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long number : numbers) {\n   \
    \         if (map.get(number) == 1) {\n                result.add(number);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // TODO: Implement removeDuplicates\n        return new\
    \ ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hv8_qd5.java:19)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Set<Long> nums = new HashSet<Long>();\n        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        for (int i = 0; i < numbers.size(); i++)\
    \ {\n            Long number = numbers.get(i);\n            if (!nums.contains(number))\
    \ {\n                nums.add(number);\n                res.add(number);\n   \
    \         }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4vtjlte.java:28)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> numFreq = new HashMap<Long, Integer>();\n\
    \        for (Long num : numbers) {\n            if (numFreq.containsKey(num))\
    \ {\n                numFreq.put(num, numFreq.get(num) + 1);\n            } else\
    \ {\n                numFreq.put(num, 1);\n            }\n        }\n        ArrayList<Long>\
    \ uniqueNums = new ArrayList<Long>();\n        for (Long num : numbers) {\n  \
    \          if (numFreq.get(num) == 1) {\n                uniqueNums.add(num);\n\
    \            }\n        }\n        return uniqueNums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l)))\n        // >>> numbers = (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3\n    }\n    public static void main(String[] args) {\n   \
    \ assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo84gorms.java:25: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // START SOLUTION\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \        // END SOLUTION\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudcxe8rx.java:21)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Fill in the code here to get the desired result.\n  \
    \      ArrayList<Long> res = new ArrayList<Long>();\n        HashMap<Long, Integer>\
    \ map = new HashMap<Long, Integer>();\n        for (Long num : numbers) {\n  \
    \          if (map.containsKey(num)) {\n                map.put(num, map.get(num)\
    \ + 1);\n            } else {\n                map.put(num, 1);\n            }\n\
    \        }\n        for (Long num : numbers) {\n            if (map.get(num) ==\
    \ 1) {\n                res.add(num);\n            }\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Your code here\n        ArrayList<Long> newNumbers =\
    \ new ArrayList<Long>();\n        for (Long n : numbers) {\n            if (!newNumbers.contains(n))\
    \ {\n                newNumbers.add(n);\n            }\n        }\n        return\
    \ newNumbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_2za296.java:26)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> out = new ArrayList<Long>();\n        for\
    \ (Long number : numbers) {\n            if (!out.contains(number)) {\n      \
    \          out.add(number);\n            }\n        }\n        return out;\n \
    \   }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzur7e84i.java:25)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n\
    \        ArrayList<Long> retval = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (map.containsKey(number)) {\n                map.put(number,\
    \ map.get(number) + 1);\n            } else {\n                map.put(number,\
    \ 1);\n            }\n        }\n        for (Long number : numbers) {\n     \
    \       if (map.get(number) == 1) {\n                retval.add(number);\n   \
    \         }\n        }\n        return retval;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            Long cur = numbers.get(i);\n\
    \            boolean hasBeenSeen = false;\n            for (int j = 0; j < i;\
    \ j++) {\n                if (numbers.get(j).equals(cur)) {\n                \
    \    hasBeenSeen = true;\n                    break;\n                }\n    \
    \        }\n            if (!hasBeenSeen) {\n                res.add(cur);\n \
    \           }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1t861jz6.java:33)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> counts = new HashMap<Long, Integer>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            if (counts.containsKey(numbers.get(i)))\
    \ {\n                counts.put(numbers.get(i), counts.get(numbers.get(i)) + 1);\n\
    \            } else {\n                counts.put(numbers.get(i), 1);\n      \
    \      }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            if (counts.get(numbers.get(i))\
    \ == 1) {\n                result.add(numbers.get(i));\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> answer = new ArrayList<Long>();\n      \
    \  // Compute the answer\n        return answer;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp32mamlp.java:20)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> dupes = new HashMap<Long, Integer>();\n\
    \        ArrayList<Long> results = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            Integer count = dupes.get(number);\n            if\
    \ (count == null) {\n                count = 0;\n            }\n            dupes.put(number,\
    \ count + 1);\n        }\n        for (Long number : numbers) {\n            Integer\
    \ count = dupes.get(number);\n            if (count == 1) {\n                results.add(number);\n\
    \            }\n        }\n        return results;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> unique = new ArrayList<Long>();\n      \
    \  for (Long number : numbers) {\n            if (!unique.contains(number)) {\n\
    \                unique.add(number);\n            }\n        }\n        return\
    \ unique;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_1wsimx.java:25)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Boolean> map = new HashMap<Long, Boolean>();\n\
    \        for (Long i : numbers) {\n            if (map.containsKey(i)) {\n   \
    \             map.put(i, false);\n            } else {\n                map.put(i,\
    \ true);\n            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : numbers) {\n            if (map.get(i)) {\n           \
    \     result.add(i);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> ret = new ArrayList<Long>();\n        int\
    \ size = numbers.size();\n        ArrayList<Long> occur = new ArrayList<Long>();\n\
    \        for (int i = 0; i < size; i++) {\n            Long curr = numbers.get(i);\n\
    \            if (occur.contains(curr)) {\n                continue;\n        \
    \    }\n            ret.add(curr);\n            occur.add(curr);\n        }\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovwuzqqf.java:30)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Set<Long> set = new HashSet<Long>();\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : numbers) {\n        \
    \    if (!set.contains(i)) {\n                set.add(i);\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_kzj71g.java:27)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        Collections.sort(numbers);\n        int i = 0;\n       \
    \ while (i < numbers.size() - 1) {\n            if (numbers.get(i).equals(numbers.get(i\
    \ + 1))) {\n                numbers.remove(i);\n            } else {\n       \
    \         i += 1;\n            }\n        }\n        return numbers;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplxzmaglw.java:28)\n"
  stdout: ''
  timestamp: 1660011053
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n      return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjtc0q6yz.java:19)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        //TODO: Add your code here.\n        return null;\n    }\n\
    \    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpqunfnrew.java:18)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for (Long\
    \ number : numbers) {\n            if (map.containsKey(number)) {\n          \
    \      Integer count = map.get(number);\n                map.put(number, count\
    \ + 1);\n            } else {\n                map.put(number, 1);\n         \
    \   }\n        }\n        for (Long number : numbers) {\n            if (map.get(number)\
    \ == 1) {\n                result.add(number);\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        var dic = new HashMap<Long, Boolean>();\n        var result\
    \ = new ArrayList<Long>();\n        for (var i = 0; i < numbers.size(); i++) {\n\
    \            var elem = numbers.get(i);\n            if (!dic.containsKey(elem))\
    \ {\n                dic.put(elem, true);\n                result.add(elem);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl3wo4gwc.java:28)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Boolean> used = new HashMap<Long, Boolean>();\n\
    \        for (Long n : numbers) {\n            if (used.containsKey(n)) {\n  \
    \              used.put(n, true);\n            } else {\n                used.put(n,\
    \ false);\n            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long n : numbers) {\n            if (!used.get(n)) {\n         \
    \       result.add(n);\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mghtcxv.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Start with no numbers\n        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        // Keep track of numbers we've seen\n    \
    \    HashSet<Long> seen = new HashSet<Long>();\n        // Iterate through the\
    \ array of numbers\n        for (Long i : numbers) {\n            // If we've\
    \ seen the number before\n            if (seen.contains(i)) {\n              \
    \  // Ignore it\n                continue;\n            }\n            // Otherwise\n\
    \            else {\n                // Record that we've seen it\n          \
    \      seen.add(i);\n                // And add it to the results\n          \
    \      result.add(i);\n            }\n        }\n        // Return the result\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlgb8luc.java:39)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(numbers.stream().distinct().collect(Collectors.toList()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlz7m6zv.java:19)\n"
  stdout: ''
  timestamp: 1660011051
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakcbbame.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> out = new ArrayList<Long>();\n        for\
    \ (Long number : numbers) {\n            if (!out.contains(number)) {\n      \
    \          out.add(number);\n            }\n        }\n        return out;\n \
    \   }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzur7e84i.java:25)\n"
  stdout: ''
  timestamp: 1660011052
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Insert correct code\n        return null;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpn8hzfvrk.java:18)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> numbersWithoutDuplicates = new ArrayList<Long>();\n\
    \        Set<Long> numbersSet = new HashSet<Long>();\n        for (Long number\
    \ : numbers) {\n            if (!numbersSet.contains(number)) {\n            \
    \    numbersWithoutDuplicates.add(number);\n                numbersSet.add(number);\n\
    \            }\n        }\n        return numbersWithoutDuplicates;\n    }\n \
    \   public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24kqcs6k.java:27)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> out = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            if (!out.contains(numbers.get(i)))\
    \ {\n                out.add(numbers.get(i));\n            }\n        }\n    \
    \    return out;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rutm_ws.java:25)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long n\
    \ : numbers) {\n            if (map.containsKey(n)) {\n                map.put(n,\
    \ map.get(n) + 1);\n            } else {\n                map.put(n, 1);\n   \
    \         }\n        }\n        for (Long n : numbers) {\n            if (map.get(n)\
    \ == 1) {\n                result.add(n);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (int i = 0; i < numbers.size(); i++) {\n            boolean duplicate =\
    \ false;\n            for (int j = 0; j < numbers.size(); j++) {\n           \
    \     if (i != j && numbers.get(i) == numbers.get(j)) {\n                    duplicate\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!duplicate) {\n                result.add(numbers.get(i));\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n      if (numbers == null) {\n        return null;\n      }\n  \
    \    if (numbers.size() == 0) {\n        return numbers;\n      }\n      ArrayList<Long>\
    \ ret = new ArrayList<Long>();\n      for (int i = 0; i < numbers.size(); i++)\
    \ {\n        boolean found = false;\n        for (int j = 0; j < numbers.size();\
    \ j++) {\n          if (i != j && numbers.get(i).equals(numbers.get(j))) {\n \
    \           found = true;\n            break;\n          }\n        }\n      \
    \  if (!found) {\n          ret.add(numbers.get(i));\n        }\n      }\n   \
    \   return ret;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // TODO: Write code here to return an answer.\n        return\
    \ numbers;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobg9rqup.java:20)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // Your Code Here\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp06u_smcg.java:18)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> output = new ArrayList<Long>();\n      \
    \  Set<Long> s = new HashSet<Long>();\n        for (Long l : numbers) {\n    \
    \        if (!s.contains(l)) {\n                s.add(l);\n                output.add(l);\n\
    \            }\n        }\n        return output;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8yp4nmv.java:27)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return numbers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr416qc1.java:19)\n"
  stdout: ''
  timestamp: 1660011049
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  for (Long x : numbers) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj2uyosgz.java:25)\n"
  stdout: ''
  timestamp: 1660011054
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  ArrayList<Long> duplicates = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            if (result.contains(number)) {\n                duplicates.add(number);\n\
    \            } else {\n                result.add(number);\n            }\n  \
    \      }\n        for (Long duplicate : duplicates) {\n            result.remove(duplicate);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Boolean> map = new HashMap<Long, Boolean>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num\
    \ : numbers) {\n            if (map.containsKey(num)) {\n                map.put(num,\
    \ true);\n            } else {\n                map.put(num, false);\n       \
    \     }\n        }\n        for (Long num : numbers) {\n            if (!map.get(num))\
    \ {\n                result.add(num);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long, Long> numberCounts = new HashMap<Long, Long>();\n\
    \        ArrayList<Long> numbersToRemove = new ArrayList<Long>();\n        for\
    \ (Long number : numbers) {\n            Long count = numberCounts.get(number);\n\
    \            if (count == null) {\n                count = (long)0l;\n       \
    \     }\n            count = count + (long)1l;\n            numberCounts.put(number,\
    \ count);\n            if (count > (long)1l) {\n                numbersToRemove.add(number);\n\
    \            }\n        }\n        return (ArrayList<Long>)CollectionUtils.disjunction(numbers,\
    \ numbersToRemove);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppm67ua7t.java:27: error: cannot find symbol\n        return (ArrayList<Long>)CollectionUtils.disjunction(numbers,\
    \ numbersToRemove);\n                                ^\n  symbol:   variable CollectionUtils\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        List<Long> distinctNums = numbers.stream().distinct().collect(Collectors.toList());\n\
    \        return new ArrayList<Long>(distinctNums);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0nobwqh.java:20)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        for (int i = 0; i < numbers.size(); i++) {\n           \
    \ for (int j = i + 1; j < numbers.size(); j++) {\n                if (numbers.get(i).equals(numbers.get(j)))\
    \ {\n                    numbers.remove(j);\n                    j -= 1;\n   \
    \             }\n            }\n        }\n        return numbers;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0ev9gw8.java:27)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return new ArrayList<Long>(new HashSet<Long>(numbers));\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakcbbame.java:19)\n"
  stdout: ''
  timestamp: 1660011045
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // put code here\n        return null;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp1hm0szxr.java:18)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        LinkedHashSet<Long> hashSet = new LinkedHashSet<Long>(numbers);\n\
    \        return new ArrayList<Long>(hashSet);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk9kooi51.java:20)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> numbersList = new ArrayList<Long>();\n \
    \       HashMap<Long, Integer> map = new HashMap<Long, Integer>();\n        for\
    \ (Long num : numbers) {\n            if (map.containsKey(num)) {\n          \
    \      map.put(num, map.get(num) + 1);\n            } else {\n               \
    \ map.put(num, 1);\n            }\n        }\n        for (Long num : numbers)\
    \ {\n            if (map.get(num) == 1) {\n                numbersList.add(num);\n\
    \            }\n        }\n        return numbersList;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        // fill in the code\n        return numbers;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2spt0391.java:20)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        HashMap<Long,Integer> countMap = new HashMap<Long,Integer>();\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long number\
    \ : numbers) {\n            Integer count = countMap.get(number);\n          \
    \  if (count == null) {\n                count = 0;\n            }\n         \
    \   countMap.put(number, count + 1);\n        }\n        for (Long number : numbers)\
    \ {\n            Integer count = countMap.get(number);\n            if (count\
    \ == 1) {\n                result.add(number);\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return (ArrayList<Long>)numbers.stream().distinct().collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9i30o0jz.java:19)\n"
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.removeDuplicates(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp80uzsyd6.java:17)\n"
  stdout: ''
  timestamp: 1660011047
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> r = new ArrayList<Long>();\n        HashMap<Long,\
    \ Integer> hm = new HashMap<Long, Integer>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            Long cur = numbers.get(i);\n            if (hm.containsKey(cur))\
    \ {\n                hm.put(cur, hm.get(cur) + 1);\n            } else {\n   \
    \             hm.put(cur, 1);\n            }\n        }\n        for (int i =\
    \ 0; i < numbers.size(); i++) {\n            Long cur = numbers.get(i);\n    \
    \        if (hm.get(cur) == 1) {\n                r.add(cur);\n            }\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> answer = new ArrayList<Long>();\n      \
    \  for (int i = 0; i < numbers.size(); i++) {\n            boolean isUnique =\
    \ true;\n            for (int j = 0; j < numbers.size(); j++) {\n            \
    \    if (j != i && numbers.get(i).equals(numbers.get(j))) {\n                \
    \    isUnique = false;\n                    break;\n                }\n      \
    \      }\n            if (isUnique) {\n                answer.add(numbers.get(i));\n\
    \            }\n        }\n        return answer;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011055
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // From an array array list of integers, remove all elements\
    \ that occur more than once.\n    // Keep order of elements left the same as in\
    \ the input.\n    // >>> removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)4l)))\n    public static ArrayList<Long> removeDuplicates(ArrayList<Long>\
    \ numbers) {\n        ArrayList<Long> numbers2 = new ArrayList<Long>();\n    \
    \    for (Long i : numbers) {\n            if (!numbers2.contains(i)) {\n    \
    \            numbers2.add(i);\n            }\n        }\n        return numbers2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(removeDuplicates((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))));\n    assert(removeDuplicates((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)2l, (long)4l, (long)3l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)4l, (long)5l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n9y02th.java:25)\n"
  stdout: ''
  timestamp: 1660011055

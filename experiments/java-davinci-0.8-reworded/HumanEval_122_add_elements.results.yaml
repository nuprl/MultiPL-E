language: java
name: HumanEval_122_add_elements
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) -> x + y);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ for each item in the array\n        //   if it's a two-digit number\n      \
    \  //     add it to the sum\n        //   if not, and you have room left\n   \
    \     //     add it to the sum\n        //   otherwise,\n        //     break\n\
    \        long sum = 0;\n        long c = 0;\n        for (Long i : arr) {\n  \
    \          if (c >= k) break;\n            if (i >= 10 && i < 100) {\n       \
    \         sum += i;\n                c++;\n            } else if (c < k) {\n \
    \               sum += i;\n                c++;\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppi82auuu.java:41)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Start by building a stream of the first k elements\n        Stream<Long> s =\
    \ arr.stream().limit(k);\n        // Then, filter the stream down to elements\
    \ with at most two digits,\n        // and finally, reduce the elements down to\
    \ a sum\n        return s.filter(x -> x.toString().length() <= 2).reduce(0l, (x,\
    \ y) -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ ret = 0;\n        for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n\
    \            ret += (num < 10l) ? num : ((num < 100l) ? (num / 10l) + (num % 10l)\
    \ : 0l);\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcwcefmna.java:28)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ res = 0l;\n        for (long i = 0l; (i) < (k); i++) {\n            long e =\
    \ arr.get((int)(i));\n            if (((e) >= (10l)) && ((e) < (100l))) {\n  \
    \              res = (res) + (e);\n            }\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_85w60p.java:28)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ ((Long)arr.stream().limit(k).filter(x -> {\n            return x < 100;\n  \
    \      }).reduce(0l, (a, b) -> {\n            return a + b;\n        }));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010321
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Set up a collection to store the result of the function.\n        long result\
    \ = 0l;\n        // Set up a while loop to iterate through the first k elements.\n\
    \        while (k > 0) {\n            // Set up a variable to contain the current\
    \ value of the array at the index given by k.\n            long currentValue =\
    \ arr.get((int)(k-1));\n            // Check if the current value is less than\
    \ a hundred.\n            if (currentValue < 100) {\n                // If so,\
    \ add it to the result collection.\n                result += currentValue;\n\
    \            }\n            // Decrement k by one.\n            k -= 1;\n    \
    \    }\n        // Return the result collection.\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        assert(arr.size()\
    \ <= 100);\n        assert(k <= arr.size());\n        assert(k >= 1);\n      \
    \  assert(arr.size() >= 1);\n        long result = 0;\n        for (int i = 0;\
    \ i < k; i++) {\n            if (arr.get(i) < 100) {\n                result +=\
    \ arr.get(i);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ IntStream.range(0, arr.size())\n            .mapToLong(i -> i < k && arr.get(i)\
    \ < 100 ? arr.get(i) : 0)\n            .sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010321
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ BEGIN_SOLUTION\n        return arr.stream().limit(k).filter(n -> n < 100).mapToLong(n\
    \ -> n).sum();\n        // END_SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        if(arr\
    \ == null || arr.size() == 0) {\n            return 0;\n        }\n        if(k\
    \ > arr.size()) {\n            k = arr.size();\n        }\n        long result\
    \ = 0;\n        for(int i = 0; i < k; i++) {\n            long element = arr.get(i);\n\
    \            if(element < 100) {\n                result += element;\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (long i = 0l; i < k; i++) {\n            String s = String.valueOf(arr.get((int)i));\n\
    \            if (s.length() > 2) {\n                s = s.substring(0, 2);\n \
    \           }\n            sum += Long.parseLong(s);\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_9sev5f.java:30)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> { return (x.intValue() < 100 && x.intValue()\
    \ > 9); }).mapToLong(x -> { return x.longValue(); }).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_8usr4l0.java:21)\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        if\
    \ (k == 0) {\n            return 0;\n        } else {\n            long el = arr.get((int)(k\
    \ - 1));\n            if (10 <= el && el < 100) {\n                return el +\
    \ addElements(arr, k - 1);\n            } else {\n                return addElements(arr,\
    \ k - 1);\n            }\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk49ad6_a.java:30)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(i -> i.toString().length() <= 2).mapToLong(i ->\
    \ i).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100)\n                sum += arr.get(i);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010321
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Write your code here\n        long sum = 0;\n        int i = 0;\n        while\
    \ (i < k) {\n            if (arr.get(i) > 99) {\n                arr.remove(i);\n\
    \                k -= 1;\n            } else {\n                sum += arr.get(i);\n\
    \                i += 1;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long i = 0; i < k; i++) {\n            long n = arr.get((int)i);\n\
    \            long tmp;\n            if (n > 9) {\n                tmp = n / 10;\n\
    \                n = n % 10;\n                if (tmp > 9) {\n               \
    \     sum += tmp / 10;\n                    tmp = tmp % 10;\n                }\n\
    \                sum += tmp;\n            }\n            sum += n;\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_j1dwxfe.java:37)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //your\
    \ code here\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmolif2kh.java:22)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (long i = 0l; i < k; i++) {\n            if (arr.get((int)i)\
    \ >= 10l && arr.get((int)i) < 100l) {\n                sum += arr.get((int)i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhrl5syw.java:27)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Your code starts here.\n        return arr.stream().filter(p -> p < 100).limit(k).mapToLong(p\
    \ -> p).sum();\n        // Your code ends here.\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_6c_zwl.java:24)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(e -> e >= 10 && e < 100).limit(k).mapToLong(e -> e).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjilj1213.java:21)\n"
  stdout: ''
  timestamp: 1660010320
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 99) {\n                sum += arr.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010320
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(e -> e < 100).limit(k).mapToLong(x -> x).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvix919ke.java:22)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (int index = 0; index < k; index++) {\n           \
    \ result += ((arr.get(index) < 100) ? arr.get(index) : 0);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ BRUTEFORCE:\n        // return arr.stream().limit(k).filter(x -> x < 100).mapToLong(x\
    \ -> x).sum();\n        // Intuition: Using a for loop and keeping a running sum\n\
    \        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            long\
    \ n = arr.get(i);\n            if (n < 100) sum += n;\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        int i = 0;\n        for (Long integer : arr) {\n         \
    \   if (i < k) {\n                String string = integer.toString();\n      \
    \          if (string.length() <= 2) {\n                    sum += integer;\n\
    \                }\n            }\n            i++;\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x.toString().length() <= 2).mapToLong(x ->\
    \ x).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (long)arr.stream().limit(k).filter(e -> String.valueOf(e).length() <= 2).mapToLong(e\
    \ -> e).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(e -> e.toString().length() <= 2).mapToLong(e ->\
    \ e).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ x0, x1, x2, x3, x4, x5\n        // x0 + x1 + x2 + x3\n        // x1 + x2 + x3\
    \ + x4\n        // x2 + x3 + x4 + x5\n        long sum = 0l;\n        for (int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        long\
    \ minSum = sum;\n        for (int i = 0; i < k; i++) {\n            sum = sum\
    \ - arr.get(i) + arr.get(i + k);\n            minSum = Math.min(minSum, sum);\n\
    \        }\n        return minSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm3d0_6jj.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            sum = sum - arr.get(i) + arr.get(i + k);\n   \
    \                                            ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(a -> a < 100).mapToLong(b -> b).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ your code here\n        return arr.stream().limit(k).filter(num -> num > 9 &&\
    \ num < 100).mapToLong(num -> num).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgi9loxy.java:22)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Let's start with the easy solution\n        // return arr.stream().limit(k).mapToLong(Long::longValue).sum();\n\
    \        // And now the hard solution\n        // return arr.stream().mapToLong(Long::longValue).parallel().filter(n\
    \ -> n < 100).sum();\n        // Apparently parallel kills performance here\n\
    \        // So what if we use a LongAdder instead\n        // LongAdder adder\
    \ = new LongAdder();\n        // arr.stream().mapToLong(Long::longValue).filter(n\
    \ -> n < 100).forEach(n -> adder.add(n));\n        // return adder.longValue();\n\
    \        // What if we use LongSummaryStatistics\n        // LongSummaryStatistics\
    \ stats = arr.stream().mapToLong(Long::longValue).limit(k).filter(n -> n < 100).summaryStatistics();\n\
    \        // return stats.getSum();\n        // What if we use Integer\n      \
    \  // return arr.stream().mapToInt(Long::intValue).limit(k).filter(n -> n < 100).sum();\n\
    \        // What if we use a paralllel stream\n        // return arr.stream().mapToInt(Long::intValue).limit(k).parallel().filter(n\
    \ -> n < 100).sum();\n        // What if we keep everything parallel?\n      \
    \  // return arr.stream().mapToInt(Long::intValue).parallel().limit(k).filter(n\
    \ -> n < 100).sum();\n        // What if we add in a LongAdder?\n        // LongAdder\
    \ adder = new LongAdder();\n        // arr.stream().mapToInt(Long::intValue).parallel().limit(k).filter(n\
    \ -> n < 100).forEach(n -> adder.add(n));\n        // return adder.longValue();\n\
    \        // What if we use a parallel IntStream instead?\n        // IntStream\
    \ stream = arr.stream().mapToInt(Long::intValue).parallel().limit(k).filter(n\
    \ -> n < 100);\n        // return stream.sum();\n        // What if we use a parallel\
    \ LongStream instead?\n        // LongStream stream = arr.stream().mapToLong(Long::longValue).parallel().limit(k\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1ssmhil.java:45: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqypc_yo.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long x : arr) {\n            if (k == 0) break;\n   \
    \         String s = String.valueOf(x);\n            if (s.length() > 2) continue;\n\
    \            sum += x;\n            k--;\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1xistce.java:30)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        List<Long>\
    \ myLongs = arr.stream().filter(n -> n < 100).collect(Collectors.toList());\n\
    \        long[] myArray = myLongs.stream().mapToLong(l -> l).toArray();\n    \
    \    Arrays.sort(myArray);\n        Long[] myLongArray = Arrays.stream(myArray).boxed().toArray(Long[]::new);\n\
    \        ArrayList<Long> myLongArrayList = new ArrayList<Long>(Arrays.asList(myLongArray));\n\
    \        long mySum = 0;\n        for (int i = 0; i < myLongArrayList.size();\
    \ i++) {\n            if (i == k) {\n                break;\n            }\n \
    \           mySum += myLongArrayList.get(i);\n        }\n        return mySum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpra3yuh3x.java:34)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n\
    \            if (n > 99) {\n                sum += 9;\n            } else if (n\
    \ > 9) {\n                sum += n % 10;\n            } else {\n             \
    \   sum += n;\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxir7enyu.java:33)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ ret = 0l;\n        for (long i = 0l; i < k; i++) {\n            ret += (arr.get((int)i)\
    \ > 99l) ? (arr.get((int)i) / 100l) : arr.get((int)i);\n        }\n        return\
    \ ret;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglt6gnoj.java:26)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            Long s = arr.get(i);\n\
    \            int length = String.valueOf(s).length();\n            if (length\
    \ <= 2) {\n                sum += s;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Write your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dtjcdjy.java:22)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (long)StreamSupport.stream(arr.spliterator(), false).mapToLong(n -> (n < (long)100l)\
    \ ? n : (long)0l).sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0kvs6evg.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        throw\
    \ new UnsupportedOperationException(\"Please remove this line and implement your\
    \ code here!\");\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ remove this line and implement your code here!\n\tat Problem.addElements(tmpeazb3ftt.java:18)\n\
    \tat Problem.main(tmpeazb3ftt.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(x -> (x <= 99)).limit(k).mapToLong(x -> x).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61j7ofpt.java:22)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(i -> i > 9l && i < 100l).reduce(0l, (a,b) -> a\
    \ + b);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0la0ke7i.java:21)\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqypc_yo.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(num -> num < 100l).mapToLong(num -> num).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010324
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ ((Stream<Long>)arr.stream().limit(k)).filter(x -> x < 100).mapToLong(x -> x).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmp6s54lh.java:26)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        int i = 0;\n        while(i < k && i < arr.size()) {\n   \
    \         if(arr.get(i) <= 99) {\n                sum += arr.get(i);\n       \
    \     }\n            i++;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(n -> n > 9 && n < 100).reduce(0l, (a, b) -> a +\
    \ b);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3g9ocyva.java:21)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(e -> e.toString().length() <= 2).limit(k).mapToLong(e ->\
    \ e).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyf9v3fmq.java:22)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        int\
    \ count = 0;\n        for (Long num : arr) {\n            if (num >= 10 && num\
    \ < 100) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnv_2nk5.java:27)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n\
    \            while (n > 0) {\n                sum += n % 10;\n               \
    \ n /= 10;\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnfsaerzc.java:29)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //System.out.println(arr.size());\n\
    \        //System.out.println(k);\n        int count = 0;\n        int sum = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ 99) {\n                continue;\n            }\n            sum += arr.get(i);\n\
    \            count++;\n            if (count == k) {\n                break;\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozo35hah.java:36)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> (x / 10) == 0 || (x / 10) == 1).mapToLong(y\
    \ -> y).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppe2wcrvx.java:23)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ i = 0l;\n        long ans = 0l;\n        while (i < k) {\n            if (arr.get((int)i)\
    \ < 100l) {\n                ans = ans + arr.get((int)i);\n            }\n   \
    \         i = i + 1l;\n        }\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        List<Long>\
    \ arr2 = arr.stream().filter(x -> (x <= 99 && x >= 10)).collect(Collectors.toList());\n\
    \        return arr2.stream().limit(k).mapToLong(Long::longValue).sum();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83lu0uxy.java:22)\n"
  stdout: ''
  timestamp: 1660010327
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (a, b) -> a + b);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ // Check for correct input.\n        // assert(1 <= arr.size() && arr.size()\
    \ <= 100);\n        // assert(1 <= k && k <= arr.size());\n        // // Create\
    \ a new, sorted list.\n        // ArrayList<Long> sorted = new ArrayList<Long>(arr);\n\
    \        // Collections.sort(sorted);\n        // // Add all elements to the sum.\n\
    \        // long total = 0;\n        // for (long i = 0; i < k; i++) {\n     \
    \   //     if (sorted.get((int)i) <= 99) {\n        //         total += sorted.get((int)i);\n\
    \        //     }\n        // }\n        // return total;\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgaepx50d.java:35)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        throw\
    \ new Error(\"Problem not solved\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.Error: Problem not solved\n\tat\
    \ Problem.addElements(tmpcnb_gbt7.java:18)\n\tat Problem.main(tmpcnb_gbt7.java:21)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Return the sum of the elements with at most two digits from the first k elements\
    \ of arr.\n        long ret = 0;\n        long len_arr = (long)arr.size();\n \
    \       long i = 0;\n        while ((i < k) && (i < len_arr)) {\n            long\
    \ tmp = arr.get((int)i);\n            if ((tmp >= 0) && (tmp < 100)) {\n     \
    \           ret = ret + tmp;\n            }\n            i = i + 1;\n        }\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplgsc3etd.java:32)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0l;\n        for (int i = 0; i < k; i++) {\n            long curr =\
    \ arr.get(i);\n            if (curr < 100) {\n                result += curr;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long elem = arr.get(i);\n\
    \            if (elem > 10 && elem < 100) {\n                sum += elem;\n  \
    \          }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnxaec4uj.java:28)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(n -> n < 100).mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        if\
    \ (k > arr.size()) {\n            throw new IllegalArgumentException(\"k must\
    \ be in range 1..len(arr)\");\n        }\n        long sum = 0l;\n        for\
    \ (int i = 0; i < k; i++) {\n            long value = arr.get(i);\n          \
    \  // One digit, nothing to do\n            if (value < 10) {\n              \
    \  sum += value;\n            }\n            // Two digits, sum the digits\n \
    \           else if (value < 100) {\n                sum += value / 10;\n    \
    \            sum += value % 10;\n            }\n            // Lots of digits,\
    \ sum the digits\n            else {\n                while (value > 0) {\n  \
    \                  sum += value % 10;\n                    value /= 10;\n    \
    \            }\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpogmczfqv.java:45)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> (int) Math.log10(x) + 1 <= 2).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010327
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        int\
    \ size = arr.size();\n        long sum = 0;\n        int count = 0;\n        for\
    \ (int i = 0; i < size; i++) {\n            if (arr.get(i) > 9 && arr.get(i) <\
    \ 100) {\n                sum += arr.get(i);\n                count++;\n     \
    \       }\n            if (count == k) {\n                break;\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl_e6hjdi.java:33)\n"
  stdout: ''
  timestamp: 1660010327
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(e -> e.toString().length() <= 2).mapToLong(l ->\
    \ l).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(a -> a < (long)100l).limit(k).mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4bve3gwj.java:22)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n\
    \            while (num >= 10) {\n                num /= 10;\n            }\n\
    \            sum += num;\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9zhr0rtn.java:30)\n"
  stdout: ''
  timestamp: 1660010328
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (long i = 0l; i < k; i = i + 1l) {\n            long\
    \ num = arr.get((int)i);\n            if (num < (long)10l) {\n               \
    \ sum = sum + num;\n            } else if (num < (long)100l) {\n             \
    \   sum = sum + num;\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ <= 99) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010328
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ retVal = 0l;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100l) {\n                retVal += arr.get(i);\n            }\n        }\n\
    \        return retVal;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ First solution: Do it the old fashioned way.\n        // >>> def addElements(arr,\
    \ k):\n        // ...     return sum(v for v in arr[:k] if 0 <= v < 100)\n   \
    \     // ...\n        // >>> addElements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n\
    \        // 24\n        // >>> addElements([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4) == addElements(arr, k)\n        // True\n        // Time complexity: O(n)\
    \ linear\n        // Space complexity: O(1) constant\n        return arr.stream().filter(v\
    \ -> (v < 100)).limit(k).mapToLong(v -> v).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplveizuy6.java:32)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ -1l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6csv98lo.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ sum of the elements with at most two digits from the first k elements of arr\n\
    \        return arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (x, y) ->\
    \ x + y);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Your code here.\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo2sn4utk.java:22)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(l -> l < 100l).reduce(0l, (a,b) -> a + b);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Input: (ArrayList<Long>), Long\n        // Output: Long\n        //\n      \
    \  // Time: O(n)\n        // Space: O(1)\n        long sum = 0l;\n        for\
    \ (int i = 0; i < k; i++) {\n            if (arr.get(i) >= 10 && arr.get(i) <\
    \ 100) {\n                sum += arr.get(i);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp82hmdxx4.java:32)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (long)0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpam83874u.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ int sum = 0;\n        // for (int i = 0; i < k; i++) {\n        //     if (arr.get(i)\
    \ > 99) {\n        //         sum += 0;\n        //     } else {\n        // \
    \        sum += arr.get(i);\n        //     }\n        // }\n        // return\
    \ sum;\n        return arr.stream().filter(x -> x < 100).limit(k).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmib2jva_.java:31)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(x -> x < 100).limit(k).mapToLong(x -> x).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z67vqtp.java:22)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Your code here\n        int index = 0;\n        Long sum = 0l;\n        while\
    \ (index < k && index < arr.size()) {\n            if (arr.get(index) > 99) {\n\
    \                index += 1;\n                continue;\n            }\n     \
    \       sum += arr.get(index);\n            index += 1;\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Added a \"long sum = 0\" statement.\n        long sum = 0;\n        // Added\
    \ a \"long i = 0\" statement.\n        long i = 0;\n        // Added a \"for\"\
    \ statement.\n        for (i = 0; i < k; i++) {\n            // Changed \"sum\
    \ = sum + arr[i]\" statement to \"sum = sum + arr.get(i)\".\n            sum =\
    \ sum + arr.get(i);\n        }\n        // Added a \"return\" statement.\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd11jjagv.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            sum = sum + arr.get(i);\n                    \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        int\
    \ len = arr.size();\n        long sum = 0;\n        int i = 0;\n        while\
    \ (i < len && i < k) {\n            if (arr.get(i) >= 10 && arr.get(i) < 100)\
    \ {\n                sum += arr.get(i);\n            }\n            i++;\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9w7ik8t3.java:30)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0l;\n        for (long i = 0l; i < k; i = i + 1l) {\n            if\
    \ (Math.floor(arr.get((int)i).doubleValue() / 10d) < 1d) {\n                result\
    \ = result + arr.get((int)i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfl782g1p.java:29)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp475yolii.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(e -> e > 9l && e < 100l).reduce(0l, (a, b) -> a\
    \ + b);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv97h0v5d.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long a = arr.get(i);\n\
    \            if (a >= 10 && a < 100) {\n                sum += a;\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvxyfd52u.java:28)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(n -> (n<100)).limit(k).reduce(0l, (n1, n2) -> (n1+n2));\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpszs67q5f.java:22)\n"
  stdout: ''
  timestamp: 1660010330
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> (x < 100)).mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ >= 0 && arr.get((int)i) <= 99) {\n                sum += arr.get((int)i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi46_fcss.java:27)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        int max_digit = 2;\n        for (int i = 0; i < k; i++) {\n\
    \            long num = arr.get(i);\n            if (num <= 99) {\n          \
    \      sum += num;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp475yolii.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        for\
    \ (long i = 0; i < arr.size(); i++) {\n            if (arr.get((int)i) >= 100)\n\
    \                arr.set((int)i, (long)0l);\n        }\n        return arr.stream().limit(k).mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        // BEGIN CODE HERE\n        for (long i = 0; i < k; i++)\
    \ {\n            if (arr.get((int)i) >= 0 && arr.get((int)i) < 100) {\n      \
    \          result += arr.get((int)i);\n            }\n        }\n        // END\
    \ CODE HERE\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ejoi575.java:29)\n"
  stdout: ''
  timestamp: 1660010331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        int i = 0;\n        while (((long)i) < k) {\n         \
    \   long elem = arr.get(i);\n            if (((elem) < ((long)100l))) {\n    \
    \            result = (result) + (elem);\n            }\n            i = (i) +\
    \ ((long)1l);\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplr733au0.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            i = (i) + ((long)1l);\n                    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010331
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100l) {\n                sum += arr.get(i);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(x -> x.toString().length() <= 2).limit(k).mapToLong(x ->\
    \ x).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqwjuq56.java:22)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ <= 99l) {\n                sum += arr.get(i);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        int limit = k > arr.size() ? arr.size() : (int)k;\n      \
    \  for (int i = 0; i < limit; i++) {\n            Long elem = arr.get(i);\n  \
    \          if (elem > 0 && elem < 100) {\n                sum += elem;\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpel5fvr7p.java:29)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (long el : arr) {\n            if (k == 0) break;\n\
    \            if (el < 100) {\n                result += el;\n                k--;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphin3jj67.java:30)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x <= 99l).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = k;\n        if (k > arr.size()) {\n           \
    \ max = arr.size();\n        }\n        for (int i = 0; i < max; i++) {\n    \
    \        long val = arr.get(i);\n            if (val >= 10 && val < 100) {\n \
    \               sum += val;\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mwqngwz.java:32)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ r = 0l;\n        long i = 0l;\n        while ((i < k) && (i < arr.size())) {\n\
    \            long d = arr.get((int)i);\n            if ((d < 10l) || (d < 100l))\
    \ {\n                r = r + d;\n            }\n            i = i + 1l;\n    \
    \    }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().map(e->e.toString().length()<=2?e:0l).reduce(0l,(a,b)->a+b).longValue();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2peej35r.java:21)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > 99) {\n                continue;\n            }\n            sum += arr.get(i);\n\
    \            if (i == k - 1) {\n                break;\n            }\n      \
    \  }\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0xurzv2b.java:32)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 100) {\n \
    \               arr.set(i, (long)99l);\n            }\n        }\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhoqi5lw.java:31)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ arr2[i] = arr[i] % 100, i=0..k-1\n        // Sum of elements 0..k-1 of arr2\
    \ is the same as sum of first k digits of arr\n        // (because elements with\
    \ > 2 digits are all 0)\n        long[] arr2 = new long[(int)k];\n        for\
    \ (int i = 0; i < k; i++)\n            arr2[i] = arr.get(i) % 100;\n        return\
    \ Arrays.stream(arr2).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp808hfk_p.java:28)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long number = arr.get(i);\n\
    \            if (number >= 10 && number < 100) {\n                sum += number;\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptjsk4x5f.java:28)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(i -> i >= 10 && i < 100).reduce(0l, (a, b) -> a\
    \ + b);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxayb_rs.java:21)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        Long\
    \ result = 0l;\n        for (Long a : arr) {\n            if (result >= k) {\n\
    \                break;\n            }\n            if (a < 100l) {\n        \
    \        result += a;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp28idwiwx.java:30)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        int i = 0;\n        while (i < k) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n            i +=\
    \ 1;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (acc, x) -> acc + x);\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 42l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ftr4iyh.java:21)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ -1;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp74ntblnu.java:21)\n"
  stdout: ''
  timestamp: 1660010334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0l;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ >= 10l && arr.get(i) < 100l) {\n                sum += arr.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoth5unqt.java:27)\n"
  stdout: ''
  timestamp: 1660010334
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqypc_yo.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        final\
    \ long $0 = 0l;\n        final long $1 = 1l;\n        final long $2 = 2l;\n  \
    \      return ((long) arr.stream().limit(k).filter(x -> {\n            if ((((x\
    \ < $10l) || (x >= $100l)) || (x < $1000l)) || (x >= $10000l)) {\n           \
    \     return true;\n            } else {\n                return false;\n    \
    \        }\n        }).mapToLong(x -> {\n            return x;\n        }).sum());\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgimdwhr8.java:22: error: cannot find symbol\n            if ((((x\
    \ < $10l) || (x >= $100l)) || (x < $1000l)) || (x >= $10000l)) {\n           \
    \            ^\n  symbol:   variable $10l\n  location: class Problem\n/tmp/tmpgimdwhr8.java:22:\
    \ error: cannot find symbol\n            if ((((x < $10l) || (x >= $100l)) ||\
    \ (x < $1000l)) || (x >= $10000l)) {\n                                      ^\n\
    \  symbol:   variable $100l\n  location: class Problem\n/tmp/tmpgimdwhr8.java:22:\
    \ error: cannot find symbol\n            if ((((x < $10l) || (x >= $100l)) ||\
    \ (x < $1000l)) || (x >= $10000l)) {\n                                       \
    \               ^\n  symbol:   variable $1000l\n  location: class Problem\n/tmp/tmpgimdwhr8.java:22:\
    \ error: cannot find symbol\n            if ((((x < $10l) || (x >= $100l)) ||\
    \ (x < $1000l)) || (x >= $10000l)) {\n                                       \
    \                                 ^\n  symbol:   variable $10000l\n  location:\
    \ class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660010334
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        if\
    \ (k <= 0) {\n            return 0;\n        }\n        long sum = 0;\n      \
    \  for (int i = 0; i < k; i++) {\n            if (arr.get(i) < 10) {\n       \
    \         sum += arr.get(i);\n            } else if (arr.get(i) < 100) {\n   \
    \             sum += arr.get(i);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010334
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100l) {\n                sum += arr.get(i);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010334
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(n -> n < 100).mapToLong(n -> n).sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp475yolii.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp475yolii.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (int index = 0; index < arr.size(); index++) {\n  \
    \          long current = arr.get(index);\n            if (current < 100) {\n\
    \                result += current;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3bfxaxh.java:28)\n"
  stdout: ''
  timestamp: 1660010334
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (int i = 0; i < k; i++) {\n            String number\
    \ = String.valueOf(arr.get(i));\n            if (number.length() <= 2) {\n   \
    \             result += arr.get(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(i -> (i < 100l)).reduce(0l, (a,b) -> (a + b));\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ ((long)arr.subList(0, (int)k).stream().filter(x -> x.toString().length() <=\
    \ 2).mapToLong(Long::longValue).sum());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (arr.subList(0, (int)k)).stream().map(i -> {\n            return Long.parseLong(Integer.toString(i.intValue()));\n\
    \        }).reduce(Long::sum).get();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf7n2ydob.java:24)\n"
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (long)0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpam83874u.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x < 100l).reduce(0l, (a, b) -> a + b);\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        int\
    \ index = 0;\n        long sum = 0;\n        while (index < k) {\n           \
    \ long elem = arr.get(index);\n            if (elem < 10) {\n                sum\
    \ += elem;\n            } else if (elem < 100) {\n                sum += elem;\n\
    \            }\n            index++;\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ max = Integer.MAX_VALUE;\n        ArrayList<Long> upTo2Digits = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <\
    \ max) {\n                upTo2Digits.add(arr.get(i));\n            }\n      \
    \  }\n        if (k > upTo2Digits.size()) {\n            k = upTo2Digits.size();\n\
    \        }\n        long sum = 0;\n        for (int i = 0; i < k; i++) {\n   \
    \         sum += upTo2Digits.get(i);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4uqi71cl.java:36)\n"
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(i -> i < 100).reduce(0l, (x, y) -> x + y);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ r = 0l;\n        long i = 0l;\n        while ((i < k) && (i < arr.size())) {\n\
    \            long a = arr.get((int)i);\n            if ((((long)Math.log10((double)a))\
    \ < (2l))) {\n                r = (r + a);\n            }\n            i = (i\
    \ + (1l));\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ ret = 0l;\n        for (long i = 0l; i < k; i++) {\n            ret += arr.get((int)i);\n\
    \        }\n        return ret;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnjvpy8i.java:26)\n"
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (int i = 0; i < k; i++) {\n            int curLen =\
    \ (int)Math.log10(arr.get(i)) + 1;\n            if (curLen <= 2) {\n         \
    \       result += arr.get(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ < 100) {\n                sum += arr.get((int)i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ ans = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ >= 10) {\n                if (arr.get((int)i) < 100) {\n                   \
    \ ans += arr.get((int)i);\n                }\n            } else {\n         \
    \       ans += arr.get((int)i);\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        ArrayList<Long>\
    \ elems = new ArrayList<Long>();\n        for (long el : arr) {\n            if\
    \ (el < 100) {\n                elems.add(el);\n            }\n        }\n   \
    \     long kth = (k < elems.size()) ? k : elems.size();\n        long ret = (kth\
    \ > 0) ? elems.subList(0, (int)kth).stream().reduce(0l, (Long a, Long b) -> a\
    \ + b) : 0l;\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz9ulqemz.java:30)\n"
  stdout: ''
  timestamp: 1660010335
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ acc = 0;\n        int i = 0;\n        while ((i < k) && (i < arr.size())) {\n\
    \            long e = arr.get(i);\n            if ((e < 10) || (e < 100)) {\n\
    \                acc = acc + e;\n            }\n            i = i + 1;\n     \
    \   }\n        return acc;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ >>> your code goes here <<<\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzua7u4j.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010335
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        int\
    \ count = 0;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) < 100 && count < k) {\n                sum +=\
    \ arr.get(i);\n                count++;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhoq8l0u.java:30)\n"
  stdout: ''
  timestamp: 1660010337
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long i = 0; i < k; i++) {\n            String str = arr.get((int)i).toString();\n\
    \            if (str.length() <= 2) {\n                sum += arr.get((int)i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmp6s54lh.java:26)\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n\
    \            if (n < 100) {\n                sum += n;\n            }\n      \
    \  }\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ first, we need to create a subarray of arr with only the first k elements.\n\
    \        // Since we don't have a built-in library method to do that, we will\
    \ just\n        // iterate from the beginning of arr to k and populate a new ArrayList\
    \ with\n        // those elements.\n        ArrayList<Long> subArr = new ArrayList<Long>();\n\
    \        for (int i = 0; i < k; i++) {\n            subArr.add(arr.get(i));\n\
    \        }\n        // Now, we need to filter the subarray to just elements with\
    \ two digits.\n        // Again, since we don't have a built-in library method\
    \ to do that, we will\n        // iterate over the array and only add elements\
    \ that have two digits to a\n        // new ArrayList.\n        ArrayList<Long>\
    \ filteredSubArr = new ArrayList<Long>();\n        for (int i = 0; i < subArr.size();\
    \ i++) {\n            if (subArr.get(i) > 9 && subArr.get(i) < 100) {\n      \
    \          filteredSubArr.add(subArr.get(i));\n            }\n        }\n    \
    \    // Now, we need to return the sum of the elements in filteredSubArr. Again,\n\
    \        // since we don't have a built-in library method to do that, we will\
    \ iterate\n        // over filteredSubArr and sum the elements.\n        long\
    \ sum = 0;\n        for (int i = 0; i < filteredSubArr.size(); i++) {\n      \
    \      sum += filteredSubArr.get(i);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkb5z8_hu.java:46)\n"
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqypc_yo.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqypc_yo.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0l;\n        long[] temp = new long[arr.size()];\n        int count\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num =\
    \ arr.get(i);\n            if (num < 100) {\n                result += num;\n\
    \                count++;\n            }\n            else {\n               \
    \ temp[i] = arr.get(i);\n            }\n        }\n        long size = count;\n\
    \        if (k > size) {\n            for (int i = 0; i < temp.length; i++) {\n\
    \                if (temp[i] > 0) {\n                    result += temp[i];\n\
    \                    size++;\n                }\n                if (size == k)\n\
    \                    break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0647rxol.java:45)\n"
  stdout: ''
  timestamp: 1660010337
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ total = 0l;\n        int length = arr.size();\n        for (int i = 0; i < length;\
    \ i++) {\n            if (arr.get(i) < 100l) {\n                total += arr.get(i);\n\
    \            }\n            if (i == (int)k - 1) {\n                break;\n \
    \           }\n        }\n        return total;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010337
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ ret = 0;\n        for (long i = 0; i < k; i++) {\n            String s = String.valueOf(arr.get((int)i));\n\
    \            if (s.length() <= 2) {\n                ret += arr.get((int)i);\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010337
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ acc = 0;\n        for (long i = 0; i < k; i++) {\n            // assert 0 <=\
    \ i < len(arr)\n            if (arr.get((int)i) < 100) {\n                acc\
    \ += arr.get((int)i);\n            }\n        }\n        return acc;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010337
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            long n = arr.get(i);\n\
    \            if (n < 10) {\n                sum += n;\n            } else if (n\
    \ < 100) {\n                sum += n;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ -1l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6csv98lo.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(v -> v < 100l).reduce(0l, (a, b) -> a + b);\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Replace this line with your solution.\n        return (0l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd65_3lnm.java:22)\n"
  stdout: ''
  timestamp: 1660010337
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(e -> e < 100).reduce(0l, (acc, x) -> acc + x);\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ s = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) >\
    \ 99) {\n                s += 99;\n            } else {\n                s +=\
    \ arr.get(i);\n            }\n        }\n        return s;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp14x6_5pk.java:30)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ your code here\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0aadcqs.java:22)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Your code goes here.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpks05ocls.java:22)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ int result = 0;\n        // for (int i = 0; i < Math.min(k, arr.size()); i++)\
    \ {\n        //     String str = String.valueOf(arr.get(i));\n        //     if\
    \ (str.length() < 3) {\n        //         result += arr.get(i);\n        // \
    \    }\n        // }\n        // return result;\n        return arr.stream().limit(k).filter(x\
    \ -> String.valueOf(x).length() < 3).mapToLong(x -> x).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(x -> (1l <= x) && (x <= 99l)).limit(k).reduce(0l, (x, y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jbk6rbr.java:21)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ TODO: Your code here.\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp73w8rr7h.java:22)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Initialize a counter to iterate through the first k elements\n        long counter\
    \ = 0l;\n        // Initialize a total variable to store the sum of the elements\n\
    \        long total = 0l;\n        // While the counter is less than k\n     \
    \   while (counter < k) {\n            // Add the element at the counter index\
    \ of arr to the total\n            total += arr.get((int)counter);\n         \
    \   // Increment the counter\n            counter++;\n        }\n        // Return\
    \ the total\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb076jp6g.java:34)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        var\
    \ sum = 0l;\n        for (var i = 0; i < k; i++) {\n            var v = arr.get(i);\n\
    \            if (v >= 10 && v < 100) {\n                sum += v;\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztd8tsx1.java:28)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ < 100) {\n                sum += arr.get(i);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ total = 0l;\n        for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n\
    \            if (num < 100) {\n                total += num;\n            }\n\
    \        }\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010338
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().limit(k).filter(x -> x < 100).reduce(0l, (a, b) -> a + b);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Implement your solution here\n        return 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxknb_8yd.java:22)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoqypc_yo.java:21)\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(x -> x.toString().length() <= 2).limit(k).mapToLong(x ->\
    \ x).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqwjuq56.java:22)\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        int\
    \ count = 0;\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) < 10) {\n                count++;\n          \
    \      sum += arr.get(i);\n            } else if (arr.get(i) < 100) {\n      \
    \          count++;\n                sum += arr.get(i);\n            }\n     \
    \       if (count == k) {\n                break;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsoum1k3.java:36)\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Write your code here.\n        return arr.stream().filter(i -> i >= (long)1l\
    \ && i <= (long)99l).limit(k).mapToLong(i -> i).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejg1zyv5.java:22)\n"
  stdout: ''
  timestamp: 1660010339
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        throw\
    \ new IllegalArgumentException(\"Not yet implemented\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Not yet\
    \ implemented\n\tat Problem.addElements(tmpdgdphu7c.java:18)\n\tat Problem.main(tmpdgdphu7c.java:21)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ < 100)\n                sum += arr.get((int)i);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp475yolii.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ arr.stream().filter(x -> (x < 100 && x > 9)).limit(k).mapToLong(x -> x).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl03nkynm.java:21)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ return arr.stream().map(x -> (1 <= x.toString().length() && x.toString().length()\
    \ <= 2) ? x : 0l).limit(k).reduce(0l, (x, y) -> x + y);\n        long result =\
    \ 0;\n        for (int i = 0; i < k; i++) {\n            long num = arr.get(i);\n\
    \            if (1 <= num.toString().length() && num.toString().length() <= 2)\
    \ {\n                result += num;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplmqjsau8.java:22: error: long cannot be dereferenced\n        \
    \    if (1 <= num.toString().length() && num.toString().length() <= 2) {\n   \
    \                     ^\n/tmp/tmplmqjsau8.java:22: error: long cannot be dereferenced\n\
    \            if (1 <= num.toString().length() && num.toString().length() <= 2)\
    \ {\n                                                   ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010339
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (long index = 0; index < k; index++) {\n          \
    \  if (arr.get((int)index) >= 0 && arr.get((int)index) <= 99) {\n            \
    \    result += arr.get((int)index);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0qc62le.java:27)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ > 9 && arr.get((int)i) < 100) {\n                result += arr.get((int)i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphpttk5bh.java:27)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ index = 0;\n        long sum = 0;\n        for (Long elem : arr) {\n       \
    \     if (index > k) {\n                break;\n            }\n            if\
    \ (elem < 100) {\n                sum += elem;\n            }\n            index++;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6c76g501.java:32)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Solution:\n        // 1. Set an accumulator\n        // 2. Iterate through the\
    \ array\n        // 3. Add to the accumulator if the element has at most two digits\n\
    \        // 4. Return the accumulator\n        long total = 0;\n        int i\
    \ = 0;\n        while (i < arr.size() && i < k) {\n            if (arr.get(i)\
    \ < 100) {\n                total += arr.get(i);\n            }\n            i++;\n\
    \        }\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Find sum of first k elements of arr\n        // If arr is empty or k is <= 0\
    \ return 0.\n        if (arr.size() == 0 || k <= 0) {\n            return 0;\n\
    \        }\n        // Else return the sum of the first k elements\n        //\
    \ where if an element is greater than 99, only add the\n        // last two digits.\n\
    \        long sum = 0;\n        for (int i = 0; i < k; i++) {\n            if\
    \ (arr.get(i) < 100) {\n                sum += arr.get(i);\n            } else\
    \ {\n                sum += arr.get(i) % 100;\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ykzfqno.java:38)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp475yolii.java:21)\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (k == 0 ? 0 : arr.get((int)(k - 1)) > 100 ? addElements(arr, k - 1) : addElements(arr,\
    \ k - 1) + arr.get((int)(k - 1)));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (long i = 0; i < k; i++) {\n            if (arr.get((int)i)\
    \ < 100) {\n                result += arr.get((int)i);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ (long)arr.stream().limit(k).filter(i -> i < 100l).mapToLong(i -> i).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (long x = 0; x < k; x++) {\n            long element =\
    \ arr.get((int)x);\n            long numDigits = (long)Math.log10((double)element)\
    \ + 1;\n            if (numDigits <= 2) {\n                sum += element;\n \
    \           }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Write your code here.\n        return (0l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk7akdqmr.java:22)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        //\
    \ Please fill out this function\n        return arr.stream().filter(x -> x > 99).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnf3smb7p.java:22)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i)\
    \ > 100) {\n                result += arr.get(i) % 100;\n            } else {\n\
    \                result += arr.get(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalw3cj17.java:30)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        return\
    \ 1l;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9lw01okn.java:21)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for (int i = 0; i < (long)k; i++) {\n            if ((((long)arr.get(i))\
    \ < (long)10l) || (((long)arr.get(i)) < (long)100l)) {\n                sum =\
    \ (sum + (long)arr.get(i));\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) >= 100) {\n                arr.set(i, (long)99l);\n            }\n\
    \        }\n        for (int i = 0; i < k; i++) {\n            result += arr.get(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8208r1u4.java:31)\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        ArrayList<Long>\
    \ twodigits = new ArrayList<Long>();\n        long res = 0l;\n        long i =\
    \ 0l;\n        long acc_k = 0l;\n        while (i < arr.size()) {\n          \
    \  Long curr = arr.get((int)i);\n            if (curr < 100l) {\n            \
    \    twodigits.add(curr);\n            }\n            i = i + 1l;\n        }\n\
    \        i = 0l;\n        while (i < twodigits.size()) {\n            if (acc_k\
    \ == k) {\n                break;\n            }\n            res = res + twodigits.get((int)i);\n\
    \            acc_k = acc_k + 1l;\n            i = i + 1l;\n        }\n       \
    \ return res;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx97oi4ou.java:42)\n"
  stdout: ''
  timestamp: 1660010340

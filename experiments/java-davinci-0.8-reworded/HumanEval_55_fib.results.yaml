language: java
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0l;\n        }\n        else if (n == 1) {\n            return 1l;\n\
    \        }\n        else {\n            return Problem.fib((n - 1)) + Problem.fib((n\
    \ - 2));\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0l;\n        }\n        else if (n == 1) {\n            return 1l;\n\
    \        }\n        else {\n            return (Problem.fib((n - 1l)) + Problem.fib((n\
    \ - 2l)));\n        }\n    }\n    public static void main(String[] args) {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n <= 1l) {\n       \
    \     return n;\n        }\n        long a = 0l;\n        long b = 1l;\n     \
    \   long c = 1l;\n        long count = 2l;\n        while(count <= n) {\n    \
    \        c = a + b;\n            a = b;\n            b = c;\n            count\
    \ = count + 1l;\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long t1 = 0;\n        long t2 = 1;\n        long temp = t1 +\
    \ t2;\n        long i = 2;\n        while (i < n) {\n            t1 = t2;\n  \
    \          t2 = temp;\n            temp = t1 + t2;\n            i = i + 1;\n \
    \       }\n        return temp;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return Math.round(Math.pow((1\
    \ + Math.sqrt(5)) / 2, n) / Math.sqrt(5));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2l) {\n       \
    \     return 1l;\n        }\n        return fib((n - 1l)) + fib((n - 2l));\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgswv5h0q.java:23)\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f1 = 0l;\n       \
    \ long f2 = 1l;\n        for (long i = 0l; i < n; i++) {\n            long f3\
    \ = f1 + f2;\n            f1 = f2;\n            f2 = f3;\n        }\n        return\
    \ f1;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        else\n            return fib(n - 1) + fib(n - 2);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return 0l;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rg65vfs.java:20)\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // your code here\n   \
    \     return 0l;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppudrusj4.java:21)\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0l;\n        long b = 1l;\n      \
    \  for (long i = 2l; i <= n; i += 1l) {\n            long tmp = a + b;\n     \
    \       a = b;\n            b = tmp;\n        }\n        return b;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0l) {\n       \
    \     return 0l;\n        }\n        if(n == 1l) {\n            return 1l;\n \
    \       }\n        long a = 0l;\n        long b = 1l;\n        long c = 1l;\n\
    \        for(long i = 2l; i <= n; i++) {\n            c = a + b;\n           \
    \ a = b;\n            b = c;\n        }\n        return c;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return fib_impl(n, 1, 0);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzg73dwar.java:17: error: cannot find symbol\n        return fib_impl(n,\
    \ 1, 0);\n               ^\n  symbol:   method fib_impl(long,int,int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return (fib((n - 1l)) + fib((n - 2l)));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l)\n        \
    \    return 0l;\n        if (n == 1l)\n            return 1l;\n        return\
    \ fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return (fib((n - 1)) + fib((n - 2)));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (n == 0 || n ==\
    \ 1) ? n : fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        long fib1 = 0;\n        long fib2 = 1;\n \
    \       long fib3 = 1;\n        long i = 2;\n        while (i < n) {\n       \
    \     fib3 = fib1 + fib2;\n            fib1 = fib2;\n            fib2 = fib3;\n\
    \            i = i + 1;\n        }\n        return fib3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcu2ksxzc.java:33)\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Since fib(n) is not\
    \ defined for n less than 1,\n        // let's just return 0.\n        if (n <\
    \ 1) {\n            return 0;\n        }\n        // This is a trivial case.\n\
    \        if (n == 1) {\n            return 1;\n        }\n        // If fib(n)\
    \ has been previously calculated, then we can\n        // just use the memoized\
    \ value.\n        if (fib.memo.containsKey(n)) {\n            return fib.memo.get(n);\n\
    \        }\n        // Otherwise, let's calculate fib(n) in a naive way.\n   \
    \     long fibn = fib(n - 1) + fib(n - 2);\n        // But before we return the\
    \ calculated value, let's\n        // store it in our memo.\n        fib.memo.put(n,\
    \ fibn);\n        return fibn;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpitqdbkn6.java:28: error: package fib does not exist\n        if\
    \ (fib.memo.containsKey(n)) {\n               ^\n/tmp/tmpitqdbkn6.java:29: error:\
    \ package fib does not exist\n            return fib.memo.get(n);\n          \
    \            ^\n/tmp/tmpitqdbkn6.java:35: error: package fib does not exist\n\
    \        fib.memo.put(n, fibn);\n           ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        try {\n            return\
    \ ((long) (Problem.fib2(n).getValue(0)));\n        } catch (org.javatuples.IndexOutOfBoundsException\
    \ e) {\n            throw new AssertionError(\"Index out of bounds\");\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpdozocanx.java:18: error: cannot find symbol\n            return\
    \ ((long) (Problem.fib2(n).getValue(0)));\n                                  \
    \ ^\n  symbol:   method fib2(long)\n  location: class Problem\n/tmp/tmpdozocanx.java:19:\
    \ error: cannot find symbol\n        } catch (org.javatuples.IndexOutOfBoundsException\
    \ e) {\n                               ^\n  symbol:   class IndexOutOfBoundsException\n\
    \  location: package org.javatuples\n2 errors\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       c = a + b;\n            a = b;\n            b = c;\n        }\n      \
    \  return c;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010742
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        long i = 1;\n        while (i < n) {\n            long temp\
    \ = a;\n            a = b;\n            b = temp + b;\n            i = i + 1;\n\
    \        }\n        return b;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        long f0 = 0;\n        long f1 = 1;\n        long f2 = 0;\n        long\
    \ i = 2;\n        while (i <= n) {\n            f2 = f0 + f1;\n            f0\
    \ = f1;\n            f1 = f2;\n            i += 1;\n        }\n        return\
    \ f2;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmn0xgjy6.java:32)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long first = 0l;\n        long second = 1l;\n\
    \        long third = 0l;\n        while (n > 1) {\n            third = first\
    \ + second;\n            first = second;\n            second = third;\n      \
    \      n -= 1;\n        }\n        return third;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010742
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long result = 0;\n    \
    \    long x = 0;\n        long y = 1;\n        for (long i = 0; i < n; i++) {\n\
    \            result = x + y;\n            x = y;\n            y = result;\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm5t14t4c.java:28)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Pair<Long, Long> pair =\
    \ Pair.with(0l, 1l);\n        long i = 0;\n        while (i < n) {\n         \
    \   pair = Pair.with(pair.getValue1(), pair.getValue0() + pair.getValue1());\n\
    \            i += 1;\n        }\n        return pair.getValue0();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.fib(tmp4ishig08.java:17)\n\tat Problem.main(tmp4ishig08.java:26)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        long c = 0;\n        if (n == 0)\n            return a;\n  \
    \      else if (n == 1)\n            return b;\n        else {\n            for\
    \ (long i = 2; i <= n; i++) {\n                c = a + b;\n                a =\
    \ b;\n                b = c;\n            }\n            return c;\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // REPLACE THIS CODE WITH\
    \ A CORRECT IMPLEMENTATION.\n        return n;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmck4c90.java:21)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        final long a = 1L;\n  \
    \      final long b = 1L;\n        if (n == 0L) {\n            return a;\n   \
    \     }\n        if (n == 1L) {\n            return b;\n        }\n        long\
    \ i = 2L;\n        long _i = 1L;\n        long _i1 = 1L;\n        long _i2 = 1L;\n\
    \        while ((((i < n) && (i < 46L)) && (_i2 < (2L * 10000000000L))) && (_i2\
    \ > (-2L * 10000000000L))) {\n            _i2 = (_i + _i1);\n            _i =\
    \ _i1;\n            _i1 = _i2;\n            i = (i + 1L);\n        }\n       \
    \ if (((i < n) && (i < 46L)) && (_i2 < (2L * 10000000000L))) {\n            return\
    \ (((_i2 + _i1) - _i) + (_i2 - _i1));\n        }\n        if (((i < n) && (i <\
    \ 46L)) && (_i2 > (-2L * 10000000000L))) {\n            return (((_i2 + _i1) -\
    \ _i) - (_i2 - _i1));\n        }\n        if (((i < n) && (i < 46L)) && ((_i2\
    \ > 2L * 10000000000L) || (_i2 < (-2L * 10000000000L)))) {\n            return\
    \ 0L;\n        }\n        if ((i == n) && (i < 46L)) {\n            return _i2;\n\
    \        }\n        return 0L;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return fib((n - 1l)) + fib((n - 2l));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return ((n == 0l) || (n\
    \ == 1l)) ? 1l : (fib((n - 1l)) + fib((n - 2l)));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypnmgodo.java:20)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x0 = 0;\n        long\
    \ x1 = 1;\n        long xn = 0;\n        long i = 1;\n        while (i < n) {\n\
    \            xn = x0 + x1;\n            x0 = x1;\n            x1 = xn;\n     \
    \       i = i + 1;\n        }\n        return xn;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiy7d1cvd.java:31)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0l;\n        long\
    \ b = 1l;\n        long c = 0l;\n        for (long i = 2l; i <= n; i++) {\n  \
    \          c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return c;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps98opxgj.java:29)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        long prev = 0;\n        long curr = 1;\n        for (long i = 1; i <\
    \ n; i++) {\n            long tmp = curr;\n            curr = prev + curr;\n \
    \           prev = tmp;\n        }\n        return curr;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        long\
    \ i = 2;\n        while (i < n) {\n            long tmp = a + b;\n           \
    \ a = b;\n            b = tmp;\n            i = i + 1;\n        }\n        return\
    \ a + b;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n<2 ? n : fib(n-1)\
    \ + fib(n-2);\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        long a = 0;\n        long b = 1;\n   \
    \     for (long i = 2; i <= n; i++) {\n            long tmp = a + b;\n       \
    \     a = b;\n            b = tmp;\n        }\n        return b;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0l;\n        }\n        if (n == 1) {\n            return 1l;\n \
    \       }\n        long one = 0l;\n        long two = 1l;\n        long result\
    \ = 0l;\n        long counter = 1l;\n        while (counter < n) {\n         \
    \   result = one + two;\n            one = two;\n            two = result;\n \
    \           counter = counter + 1l;\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return new long[]{0, 1,\
    \ 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181,\
    \ 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040,\
    \ 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986,\
    \ 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903}[(int)n];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n\treturn (long) (java.lang.Math.pow((1+java.lang.Math.sqrt(5))/2,\
    \ n)/java.lang.Math.sqrt(5) + 0.5);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long last = 0l;\n     \
    \   long current = 1l;\n        long i = 1l;\n        while (i < n) {\n      \
    \      long oldCurrent = current;\n            current = last + current;\n   \
    \         last = oldCurrent;\n            i += 1l;\n        }\n        return\
    \ current;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2) {\n       \
    \     return 1;\n        }\n        long a = 1;\n        long b = 1;\n       \
    \ for (long i = 3; i <= n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n <= 1 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (long) 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpridfcwxy.java:20)\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_6zno35.java:20)\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        ArrayList<Long> fibs =\
    \ new ArrayList<>();\n        fibs.add(1l);\n        fibs.add(1l);\n        while\
    \ (fibs.size() < n + 1) {\n            fibs.add(fibs.get(fibs.size() - 1) + fibs.get(fibs.size()\
    \ - 2));\n        }\n        return fibs.get((int) n);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp02cskk.java:26)\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        BigInteger a = BigInteger.valueOf(0);\n\
    \        BigInteger b = BigInteger.valueOf(1);\n        while (n != 0) {\n   \
    \         BigInteger temp = a;\n            a = b;\n            b = b.add(temp);\n\
    \            n--;\n        }\n        return a.longValue();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n\tif (n == 0) {\n\t    return 0;\n\
    \t} else if (n == 1) {\n\t    return 1;\n\t} else {\n\t    return fib(n - 1) +\
    \ fib(n - 2);\n\t}\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return 0l;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9rg65vfs.java:20)\n"
  stdout: ''
  timestamp: 1660010741
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return 1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctlhtket.java:20)\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long tmp = a;\n\
    \            a = b;\n            b = tmp + b;\n        }\n        return a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0 || n == 1) return\
    \ n;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // BEGIN SOLUTION\n   \
    \     if (n < 2) {\n            return n;\n        }\n        long[] dp = new\
    \ long[(int) n + 1];\n        dp[0] = 0;\n        dp[1] = 1;\n        for (int\
    \ i = 2; i <= n; i++) {\n            dp[i] = dp[i - 1] + dp[i - 2];\n        }\n\
    \        return dp[(int) n];\n        // END SOLUTION\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // **BEGIN SOLUTION**\n\
    \        long n_2 = 0;\n        long n_1 = 1;\n        long sum = 0;\n       \
    \ for (long i = 2; i <= n; i++) {\n            sum = n_1 + n_2;\n            n_2\
    \ = n_1;\n            n_1 = sum;\n        }\n        return n_1;\n        // **END\
    \ SOLUTION**\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        long c = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       c = a + b;\n            a = b;\n            b = c;\n        }\n      \
    \  return c;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010742
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Pair<BigInteger, BigInteger>\
    \ p = null;\n        if (n == 0) {\n            p = Pair.with(BigInteger.ZERO,\
    \ BigInteger.ONE);\n        } else {\n            p = _fib(n - 1);\n        }\n\
    \        return p.getValue0().longValue();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu42jao18.java:21: error: cannot find symbol\n            p = _fib(n\
    \ - 1);\n                ^\n  symbol:   method _fib(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return Integer.valueOf(fun.fib(n).toString());\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpd_ywvr2e.java:17: error: cannot find symbol\n        return Integer.valueOf(fun.fib(n).toString());\n\
    \                               ^\n  symbol:   variable fun\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return (fib((n - 1)) + fib((n - 2)));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1, c =\
    \ 1;\n        for (long i = 2; i <= n; i++) {\n            c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return c;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return Stream.iterate(new\
    \ Pair<Long, Long>(1l, 1l), x -> new Pair<Long, Long>(x.getValue0(), x.getValue0()\
    \ + x.getValue1())).limit(n).map(x -> x.getValue0()).reduce((x, y) -> y).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.fib(tmpccmbr4bb.java:17)\n\tat Problem.main(tmpccmbr4bb.java:20)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n\t\tif (n == 0) return 0;\n\t\t\
    if (n == 1) return 1;\n\t\treturn fib(n - 1) + fib(n - 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        int[] dp = new int[300];\n\
    \        dp[0] = 0;\n        dp[1] = 1;\n        for (int i = 2; i <= n; i++)\
    \ {\n            dp[i] = dp[i - 1] + dp[i - 2];\n        }\n        return dp[(int)\
    \ n];\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0;\n        long b = 1;\n        for\
    \ (long i = 2; i <= n; i++) {\n            long c = a + b;\n            a = b;\n\
    \            b = c;\n        }\n        return b;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        return (fib((n - 1)) + fib((n - 2)));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Implemented using Binet's\
    \ Formula\n        // https://en.wikipedia.org/wiki/Fibonacci_number#Matrix_form\n\
    \        // https://en.wikipedia.org/wiki/Binet%27s_formula\n        // (1/\u221A\
    5) * (((1+\u221A5)/2)^n - ((1-\u221A5)/2)^n)\n        // Time complexity: log(n)\n\
    \        double sqrt5 = Math.sqrt(5);\n        double result = (1 / sqrt5) * (Math.pow((1\
    \ + sqrt5) / 2, n) - Math.pow((1 - sqrt5) / 2, n));\n        return (long)result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return fib((n - 1l)) + fib((n - 2l));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2) {\n       \
    \     return 1;\n        }\n        long fib_p = 1;\n        long fib_pp = 1;\n\
    \        long fib = 0;\n        for (long i = 3; i <= n; i++) {\n            fib\
    \ = fib_p + fib_pp;\n            fib_pp = fib_p;\n            fib_p = fib;\n \
    \       }\n        return fib;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x = 0;\n        long\
    \ y = 1;\n        for (long i = 0; i < n; i++) {\n            long z = x + y;\n\
    \            x = y;\n            y = z;\n        }\n        return x;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return fib((n - 1l)) + fib((n - 2l));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2)\n          \
    \  return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39opse4c.java:22)\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Your code here.\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2n226zcm.java:18: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return ((n < 2L) ? 1L :\
    \ (fib((n - 1L)) + fib((n - 2L))));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnru_0ioa.java:20)\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Pair<Long, Long> pair =\
    \ new Pair<Long, Long>(0l, 1l);\n        for (long i = 0; i < n; i++) {\n    \
    \        pair = new Pair<Long, Long>(pair.getValue1(), pair.getValue0() + pair.getValue1());\n\
    \        }\n        return pair.getValue0();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.fib(tmpr28xa3_z.java:17)\n\tat Problem.main(tmpr28xa3_z.java:24)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0l) {\n       \
    \     return 0l;\n        }\n        if(n == 1l) {\n            return 1l;\n \
    \       }\n        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Good luck!\n       \
    \ if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n   \
    \         return 1;\n        }\n        else {\n            return fib(n - 1)\
    \ + fib(n - 2);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n < 0) {\n         \
    \   return 0;\n        }\n        if(n < 2) {\n            return 1;\n       \
    \ }\n        long a = 1;\n        long b = 1;\n        long c = 0;\n        for(long\
    \ i = 2; i <= n; i++) {\n            c = a + b;\n            a = b;\n        \
    \    b = c;\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblsd73az.java:34)\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long temp = a;\n\
    \            a = b;\n            b = temp + b;\n        }\n        return a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x = 0;\n        long\
    \ y = 1;\n        for (long i = 0; i < n; i++) {\n            long t = x;\n  \
    \          x = y;\n            y = t + y;\n        }\n        return x;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long fibo = 0l;\n     \
    \   if (n == 0l) {\n            fibo = 0l;\n        } else if (n == 1l) {\n  \
    \          fibo = 1l;\n        } else {\n            fibo = fib((n - 1l)) + fib((n\
    \ - 2l));\n        }\n        return fibo;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (n == 0) ? 0 : (n\
    \ == 1) ? 1 : fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        throw new RuntimeException(\"\
    Not implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.fib(tmpqugr9kmf.java:17)\n\tat Problem.main(tmpqugr9kmf.java:20)\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long[] memo = new long[(int) (n + 1)];\n        memo[0] = 0;\n\
    \        memo[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            memo[i]\
    \ = memo[i - 1] + memo[i - 2];\n        }\n        return memo[(int) n];\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        long fib1 = 0;\n        long fib2 = 1;\n        long fibn = 1;\n\
    \        long i = 2;\n        while (i <= n) {\n            fibn = fib1 + fib2;\n\
    \            fib1 = fib2;\n            fib2 = fibn;\n            i = i + 1;\n\
    \        }\n        return fibn;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long result = 0;\n    \
    \    if (n == 0) {\n            result = 0;\n        } else if (n == 1) {\n  \
    \          result = 1;\n        } else {\n            long prev = 0;\n       \
    \     long curr = 1;\n            for (long i = 1; i < n; i++) {\n           \
    \     long tmp = curr;\n                curr = prev + curr;\n                prev\
    \ = tmp;\n            }\n            result = curr;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return new long[]{0, 1,\
    \ 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181,\
    \ 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040,\
    \ 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986,\
    \ 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903,\
    \ 2971215073, 4807526976, 7778742049, 12586269025, 20365011074l, 32951280099l,\
    \ 53316291173l, 86267571272l, 139583862445l, 225851433717l, 365435296162l, 591286729879l,\
    \ 956722026041l, 1548008755920l, 2504730781961l, 4052739537881l, 6557470319842l,\
    \ 10610209857723l, 17167680177565l, 27777890035288l, 44945570212853l, 72723460248141l,\
    \ 117669030460994l, 190392490709135l, 308061521170129l, 498454011879264l, 806515533049393l,\
    \ 1304969544928657l, 2111485077978050l, 3416454622906707l, 5527939700884757l,\
    \ 8944394323791464l, 14472334024676221l, 23416728348467685l, 37889062373143906l,\
    \ 61305790721611591l, 99194853094755497l, 160500643816367088l, 259695496911122585l,\
    \ 420196140727489673l, 679891637638612258l, 1100087778366101931l, 1779979416004714189l\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpf75ooua2.java:17: error: integer number too large\n        return\
    \ new long[]{0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,\
    \ 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811,\
    \ 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817,\
    \ 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170,\
    \ 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074l, 32951280099l,\
    \ 53316291173l, 86267571272l, 139583862445l, 225851433717l, 365435296162l, 591286729879l,\
    \ 956722026041l, 1548008755920l, 2504730781961l, 4052739537881l, 6557470319842l,\
    \ 10610209857723l, 17167680177565l, 27777890035288l, 44945570212853l, 72723460248141l,\
    \ 117669030460994l, 190392490709135l, 308061521170129l, 498454011879264l, 806515533049393l,\
    \ 1304969544928657l, 2111485077978050l, 3416454622906707l, 5527939700884757l,\
    \ 8944394323791464l, 14472334024676221l, 23416728348467685l, 37889062373143906l,\
    \ 61305790721611591l, 99194853094755497l, 160500643816367088l, 259695496911122585l,\
    \ 420196140727489673l, 679891637638612258l, 1100087778366101931l, 1779979416004714189l\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                   ^\n/tmp/tmpf75ooua2.java:17:\
    \ error: integer number too large\n        return new long[]{0, 1, 1, 2, 3, 5,\
    \ 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946,\
    \ 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269,\
    \ 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986,\
    \ 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903,\
    \ 2971215073, 4807526976, 7778742049, 12586269025, 20365011074l, 32951280099l,\
    \ 53316291173l, 86267571272l, 139583862445l, 2258"
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) return 0;\n\
    \        long fibonacci = 1;\n        long prev = 0;\n        long current = 1;\n\
    \        for(long i = 2; i <= n; i++) {\n            fibonacci = current + prev;\n\
    \            prev = current;\n            current = fibonacci;\n        }\n  \
    \      return fibonacci;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long i=0;\n        long\
    \ f=1;\n        long temp;\n        long n2=n;\n        while (n2!=0) {\n    \
    \        temp=f;\n            f=f+i;\n            i=temp;\n            n2=n2-1;\n\
    \        }\n        return i;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n <= 1 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Pair<Long, Long> a = new\
    \ Pair<Long, Long>(0l, 1l);\n        return fib(n, a).getValue1();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl78v_6cr.java:18: error: method fib in class Problem cannot be\
    \ applied to given types;\n        return fib(n, a).getValue1();\n           \
    \    ^\n  required: long\n  found:    long,Pair<Long,Long>\n  reason: actual and\
    \ formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) return 0;\n\
    \        else if(n == 1) return 1;\n        else return fib(n - 1) + fib(n - 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010745
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0l;\n        long\
    \ b = 1l;\n        long c = 0l;\n        for (long i = 2l; i <= n; i++) {\n  \
    \          c = a + b;\n            a = b;\n            b = c;\n        }\n   \
    \     return c;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps98opxgj.java:29)\n"
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1l) + fib(n - 2l);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2l ? n : (fib(n\
    \ - 1l) + fib(n - 2l));\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long t = a + b;\n\
    \            a = b;\n            b = t;\n        }\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2)\n         \
    \   return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        /*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/\n\
    \        // Part 1: Implement fib here!\n        /*<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*/\n\
    \        return null;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4pk2stk.java:20: error: incompatible types: <null> cannot be converted\
    \ to long\n        return null;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010746
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return switch(n) {\n  \
    \          case 1l -> 1l;\n            case 2l -> 1l;\n            default ->\
    \ fib(n - 1l) + fib(n - 2l);\n        };\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0yvcqpxz.java:17: error: patterns in switch statements are a preview\
    \ feature and are disabled by default.\n        return switch(n) {\n         \
    \            ^\n  (use --enable-preview to enable patterns in switch statements)\n\
    /tmp/tmp0yvcqpxz.java:18: error: constant label of type long is not compatible\
    \ with switch selector type long\n            case 1l -> 1l;\n               \
    \  ^\n/tmp/tmp0yvcqpxz.java:19: error: constant label of type long is not compatible\
    \ with switch selector type long\n            case 2l -> 1l;\n               \
    \  ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        long i1 = 0;\n        long i2 = 1;\n     \
    \   long res = 1;\n        for (long i = 2; i <= n; i += 1) {\n            res\
    \ = i1 + i2;\n            i1 = i2;\n            i2 = res;\n        }\n       \
    \ return res;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 0) {\n        \
    \    throw new RuntimeException(\"fib: negative argument\");\n        }\n    \
    \    if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
    \            return 1;\n        }\n        long a = 0;\n        long b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return (Problem.fib((n - 1l)) + Problem.fib((n - 2l)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 2)\n         \
    \   return 1;\n        long result = 0;\n        long first = 1;\n        long\
    \ second = 1;\n        for (long i = 3; i <= n; i++) {\n            result = first\
    \ + second;\n            first = second;\n            second = result;\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        else {\n            long[] arr = new long[(int) n + 1];\n\
    \            arr[0] = 0;\n            arr[1] = 1;\n            for (int i = 2;\
    \ i <= n; i++) {\n                arr[i] = arr[i - 1] + arr[i - 2];\n        \
    \    }\n            return arr[(int) n];\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long p = 0;\n        long\
    \ c = 1;\n        for (long i = 0; i < n; i++) {\n            long t = c;\n  \
    \          c = p + c;\n            p = t;\n        }\n        return p;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n > 1 ? fib(n -\
    \ 1) + fib(n - 2) : n;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long first = 0;\n     \
    \   long second = 1;\n        if (n == 0) {\n            return first;\n     \
    \   }\n        else if (n == 1) {\n            return second;\n        }\n   \
    \     long sum = 0;\n        for (long i = 2; i <= n; i++) {\n            sum\
    \ = first + second;\n            first = second;\n            second = sum;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // START SOLUTION\n   \
    \     if (n <= 2) {\n            return 1;\n        }\n        long a = 1;\n \
    \       long b = 1;\n        for (long i = 2; i < n; i++) {\n            long\
    \ next = a + b;\n            a = b;\n            b = next;\n        }\n      \
    \  return b;\n        // END SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // BEGIN SOLUTION\n   \
    \     if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n\
    \            return 1;\n        }\n        long a = 0;\n        long b = 1;\n\
    \        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return b;\n        // END\
    \ SOLUTION\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n < 0) {\n         \
    \   throw new IllegalArgumentException(\"n must be >= 0\");\n        }\n     \
    \   if(n == 0) {\n            return 0;\n        }\n        if(n == 1) {\n   \
    \         return 1;\n        }\n        long result = 1l;\n        long prev =\
    \ 0l;\n        for(long i = 2l; i <= n; i++) {\n            long new_result =\
    \ result + prev;\n            prev = result;\n            result = new_result;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (long)__fib__.apply(n);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpfxo5zl67.java:17: error: cannot find symbol\n        return (long)__fib__.apply(n);\n\
    \                     ^\n  symbol:   variable __fib__\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010746
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return fib_1(n);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzeiml_2l.java:17: error: cannot find symbol\n        return fib_1(n);\n\
    \               ^\n  symbol:   method fib_1(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1, c;\n\
    \        if (n == 0) return a;\n        for (long i = 2; i <= n; i++) {\n    \
    \        c = a + b;\n            a = b;\n            b = c;\n        }\n     \
    \   return b;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        throw new RuntimeException(\"\
    Not implemented.\");\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented.\n\
    \tat Problem.fib(tmpeqpcflvw.java:17)\n\tat Problem.main(tmpeqpcflvw.java:20)\n"
  stdout: ''
  timestamp: 1660010747
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n\treturn n;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1wani1f1.java:20)\n"
  stdout: ''
  timestamp: 1660010747
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (n <= 1) ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) {\n        \
    \    return 0l;\n        }\n        if(n == 1) {\n            return 1l;\n   \
    \     }\n        long x = 0l;\n        long y = 1l;\n        long i = 1l;\n  \
    \      while(i < n) {\n            long z = x + y;\n            x = y;\n     \
    \       y = z;\n            i += 1l;\n        }\n        return y;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Implement a function\
    \ that returns Fibonacci number at n index.\n        //\n        // 0, 1, 1, 2,\
    \ 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\n        //\n        // n = (n - 1) +\
    \ (n - 2)\n        //\n        // Assume that inputs are valid (n >= 0).\n   \
    \     //\n        // Example:\n        //\n        // fib(10) = 55\n        //\n\
    \        // fib(1) = 1\n        //\n        // fib(8) = 21\n        //\n     \
    \   // fib(0) = 0\n        //\n        // Write your code here.\n        if (n\
    \ == 0) return 0;\n        else if (n == 1) return 1;\n        else {\n      \
    \      long a = 0;\n            long b = 1;\n            long c = 0;\n       \
    \     for (int i = 1; i < n; i++) {\n                c = a + b;\n            \
    \    a = b;\n                b = c;\n            }\n            return c;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Your code goes here.\n\
    \        long a = 0;\n        long b = 1;\n        if (n == 0) {\n           \
    \ return a;\n        }\n        if (n == 1) {\n            return b;\n       \
    \ }\n        long c = a + b;\n        for (int i = 2; i < n; i++) {\n        \
    \    a = b;\n            b = c;\n            c = a + b;\n        }\n        return\
    \ c;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n <= 2 ? 1 : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (((n==0)?0:((n==1)?1:((fib((n-1)))+(fib((n-2)))))));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        long a = 0;\n        long b = 1;\n       \
    \ for (long i = 1; i < n; i++) {\n            long c = a + b;\n            a =\
    \ b;\n            b = c;\n        }\n        return b;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n == 0 ? 0 : n ==\
    \ 1 ? 1 : fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        if (n <= 3) {\n            return 2;\n   \
    \     }\n        if (n <= 4) {\n            return 3;\n        }\n        long\
    \ n1 = 2;\n        long n2 = 3;\n        long n3 = 0;\n        for (long i = 3;\
    \ i < n; i++) {\n            n3 = n1 + n2;\n            n1 = n2;\n           \
    \ n2 = n3;\n        }\n        return n3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvethiwsr.java:37)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Fill in the implementation\
    \ here.\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchiew8e9.java:21)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n <= 1) {\n        \
    \    return n;\n        }\n        else {\n            return fib(n - 1) + fib(n\
    \ - 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return ((((fib(((n) - (1l))))\
    \ + (fib(((n) - (2l)))))));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.java:17)\n\tat Problem.fib(tmpgxivqc11.java:17)\n\
    \tat Problem.fib(tmpgxivqc11.jav"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1) {\n       \
    \     return n;\n        }\n        else {\n            return fib(n - 1) + fib(n\
    \ - 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0l;\n        }\n        if (n == 1) {\n            return 1l;\n \
    \       }\n        long a = 0l;\n        long b = 1l;\n        long i = 2l;\n\
    \        long c = 0l;\n        while (i <= n) {\n            c = a + b;\n    \
    \        a = b;\n            b = c;\n            i = i + 1l;\n        }\n    \
    \    return c;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0l;\n        }\n        if (n == 1) {\n            return 1l;\n \
    \       }\n        long last = 0l;\n        long cur = 1l;\n        long i = 2l;\n\
    \        while (i <= n) {\n            long next = last + cur;\n            last\
    \ = cur;\n            cur = next;\n            i = i + 1l;\n        }\n      \
    \  return cur;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        BigInteger prev = BigInteger.ZERO;\n\
    \        BigInteger curr = BigInteger.ONE;\n        for (long i = 0l; i < n; i++)\
    \ {\n            BigInteger tmp = curr;\n            curr = curr.add(prev);\n\
    \            prev = tmp;\n        }\n        return curr.longValue();\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7u0bqkg.java:27)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1, c =\
    \ 0;\n        for (long i = 2; i <= n; i++) {\n            c = a + b;\n      \
    \      a = b;\n            b = c;\n        }\n        return c;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcbhqpij.java:27)\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0;\n        long\
    \ b = 1;\n        long i = 0;\n        while (i < n) {\n            final long\
    \ c = a + b;\n            a = b;\n            b = c;\n            i = i + 1;\n\
    \        }\n        return a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long f1 = 0l;\n       \
    \ long f2 = 1l;\n        for (long i = 2l; i <= n; i++) {\n            long f3\
    \ = f1 + f2;\n            f1 = f2;\n            f2 = f3;\n        }\n        return\
    \ f2;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Pair<Long, Long> p = fib_aux(n);\n\
    \        return p.getValue0();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ji50cdb.java:17: error: cannot find symbol\n        Pair<Long,\
    \ Long> p = fib_aux(n);\n                             ^\n  symbol:   method fib_aux(long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0) {\n        \
    \    return 0;\n        }\n        else if(n == 1) {\n            return 1;\n\
    \        }\n        else {\n            return fib(n - 1) + fib(n - 2);\n    \
    \    }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        Pair<Long, Long> x, y;\n\
    \        x = new Pair<Long, Long>(0l, 1l);\n        y = new Pair<Long, Long>(1l,\
    \ 1l);\n        if (n == 0)\n            return 0;\n        while (n > 1) {\n\
    \            x = new Pair<Long, Long>(y.getValue0(), y.getValue0() + y.getValue1());\n\
    \            y = new Pair<Long, Long>(x.getValue0(), x.getValue0() + x.getValue1());\n\
    \            n -= 1;\n        }\n        return y.getValue0();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.fib(tmpnf_s6fst.java:18)\n\tat Problem.main(tmpnf_s6fst.java:30)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Your code here\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmaf_yh62.java:18: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        if (n == 1) {\n            return 1;\n   \
    \     }\n        return fib(n - 1) + fib(n - 2);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // BEGIN\n        return\
    \ (n == 0) ? 0 :\n            (n == 1) ? 1 :\n            fib(n - 1) + fib(n -\
    \ 2);\n        // END\n    }\n    public static void main(String[] args) {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (((n == 1l) || (n\
    \ == 2l)) ? 1l : (fib((n - 1l)) + fib((n - 2l))));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n < 2 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2) {\n        \
    \    return n;\n        }\n        long a = 0l;\n        long b = 1l;\n      \
    \  long result = 0l;\n        while (n > 1) {\n            result = a + b;\n \
    \           a = b;\n            b = result;\n            n = n - 1;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        List<Long> fib = new ArrayList<Long>();\n\
    \        fib.add(0l);\n        fib.add(1l);\n        for (int i = 2; i <= n; i++)\
    \ {\n            fib.add(fib.get(i - 1) + fib.get(i - 2));\n        }\n      \
    \  return fib.get((int) n);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long[] fib = new long[3];\n\
    \        fib[0] = 0;\n        fib[1] = 1;\n        fib[2] = 1;\n        for (int\
    \ i = 0; i < n - 1; i++) {\n            fib[2] = fib[0] + fib[1];\n          \
    \  fib[0] = fib[1];\n            fib[1] = fib[2];\n        }\n        return fib[2];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Your implementation\
    \ should be faster than linear.\n        if (n == 0) {\n            return 0;\n\
    \        }\n        long fprev = 0;\n        long fcurr = 1;\n        for (long\
    \ i = 1; i < n; i++) {\n            long temp = fcurr;\n            fcurr = fcurr\
    \ + fprev;\n            fprev = temp;\n        }\n        return fcurr;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n <= 1 ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010744
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (n <= 1) ? n : fib(n\
    \ - 1) + fib(n - 2);\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010747
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        throw new RuntimeException(\"\
    Not yet implemented\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not yet implemented\n\
    \tat Problem.fib(tmpjqyzrtbj.java:17)\n\tat Problem.main(tmpjqyzrtbj.java:20)\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        else if (n == 1l) {\n            return\
    \ 1l;\n        }\n        else {\n            return (fib((n - 1l)) + fib((n -\
    \ 2l)));\n        }\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010741
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if(n == 0l) {\n       \
    \     return 0l;\n        }\n        else if(n == 1l) {\n            return 1l;\n\
    \        }\n        else {\n            return (fib((n - 1l)) + fib((n - 2l)));\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return (((((((n) == (0l))\
    \ ? (0l) : (((((((n) == (1l)) ? (1l) : ((fib(((n) - (1l)))) + (fib(((n) - (2l)))))))))))\
    \ + (0l))));\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwsy1t417.java:17: error: ')' expected\n        return (((((((n)\
    \ == (0l)) ? (0l) : (((((((n) == (1l)) ? (1l) : ((fib(((n) - (1l)))) + (fib(((n)\
    \ - (2l))))))))))) + (0l))));\n                                              \
    \                                                                            \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010748
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        throw new RuntimeException(\"\
    Not implemented\");\n    }\n    public static void main(String[] args) {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.fib(tmpqugr9kmf.java:17)\n\tat Problem.main(tmpqugr9kmf.java:20)\n"
  stdout: ''
  timestamp: 1660010745
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0;\n        }\n        else if (n == 1) {\n            return 1;\n\
    \        }\n        else {\n            return (fib((n - 1)) + fib((n - 2)));\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 1) {\n        \
    \    return 0;\n        }\n        long d[] = new long[2];\n        d[0] = 1;\n\
    \        d[1] = 1;\n        for (long i = 2; i < n; i++) {\n            d[1] =\
    \ d[0] + d[1];\n            d[0] = d[1] - d[0];\n        }\n        return d[1];\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return __help__.fib(n);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqwrfzc1o.java:17: error: cannot find symbol\n        return __help__.fib(n);\n\
    \               ^\n  symbol:   variable __help__\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return fib((n - 1l)) + fib((n - 2l));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010743
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0, b = 1, c =\
    \ 1;\n        for (long i = 0; i < n; i++) {\n            c = a + b;\n       \
    \     a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0l) {\n      \
    \      return 0l;\n        }\n        if (n == 1l) {\n            return 1l;\n\
    \        }\n        return (Problem.fib((n - 1l)) + Problem.fib((n - 2l)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010746
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // BEGIN SOLUTION\n   \
    \     if (n == 0) return 0;\n        if (n == 1) return 1;\n        return fib(n\
    \ - 1) + fib(n - 2);\n        // END SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // BEGIN SOLUTION\n   \
    \     long a = 0;\n        long b = 1;\n        for (long i = 0; i < n; i++) {\n\
    \            long c = a + b;\n            a = b;\n            b = c;\n       \
    \ }\n        return a;\n        // END SOLUTION\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return _fib((0l), (1l),\
    \ (n));\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp61ce9vjx.java:17: error: cannot find symbol\n        return _fib((0l),\
    \ (1l), (n));\n               ^\n  symbol:   method _fib(long,long,long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return n == 0 ? 0 : n ==\
    \ 1 ? 1 : fib(n - 1) + fib(n - 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010748
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // Write your code here.\n\
    \        if (n == 0l) return 0l;\n        if (n == 1l) return 1l;\n        long\
    \ x = 0l;\n        long y = 1l;\n        long r = 1l;\n        for (long i = 2l;\
    \ i <= n; i++) {\n            r = x + y;\n            x = y;\n            y =\
    \ r;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x = 0, y = 1, z =\
    \ 1;\n        while (n != 0) {\n            x = y;\n            y = z;\n     \
    \       z = x + y;\n            n--;\n        }\n        return x;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        n = n - 1;\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 0; i < n; i++) {\n      \
    \      long f = a + b;\n            a = b;\n            b = f;\n        }\n  \
    \      return b;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long x = 0l;\n        long\
    \ y = 1l;\n        for (long i = 0l; i < n; i++) {\n            long z = x + y;\n\
    \            x = y;\n            y = z;\n        }\n        return x;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        return -1;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfeg51ov.java:20)\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        // START SOLUTION\n   \
    \     long a = 0;\n        long b = 1;\n        for (long i = 0; i < n; i++) {\n\
    \            long c = a + b;\n            a = b;\n            b = c;\n       \
    \ }\n        return a;\n        // END SOLUTION\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n < 2)\n          \
    \  return n;\n        long one = 1;\n        long two = 1;\n        long i = 2;\n\
    \        while (i < n) {\n            long tmp = one + two;\n            one =\
    \ two;\n            two = tmp;\n            i += 1;\n        }\n        return\
    \ two;\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0l;\n        long\
    \ b = 1l;\n        long sum = 0l;\n        for (long i = 1l; i < n; i++) {\n \
    \           sum = a + b;\n            a = b;\n            b = sum;\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa02vcazh.java:29)\n"
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) {\n       \
    \     return 0l;\n        }\n        else if (n == 1) {\n            return 1l;\n\
    \        }\n        else {\n            return fib((n - 1l)) + fib((n - 2l));\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long a = 0l;\n        long\
    \ b = 1l;\n        long i = 1l;\n        while (i < n) {\n            long new_a\
    \ = b;\n            long new_b = a + b;\n            a = new_a;\n            b\
    \ = new_b;\n            i = i + 1l;\n        }\n        return b;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        else {\n            return (fib(n - 1)\
    \ + fib(n - 2));\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        //(long)\n        if (n\
    \ == 0l) {\n            return 0l;\n        }\n        //(long)\n        if (n\
    \ == 1l) {\n            return 1l;\n        }\n        //(long)\n        return\
    \ (fib((n - 1l)) + fib((n - 2l)));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        long u = (1l);\n      \
    \  long v = (1l);\n        long w = (0l);\n        long k = (1l);\n        long\
    \ p = (1l);\n        long t = (0l);\n        while (((k & n) != (0l))) {\n   \
    \         if (((n & k) != (0l))) {\n                long z = (((u * v) + (w *\
    \ v)) + (w * u));\n                u = ((v * v) + (w * w));\n                v\
    \ = z;\n                w = ((t * v) + (w * u));\n            }\n            k\
    \ = (k << (1l));\n            t = ((v * p) + (w * p));\n            p = ((v *\
    \ v) + (w * w));\n            v = ((v * p) + (w * p));\n            w = t;\n \
    \       }\n        return u;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaj8ha3_v.java:39)\n"
  stdout: ''
  timestamp: 1660010749

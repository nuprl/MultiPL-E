language: java
name: HumanEval_77_iscube
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a==0l||(a>0l&&Math.pow(Math.round(Math.pow(a,\
    \ 1.0/3.0)), 3)==a)||(a<0l&&Math.pow(Math.round(Math.pow(-a, 1.0/3.0)), 3)==-a);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011099
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> iscube((1l))\n        // (true)\n        //\
    \ >>> iscube((2l))\n        // (false)\n        // >>> iscube((-1l))\n       \
    \ // (true)\n        // >>> iscube((64l))\n        // (true)\n        // >>> iscube((0l))\n\
    \        // (true)\n        // >>> iscube((180l))\n        // (false)\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp91cqjpc2.java:41)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long k = Math.round(Math.cbrt(a));\n        return\
    \ k * k * k == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // YOUR CODE HERE\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_ipk6s5.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (int)Math.cbrt(a) * (int)Math.cbrt(a) * (int)Math.cbrt(a)\
    \ == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n\tdouble x = Math.pow(a, 1.0/3.0);\n\tdouble rounded = Math.round(x);\n\
    \tif (x == rounded) {\n\t    return true;\n\t}\n\treturn false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2iqf_ppq.java:36)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyvg7oo.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffr1mqw0.java:30)\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int cbrt = (int) Math.cbrt(a);\n        return a ==\
    \ cbrt * cbrt * cbrt;\n    }\n    public static void main(String[] args) {\n \
    \   assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n  \
    \  assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n  \
    \  assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0) a=-a;\n        long x = (long) Math.cbrt(a);\n\
    \        return (x*x*x == a);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // ???\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp37w8uez7.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a >= 0 && Math.pow(Math.round(Math.pow(a, 1.0\
    \ / 3.0)), 3) == a;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbk4g22hw.java:31)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n\t\tif (a<0) a=-a;\n\t\tif (a==0) return true;\n\t\tfor (long\
    \ i=1;;i++) {\n\t\t\tif (i*i*i==a) return true;\n\t\t\tif (i*i*i>a) return false;\n\
    \t\t}\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code goes here\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5o9ehsdd.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Implement this function\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl3iw7z8n.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // put your code here\n        return false;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ev8eopx.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffr1mqw0.java:30)\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double n = Math.cbrt(a);\n        return n == Math.floor(n);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a)%1 == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // write a function body here\n        if (a < 0)\n\
    \            a = -a;\n        for (long i = 1; i < 10000; i++) {\n           \
    \ if (i * i * i == a)\n                return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5by7msiu.java:42)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        for (int i = 0; i < 200; i++) {\n            if (a\
    \ == i * i * i) {\n                return true;\n            }\n        }\n  \
    \      return false;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n   \
    \ assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n   \
    \ assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdiea5ph.java:36)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = (long) Math.pow(a, 1.0/3.0);\n        return\
    \ n*n*n == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp034pmbom.java:32)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> your code goes here <<<\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn73loqd8.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double root = Math.cbrt(a);\n        return root ==\
    \ Math.floor(root);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n\tdouble result = Math.cbrt(a);\n\treturn Math.floor(result)\
    \ == result;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Not supported\
    \ yet.\");\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ supported yet.\n\tat Problem.iscube(tmp4osa3uj_.java:26)\n\tat Problem.main(tmp4osa3uj_.java:29)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        for (int i = 1; i < 100; i++) {\n            double\
    \ c = Math.pow(i, 3);\n            if (c == a) {\n                return true;\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vdtygfi.java:37)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long x = (long)Math.pow(a, 1.0/3.0);\n        return\
    \ a == x * x * x;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkby77ff5.java:32)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        for (long i = 1; i < a; i++) {\n            if (i\
    \ * i * i == a) {\n                return true;\n            }\n        }\n  \
    \      return false;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n   \
    \ assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n   \
    \ assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn3v5fdmw.java:34)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        for (int i = 0; i <= a; i++) {\n            long cube\
    \ = i * i * i;\n            if (cube == a) {\n                return true;\n \
    \           }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfdiq0w7.java:37)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (BigInteger.valueOf(a).pow(2).mod(BigInteger.valueOf(3))\
    \ == BigInteger.valueOf(1));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmy1ph1ih.java:29)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new RuntimeException(\"Not implemented\");\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.iscube(tmpjlmz2fe8.java:26)\n\tat Problem.main(tmpjlmz2fe8.java:29)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double  c = Math.cbrt(a);\n        return (c - Math.floor(c))\
    \ == 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int aroot = (int)Math.cbrt(a);\n        return (long)Math.pow(aroot,\
    \ 3) == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here.\n        if (a == 0) {\n      \
    \      return true;\n        }\n        boolean result = false;\n        double\
    \ d = Math.cbrt(a);\n        if (d == Math.round(d)) {\n            result = true;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long x = 1;\n \
    \       while (x * x * x < a) {\n            x++;\n        }\n        return x\
    \ * x * x == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n      return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9oydhdr.java:29)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int i = 0;\n        while (i < Math.sqrt(a)) {\n \
    \           long b = i * i * i;\n            if (b == a) {\n                return\
    \ true;\n            }\n            i++;\n        }\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptkr_9w5t.java:37)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyvg7oo.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (long)Math.cbrt(a) == Math.cbrt(a);\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> iscube((1l))\n        // (true)\n        if\
    \ (a == 1l) return true;\n        // >>> iscube((-1l))\n        // (true)\n  \
    \      if (a == -1l) return true;\n        // >>> iscube((64l))\n        // (true)\n\
    \        if (a == 64l) return true;\n        // >>> iscube((0l))\n        // (true)\n\
    \        if (a == 0l) return true;\n        // >>> iscube((180l))\n        //\
    \ (false)\n        if (a == 180l) return false;\n        // >>> iscube((2l))\n\
    \        // (false)\n        if (a == 2l) return false;\n        // >>> iscube((-2l))\n\
    \        // (false)\n        if (a == -2l) return false;\n        // >>> iscube((-3l))\n\
    \        // (false)\n        if (a == -3l) return false;\n        // >>> iscube((-4l))\n\
    \        // (false)\n        if (a == -4l) return false;\n        // >>> iscube((3l))\n\
    \        // (true)\n        if (a == 3l) return true;\n        // >>> iscube((-8l))\n\
    \        // (false)\n        if (a == -8l) return false;\n        // >>> iscube((-7l))\n\
    \        // (false)\n        if (a == -7l) return false;\n        // >>> iscube((-6l))\n\
    \        // (false)\n        if (a == -6l) return false;\n        // >>> iscube((-5l))\n\
    \        // (false)\n        if (a == -5l) return false;\n        // >>> iscube((5l))\n\
    \        // (false)\n        if (a == 5l) return false;\n        // >>> iscube((6l))\n\
    \        // (true)\n        if (a == 6l) return true;\n        // >>> iscube((7l))\n\
    \        // (false)\n        if (a == 7l) return false;\n        // >>> iscube((8l))\n\
    \        // (true)\n        if (\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp90dtyr9m.java:80: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int test = (int)Math.pow(a, 0.333333);\n        if(Math.pow(test,\
    \ 3) == a)\n            return true;\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpexqfu3qw.java:34)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8im_y8zl.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your solution here\n        return false;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttepz3az.java:30)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Solution 1\n        // return Arrays.asList(1,\
    \ -1, 0).contains(a) ||\n        //        Math.abs(Math.cbrt(a) - Math.round(Math.cbrt(a)))\
    \ < 0.0001;\n        // Solution 2\n        return (a == 0) || (a == 1) || (a\
    \ == -1) ||\n               (Math.abs(Math.cbrt(a) - Math.round(Math.cbrt(a)))\
    \ < 0.0001);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int x = (int)Math.cbrt(a);\n        return x*x*x ==\
    \ a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double cubeRoot = Math.cbrt(a);\n        if (Math.round(cubeRoot)\
    \ == cubeRoot) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double b = Math.pow(a, 1.0/3.0);\n        return Math.pow(b,\
    \ 3) == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3zo8odpw.java:31)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (Math.cbrt(a) - Math.floor(Math.cbrt(a)) ==\
    \ 0);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a < 0) {\n            a = -a;\n        }\n        long b = (long)Math.cbrt(a);\n\
    \        return b * b * b == a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Start coding here\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb6av0ww7.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a==0 || (a > 0 && (int)Math.pow(Math.floor(Math.cbrt(a)),\
    \ 3) == a);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2_jatfv.java:31)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((new Double(Math.cbrt(a))).longValue() * (new\
    \ Double(Math.cbrt(a))).longValue() * (new Double(Math.cbrt(a))).longValue())\
    \ == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code goes here\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0o3aasd.java:30)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a == 1 ? true : Math.cbrt(a) % 1 == 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) a = -a;\n        long n = (long)Math.cbrt(a);\n\
    \        return n * n * n == a;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code goes here\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xfs2f_y.java:30)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffr1mqw0.java:30)\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // BEGIN\n        throw new UnsupportedOperationException(\"\
    Please remove the line above, add your code below and change return type of function\"\
    );\n        // END\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ remove the line above, add your code below and change return type of function\n\
    \tat Problem.iscube(tmp528su5st.java:27)\n\tat Problem.main(tmp528su5st.java:31)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyvg7oo.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> iscube((1l))\n        // (true)\n        //\
    \ >>> iscube((2l))\n        // (false)\n        // >>> iscube((-1l))\n       \
    \ // (true)\n        // >>> iscube((64l))\n        // (true)\n        // >>> iscube((0l))\n\
    \        // (true)\n        // >>> iscube((180l))\n        // (false)\n      \
    \  return Math.abs(Math.pow(Math.round(Math.cbrt(a)), 3)) == Math.abs(a);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffr1mqw0.java:30)\n"
  stdout: ''
  timestamp: 1660011099
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.iscube(tmpyni3tdc2.java:26)\n\tat Problem.main(tmpyni3tdc2.java:29)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code goes here!\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ocd4emt.java:30)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        return (long) Math.abs(Math.pow(Math.round(Math.pow(Math.abs(a), 1.0\
    \ / 3.0)), 3)) == Math.abs(a);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double ans = Math.cbrt(a);\n        double ceil_ans\
    \ = Math.ceil(ans);\n        double floor_ans = Math.floor(ans);\n        return\
    \ ceil_ans == floor_ans;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> iscube((1l))\n        // (true)\n        //\
    \ >>> iscube((2l))\n        // (false)\n        // >>> iscube((-1l))\n       \
    \ // (true)\n        // >>> iscube((64l))\n        // (true)\n        // >>> iscube((0l))\n\
    \        // (true)\n        // >>> iscube((180l))\n        // (false)\n      \
    \  return (long)Math.pow(Math.round(Math.pow(a, 1.0/3.0)), 3) == a;\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47hptsif.java:43)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a;\n        while (cube > 0) {\n     \
    \       if (cube * cube * cube == a) {\n                return true;\n       \
    \     }\n            cube--;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpih1bwthm.java:38)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.sqrt(a) % 1 == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0x6rgu7c.java:31)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n\t\t\tint i = 1;\n\t\t\twhile (Math.pow(i, 3) < a) {\n\t\t\
    \t\ti++;\n\t\t\t}\n\t\t\treturn Math.pow(i, 3) == a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0b4h2mjy.java:35)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Not implemented\
    \ yet.\");\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet.\n\tat Problem.iscube(tmp3inv4n_5.java:26)\n\tat Problem.main(tmp3inv4n_5.java:29)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a) == (long)Math.cbrt(a);\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = Math.abs(a);\n     \
    \   }\n        double aCubeRoot = Math.cbrt(a);\n        double cubed = aCubeRoot\
    \ * aCubeRoot * aCubeRoot;\n        return a == cubed;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_z5hpr0.java:35)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // BEGIN SOLUTION\n        return Math.pow(Math.round(Math.cbrt(a)),\
    \ 3) == a;\n        // END SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a<0) {\n            a = -a;\n        }\n     \
    \   if (a==0) {\n            return true;\n        }\n        for (long i=1; i<=a;\
    \ i++) {\n            if (i*i*i==a) {\n                return true;\n        \
    \    }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a == 0) ? true : ((a & a - 1) == 0) ? true\
    \ : false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdarh8hwl.java:30)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a) % 1 == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (Math.sqrt(a) == Math.floor(Math.sqrt(a)) &&\
    \ Math.cbrt(a) == Math.floor(Math.cbrt(a)));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpik5d9ib8.java:31)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // ... your code goes here\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm1oe_cz9.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> iscube((1l))\n        // (true)\n        //\
    \ >>> iscube((2l))\n        // (false)\n        // >>> iscube((-1l))\n       \
    \ // (true)\n        // >>> iscube((64l))\n        // (true)\n        // >>> iscube((0l))\n\
    \        // (true)\n        // >>> iscube((180l))\n        // (false)\n      \
    \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n        //\n        //\n        //\n        //\n        //\n    \
    \    //\n        //\n        //\n        //\n        //\n        //\n        //\n\
    \        //\n\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpouyzc4d0.java:177: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Replace with your implementation.\n        return\
    \ a == 0 || a == 1 || (Math.cbrt(a) % 1) == 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code goes here\n        return false;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0o3aasd.java:30)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n\t\tdouble cubeRoot = Math.cbrt(a);\n\t\treturn cubeRoot ==\
    \ Math.floor(cubeRoot);\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int root = (int) Math.round(Math.pow(a, 1.0/3.0));\n\
    \        long cube = root * root * root;\n        return cube == a;\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwh91aiv1.java:33)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a == 0 || (a > 0 && (long)Math.pow(Math.round(Math.pow(a,\
    \ 1.0/3.0)), 3) == a);\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqaqprwj2.java:31)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // write your code here\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7t4x_tul.java:30)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Good luck!\n        if (a > 0) {\n            return\
    \ Math.pow(Math.round(Math.pow(a, (1.0 / 3.0))), 3) == a;\n        } else {\n\
    \            return a == 0 || Math.pow(Math.round(Math.pow(a, (1.0 / 3.0))), 3)\
    \ == a;\n        }\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsf1gn2ra.java:36)\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) return true;\n        else if (a < 0)\
    \ a = -a;\n        double x = StrictMath.cbrt(a);\n        return (StrictMath.round(x)\
    \ == x);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (Math.sqrt(a) == (int)Math.sqrt(a)) && (Math.cbrt(a)\
    \ == (int)Math.cbrt(a));\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdiejwoc.java:31)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a) % 1 == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     long k = a / 3;\n        for (long i = k - 3; i <= k + 3; i++) {\n     \
    \       if (i * i * i == a) {\n                return true;\n            }\n \
    \       }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptt25ogno.java:41)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return BigInteger.valueOf(a).pow(3).equals(BigInteger.valueOf(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpviw1c9o5.java:32)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) a = -a;\n        long n = (long) Math.pow(a,\
    \ 1.0/3.0);\n        return (n * n * n == a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpubmd5rv8.java:34)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Please implement\
    \ the iscube function\");\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement the iscube function\n\tat Problem.iscube(tmp7pyiev5m.java:26)\n\t\
    at Problem.main(tmp7pyiev5m.java:29)\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Not implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.iscube(tmpyni3tdc2.java:26)\n\tat Problem.main(tmpyni3tdc2.java:29)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.abs(Math.cbrt(a)) == Math.floor(Math.cbrt(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjb51z1z.java:31)\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // insert your code here\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo0f5r05t.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long x = 1;\n        while (x*x*x < a) x++;\n    \
    \    return x*x*x == a;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1izso6g3.java:33)\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     long x = (long)Math.pow(a, 1.0/3.0);\n        return x * x * x == a;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0i1b1yhx.java:36)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double cube_root = Math.cbrt(a);\n        return (a\
    \ == (long) cube_root * (long) cube_root * (long) cube_root);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     if (a == 0) {\n            return true;\n        }\n        int pow = 0;\n\
    \        while (a % 2 == 0) {\n            a = a / 2;\n            pow++;\n  \
    \      }\n        if (pow % 3 != 0) {\n            return false;\n        }\n\
    \        if (a == 1) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4sf3c90.java:51)\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = a * -1;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        long t =\
    \ 1;\n        while (t * t * t < a) {\n            t++;\n        }\n        return\
    \ t * t * t == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) a = -a;\n        if (a == 0) return true;\n\
    \        double c = Math.pow(a, 1.0/3.0);\n        return c == Math.floor(c);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0z1n9ys.java:35)\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int b = (int)Math.cbrt(a);\n        return (long)b*b*b\
    \ == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011104
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     long b = (long) Math.cbrt(a);\n        long c = b * b * b;\n        return\
    \ c == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n\
    \        // return Math.sqrt(a) == Math.ceil(Math.sqrt(a));\n        // return\
    \ Math.sqrt(a) == Math.round(Math.sqrt(a));\n        // return Math.sqrt(a) ==\
    \ Math.abs(Math.sqrt(a));\n        // return Math.sqrt(a) == Math.pow(Math.sqrt(a),\
    \ 2);\n        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        //\
    \ return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a)\
    \ == Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n\
    \        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return\
    \ Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) ==\
    \ Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n\
    \        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return\
    \ Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) ==\
    \ Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n\
    \        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return\
    \ Math.sqrt(a) == Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) ==\
    \ Math.floor(Math.sqrt(a));\n        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n\
    \        // return Math.sqrt(a) == Math.floor(Math.sqrt(a));\n       \n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjbx934as.java:49: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011104
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     long val = 0;\n        while (val * val * val < a) {\n            val++;\n\
    \        }\n        return val * val * val == a;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011104
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long result = (long)Math.pow(a, 1.0/3.0);\n      \
    \  return Math.pow(result, 3) == a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9z0j10pk.java:32)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((Math.cbrt(a) == Math.floor(Math.cbrt(a)))\
    \ && !Double.isInfinite(Math.cbrt(a)));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        if (a > 0) {\n            long cubeRoot = (long) Math.cbrt(a);\n    \
    \        return cubeRoot * cubeRoot * cubeRoot == a;\n        } else {\n     \
    \       long cubeRoot = (long) Math.cbrt(-a);\n            return cubeRoot * cubeRoot\
    \ * cubeRoot == -a;\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (long)Math.cbrt(a) * (long)Math.cbrt(a) * (long)Math.cbrt(a)\
    \ == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return new BigInteger(String.valueOf(a)).pow(3).toString().equals(String.valueOf(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgr051kwh.java:32)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return BigInteger.valueOf(a).pow(3).equals(BigInteger.valueOf(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpviw1c9o5.java:32)\n"
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new RuntimeException(\"Not implemented\");\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.iscube(tmpjlmz2fe8.java:26)\n\tat Problem.main(tmpjlmz2fe8.java:29)\n"
  stdout: ''
  timestamp: 1660011101
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new RuntimeException(\"implement me\");\n  \
    \  }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: implement me\n\
    \tat Problem.iscube(tmpozz0vhmd.java:26)\n\tat Problem.main(tmpozz0vhmd.java:29)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (long)Math.cbrt(a) * (long)Math.cbrt(a) * (long)Math.cbrt(a)\
    \ == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // insert your code here\n        return true;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuhv5d9e1.java:31)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a == 0 || Math.abs(a) == (long)Math.pow(Math.round(Math.pow(Math.abs(a),\
    \ 1.0/3.0)), 3);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return new BigInteger(Long.toString(a)).pow(3).equals(BigInteger.valueOf(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiub1l3z_.java:32)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // check if value is a cube of some integer number\n\
    \        // do not edit this function.\n        // you may use any additional\
    \ function from Math library\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsvavr_44.java:32)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long r = (long)Math.pow(a, 1/3);\n        System.out.println(r);\n\
    \        return (a == r*r*r);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1zfgqbj.java:33)\n"
  stdout: '1

    1

    1

    '
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) return true;\n        long left = 1, right\
    \ = (long) Math.sqrt(a);\n        while (left <= right) {\n            long mid\
    \ = left + (right - left) / 2;\n            long mid3 = mid * mid * mid;\n   \
    \         if (mid3 == a) return true;\n            else if (mid3 < a) left = mid\
    \ + 1;\n            else right = mid - 1;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ydmkapq.java:40)\n"
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a == 0 || Math.abs(Math.round(Math.cbrt(a)))\
    \ == Math.abs(Math.cbrt(a));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // use the java math library to find the cube root\
    \ and\n        // compare that to the value of the input\n        double cubeRoot\
    \ = Math.cbrt(a);\n        return Math.round(cubeRoot) == cubeRoot;\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyvg7oo.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        double b = Math.cbrt(a);\n        return b == Math.floor(b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011105
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a >= 0 && Math.round(Math.pow(Math.round(Math.pow(a,\
    \ 1.0 / 3.0)), 3)) == a);\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvml5li5.java:31)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Not implemented\
    \ yet\");\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.iscube(tmpjoksg135.java:26)\n\tat Problem.main(tmpjoksg135.java:29)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Problem.iscube()\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.iscube()\n\
    \tat Problem.iscube(tmpw_jcf7y_.java:26)\n\tat Problem.main(tmpw_jcf7y_.java:29)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // FILL IN CODE\n        return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpteik_2_s.java:30)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new RuntimeException(\"Not implemented!\");\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented!\n\
    \tat Problem.iscube(tmpf8ms13j3.java:26)\n\tat Problem.main(tmpf8ms13j3.java:29)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            a = -a;\n        }\n   \
    \     for (long i = 0; i < a; i++) {\n            if (i * i * i == a) {\n    \
    \            return true;\n            }\n        }\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4q7m66wm.java:37)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyvg7oo.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (long) Math.pow(Math.round(Math.pow(a, (1.0\
    \ / 3.0))), 3) == a;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n   \
    \ assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n   \
    \ assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp87ggclv1.java:31)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube1(a);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps3s5myx_.java:26: error: cannot find symbol\n        return iscube1(a);\n\
    \               ^\n  symbol:   method iscube1(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // YOUR CODE HERE\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_ipk6s5.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.sqrt(a) % 1 == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0x6rgu7c.java:31)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long x = Math.round(Math.cbrt(a));\n        return\
    \ x * x * x == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        for (int i = 1; i <= (int) Math.ceil(Math.cbrt(a));\
    \ i++) {\n            if (i * i * i == a) {\n                return true;\n  \
    \          }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9z3sfw0.java:36)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Insert your code here\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphruhnujv.java:30)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // >>> iscube((1l))\n        // (true)\n        //\
    \ >>> iscube((2l))\n        // (false)\n        // >>> iscube((-1l))\n       \
    \ // (true)\n        // >>> iscube((64l))\n        // (true)\n        // >>> iscube((0l))\n\
    \        // (true)\n        // >>> iscube((180l))\n        // (false)\n      \
    \  return a==0l || a==1l || a==-1l || (long) Math.pow(Math.round(Math.pow(a, (1.0/3.0))),\
    \ 3) == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return BigInteger.valueOf(a).pow(3).equals(BigInteger.valueOf(a).pow(3));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsp_kr2eg.java:30)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (Math.cbrt(a) - Math.floor(Math.cbrt(a)) ==\
    \ 0);\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long i = Math.round(Math.cbrt(a));\n        if (i\
    \ * i * i == a) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyvg7oo.java:30)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a) == (int)Math.cbrt(a);\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a == 1 || (a > 0 && Math.cbrt(a) == Math.floor(Math.cbrt(a)));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xnsryfb.java:31)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0) return true;\n        double cubeRoot =\
    \ Math.cbrt(a);\n        return Math.floor(cubeRoot) == cubeRoot;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Double.isInteger(Math.cbrt(a));\n    }\n  \
    \  public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_u23p7kw.java:26: error: cannot find symbol\n        return Double.isInteger(Math.cbrt(a));\n\
    \                     ^\n  symbol:   method isInteger(double)\n  location: class\
    \ Double\n1 error\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a) == Math.floor(Math.cbrt(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n\treturn false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5u34ft84.java:29)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Fill this in.\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjpz6v3v6.java:27: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        for (long i = 1; i * i * i <= a; i++) {\n        \
    \    if (i * i * i == a) return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbap_kp4p.java:34)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\
    \        long i = 1;\n        while (a > 0) {\n            a -= i * i * i;\n \
    \           i++;\n        }\n        return a == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpipz5dx.java:39)\n"
  stdout: ''
  timestamp: 1660011106
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new UnsupportedOperationException(\"Not implemented\
    \ yet.\");\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet.\n\tat Problem.iscube(tmp3inv4n_5.java:26)\n\tat Problem.main(tmp3inv4n_5.java:29)\n"
  stdout: ''
  timestamp: 1660011102
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int check = (int)Math.cbrt(a);\n        if(Math.pow(check,\
    \ 3) == a) {\n            return true;\n        }\n        return false;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        try {\n            long c = (long)Math.pow(a, 1.0/3.0);\n\
    \            return a == c*c*c;\n        } catch (java.lang.Exception e) {\n \
    \           System.out.println(e);\n            return false;\n        }\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9w4yb8n.java:37)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return ((long)Math.cbrt(a) == Math.cbrt(a));\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Your code here\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26teex8r.java:30)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // TODO: write your solution here\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2nkbqs8.java:30)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) a = -a;\n        for (long i = 0; i * i\
    \ * i <= a; i++)\n            if (i * i * i == a) return true;\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011107
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return Math.cbrt(a) % 1 == 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011103
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // Implement the function here and return true or\
    \ false\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp13og7s06.java:30)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a < 0l) ? iscube(a * -1l) : ((a == 0l) ? true\
    \ : (Math.cbrt(a) % 1) == 0);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwzeck7t.java:29)\n"
  stdout: ''
  timestamp: 1660011100
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        // write your code here, try to be as short as possible\n\
    \        return Math.cbrt(a) == Math.round(Math.cbrt(a));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long r = (long) Math.pow(a, 1.0/3.0);\n        return\
    \ r * r * r == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo1o1slo.java:32)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        int sqrt = (int) Math.sqrt(a);\n        if (sqrt *\
    \ sqrt * sqrt == a) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpij6suesz.java:35)\n"
  stdout: ''
  timestamp: 1660011107
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns true\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        throw new RuntimeException(\"not implemented yet\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: not implemented\
    \ yet\n\tat Problem.iscube(tmpa2rytmz5.java:26)\n\tat Problem.main(tmpa2rytmz5.java:29)\n"
  stdout: ''
  timestamp: 1660011107

language: java
name: HumanEval_47_median
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float ret = 0;\n\
    \        Collections.sort(l);\n        int size = l.size();\n        if (size\
    \ % 2 == 0) {\n            ret = (l.get(size / 2) + l.get(size / 2 - 1)) / 2f;\n\
    \        } else {\n            ret = l.get(size / 2);\n        }\n        return\
    \ ret;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return ((float)(l.get((int)(Math.floor((((float)(l.size())) / (float)(2l))))))\
    \ + (float)(l.get((int)(Math.ceil((((float)(l.size())) / (float)(2l))))))) / (float)(2l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo93wx2y3.java:19)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if(l.size()%2 ==\
    \ 0) {\n            float f1 = (float)l.get(l.size()/2);\n            float f2\
    \ = (float)l.get(l.size()/2-1);\n            return (f1+f2)/2;\n        } else\
    \ {\n            return (float)l.get(l.size()/2);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf51s2xjx.java:24)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size()%2 ==\
    \ 0)\n            return ((float)(l.get(l.size()/2-1) + l.get(l.size()/2)))/2;\n\
    \        else\n            return (float)l.get(l.size()/2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpplss4q5k.java:21)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        float median = (l.size() % 2 == 0) ?\
    \ ((float)l.get(mid - 1) + (float)l.get(mid)) / 2 : (float)l.get(mid);\n     \
    \   return median;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(new Comparator<Long>()\
    \ {\n            public int compare(Long l1, Long l2) {\n                return\
    \ l1.compareTo(l2);\n            }\n        });\n        int n = l.size();\n \
    \       int m = n / 2;\n        if (n % 2 == 0) {\n            return (l.get(m\
    \ - 1) + l.get(m)) / 2f;\n        } else {\n            return l.get(m);\n   \
    \     }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            return\
    \ (l.get(size / 2 - 1) + l.get(size / 2)) / 2.0f;\n        } else {\n        \
    \    return l.get(size / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // sort\n      \
    \  Collections.sort(l);\n        // even\n        if (l.size() % 2 == 0) {\n \
    \           return (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f;\n \
    \       }\n        // odd\n        return l.get(l.size() / 2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int len = l.size();\n\
    \        Collections.sort(l);\n        float median;\n        if (len % 2 == 0)\
    \ {\n            median = (l.get(len / 2 - 1) + l.get(len / 2)) / 2.0f;\n    \
    \    } else {\n            median = l.get(len / 2);\n        }\n        return\
    \ median;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2 - 1) + l.get(len / 2)) / 2.0f;\n        } else {\n          \
    \  return l.get(len / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        return (size % 2 == 0) ? (((float)l.get(size\
    \ / 2 - 1) + (float)l.get(size / 2)) / 2.0f) : ((float)l.get(size / 2));\n   \
    \ }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int idx = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(idx - 1) + l.get(idx)) / 2.0f;\n        } else {\n         \
    \   return l.get(idx);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return ((float)(l.get(((int)((l.size())-1))/2))+l.get(((int)((l.size())-1))/2));\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpru2icl2z.java:19)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int sz = l.size();\n        if (sz % 2 == 0) {\n            return (l.get(sz\
    \ / 2) + l.get(sz / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(sz\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2).floatValue();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyy8rc04m.java:20)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int middle = l.size() / 2;\n        if (l.size() % 2 == 1) {\n      \
    \      return l.get(middle);\n        } else {\n            return (l.get(middle\
    \ - 1) + l.get(middle)) / 2.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().mapToLong(x\
    \ -> x).sorted().skip(l.size() / 2).findFirst().getAsLong();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshz9voq7.java:19)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        return l.size() % 2 == 0 ? (l.get(mid)\
    \ + l.get(mid - 1)) / 2.0f : l.get(mid);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) {\n\
    \            median += l.get(l.size() / 2 - 1);\n            median /= 2;\n  \
    \      }\n        return median;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        long middle = size / 2;\n        long median;\n\
    \        if (size % 2 == 0) {\n            long a = l.get((int)middle - 1);\n\
    \            long b = l.get((int)middle);\n            median = (a + b) / 2;\n\
    \        } else {\n            median = l.get((int)middle);\n        }\n     \
    \   return (float)median;\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgrjfsck.java:32)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Collections.sort(l);\n\
    \        // if(l.size() % 2 == 0) {\n        //     float v1 = l.get(l.size()\
    \ / 2);\n        //     float v2 = l.get(l.size() / 2 - 1);\n        //     return\
    \ (v1 + v2) / 2.0f;\n        // } else {\n        //     return l.get(l.size()\
    \ / 2);\n        // }\n        Collections.sort(l);\n        return l.get(l.size()\
    \ / 2);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphijo07qg.java:28)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0)\n            return 0;\n        if (l.size() == 1)\n            return l.get(0);\n\
    \        Collections.sort(l);\n        int n = l.size();\n        if (n % 2 ==\
    \ 0)\n            return (l.get(n / 2) + l.get(n / 2 - 1)) / 2;\n        else\n\
    \            return l.get(n / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5mpoes1.java:30)\n"
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        System.out.println(l);\n        int mid = l.size() / 2;\n        if (l.size()\
    \ % 2 == 0) {\n            return (l.get(mid - 1) + l.get(mid)) / 2.0f;\n    \
    \    } else {\n            return l.get(mid);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5]

    [-10, 4, 6, 10, 20, 1000]

    [5]

    [5, 6]

    [1, 2, 3, 7, 8, 9, 9]

    '
  timestamp: 1660010195
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() % 2\
    \ == 0) {\n            Long a = l.get(l.size() / 2 - 1);\n            Long b =\
    \ l.get(l.size() / 2);\n            return (a + b) / 2.0f;\n        } else {\n\
    \            return l.get(l.size() / 2);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpepyudspn.java:24)\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2 - 1) + l.get(len / 2)) / 2.0f;\n        } else {\n          \
    \  return l.get(len / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2 - 1) + l.get(len / 2)) / 2.0f;\n        } else {\n          \
    \  return l.get(len / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long[] ar = l.stream().mapToLong(i\
    \ -> i).toArray();\n        Arrays.sort(ar);\n        int len = ar.length;\n \
    \       if (len % 2 == 0) {\n            return (float)(ar[len / 2] + ar[len /\
    \ 2 - 1]) / 2;\n        } else {\n            return (float)ar[len / 2];\n   \
    \     }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0) {\n            return 0.0f;\n        }\n        l.sort(null);\n        int\
    \ mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n            return (l.get(mid\
    \ - 1) + l.get(mid)) / 2.0f;\n        } else {\n            return l.get(mid);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        System.out.println(l);\n        long ans = 0;\n        int r = l.size()\
    \ % 2;\n        if (r == 0) {\n            long x = l.get(l.size() / 2);\n   \
    \         long y = l.get(l.size() / 2 - 1);\n            ans = (x + y) / 2;\n\
    \        } else {\n            ans = l.get(l.size() / 2);\n        }\n       \
    \ float ans_f = (float) ans;\n        return ans_f;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf43dmkqt.java:33)\n"
  stdout: '[1, 2, 3, 4, 5]

    [-10, 4, 6, 10, 20, 1000]

    [5]

    [5, 6]

    '
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i-1) + l.get(i)) / 2.0f;\n        } else {\n            return\
    \ l.get(i);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float median = 0;\n\
    \        int n = l.size();\n        Collections.sort(l);\n        if (n % 2 ==\
    \ 0) {\n            median = (l.get(n / 2 - 1) + l.get(n / 2)) / 2.0f;\n     \
    \   } else {\n            median = l.get(n / 2);\n        }\n        return median;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        Collections.sort(l);\n\
    \        float med = l.get(l.size()/2);\n        if (l.size() % 2 == 0) {\n  \
    \          med = (l.get(l.size()/2 - 1) + l.get(l.size()/2)) / 2.0f;\n       \
    \ }\n        return med;\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ t = new ArrayList<Long>(l);\n        Collections.sort(t);\n        int mid =\
    \ t.size() / 2;\n        if (t.size() % 2 == 1) {\n            return t.get(mid);\n\
    \        } else {\n            return (t.get(mid-1) + t.get(mid)) / 2.0f;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        float m = 0;\n        if (n % 2 == 0) {\n\
    \            m = (l.get(n / 2 - 1) + l.get(n / 2)) / 2.0f;\n        } else {\n\
    \            m = l.get(n / 2);\n        }\n        return m;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        int length = l.size();\n        if (length % 2 == 0) {\n            return\
    \ (l.get(length / 2) + l.get(length / 2 - 1)) / 2f;\n        } else {\n      \
    \      return l.get(length / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        java.util.Collections.sort(l);\n\
    \        if ((l.size())%2 == 0) {\n            return ((l.get((((l.size())/2)-1)))+l.get((l.size())/2))/2.0f;\n\
    \        } else {\n            return l.get(((l.size())-1)/2);\n        }\n  \
    \  }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // >>> l.sort()\n\
    \        Collections.sort(l);\n        // >>> l\n        // [1, 2, 3, 4, 5]\n\
    \        // >>> l.size()\n        // 5\n        // >>> l.size()%2\n        //\
    \ 1\n        // >>> l.size()/2\n        // 2\n        // >>> l.size()/2+1\n  \
    \      // 3\n        int n = l.size();\n        if (n % 2 == 1) {\n          \
    \  // >>> l.get(2)\n            // 3\n            return l.get(n / 2);\n     \
    \   } else {\n            // >>> l.get(2)\n            // 3\n            // >>>\
    \ l.get(3)\n            // 4\n            // >>> (l.get(2)+l.get(3))/2\n     \
    \       // 3\n            return (l.get(n / 2) + l.get(n / 2 - 1)) / 2.0f;\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Long[] a = l.toArray(new\
    \ Long[l.size()]);\n        Arrays.sort(a);\n        int middle = a.length / 2;\n\
    \        if (a.length % 2 == 1) {\n            return (float)a[middle];\n    \
    \    } else {\n            return (float)(a[middle - 1] + a[middle]) / 2.0f;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        if (size % 2 == 0) {\n            return (l.get(size / 2) + l.get(size\
    \ / 2 - 1)) / 2f;\n        } else {\n            return l.get(size / 2);\n   \
    \     }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpru__pdnd.java:23)\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            int index\
    \ = size / 2;\n            return (l.get(index - 1) + l.get(index)) / 2.0f;\n\
    \        } else {\n            return l.get(size / 2);\n        }\n    }\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if(l.size() == 0)\n\
    \            return 0;\n        if(l.size() == 1)\n            return l.get(0);\n\
    \        ArrayList<Long> ll = new ArrayList<Long>(l);\n        ll.sort(null);\n\
    \        if(ll.size() % 2 == 0)\n            return (ll.get(ll.size() / 2) + ll.get(ll.size()\
    \ / 2 - 1)) / 2.0f;\n        else\n            return ll.get(ll.size() / 2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        int mid = len / 2;\n        float med =\
    \ (len % 2 == 0) ? ((l.get(mid) + l.get(mid - 1)) / 2.0f) : l.get(mid);\n    \
    \    return med;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i-1) + l.get(i)) / 2.0f;\n        } else {\n            return\
    \ l.get(i);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if ((l.size() % 2) == 0) {\n            return ((float)(l.get((int)((l.size()\
    \ / 2) - 1)) + l.get((int)(l.size() / 2)))) / 2;\n        } else {\n         \
    \   return (float)l.get((int)(l.size() / 2));\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float m = 0;\n \
    \       Collections.sort(l);\n        int len = l.size();\n        int middle\
    \ = len / 2;\n        if (len % 2 == 1) {\n            m = l.get(middle);\n  \
    \      } else {\n            m = (l.get(middle - 1) + l.get(middle)) / 2;\n  \
    \      }\n        return m;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzvc4nd2z.java:30)\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0) {\n            return 0.0f;\n        }\n        long[] arr = new long[l.size()];\n\
    \        for (int i = 0; i < l.size(); i++) {\n            arr[i] = l.get(i);\n\
    \        }\n        Arrays.sort(arr);\n        if (arr.length % 2 == 0) {\n  \
    \          return (float)(arr[arr.length / 2] + arr[arr.length / 2 - 1]) / 2;\n\
    \        } else {\n            return (float)arr[arr.length / 2];\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Your code here.\n\
    \        Collections.sort(l);\n        return (l.size()%2 == 0) ? ((l.get(l.size()/2)+l.get(l.size()/2-1))/2.0f)\
    \ : (l.get(l.size()/2));\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        return l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppcgml_g9.java:20)\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        //l.sort();\n  \
    \      Collections.sort(l);\n        return l.get(l.size()/2);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfvdldojn.java:21)\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int middle = l.size() / 2;\n        if (l.size() % 2 == 1) {\n      \
    \      return (float)l.get(middle);\n        } else {\n            return (float)(l.get(middle\
    \ - 1) + l.get(middle)) / 2.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        Long x1 = l.get(l.size() / 2);\n        Long x2 = l.get((l.size() / 2)\
    \ - 1);\n        float m = (x1 + x2) / 2.0f;\n        return m;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpujrzb7aw.java:22)\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0) {\n            return 0.0f;\n        }\n        ArrayList<Long> list = new\
    \ ArrayList<Long>(l);\n        Collections.sort(list);\n        if (list.size()\
    \ % 2 == 0) {\n            return (list.get(list.size() / 2) + list.get(list.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return list.get(list.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int m = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(m - 1) + l.get(m)) / 2.0f;\n        } else {\n            return\
    \ l.get(m);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // >>> median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\n\
    \        // (float)3l\n        // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n        // (15.0f)\n\
    \        // >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l))))\n        // (float)3l\n        // >>> median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l))))\n        // (15.0f)\n        return median(l, 0, l.size() - 1);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6qfv234r.java:23: error: method median in class Problem cannot\
    \ be applied to given types;\n        return median(l, 0, l.size() - 1);\n   \
    \            ^\n  required: ArrayList<Long>\n  found:    ArrayList<Long>,int,int\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Create a clone\
    \ of l to avoid modifying l.\n        l = (ArrayList<Long>)l.clone();\n      \
    \  Collections.sort(l);\n        int size = l.size();\n        float result =\
    \ 0;\n        if (size % 2 == 0) {\n            result = ((float)l.get(size /\
    \ 2) + (float)l.get(size / 2 - 1)) / 2;\n        } else {\n            result\
    \ = (float)l.get(size / 2);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Long[] larr = new\
    \ Long[l.size()];\n        larr = l.toArray(larr);\n        float median;\n  \
    \      Arrays.sort(larr);\n        if(larr.length % 2 == 0) {\n            long\
    \ upper = larr[larr.length / 2];\n            long lower = larr[larr.length /\
    \ 2 - 1];\n            median = (float)(upper + lower) / 2;\n        } else {\n\
    \            median = larr[larr.length / 2];\n        }\n        return median;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float med = 0;\n        if (l.size() % 2 == 0) {\n            med = ((float)l.get(l.size()\
    \ / 2) + (float)l.get(l.size() / 2 - 1)) / 2;\n        } else {\n            med\
    \ = (float)l.get(l.size() / 2);\n        }\n        return med;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float result = 0.0f;\n        int size = l.size();\n        if (size\
    \ % 2 == 0) {\n            int i = size / 2;\n            result = (l.get(i) +\
    \ l.get(i - 1)) / 2.0f;\n        } else {\n            result = l.get(size / 2);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float result = 0;\n        if (l.size() % 2 == 0) {\n            result\
    \ = (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f;\n        } else {\n\
    \            result = l.get(l.size() / 2);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if(n % 2 == 0) {\n            return (((float)l.get(n\
    \ / 2)) + ((float)l.get(n / 2 - 1))) / 2;\n        } else {\n            return\
    \ (float)l.get(n / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2 - 1) + l.get(n / 2)) / 2f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() % 2\
    \ == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size() / 2 - 1))\
    \ / 2f;\n        } else {\n            return l.get(l.size() / 2);\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoixfm2k4.java:22)\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        return (n % 2 == 0) ? (l.get(n / 2) + l.get(n\
    \ / 2 - 1)) / 2.0f : l.get(n / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n == 0) {\n            return (float)0;\n        }\n        Collections.sort(l);\n\
    \        if (n % 2 == 0) {\n            float a = (float)l.get(n / 2 - 1);\n \
    \           float b = (float)l.get(n / 2);\n            return (a + b) / 2;\n\
    \        } else {\n            return (float)l.get(n / 2);\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0)\n            return (l.get(n\
    \ / 2 - 1) + l.get(n / 2)) / 2.0f;\n        else\n            return l.get(n /\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int s = l.size();\n\
    \        if (s % 2 == 0) {\n            return (l.get(s / 2) + l.get(s / 2 - 1))\
    \ / 2f;\n        } else {\n            return l.get(s / 2);\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7djq35lu.java:23)\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0)\n            return (l.get(n\
    \ / 2 - 1) + l.get(n / 2)) / 2.0f;\n        else\n            return l.get(n /\
    \ 2);\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // >>> Return the\
    \ median of the given array list.\n        // >>> Note: Sorting is expensive.\n\
    \        // >>> >>> Note: Remember to return a float.\n        // >>> >>> >>>\
    \ Note: You do not need to round the answer.\n        // >>> >>> >>> >>> Note:\
    \ Remember to use return!\n        if (l.size() == 0) return 0;\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) return (l.get(n / 2 - 1) +\
    \ l.get(n / 2)) / 2.0f;\n        return l.get(n / 2);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = (int) (l.size() / 2);\n        if (l.size() % 2 == 0) {\n   \
    \         return (l.get(i - 1) + l.get(i)) / 2.0f;\n        } else {\n       \
    \     return l.get(i);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        int mid = size / 2;\n        float median\
    \ = 0;\n        if (size % 2 == 0) {\n            median = (l.get(mid - 1) + l.get(mid))\
    \ / 2.0f;\n        } else {\n            median = l.get(mid);\n        }\n   \
    \     return median;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if(size % 2 == 0) {\n            return\
    \ ((float)(l.get(size / 2) + l.get(size / 2 - 1))) / 2;\n        } else {\n  \
    \          return (float)l.get(size / 2);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i-1) + l.get(i)) / 2.0f;\n        } else {\n            return\
    \ l.get(i);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if ((l.size() % 2) == 0) {\n            return ((l.get(((l.size() / 2)\
    \ - 1))) + (l.get((l.size() / 2)))) / 2.0f;\n        } else {\n            return\
    \ l.get((l.size() / 2));\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Long[] sorted =\
    \ l.toArray(new Long[l.size()]);\n        Arrays.sort(sorted);\n        int size\
    \ = sorted.length;\n        if (size % 2 == 0) {\n            return (sorted[size\
    \ / 2 - 1] + sorted[size / 2]) / 2.0f;\n        } else {\n            return sorted[size\
    \ / 2];\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010198
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            int middle = l.size() / 2;\n  \
    \          return (l.get(middle - 1) + l.get(middle)) / 2f;\n        } else {\n\
    \            return l.get(l.size() / 2);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010198
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        /* ... */\n    \
    \    float med = 0;\n        int size = l.size();\n        if (size % 2 == 0)\
    \ {\n            // even\n            // compute average of middle two numbers\n\
    \            float x = (float)l.get(size/2);\n            float y = (float)l.get(size/2\
    \ - 1);\n            med = (x + y) / 2.0f;\n        } else {\n            // odd\n\
    \            // take middle number\n            med = (float)l.get(size/2);\n\
    \        }\n        return med;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn74s1gvh.java:32)\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            long first = l.get(l.size() / 2\
    \ - 1);\n            long second = l.get(l.size() / 2);\n            return (first\
    \ + second) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkmh7stqu.java:20)\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Long[] la = new\
    \ Long[l.size()];\n        la = l.toArray(la);\n        Arrays.sort(la);\n   \
    \     int mid = (la.length)/2;\n        float median = 0;\n        if (la.length\
    \ % 2 == 0) {\n            median = (la[mid-1] + la[mid]) / 2;\n        } else\
    \ {\n            median = la[mid];\n        }\n        return median;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_rquukby.java:31)\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ l2 = new ArrayList<Long>(l);\n        Collections.sort(l2);\n        int m =\
    \ l2.size() / 2;\n        if (l2.size() % 2 == 0) {\n            return (l2.get(m)\
    \ + l2.get(m - 1)) / 2.0f;\n        } else {\n            return l2.get(m);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Insert code here\n\
    \        long sum = 0;\n        for (long ll : l) {\n            sum += ll;\n\
    \        }\n        return (float)sum / l.size();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiuy_g1e7.java:24)\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long[] sorted =\
    \ (long[])l.stream().sorted().toArray();\n        int n = sorted.length;\n   \
    \     if (n % 2 == 0) {\n            return (float)((double)sorted[n / 2] + (double)sorted[n\
    \ / 2 - 1]) / 2.0;\n        } else {\n            return (float)sorted[n / 2];\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu9lenanf.java:15: error: incompatible types: Object[] cannot be\
    \ converted to long[]\n        long[] sorted = (long[])l.stream().sorted().toArray();\n\
    \                                                           ^\n/tmp/tmpu9lenanf.java:18:\
    \ error: incompatible types: possible lossy conversion from double to float\n\
    \            return (float)((double)sorted[n / 2] + (double)sorted[n / 2 - 1])\
    \ / 2.0;\n                                                                   \
    \           ^\n2 errors\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        return (l.size() % 2 == 0) ? (l.get(mid\
    \ - 1) + l.get(mid)) / 2.0f : l.get(mid);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 1) {\n         \
    \   return l.get(mid);\n        } else {\n            return (l.get(mid - 1) +\
    \ l.get(mid)) / 2.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int middle = l.size() / 2;\n        if (l.size() % 2 == 1) {\n      \
    \      return (float)l.get(middle);\n        } else {\n            return (float)((l.get(middle\
    \ - 1) + l.get(middle)) / 2.0);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int size = l.size();\n\
    \        long[] l2 = new long[size];\n        for (int i = 0; i < size; i++) {\n\
    \            l2[i] = l.get(i);\n        }\n        Arrays.sort(l2);\n        int\
    \ mid = size / 2;\n        if (size % 2 == 0) {\n            return (float)(l2[mid\
    \ - 1] + l2[mid]) / 2;\n        } else {\n            return (float)l2[mid];\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2 - 1) + l.get(n / 2)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Return median\
    \ of elements in the array list l.\n        Long[] la = l.toArray(new Long[0]);\n\
    \        Arrays.sort(la);\n        int n = la.length;\n        int m = n / 2;\n\
    \        if (n % 2 == 0) {\n            // There are an even number of elements.\n\
    \            float a = (float)la[m - 1];\n            float b = (float)la[m];\n\
    \            return (a + b) / 2;\n        } else {\n            // There are an\
    \ odd number of elements.\n            return (float)la[m];\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        //\n        // Insert\
    \ your code here\n        //\n        Collections.sort(l);\n        if (l.size()\
    \ % 2 == 0) {\n            float m1 = l.get(l.size() / 2);\n            float\
    \ m2 = l.get(l.size() / 2 - 1);\n            return (m1 + m2) / 2;\n        }\
    \ else {\n            return l.get(l.size() / 2);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float mid = l.size()/2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get((int)mid) + l.get((int)mid-1))/2.0f;\n        } else {\n   \
    \         return l.get((int)mid);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float median;\n        int size = l.size();\n        if(size%2 == 0)\
    \ {\n            median = (l.get(size/2) + l.get(size/2 - 1))/2.0f;\n        }\
    \ else {\n            median = l.get(size/2);\n        }\n        return median;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2 - 1) + l.get(n / 2)) / 2f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010197
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            return\
    \ (l.get(size / 2) + l.get(size / 2 - 1)) / 2f;\n        } else {\n          \
    \  return l.get(size / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ list = new ArrayList<Long>(l);\n        Collections.sort(list);\n        int\
    \ n = list.size();\n        if (n % 2 == 0) {\n            return (list.get(n\
    \ / 2 - 1) + list.get(n / 2)) / 2.0f;\n        } else {\n            return list.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n == 0) return 0;\n        else if (n == 1) return l.get(0);\n  \
    \      else if (n == 2) return (l.get(0) + l.get(1)) / 2;\n        Collections.sort(l);\n\
    \        if (n % 2 == 0) {\n            return (l.get(n / 2) + l.get(n / 2 - 1))\
    \ / 2;\n        } else {\n            return l.get(n / 2);\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodolykk1.java:30)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        int mid = l.size() / 2;\n        float med = (((float)l.get(mid-1)) +\
    \ ((float)l.get(mid))) / 2.0f;\n        return med;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp15x01ltt.java:21)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        float m = n / 2;\n        return (n % 2 ==\
    \ 0) ? (l.get((int)m).floatValue() + l.get((int)(m - 1)).floatValue()) / 2 : l.get((int)m).floatValue();\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long r=0;\n    \
    \    int n=l.size();\n        Collections.sort(l);\n        float m=(float)0.0;\n\
    \        if (n%2==0)\n            m=(float)((l.get(n/2-1)+l.get(n/2))/(float)2.0);\n\
    \        else m=(float)l.get(n/2);\n        return m;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        List<Long> tmp =\
    \ l.stream().sorted().collect(Collectors.toList());\n        return (tmp.get(tmp.size()\
    \ / 2) + tmp.get((tmp.size() - 1) / 2)) / 2f;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if ((l.size() % 2) == 0) {\n            return ((l.get((l.size() / 2))\
    \ + l.get(((l.size() / 2) - 1))) / 2.0f);\n        } else {\n            return\
    \ l.get(((l.size() - 1) / 2));\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return 0.0f;\n \
    \   }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2lcqz4_h.java:18)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            int mid\
    \ = len / 2;\n            return (l.get(mid) + l.get(mid - 1)) / 2f;\n       \
    \ } else {\n            return l.get(len / 2);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n%2==0) {\n            float h = l.get(n/2);\n            float i\
    \ = l.get(n/2-1);\n            return (h+i)/2;\n        } else {\n           \
    \ return l.get(n/2);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvvrvlpz.java:25)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            return\
    \ (l.get(size / 2 - 1) + l.get(size / 2)) / 2.0f;\n        } else {\n        \
    \    return l.get(size / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        return ((n % 2 == 0) ? ((float)(l.get(n /\
    \ 2 - 1) + l.get(n / 2)) / 2.0f) : l.get(n / 2));\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // -------------------------------------------------\n\
    \        // -------------------------------------------------\n        return\
    \ (float)0l;\n        // -------------------------------------------------\n \
    \       // -------------------------------------------------\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdo_mwpg9.java:22)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        Long median = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) {\n\
    \            median += l.get(l.size() / 2 - 1);\n            median /= 2l;\n \
    \       }\n        return median.floatValue();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfupi9kmb.java:27)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ sorted = (ArrayList<Long>)l.clone();\n        Collections.sort(sorted);\n  \
    \      int size = sorted.size();\n        if (size % 2 == 0) {\n            return\
    \ (sorted.get(size / 2 - 1) + sorted.get(size / 2)) / 2f;\n        } else {\n\
    \            return sorted.get(size / 2);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float) l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl5y_7l7i.java:20)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float m = 0;\n        int n = l.size();\n        if (((n % 2) == 0))\
    \ {\n            m = (((l.get(((n / 2) - 1))) + (l.get((n / 2)))) / 2);\n    \
    \    } else {\n            m = l.get((n / 2));\n        }\n        return m;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcso1_fwx.java:29)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Long[] n = new Long[l.size()];\n\
    \        n = l.toArray(n);\n        int n2 = n.length;\n        int e1 = n2/2;\n\
    \        float v1 = n[e1];\n        if (n2 % 2 == 0) {\n            int e2 = e1\
    \ - 1;\n            float v2 = n[e2];\n            return (v1 + v2) / 2;\n   \
    \     } else {\n            return v1;\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2ld39m1.java:29)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float) (l.get(l.size() / 2) + l.get((l.size() - 1) / 2)) / 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            float v1 = l.get(l.size() / 2 -\
    \ 1);\n            float v2 = l.get(l.size() / 2);\n            return (v1 + v2)\
    \ / 2;\n        } else {\n            return l.get(l.size() / 2);\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010201
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float m;\n     \
    \   int n = l.size();\n        long[] a = new long[n];\n        for (int i = 0;\
    \ i < n; i++) {\n            a[i] = l.get(i);\n        }\n        Arrays.sort(a);\n\
    \        if (n % 2 == 0) {\n            m = (float)(a[n / 2] + a[n / 2 - 1]) /\
    \ 2;\n        } else {\n            m = a[n / 2];\n        }\n        return m;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        int i = size / 2;\n        if ((size %\
    \ 2) == 0) {\n            return (l.get(i) + l.get(i - 1)) / 2f;\n        } else\
    \ {\n            return l.get(i);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010201
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if(size % 2 == 0)\n            return (l.get(size/2)\
    \ + l.get(size/2 - 1)) / 2.0f;\n        else\n            return l.get(size/2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2 - 1) + l.get(n / 2)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Insert code here.\n\
    \        return 0.0f;\n    }\n    public static void main(String[] args) {\n \
    \   assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewduxxgi.java:19)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // use stream()\
    \ to convert arraylist to stream\n        // use sorted() to sort the stream\n\
    \        // use collect() to collect the stream back to arraylist\n        //\
    \ use get() to get the middle element\n        int middle = l.size() / 2;\n  \
    \      if (l.size() % 2 == 1) {\n            return l.stream().sorted().collect(Collectors.toList()).get(middle);\n\
    \        } else {\n            return (l.stream().sorted().collect(Collectors.toList()).get(middle\
    \ - 1) + l.stream().sorted().collect(Collectors.toList()).get(middle)) / 2.0f;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Write your code\
    \ here.\n        Collections.sort(l);\n        int size = l.size();\n        if\
    \ (size%2 == 0) {\n            long sum = l.get(size/2) + l.get(size/2 - 1);\n\
    \            return sum/2f;\n        } else {\n            return l.get(size/2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // You must implement\
    \ this function.\n        if (l.size() == 0) return 0;\n        ArrayList<Long>\
    \ li = new ArrayList<Long>(l);\n        Collections.sort(li);\n        int liLength\
    \ = li.size();\n        if (liLength % 2 == 0) {\n            return (li.get(liLength\
    \ / 2) + li.get(liLength / 2 - 1)) / 2.0f;\n        } else {\n            return\
    \ li.get(liLength / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        long j = l.size()\
    \ / 2;\n        if (l.size() % 2 == 0) {\n            j -= 1;\n        }\n   \
    \     return (l.get(j).floatValue() + l.get(j + 1).floatValue()) / 2;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsted7mq0.java:19: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return (l.get(j).floatValue() + l.get(j + 1).floatValue())\
    \ / 2;\n                      ^\n/tmp/tmpsted7mq0.java:19: error: incompatible\
    \ types: possible lossy conversion from long to int\n        return (l.get(j).floatValue()\
    \ + l.get(j + 1).floatValue()) / 2;\n                                        \
    \        ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int cnt = l.size();\n        if (cnt % 2 == 0) {\n            return\
    \ (l.get(cnt / 2) + l.get(cnt / 2 - 1)) / 2f;\n        } else {\n            return\
    \ l.get(cnt / 2);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ copy = new ArrayList<Long>(l);\n        Collections.sort(copy);\n        //\
    \ System.out.println(copy);\n        // System.out.println(copy.size());\n   \
    \     int size = copy.size();\n        if (size % 2 == 0) {\n            return\
    \ (copy.get(size / 2 - 1) + copy.get(size / 2)) / 2f;\n        } else {\n    \
    \        return copy.get(size / 2);\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (((int)l.size()) % 2 == 0) {\n            return (((float)(l.get(((int)((int)l.size()\
    \ / 2))))) + ((float)(l.get(((int)((int)l.size() / 2 - 1)))))) / (float)2l;\n\
    \        } else {\n            return ((float)(l.get(((int)((int)l.size() / 2)))));\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        long size = l.size();\n        if (size % 2 == 0) {\n            long\
    \ index1 = (size / 2) - 1;\n            long index2 = size / 2;\n            long\
    \ val1 = l.get((int)index1);\n            long val2 = l.get((int)index2);\n  \
    \          return (val1 + val2) / 2.0f;\n        } else {\n            long index\
    \ = (size - 1) / 2;\n            return l.get((int)index);\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        float out = (float)0.0;\n        out = (l.get((int)((l.size() - (long)1l)\
    \ / (long)2l)) + l.get((int)(l.size() / (long)2l))) / (float)2.0;\n        return\
    \ out;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if ((l.size() % 2) == 1) {\n            return l.get(((l.size() - 1)\
    \ / 2));\n        } else {\n            return ((float)(l.get((l.size() / 2))\
    \ + l.get(((l.size() / 2) - 1)))) / (float)2l;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        //////////////////////////////////////////////\n\
    \        // WRITE YOUR CODE HERE\n        //////////////////////////////////////////////\n\
    \        return 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq0kciegd.java:21)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            float x = (float)l.get(n\
    \ / 2);\n            float y = (float)l.get(n / 2 - 1);\n            return (x\
    \ + y) / 2.0f;\n        } else {\n            return (float)l.get(n / 2);\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Replace this\
    \ with actual implementation\n        return (float)0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9go0vgs.java:19)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Sort the list\n\
    \        Collections.sort(l);\n        // Get the index of the middle element\
    \ (length of the list)/2\n        int medianIndex = l.size()/2;\n        // Get\
    \ the element at that index, if the size of the list is even we must take the\
    \ average of the two\n        // middle values\n        return (l.size() % 2 ==\
    \ 0) ? ((float)(l.get(medianIndex-1) + l.get(medianIndex))/2) : (float)l.get(medianIndex);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        float median = 0.0f;\n        if (l.size() % 2 == 0) {\n            int\
    \ k = l.size() / 2;\n            median = (l.get(k) + l.get(k - 1)) / 2.0f;\n\
    \        } else {\n            median = l.get(l.size() / 2);\n        }\n    \
    \    return median;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Task 1: Compute\
    \ the median of the array list l.\n        // Task 2: Please take care of the\
    \ case if l is null or empty.\n        if (l == null || l.size() == 0) {\n   \
    \         return 0;\n        }\n        int n = l.size();\n        long[] temp\
    \ = new long[n];\n        for (int i = 0; i < n; i++) {\n            temp[i] =\
    \ l.get(i);\n        }\n        Arrays.sort(temp);\n        if (n % 2 == 0) {\n\
    \            return (temp[n / 2] + temp[n / 2 - 1]) / 2.0f;\n        } else {\n\
    \            return temp[n / 2];\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float index = l.size() / 2;\n        int lower = (int) Math.floor(index);\n\
    \        int upper = (int) Math.ceil(index);\n        return (l.get(lower) + l.get(upper))\
    \ / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6ym5yqo.java:23)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (float) l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl5y_7l7i.java:20)\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 1) {\n         \
    \   return l.get(mid);\n        } else {\n            return (l.get(mid - 1) +\
    \ l.get(mid)) / 2.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int i = 0;\n   \
    \     int j = 0;\n        long[] ar = new long[l.size()];\n        for (long k\
    \ : l) {\n            ar[i] = k;\n            i++;\n        }\n        Arrays.sort(ar);\n\
    \        if (ar.length % 2 == 0) {\n            return (float)((ar[ar.length /\
    \ 2] + ar[(ar.length / 2) - 1]) / 2);\n        } else {\n            return (float)ar[ar.length\
    \ / 2];\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_eztdo4.java:33)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Float[] fl = new\
    \ Float[l.size()];\n        for (int i = 0; i < l.size(); i++) {\n           \
    \ fl[i] = new Float(l.get(i));\n        }\n        Arrays.sort(fl);\n        if\
    \ (fl.length % 2 == 0) {\n            return (fl[fl.length / 2 - 1] + fl[fl.length\
    \ / 2]) / 2;\n        } else {\n            return fl[fl.length / 2];\n      \
    \  }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // >>> l.sort()\n\
    \        Collections.sort(l);\n        // >>> l\n        // [(-10l), (1l), (2l),\
    \ (3l), (4l), (5l)]\n        // >>> l.size()\n        int n = l.size();\n    \
    \    // >>> n\n        // (int)6\n        // >>> n/2\n        int mid = n / 2;\n\
    \        // >>> mid\n        // (int)3\n        // >>> l.get(mid)\n        //\
    \ (long)3l\n        // >>> l.get(mid+1)\n        // (long)4l\n        // >>> l.get(mid-1)\n\
    \        // (long)2l\n        if (n % 2 == 0) {\n            // >>> n%2\n    \
    \        // (int)0\n            return (l.get(mid) + l.get(mid - 1)) / 2.0f;\n\
    \        } else {\n            // >>> n%2\n            // (int)1\n           \
    \ return l.get(mid);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 1) {\n         \
    \   return l.get(mid);\n        } else {\n            return (l.get(mid - 1) +\
    \ l.get(mid)) / 2.0f;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int length = l.size();\n\
    \        if(length % 2 == 0) {\n            float a = l.get(length / 2 - 1);\n\
    \            float b = l.get(length / 2);\n            return (a + b) / 2;\n \
    \       } else {\n            return l.get(length / 2);\n        }\n    }\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpei5zozv6.java:25)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        float res = 0.0f;\n\
    \        float m = l.size() / 2.0f;\n        l.sort(Long::compareTo);\n      \
    \  if ((m - (long)m) == 0.0f) {\n            long a = l.get((int)Math.floor(m));\n\
    \            long b = l.get((int)Math.ceil(m));\n            res = (a + b) / 2.0f;\n\
    \        } else {\n            res = l.get((int)Math.ceil(m));\n        }\n  \
    \      return res;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjsnckx6.java:28)\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            int idx1 =\
    \ n / 2;\n            int idx2 = n / 2 - 1;\n            return (l.get(idx1) +\
    \ l.get(idx2)) / 2.0f;\n        } else {\n            int idx = n / 2;\n     \
    \       return l.get(idx);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        long i = (l.size() - 1) / 2;\n        return (float)(l.get(i) + l.get(i\
    \ + 1)) / 2;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjdtm1u6a.java:17: error: incompatible types: possible lossy conversion\
    \ from long to int\n        return (float)(l.get(i) + l.get(i + 1)) / 2;\n   \
    \                          ^\n/tmp/tmpjdtm1u6a.java:17: error: incompatible types:\
    \ possible lossy conversion from long to int\n        return (float)(l.get(i)\
    \ + l.get(i + 1)) / 2;\n                                          ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        return l.stream().mapToLong(Long::longValue).sorted().skip(l.size()\
    \ / 2 - 1).limit(l.size() % 2 == 0 ? 2 : 1).average().getAsDouble();\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0bmp4mk.java:15: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return l.stream().mapToLong(Long::longValue).sorted().skip(l.size()\
    \ / 2 - 1).limit(l.size() % 2 == 0 ? 2 : 1).average().getAsDouble();\n       \
    \                                                                            \
    \                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg0gnlih.java:21)\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // >>> median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\n\
    \        // (float)3l\n        // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n        // (15.0f)\n\
    \        // >>> median((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l))))\n        // (3.0f)\n        // >>> median((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)6l))))\n        // (3.5f)\n        // >>> median((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l))))\n        // (4.0f)\n\
    \        // >>> median((new ArrayList<Long>(Arrays.asList((long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l))))\n        // (0.0f)\n  \
    \      // >>> median((new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l))))\n        // (0.0f)\n  \
    \      // >>> median((new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l, (long\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps5eqxkfi.java:30: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        /*\n        for(int\
    \ k = 1; k < l.size(); k++) {\n            long x = l.get(k);\n            int\
    \ j = k;\n            while(j > 0 && l.get(j-1) > x) {\n                l.set(j,\
    \ l.get(j-1));\n                j--;\n            }\n            l.set(j, x);\n\
    \        }\n        */\n        Collections.sort(l);\n        int n = l.size();\n\
    \        if(n%2 == 1) {\n            return l.get(n/2);\n        } else {\n  \
    \          return (l.get(n/2) + l.get(n/2-1))/2.0f;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n == 0) {\n            return (float)\
    \ 0;\n        }\n        if (n % 2 == 0) {\n            return (float) (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2;\n        } else {\n            return (float)\
    \ l.get(n / 2);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = l.size()/2;\n        if(l.size()%2 == 0)\n            return\
    \ (l.get(i) + l.get(i-1))/2.0f;\n        else\n            return l.get(i);\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int len = l.size();\n\
    \        // Put elements in array.\n        Long[] a = new Long[len];\n      \
    \  for (int i = 0; i < len; i++) {\n            a[i] = l.get(i);\n        }\n\
    \        // Sort elements in array.\n        Arrays.sort(a);\n        // Return\
    \ median.\n        if (len % 2 == 0) {\n            return (a[len / 2 - 1] + a[len\
    \ / 2]) / 2.0f;\n        } else {\n            return a[len / 2];\n        }\n\
    \    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        if (l.size() ==\
    \ 0) {\n            return 0;\n        }\n        ArrayList<Long> sorted = new\
    \ ArrayList<Long>(l);\n        Collections.sort(sorted);\n        int n = sorted.size();\n\
    \        if (n % 2 == 1) {\n            return sorted.get(n / 2);\n        } else\
    \ {\n            return (sorted.get(n / 2 - 1) + sorted.get(n / 2)) / 2.0f;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int length = l.size();\n        if (length % 2 == 0) {\n            return\
    \ (l.get(length / 2) + l.get(length / 2 - 1)) / 2f;\n        } else {\n      \
    \      return l.get(length / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            return\
    \ (l.get(size / 2) + l.get(size / 2 - 1)) / 2f;\n        } else {\n          \
    \  return l.get(size / 2);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        return (n%2==0)? ((l.get(n/2-1)+l.get(n/2))/2.0f):\
    \ (l.get(n/2));\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int sz = l.size();\n        if (sz % 2 == 0) {\n            return (l.get(sz\
    \ / 2) + l.get(sz / 2 - 1)) / 2f;\n        } else {\n            return l.get(sz\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        float median = (float) 0;\n        if (size\
    \ % 2 == 0) {\n            median = (float) (l.get(size / 2) + l.get(size / 2\
    \ - 1)) / 2;\n        } else {\n            median = (float) l.get(size / 2);\n\
    \        }\n        return median;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Sort the list\n\
    \        Collections.sort(l);\n        // Get the size of the list\n        int\
    \ size = l.size();\n        // If the list has even number of elements, return\
    \ the mean of middle two elements\n        if ((size % 2) == 0) {\n          \
    \  return ((float)(l.get((size / 2)) + l.get(((size / 2) - 1)))) / 2;\n      \
    \  }\n        // Otherwise, return the middle element\n        return l.get((size\
    \ / 2));\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        return l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi81hykvm.java:20)\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n == 0) {\n            return 0;\n        }\n        Collections.sort(l);\n\
    \        if (n % 2 == 0) {\n            return (l.get(n / 2) + l.get(n / 2 - 1))\
    \ / 2.0f;\n        } else {\n            return l.get(n / 2);\n        }\n   \
    \ }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Write your code\
    \ here.\n        long[] arr = new long[l.size()];\n        for (int i = 0; i <\
    \ l.size(); i++) {\n            arr[i] = l.get(i);\n        }\n        Arrays.sort(arr);\n\
    \        float median = 0.0f;\n        if (arr.length % 2 == 0) {\n          \
    \  int a = arr.length / 2;\n            int b = arr.length / 2 - 1;\n        \
    \    median = (float) (arr[a] + arr[b]) / 2;\n        } else {\n            int\
    \ i = arr.length / 2;\n            median = arr[i];\n        }\n        return\
    \ median;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i) + l.get(i - 1)) / 2f;\n        } else {\n            return\
    \ l.get(i);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        return (n % 2 == 0 ? ((float)l.get(n / 2)\
    \ + (float)l.get(n / 2 - 1)) / 2 : (float)l.get(n / 2));\n    }\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        int n = l.size();\n\
    \        if (n % 2 == 1) {\n            return (float)l.get(n / 2);\n        }\
    \ else {\n            return (float)((long)l.get(n / 2 - 1) + (long)l.get(n /\
    \ 2)) / 2.0f;\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dbd61va.java:23)\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i-1) + l.get(i)) / 2.0f;\n        } else {\n            return\
    \ l.get(i);\n        }\n    }\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return l.get(l.size() / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkmh7stqu.java:20)\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // sort the list\
    \ and return middle element\n        Collections.sort(l);\n        if (l.size()\
    \ % 2 == 0) {\n            int half = l.size() / 2;\n            return (l.get(half)\
    \ + l.get(half - 1)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2 - 1)\
    \ + l.get(l.size() / 2)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010195
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        l.sort(null);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2) + l.get(len / 2 - 1)) / 2f;\n        } else {\n            return\
    \ l.get(len / 2);\n        }\n    }\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // >>> type(l)\n\
    \        // class java.util.ArrayList\n        // >>> l.size()\n        // (int)5\n\
    \        Collections.sort(l);\n        int i = l.size() / 2;\n        if (l.size()\
    \ % 2 == 0) {\n            return (l.get(i) + l.get(i - 1)) / 2.0f;\n        }\
    \ else {\n            return l.get(i);\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        return (l.get(l.size() / 2 - 1) + l.get(l.size() / 2)) / 2.0f;\n    }\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)-10l, (long)4l, (long)6l, (long)1000l, (long)10l,\
    \ (long)20l)))) == (8.0f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)5l))))\
    \ == (float)5l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)6l,\
    \ (long)5l)))) == (5.5f));\n    assert(median((new ArrayList<Long>(Arrays.asList((long)8l,\
    \ (long)1l, (long)3l, (long)9l, (long)9l, (long)2l, (long)7l)))) == (float)7l);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpihx0ztcu.java:19)\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        //TODO: implement\
    \ this method\n        return (float)0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1hlkci3.java:19)\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // A list of numbers\
    \ is sorted.\n        // >>> sort_array_list((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l))))\n        // [1, 2, 3, 4, 5]\n   \
    \     // >>> sort_array_list((new ArrayList<Long>(Arrays.asList((long)-10l, (long)4l,\
    \ (long)6l, (long)1000l, (long)10l, (long)20l))))\n        // [-10, 4, 6, 10,\
    \ 20, 1000]\n        ArrayList<Long> a = sort_array_list(l);\n        // A list\
    \ of numbers is reversed.\n        // >>> reverse_array_list((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l))))\n        // [5, 4, 2, 1, 3]\n   \
    \     // >>> reverse_array_list((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n        // [20, 10,\
    \ 1000, 6, 4, -10]\n        ArrayList<Long> b = reverse_array_list(a);\n     \
    \   // The sum of values in the array list a and the sum of values in the array\
    \ list b are equal.\n        // >>> array_list_sum((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)1l, (long)2l, (long)4l, (long)5l))))\n        // (long)15l\n        //\
    \ >>> array_list_sum((new ArrayList<Long>(Arrays.asList((long)-10l, (long)4l,\
    \ (long)6l, (long)1000l, (long)10l, (long)20l))))\n        // (long)1040l\n  \
    \      long sum_a = array_list_sum(a);\n        long sum_b = array_list_sum(b);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnbpbcq8z.java:20: error: cannot find symbol\n        ArrayList<Long>\
    \ a = sort_array_list(l);\n                            ^\n  symbol:   method sort_array_list(ArrayList<Long>)\n\
    \  location: class Problem\n/tmp/tmpnbpbcq8z.java:26: error: cannot find symbol\n\
    \        ArrayList<Long> b = reverse_array_list(a);\n                        \
    \    ^\n  symbol:   method reverse_array_list(ArrayList<Long>)\n  location: class\
    \ Problem\n/tmp/tmpnbpbcq8z.java:32: error: cannot find symbol\n        long sum_a\
    \ = array_list_sum(a);\n                     ^\n  symbol:   method array_list_sum(ArrayList<Long>)\n\
    \  location: class Problem\n/tmp/tmpnbpbcq8z.java:33: error: cannot find symbol\n\
    \        long sum_b = array_list_sum(b);\n                     ^\n  symbol:  \
    \ method array_list_sum(ArrayList<Long>)\n  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        float res = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) {\n\
    \            res = (res + l.get(l.size() / 2 - 1)) / 2;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4o5edawv.java:19)\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ c = new ArrayList<Long>(l);\n        c.sort(Comparator.naturalOrder());\n  \
    \      int a = c.size();\n        return (a % 2 == 0) ? (((c.get(a / 2 - 1)) +\
    \ (c.get(a / 2))) / 2.0f) : c.get(a / 2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l,\
    \ (long)2l, (long)4l, (long)5l)))) == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010199
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the array list l.\n    //\
    \ >>> median((new ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l,\
    \ (long)4l, (long)5l))))\n    // (float)3l\n    // >>> median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l))))\n    // (15.0f)\n\
    \    public static float median(ArrayList<Long> l) {\n        Collections.sort(l);\n\
    \        int s = l.size();\n        if (s % 2 == 0) {\n            return (l.get(s\
    \ / 2 - 1) + l.get(s / 2)) / 2.0f;\n        } else {\n            return l.get(s\
    \ / 2);\n        }\n    }\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)3l, (long)1l, (long)2l, (long)4l, (long)5l))))\
    \ == (float)3l);\n    assert(median((new ArrayList<Long>(Arrays.asList((long)-10l,\
    \ (long)4l, (long)6l, (long)1000l, (long)10l, (long)20l)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)5l)))) == (float)5l);\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)6l, (long)5l)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Long>(Arrays.asList((long)8l, (long)1l, (long)3l, (long)9l, (long)9l,\
    \ (long)2l, (long)7l)))) == (float)7l);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010204

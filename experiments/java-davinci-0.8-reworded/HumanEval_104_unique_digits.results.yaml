language: java
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> b = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            if (x.get(i) < 0) {\n                x.set(i, x.get(i)*(long)-1);\n\
    \            }\n            boolean unique = true;\n            long z = x.get(i);\n\
    \            while (z > 0) {\n                long y = z % 10;\n             \
    \   if (y % 2 == 0) {\n                    unique = false;\n                 \
    \   break;\n                }\n                z = z / 10;\n            }\n  \
    \          if (unique) {\n                b.add(x.get(i));\n            }\n  \
    \      }\n        Collections.sort(b);\n        return b;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueDigits = new ArrayList<Long>();\n        for (long number\
    \ : x) {\n            long rest = number;\n            while (rest > 0) {\n  \
    \              long digit = rest % 10;\n                if (digit % 2 == 0) {\n\
    \                    break;\n                }\n                rest /= 10;\n\
    \            }\n            if (rest == 0) {\n                uniqueDigits.add(number);\n\
    \            }\n        }\n        Collections.sort(uniqueDigits);\n        return\
    \ uniqueDigits;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Implements your solution here\n        return null;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpanpzu8se.java:22)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Implement me\n        ArrayList<Long> filtered = new ArrayList<Long>();\n\
    \        for (Long n : x) {\n            String s = n.toString();\n          \
    \  if (s.contains(\"2\") || s.contains(\"4\") || s.contains(\"6\") || s.contains(\"\
    8\")) {\n                // do nothing\n            } else {\n               \
    \ filtered.add(n);\n            }\n        }\n        Collections.sort(filtered);\n\
    \        return filtered;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp85xtaup.java:33)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(n -> {return n.toString().chars().noneMatch(i -> i\
    \ % 2 == 0);}).sorted().collect(Collectors.toCollection(ArrayList::new));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ throw new UnsupportedOperationException(\"Method uniqueDigits() is not implemented\
    \ yet.\");\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Method\
    \ uniqueDigits() is not implemented yet.\n\tat Problem.uniqueDigits(tmprj3mzdgn.java:18)\n\
    \tat Problem.main(tmprj3mzdgn.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (Long l : x) {\n   \
    \         if (l.toString().chars().mapToObj(e -> (char)e).noneMatch(e -> e % 2\
    \ == 0))\n                a.add(l);\n        }\n        return a;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bl4ob6d.java:26)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> out = new ArrayList<Long>();\n        for (long a : x) {\n \
    \           int count = 0;\n            for (char b : (\"\" + a).toCharArray())\
    \ {\n                if ((int)b % 2 == 0) count++;\n            }\n          \
    \  if (count == 0) out.add(a);\n        }\n        Collections.sort(out);\n  \
    \      return out;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> output = new ArrayList<Long>();\n        for (Long y : x) {\n\
    \            if (uniqueDigitsCheck(y)) {\n                output.add(y);\n   \
    \         }\n        }\n        Collections.sort(output);\n        return output;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpepgzu3uz.java:20: error: cannot find symbol\n            if (uniqueDigitsCheck(y))\
    \ {\n                ^\n  symbol:   method uniqueDigitsCheck(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> arr = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            if (x.get(i) != null) {\n                long count = 0;\n\
    \                long num = x.get(i);\n                while (num > 0) {\n   \
    \                 if (num % 2 == 0) {\n                        count++;\n    \
    \                }\n                    num = num / 10;\n                }\n \
    \               if (count == 0) {\n                    arr.add(x.get(i));\n  \
    \              }\n            }\n        }\n        Collections.sort(arr);\n \
    \       return arr;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueDigits = new ArrayList<Long>();\n        // ...\n    \
    \    return uniqueDigits;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0g11vrwt.java:23)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i < 10) {\n                ans.add(i);\n            } else {\n\
    \                long j = i;\n                while (j > 0) {\n              \
    \      long digit = j % 10;\n                    if (digit % 2 == 0) {\n     \
    \                   break;\n                    }\n                    j /= 10;\n\
    \                }\n                if (j == 0) {\n                    ans.add(i);\n\
    \                }\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long t : x) {\n   \
    \         boolean flag = true;\n            for (int i = 0; i < t.toString().length();\
    \ i++) {\n                if (t.toString().charAt(i) % 2 == 0) {\n           \
    \         flag = false;\n                    break;\n                }\n     \
    \       }\n            if (flag) {\n                y.add(t);\n            }\n\
    \        }\n        Collections.sort(y);\n        return y;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (isUniqueDigits(i)) {\n                result.add(i);\n      \
    \      }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8m32ow30.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(e -> e % 2 != 0 && e % 5 != 0)\n                .sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_p94imvk.java:22)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadja82wm.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (long a : x) {\n \
    \           if (unique(a)) {\n                ans.add(a);\n            }\n   \
    \     }\n        Collections.sort(ans);\n        return ans;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_qf1oy3t.java:20: error: cannot find symbol\n            if (unique(a))\
    \ {\n                ^\n  symbol:   method unique(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i <\
    \ x.size(); i++) {\n            long number = x.get(i);\n            boolean hasEvenDigit\
    \ = false;\n            while (number > 0) {\n                if ((number % 10)\
    \ % 2 == 0) {\n                    hasEvenDigit = true;\n                    break;\n\
    \                }\n                number /= 10;\n            }\n           \
    \ if (!hasEvenDigit) {\n                result.add(x.get(i));\n            }\n\
    \        }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> answer = new ArrayList<Long>();\n        return answer;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nes46bz.java:22)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Replace the below code with your own\n        if (x.size() == 0) return new\
    \ ArrayList<Long>();\n        String s = String.valueOf(x.get(0));\n        boolean\
    \ isOk = true;\n        for (int i = 0; i < s.length(); i++) {\n            if\
    \ (Character.getNumericValue(s.charAt(i)) % 2 == 0) {\n                isOk =\
    \ false;\n                break;\n            }\n        }\n        if (isOk)\
    \ return x;\n        return new ArrayList<Long>();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaq8i0w1k.java:32)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ throw new IllegalArgumentException(\"Not implemented\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Not implemented\n\
    \tat Problem.uniqueDigits(tmptchxu5hs.java:18)\n\tat Problem.main(tmptchxu5hs.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        // Your code comes here\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakzncd_s.java:23)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(s -> \n                s.toString().chars().mapToObj(i\
    \ -> (char)i).noneMatch(s1 -> s1 == '2' || s1 == '4' || s1 == '6' || s1 == '8'))\n\
    \                .sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxlhoo3d4.java:24)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long l : x) {\n \
    \           if (isUniqueDigits(l)) {\n                ret.add(l);\n          \
    \  }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpptexcukg.java:20: error: cannot find symbol\n            if (isUniqueDigits(l))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        boolean flag = true;\n\
    \        for (int i = 0; i < x.size(); i++) {\n            flag = true;\n    \
    \        while (x.get(i) > 0) {\n                if (x.get(i) % 2 == 0) {\n  \
    \                  flag = false;\n                    break;\n               \
    \ }\n                x.set(i, x.get(i) / 10);\n            }\n            if (flag)\n\
    \                result.add(x.get(i));\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqjishwo2.java:36)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(y -> isuniqueDigits(y)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyeuk3upj.java:18: error: cannot find symbol\n        return x.stream().filter(y\
    \ -> isuniqueDigits(y)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \                                      ^\n  symbol:   method isuniqueDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010761
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        int len = x.size();\n\
    \        for (int i = 0; i < len; i++) {\n            if (isUniqueDigits(x.get(i)))\
    \ {\n                ans.add(x.get(i));\n            }\n        }\n        ans.sort(null);\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr_73fy3g.java:21: error: cannot find symbol\n            if (isUniqueDigits(x.get(i)))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (long xx : x) {\n  \
    \          if (isUniqueDigits(xx)) {\n                a.add(xx);\n           \
    \ }\n        }\n        Collections.sort(a);\n        return a;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgzg4u2cc.java:20: error: cannot find symbol\n            if (isUniqueDigits(xx))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long v : x) {\n \
    \           if (isUniqueDigits(v)) {\n                res.add(v);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmy60f9c.java:20: error: cannot find symbol\n            if (isUniqueDigits(v))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        boolean isUnique = true;\n\
    \        for (long j : x) {\n            isUnique = true;\n            String\
    \ num = String.valueOf(j);\n            int len = num.length();\n            for\
    \ (int i = 0; i < len; i++) {\n                if (Character.getNumericValue(num.charAt(i))\
    \ % 2 == 0) {\n                    isUnique = false;\n                    break;\n\
    \                }\n            }\n            if (isUnique) {\n             \
    \   ret.add(j);\n            }\n        }\n        Collections.sort(ret);\n  \
    \      return ret;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long> even\
    \ = new ArrayList<Long>();\n        long digit = 0;\n        for (long i = 0;\
    \ i < x.size(); i++) {\n            digit = x.get((int)i);\n            while\
    \ (digit != 0) {\n                if (digit % 2 == 0) {\n                    even.add(x.get((int)i));\n\
    \                    break;\n                }\n                digit /= 10;\n\
    \            }\n        }\n        for (long i = 0; i < x.size(); i++) {\n   \
    \         if (!even.contains(x.get((int)i))) {\n                result.add(x.get((int)i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // x = (new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l)));\n        ArrayList<Long> retval = new ArrayList<Long>();\n    \
    \    for (int i = 0; i < x.size(); i++) {\n            String str = Long.toString(x.get(i));\n\
    \            boolean isEven = false;\n            for (int j = 0; j < str.length();\
    \ j++) {\n                int digit = Character.getNumericValue(str.charAt(j));\n\
    \                if (digit % 2 == 0) {\n                    isEven = true;\n \
    \                   break;\n                }\n            }\n            if (!isEven)\
    \ {\n                retval.add(x.get(i));\n            }\n        }\n       \
    \ Collections.sort(retval);\n        return retval;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (long n : x) {\n \
    \           long nn = n;\n            long nd = 0;\n            long nr = 0;\n\
    \            while (nn > 0) {\n                nd = nn % 10;\n               \
    \ nr = nr * 10 + nd;\n                nn = nn / 10;\n            }\n         \
    \   boolean found = false;\n            while (nr > 0) {\n                nd =\
    \ nr % 10;\n                if (nd % 2 == 0) {\n                    found = true;\n\
    \                    break;\n                }\n                nr = nr / 10;\n\
    \            }\n            if (!found) {\n                res.add(n);\n     \
    \       }\n        }\n        Collections.sort(res);\n        return res;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42wlfwji.java:46)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here.\n        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (Long num : x) {\n            boolean isUnique = true;\n        \
    \    while (num > 0) {\n                int digit = (int)(num % 10);\n       \
    \         if (digit % 2 == 0) {\n                    isUnique = false;\n     \
    \               break;\n                }\n                num /= 10;\n      \
    \      }\n            if (isUnique) {\n                res.add(num);\n       \
    \     }\n        }\n        Collections.sort(res);\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuc66lqze.java:38)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Fill in code here.\n        ArrayList<Long> y = new ArrayList<Long>();\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqs99741m.java:23)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (num <= 0l) {\n                continue;\n            }\n\
    \            Long copy = num;\n            boolean notUnique = false;\n      \
    \      while (copy > 0l) {\n                if (copy % 2l == 0l) {\n         \
    \           notUnique = true;\n                    break;\n                }\n\
    \                copy /= 10l;\n            }\n            if (!notUnique) {\n\
    \                result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i <\
    \ x.size(); i++) {\n            long j = x.get(i);\n            if (j == 0) {\n\
    \                output.add(j);\n            } else {\n                boolean\
    \ isValid = true;\n                while (j > 0) {\n                    if (j\
    \ % 2 == 0) {\n                        isValid = false;\n                    \
    \    break;\n                    }\n                    j /= 10;\n           \
    \     }\n                if (isValid) {\n                    output.add(x.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(output);\n\
    \        return output;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here.\n        return new ArrayList<Long>();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry5cnxns.java:22)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        x.forEach(i -> {\n     \
    \       if (String.valueOf(i).chars().noneMatch(j -> j == '0' || j == '2' || j\
    \ == '4' || j == '6' || j == '8'))\n                y.add(i);\n        });\n \
    \       y.sort(Long::compareTo);\n        return y;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ throw new RuntimeException(\"Implement me\");\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Implement me\n\
    \tat Problem.uniqueDigits(tmp66n9bggc.java:18)\n\tat Problem.main(tmp66n9bggc.java:21)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (long e : x) {\n \
    \           boolean allOdd = true;\n            for (long i = e; i > 0; i /= 10)\
    \ {\n                if (i % 2 == 0) {\n                    allOdd = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (allOdd) {\n                ret.add(e);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (LongStream.of(i).allMatch(s -> s % 2 != 0))\n               \
    \ result.add(i);\n        }\n        Collections.sort(result);\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpy1vy4q.java:28)\n"
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> i.toString().chars().noneMatch(j -> j%2 == 0)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        boolean isUnique =\
    \ true;\n        for (int i = 0; i < x.size(); i++) {\n            for (int j\
    \ = 0; j < Integer.toString(x.get(i).intValue()).length(); j++) {\n          \
    \      int digit = Character.getNumericValue(Integer.toString(x.get(i).intValue()).charAt(j));\n\
    \                if (digit % 2 == 0) {\n                    isUnique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (isUnique) {\n                result.add(x.get(i));\n            }\n       \
    \     isUnique = true;\n        }\n        Collections.sort(result);\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010762
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> l = new ArrayList<Long>();\n        for (long n : x) {\n   \
    \         boolean odd = true;\n            while (n > 0) {\n                if\
    \ ((n % 10) % 2 == 0) {\n                    odd = false;\n                  \
    \  break;\n                }\n                n /= 10;\n            }\n      \
    \      if (odd) {\n                l.add(n);\n            }\n        }\n     \
    \   Collections.sort(l);\n        return l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdllyb5tl.java:36)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long n : x) {\n   \
    \         boolean isEven = false;\n            while (n > 0) {\n             \
    \   long digit = n % 10;\n                if (digit % 2 == 0) {\n            \
    \        isEven = true;\n                    break;\n                }\n     \
    \           n /= 10;\n            }\n            if (!isEven) {\n            \
    \    y.add(n);\n            }\n        }\n        Collections.sort(y);\n     \
    \   return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmply87owa6.java:37)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> arrayList = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < x.size(); i++) {\n            long n = x.get(i);\n            boolean flag\
    \ = true;\n            while (n > 0) {\n                long r = n % 10;\n   \
    \             if (r % 2 == 0) {\n                    flag = false;\n         \
    \           break;\n                }\n                n = n / 10;\n         \
    \   }\n            if (flag)\n                arrayList.add(x.get(i));\n     \
    \   }\n        for (int i = 0; i < arrayList.size(); i++) {\n            for (int\
    \ j = i + 1; j < arrayList.size(); j++) {\n                if (arrayList.get(i)\
    \ > arrayList.get(j)) {\n                    long temp = arrayList.get(i);\n \
    \                   arrayList.set(i, arrayList.get(j));\n                    arrayList.set(j,\
    \ temp);\n                }\n            }\n        }\n        return arrayList;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(y -> {\n            String z = Long.toString(y);\n\
    \            for (char c : z.toCharArray()) {\n                if (Character.getNumericValue(c)\
    \ % 2 == 0) return false;\n            }\n            return true;\n        }).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010763
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (long i: x) {\n    \
    \        boolean hasEvenDigit = false;\n            String str = String.valueOf(i);\n\
    \            for (int j = 0; j < str.length(); j++) {\n                if (str.charAt(j)\
    \ == '0' || str.charAt(j) == '2' || str.charAt(j) == '4' || str.charAt(j) == '6'\
    \ || str.charAt(j) == '8') {\n                    hasEvenDigit = true;\n     \
    \               break;\n                }\n            }\n            if (!hasEvenDigit)\
    \ {\n                y.add(i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Fill in code here to return an array list of all elements in x\n        //\
    \ that does not have any even digits.\n        ArrayList<Long> y = new ArrayList<Long>();\n\
    \        for (Long i : x) {\n            Long current = i;\n            while\
    \ (current != 0) {\n                Long digit = current % 10;\n             \
    \   if (digit % 2 == 0) {\n                    break;\n                }\n   \
    \             if (current == i) {\n                    y.add(i);\n           \
    \     }\n                current = current / 10;\n            }\n        }\n \
    \       Collections.sort(y);\n        return y;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp49xajme6.java:39)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long l : x) {\n\
    \            boolean isUnique = true;\n            while (l != 0) {\n        \
    \        if (l % 2 == 0) {\n                    isUnique = false;\n          \
    \          break;\n                }\n                l /= 10;\n            }\n\
    \            if (isUnique) {\n                result.add(l);\n            }\n\
    \        }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7tgy0crs.java:36)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long num : x) {\n\
    \            if (!new String(num.toString()).matches(\".*[2468].*\")) {\n    \
    \            ans.add(num);\n            }\n        }\n        return ans;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocb9fkzw.java:27)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        Iterator<Long> it = x.iterator();\n\
    \        while (it.hasNext()) {\n            Long num = it.next();\n         \
    \   if (num.toString().matches(\"\\\\d*[13579]\\\\d*\")) {\n                ans.add(num);\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvpjm9ng3.java:30)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> output = new ArrayList<Long>();\n        for (Long l : x) {\n\
    \            String s = String.valueOf(l);\n            boolean flag = true;\n\
    \            for (int i = 0; i < s.length(); i++) {\n                int a = Character.getNumericValue(s.charAt(i));\n\
    \                if (a % 2 == 0) {\n                    flag = false;\n      \
    \              break;\n                }\n            }\n            if (flag)\
    \ {\n                output.add(l);\n            }\n        }\n        Collections.sort(output);\n\
    \        return output;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010764
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code here\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmphxaikceo.java:22)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // ...\n        return x;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdlqjvwd.java:22)\n"
  stdout: ''
  timestamp: 1660010764
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long e : x) {\n \
    \           String s = e.toString();\n            boolean cont = false;\n    \
    \        for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i)\
    \ % 2 == 0) {\n                    cont = true;\n                    break;\n\
    \                }\n            }\n            if (!cont) {\n                res.add(e);\n\
    \            }\n        }\n        res.sort(new Comparator<Long>() {\n       \
    \     public int compare(Long a, Long b) {\n                return Long.compare(a,\
    \ b);\n            }\n        });\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010763
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (java.util.stream.IntStream.range(0, Long.toString(i).length()).anyMatch(j\
    \ -> Long.toString(i).charAt(j) % 2 == 0))\n                continue;\n      \
    \      res.add(i);\n        }\n        Collections.sort(res);\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return uniqueDigitsInner(x, new ArrayList<Long>());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvo_l7zv0.java:18: error: cannot find symbol\n        return uniqueDigitsInner(x,\
    \ new ArrayList<Long>());\n               ^\n  symbol:   method uniqueDigitsInner(ArrayList<Long>,ArrayList<Long>)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        // Write your code here\
    \ to populate the answer array list.\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcbps06b_.java:23)\n"
  stdout: ''
  timestamp: 1660010764
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ throw new RuntimeException(\"error\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: error\n\tat Problem.uniqueDigits(tmp5krtwprr.java:18)\n\
    \tat Problem.main(tmp5krtwprr.java:21)\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ List<Long> y = new ArrayList<Long>();\n        List<Long> y2 = new ArrayList<Long>();\n\
    \        y = x.stream().filter(i -> i % 2 != 0).collect(Collectors.toList());\n\
    \        y2 = y.stream().filter(i -> i % 5 != 0).collect(Collectors.toList());\n\
    \        // O(n) time, O(n) space.\n        return new ArrayList<Long>(y2);\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6pwuljz9.java:26)\n"
  stdout: ''
  timestamp: 1660010764
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (Long l : x) {\n   \
    \         if (l.toString().matches(\"[^24680]+\")) {\n                a.add(l);\n\
    \            }\n        }\n        Collections.sort(a);\n        return a;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010764
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long l : x) {\n \
    \           if (!hasEvenDigit(l)) {\n                res.add(l);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp517m3wwz.java:20: error: cannot find symbol\n            if (!hasEvenDigit(l))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010763
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (Long.toString(i).chars().filter(ch -> (ch - '0') % 2 == 0).count()\
    \ == 0) {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010764
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long item : x) {\n\
    \            if (item % 2 != 0) {\n                ans.add(item);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnscr553.java:29)\n"
  stdout: ''
  timestamp: 1660010764
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (long l : x) {\n   \
    \         boolean add = true;\n            for (char c : (l + \"\").toCharArray())\
    \ {\n                if (c % 2 == 0) {\n                    add = false;\n   \
    \                 break;\n                }\n            }\n            if (add)\
    \ {\n                a.add(l);\n            }\n        }\n        Collections.sort(a);\n\
    \        return a;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010764
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long count = 0;\n        ArrayList<Long> result = new ArrayList<Long>();\n \
    \       for (int i = 0; i < x.size(); i++) {\n            count = 0;\n       \
    \     long num = x.get(i);\n            while (num > 0) {\n                if\
    \ (num % 2 == 0) {\n                    count = 1;\n                    break;\n\
    \                }\n                num = num / 10;\n            }\n         \
    \   if (count == 0) {\n                result.add(x.get(i));\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdxtt1kzh.java:37)\n"
  stdout: ''
  timestamp: 1660010764
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(num -> (num.toString().chars().map(character -> (int)((char)character)).filter(digit\
    \ -> digit % 2 == 0).count() == 0)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> output = new ArrayList<Long>();\n        if (x.isEmpty()) {\n\
    \            return output;\n        }\n        ArrayList<Long> even = new ArrayList<Long>();\n\
    \        for (Long num : x) {\n            // System.out.println(num);\n     \
    \       if (is_even(num)) {\n                even.add(num);\n            }\n \
    \       }\n        // System.out.println(even);\n        for (Long num : x) {\n\
    \            if (!even.contains(num)) {\n                output.add(num);\n  \
    \          }\n        }\n        Collections.sort(output);\n        return output;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprok5zeym.java:25: error: cannot find symbol\n            if (is_even(num))\
    \ {\n                ^\n  symbol:   method is_even(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> r = new ArrayList<Long>();\n        Iterator<Long> i = x.iterator();\n\
    \        while (i.hasNext()) {\n            Long l = i.next();\n            if\
    \ (l % 2 != 0) {\n                r.add(l);\n            }\n        }\n      \
    \  return r;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jb2wl9_.java:29)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (long i: x) {\n  \
    \          if (String.valueOf(i).chars().map(c -> c - '0').boxed().filter(v ->\
    \ v % 2 == 0).collect(Collectors.toList()).size() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long d : x) {\n \
    \           boolean exists = false;\n            String s = String.valueOf(d);\n\
    \            for (int i = 0; i < s.length(); i++) {\n                if (s.charAt(i)\
    \ % 2 == 0) {\n                    exists = true;\n                    break;\n\
    \                }\n            }\n            if (!exists) {\n              \
    \  ans.add(d);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().filter(j -> j == '2' || j == '4' || j ==\
    \ '6' || j == '8').count() == 0) {\n                result.add(i);\n         \
    \   }\n        }\n        result.sort(Comparator.naturalOrder());\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvnq72ros.java:29)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here.\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpot0t373r.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadja82wm.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (Long.toString(i).chars().map(c -> c - '0').allMatch(j -> j % 2\
    \ != 0)) {\n                ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> lst = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (i < 10) {\n                lst.add(i);\n            } else {\n\
    \                boolean isGood = true;\n                while (i > 0) {\n   \
    \                 if (i % 2 == 0) {\n                        isGood = false;\n\
    \                        break;\n                    }\n                    i\
    \ /= 10;\n                }\n                if (isGood) {\n                 \
    \   lst.add(i);\n                }\n            }\n        }\n        Collections.sort(lst);\n\
    \        return lst;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyutnkezs.java:40)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        ArrayList<Long> z = new\
    \ ArrayList<Long>();\n        for (Long i : x) {\n            Long j = i;\n  \
    \          boolean allOdd = true;\n            while (j > 0) {\n             \
    \   if (j % 2 == 0) {\n                    allOdd = false;\n                 \
    \   break;\n                }\n                j /= 10;\n            }\n     \
    \       if (allOdd) {\n                y.add(i);\n            }\n        }\n \
    \       Collections.sort(y);\n        return y;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> {\n            // true means accept this\n   \
    \         return i.toString().chars().noneMatch(c -> {\n                return\
    \ Character.getNumericValue(c) % 2 == 0;\n            });\n        }).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueX = new ArrayList<Long>();\n        for (long i : x) {\n\
    \            if (checkDigits(i)) {\n                uniqueX.add(i);\n        \
    \    }\n        }\n        Collections.sort(uniqueX);\n        return uniqueX;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphsq__g3w.java:20: error: cannot find symbol\n            if (checkDigits(i))\
    \ {\n                ^\n  symbol:   method checkDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        ret.add((long)1l);\n \
    \       return ret;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf1qygv8v.java:23)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        a.addAll(x);\n        Iterator<Long>\
    \ it = a.iterator();\n        while (it.hasNext()) {\n            long num = it.next();\n\
    \            boolean has_even = false;\n            while (num > 0) {\n      \
    \          if ((num % 10) % 2 == 0) {\n                    has_even = true;\n\
    \                    break;\n                }\n                num /= 10;\n \
    \           }\n            if (has_even) {\n                it.remove();\n   \
    \         }\n        }\n        Collections.sort(a);\n        return a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here.\n        return new ArrayList<Long>();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__f3hslc.java:22)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        ArrayList<Long> res1 =\
    \ new ArrayList<Long>();\n        ArrayList<Long> res2 = new ArrayList<Long>();\n\
    \        int i = 0;\n        while (i < x.size()) {\n            Long n = x.get(i);\n\
    \            Long mod = 0l;\n            Long copy = n;\n            boolean add\
    \ = true;\n            while (copy > 0) {\n                mod = copy % 10;\n\
    \                if (mod % 2 == 0) {\n                    add = false;\n     \
    \               break;\n                }\n                copy = copy / 10;\n\
    \            }\n            if (add) {\n                res.add(n);\n        \
    \    }\n            i = i + 1;\n        }\n        i = 0;\n        while (i <\
    \ res.size()) {\n            Long n = res.get(i);\n            Long copy = n;\n\
    \            Long mod = 0l;\n            int pos = 0;\n            while (copy\
    \ > 0) {\n                mod = copy % 10;\n                if (mod > pos) {\n\
    \                    pos = mod.intValue();\n                }\n              \
    \  copy = copy / 10;\n            }\n            if (pos == res.get(i).toString().length())\
    \ {\n                res1.add(n);\n            }\n            i = i + 1;\n   \
    \     }\n        i = 0;\n        while (i < res1.size()) {\n            Long n\
    \ = res1.get(i);\n            int pos = 0;\n            int count = 0;\n     \
    \       int j = 0;\n            while (j < res1.size()) {\n                if\
    \ (n.toString().length() == res1.get(j).toString().length()) {\n             \
    \       count = count + 1;\n                }\n                j = j + 1;\n  \
    \          }\n            if (count == 1) {\n                res2.add(n);\n  \
    \          }\n            i = i + 1;\n        }\n        return res2;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpids3hufv.java:78)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(n -> \n            {\n                while (n > 0)\
    \ {\n                    if ((n % 10) % 2 == 0) return false;\n              \
    \      n /= 10;\n                }\n                return true;\n           \
    \ }\n        ).sorted().collect(Collectors.toCollection(ArrayList::new));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> digits = new ArrayList<Long>();\n        // Replace with your\
    \ code\n        return digits;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkrm1uut.java:23)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> hs =\
    \ new HashSet<Long>();\n        for (int i = 0; i < x.size(); i++) {\n       \
    \     hs.add(x.get(i));\n        }\n        for (Long i : hs) {\n            String\
    \ str = Long.toString(i);\n            boolean check = true;\n            for\
    \ (int j = 0; j < str.length(); j++) {\n                if (str.charAt(j) % 2\
    \ == 0) {\n                    check = false;\n                    break;\n  \
    \              }\n            }\n            if (check) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // YOUR CODE HERE\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp_17vvj6x.java:22)\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long y : x) {\n\
    \            if (y.toString().matches(\"[13579]+\")) {\n                result.add(y);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> x2 = new ArrayList<Long>();\n        for (Long i : x) {\n  \
    \          if (!hasEvenDigit(i)) {\n                x2.add(i);\n            }\n\
    \        }\n        Collections.sort(x2);\n        return x2;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfbibbxx_.java:20: error: cannot find symbol\n            if (!hasEvenDigit(i))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010765
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> r = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (Problem2.hasEvenDigit(i)) {\n                continue;\n       \
    \     }\n            r.add(i);\n        }\n        Collections.sort(r);\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpphe074h8.java:20: error: cannot find symbol\n            if (Problem2.hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   variable Problem2\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ //replace this code with yours\n        return new ArrayList<Long>();\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppm4vbeyt.java:22)\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueDigitsList = new ArrayList<Long>();\n        Iterator\
    \ it = x.iterator();\n        while (it.hasNext()) {\n            Long number\
    \ = (Long)it.next();\n            boolean hasEvenDigit = false;\n            while\
    \ (number != 0) {\n                if ((number % 10) % 2 == 0) {\n           \
    \         hasEvenDigit = true;\n                    break;\n                }\n\
    \                number /= 10;\n            }\n            if (!hasEvenDigit)\
    \ {\n                uniqueDigitsList.add((Long)it.next());\n            }\n \
    \       }\n        Collections.sort(uniqueDigitsList);\n        return uniqueDigitsList;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.NoSuchElementException\n\tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:970)\n\
    \tat Problem.uniqueDigits(tmpb1b_2t0b.java:31)\n\tat Problem.main(tmpb1b_2t0b.java:38)\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here\n        ArrayList<Long> a = new ArrayList<Long>();\n    \
    \    for(int i = 0; i < x.size(); i++){\n            long num = x.get(i);\n  \
    \          String str = String.valueOf(num);\n            if(str.contains(\"2\"\
    ) || str.contains(\"4\") || str.contains(\"6\") || str.contains(\"8\") || str.contains(\"\
    0\")){\n                a.add(num);\n            }\n        }\n        Collections.sort(a);\n\
    \        return a;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvaknyr6p.java:31)\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ throw new UnsupportedOperationException(\"Pending\");\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Pending\n\
    \tat Problem.uniqueDigits(tmpfebkve_x.java:18)\n\tat Problem.main(tmpfebkve_x.java:21)\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long num : x) {\n\
    \            String s = String.valueOf(num);\n            boolean isUnique = true;\n\
    \            for (int i = 0; i < s.length(); i++) {\n                char cur\
    \ = s.charAt(i);\n                if (cur == '0' || cur == '2' || cur == '4' ||\
    \ cur == '6' || cur == '8') {\n                    isUnique = false;\n       \
    \             break;\n                }\n            }\n            if (isUnique)\
    \ {\n                res.add(num);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010766
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long xi : x) {\n\
    \            boolean found = false;\n            int xii = xi.intValue();\n  \
    \          while (xii > 0) {\n                int digit = xii % 10;\n        \
    \        if (digit % 2 == 0) {\n                    found = true;\n          \
    \          break;\n                }\n                xii /= 10;\n           \
    \ }\n            if (!found) res.add(xi);\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010767
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> n = new ArrayList<Long>();\n        boolean isUnique;\n    \
    \    for (Long i : x) {\n            isUnique = true;\n            for (char c\
    \ : i.toString().toCharArray()) {\n                if (c % 2 == 0) {\n       \
    \             isUnique = false;\n                    break;\n                }\n\
    \            }\n            if (isUnique) {\n                n.add(i);\n     \
    \       }\n        }\n        Collections.sort(n);\n        return n;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (containsEvenDigit(i)) {\n                continue;\n         \
    \   }\n            res.add(i);\n        }\n        Collections.sort(res);\n  \
    \      return res;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpteuarx_8.java:20: error: cannot find symbol\n            if (containsEvenDigit(i))\
    \ {\n                ^\n  symbol:   method containsEvenDigit(long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ int y = x.size();\n        ArrayList<Long> z = new ArrayList<Long>();\n    \
    \    for (int i = 0; i < y; i++) {\n            Long w = x.get(i);\n         \
    \   Long a = w % 10;\n            Long b = (w / 10) % 10;\n            Long c\
    \ = (w / 100) % 10;\n            Long d = (w / 1000) % 10;\n            Long e\
    \ = (w / 10000) % 10;\n            Long f = (w / 100000) % 10;\n            Long\
    \ g = (w / 1000000) % 10;\n            Long h = (w / 10000000) % 10;\n       \
    \     Long j = (w / 100000000) % 10;\n            Long k = (w / 1000000000) %\
    \ 10;\n            Long l = (w / 10000000000l) % 10;\n            Long m = (w\
    \ / 100000000000l) % 10;\n            Long n = (w / 1000000000000l) % 10;\n  \
    \          Long o = (w / 10000000000000l) % 10;\n            Long p = (w / 100000000000000l)\
    \ % 10;\n            Long q = (w / 1000000000000000l) % 10;\n            Long\
    \ r = (w / 10000000000000000l) % 10;\n            Long s = (w / 100000000000000000l)\
    \ % 10;\n            Long t = (w / 1000000000000000000l) % 10;\n            Long\
    \ u = (w / 10000000000000000000l) % 10;\n            Long v = (w / 100000000000000000000l)\
    \ % 10;\n            Long at = (w / 1000000000000000000000l) % 10;\n         \
    \   Long bt = (w / 10000000000000000000000l) % 10;\n            Long ct = (w /\
    \ 100000000000000000000000l) % 10;\n            Long dt = (w / 1000000000000000000000000l)\
    \ % 10;\n            Long et = (w / 10000000000000000000000000l) % 10;\n     \
    \       Long ft = (w / 100000000000000000000000000l) % 10;\n            Long gt\
    \ = (w / 1000000000000000000000000000l) % 10;\n            Long ht = (w / 10000000000000000000000000000l)\
    \ % 10;\n            Long jt = (w / 100000000000000000000000000000l) % 10;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2lekmi3n.java:41: error: integer number too large\n           \
    \ Long u = (w / 10000000000000000000l) % 10;\n                          ^\n/tmp/tmp2lekmi3n.java:42:\
    \ error: integer number too large\n            Long v = (w / 100000000000000000000l)\
    \ % 10;\n                          ^\n/tmp/tmp2lekmi3n.java:43: error: integer\
    \ number too large\n            Long at = (w / 1000000000000000000000l) % 10;\n\
    \                           ^\n/tmp/tmp2lekmi3n.java:44: error: integer number\
    \ too large\n            Long bt = (w / 10000000000000000000000l) % 10;\n    \
    \                       ^\n/tmp/tmp2lekmi3n.java:45: error: integer number too\
    \ large\n            Long ct = (w / 100000000000000000000000l) % 10;\n       \
    \                    ^\n/tmp/tmp2lekmi3n.java:46: error: integer number too large\n\
    \            Long dt = (w / 1000000000000000000000000l) % 10;\n              \
    \             ^\n/tmp/tmp2lekmi3n.java:47: error: integer number too large\n \
    \           Long et = (w / 10000000000000000000000000l) % 10;\n              \
    \             ^\n/tmp/tmp2lekmi3n.java:48: error: integer number too large\n \
    \           Long ft = (w / 100000000000000000000000000l) % 10;\n             \
    \              ^\n/tmp/tmp2lekmi3n.java:49: error: integer number too large\n\
    \            Long gt = (w / 1000000000000000000000000000l) % 10;\n           \
    \                ^\n/tmp/tmp2lekmi3n.java:50: error: integer number too large\n\
    \            Long ht = (w / 10000000000000000000000000000l) % 10;\n          \
    \                 ^\n/tmp/tmp2lekmi3n.java:51: error: integer number too large\n\
    \            Long jt = (w / 100000000000000000000000000000l) % 10;\n         \
    \                  ^\n/tmp/tmp2lekmi3n.java:54: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n12 errors\n"
  stdout: ''
  timestamp: 1660010766
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here.\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp14bz6jpo.java:22)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           String s = Long.toString(i);\n            if (s.indexOf('2') == -1\
    \ && s.indexOf('4') == -1 && s.indexOf('6') == -1 && s.indexOf('8') == -1) {\n\
    \                ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyq3aqxf4.java:30)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> r = new ArrayList<Long>();\n        for (Long xi : x) {\n  \
    \          Boolean is_prime = true;\n            for (Long xj : x) {\n       \
    \         if (xi != xj && xi % xj == 0) {\n                    is_prime = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (is_prime) {\n                r.add(xi);\n            }\n        }\n       \
    \ Collections.sort(r);\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3kukbdqh.java:35)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here.\n        return x;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvk6w0nk6.java:22)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Type your code here\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpntt_u6md.java:22)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (long num : x)\
    \ {\n            String numString = String.valueOf(num);\n            boolean\
    \ hasEvenDigit = false;\n            for (int i = 0; i < numString.length(); i++)\
    \ {\n                if (Integer.parseInt(numString.substring(i, i + 1)) % 2 ==\
    \ 0) {\n                    hasEvenDigit = true;\n                    break;\n\
    \                }\n            }\n            if (!hasEvenDigit) {\n        \
    \        result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (!hasEvenDigit(i)) {\n                y.add(i);\n            }\n\
    \        }\n        y.sort(null);\n        return y;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpynwpwckt.java:20: error: cannot find symbol\n            if (!hasEvenDigit(i))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        ArrayList<Long> res2 =\
    \ new ArrayList<Long>();\n        for (int i = 0; i < x.size(); i++) {\n     \
    \       String s = x.get(i).toString();\n            String[] arr = s.split(\"\
    \");\n            boolean hasEven = false;\n            for (int j = 0; j < arr.length;\
    \ j++) {\n                if (Integer.parseInt(arr[j]) % 2 == 0) {\n         \
    \           hasEven = true;\n                    break;\n                }\n \
    \           }\n            if (!hasEven) {\n                res.add(x.get(i));\n\
    \            }\n        }\n        for (int i = 0; i < res.size(); i++) {\n  \
    \          res2.add(res.get(i));\n        }\n        res2.sort(Comparator.naturalOrder());\n\
    \        return res2;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (long l : x) {\n \
    \           if (isUniqueDigits(l)) {\n                res.add(l);\n          \
    \  }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprt8s4yom.java:20: error: cannot find symbol\n            if (isUniqueDigits(l))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // fill here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpp2lwid4c.java:22)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> p = new ArrayList<Long>();\n        for (Long y : x) {\n   \
    \         if (digitIsUnique(y)) {\n                p.add(y);\n            }\n\
    \        }\n        Collections.sort(p);\n        return p;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp20e3bh7r.java:20: error: cannot find symbol\n            if (digitIsUnique(y))\
    \ {\n                ^\n  symbol:   method digitIsUnique(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        boolean flag = true;\n\
    \        for (Long val : x) {\n            flag = true;\n            while (val\
    \ > 0) {\n                Long rem = val % 10;\n                if (rem % 2 ==\
    \ 0) {\n                    flag = false;\n                    break;\n      \
    \          }\n                val = val / 10;\n            }\n            if (flag)\
    \ {\n                result.add(val);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsdlcab9.java:38)\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        ArrayList<Long> res1 =\
    \ new ArrayList<Long>();\n        for (Long i : x) {\n            Long a = i;\n\
    \            int digit = 0;\n            int even = 0;\n            while (a !=\
    \ 0) {\n                digit = (int) (a % 10);\n                if (digit % 2\
    \ == 0) {\n                    even = 1;\n                    break;\n       \
    \         }\n                a = a / 10;\n            }\n            if (even\
    \ == 0) {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (int i = 0; i < x.size(); i++) {\n            if (hasEvenDigit(x.get(i)))\
    \ {\n                continue;\n            }\n            result.add(x.get(i));\n\
    \        }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp98b65swu.java:23: error: cannot find symbol\n            if (hasEvenDigit(x.get(i)))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            long c = x.get(i);\n            if (c < 10 && c % 2 != 0)\
    \ {\n                a.add(c);\n            } else if (c >= 10 && c < 100 && c\
    \ % 2 != 0) {\n                a.add(c);\n            } else if (c >= 100 && c\
    \ < 1000 && c % 2 != 0) {\n                a.add(c);\n            } else if (c\
    \ >= 1000 && c < 10000 && c % 2 != 0) {\n                a.add(c);\n         \
    \   } else if (c >= 10000 && c < 100000 && c % 2 != 0) {\n                a.add(c);\n\
    \            } else if (c >= 100000 && c < 1000000 && c % 2 != 0) {\n        \
    \        a.add(c);\n            } else if (c >= 1000000 && c < 10000000 && c %\
    \ 2 != 0) {\n                a.add(c);\n            } else if (c >= 10000000 &&\
    \ c < 100000000 && c % 2 != 0) {\n                a.add(c);\n            } else\
    \ if (c >= 100000000 && c < 1000000000 && c % 2 != 0) {\n                a.add(c);\n\
    \            } else if (c >= 1000000000 && c < 10000000000l && c % 2 != 0) {\n\
    \                a.add(c);\n            } else if (c >= 10000000000l && c < 100000000000l\
    \ && c % 2 != 0) {\n                a.add(c);\n            } else if (c >= 100000000000l\
    \ && c < 1000000000000l && c % 2 != 0) {\n                a.add(c);\n        \
    \    } else if (c >= 1000000000000l && c < 10000000000000l && c % 2 != 0) {\n\
    \                a.add(c);\n            } else if (c >= 10000000000000l && c <\
    \ 100000000000000l && c % 2 != 0) {\n                a.add(c);\n            }\
    \ else if (c >= 100000000000000l && c < 1000000000000000l && c % 2 != 0) {\n \
    \               a.add\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpygkdinpo.java:50: error: not a statement\n                a.add\n\
    \                 ^\n/tmp/tmpygkdinpo.java:50: error: ';' expected\n         \
    \       a.add\n                     ^\n/tmp/tmpygkdinpo.java:52: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  stdout: ''
  timestamp: 1660010767
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        Iterator<Long> it = x.iterator();\n\
    \        while (it.hasNext()) {\n            Long num = it.next();\n         \
    \   if (num % 2 == 0) {\n                continue;\n            }\n          \
    \  Long temp = num;\n            while (temp > 0) {\n                if (temp\
    \ % 10 % 2 == 0) {\n                    break;\n                }\n          \
    \      temp /= 10;\n            }\n            if (temp == 0) {\n            \
    \    y.add(num);\n            }\n        }\n        Collections.sort(y);\n   \
    \     return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010768
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         boolean flag = true;\n            Long num = i;\n            while (num\
    \ > 0) {\n                Long div = num % 10;\n                if (div % 2 ==\
    \ 0) {\n                    flag = false;\n                    break;\n      \
    \          }\n                num = num / 10;\n            }\n            if (flag)\
    \ {\n                a.add(i);\n            }\n        }\n        Collections.sort(a);\n\
    \        return a;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> a = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            String y = String.valueOf(x.get(i));\n            String[]\
    \ b = y.split(\"\");\n            boolean t = true;\n            for (int j =\
    \ 0; j < b.length; j++) {\n                if (Integer.parseInt(b[j]) % 2 == 0)\
    \ {\n                    t = false;\n                }\n            }\n      \
    \      if (t) {\n                a.add(x.get(i));\n            }\n        }\n\
    \        return a;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjqndylsq.java:35)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> o = new ArrayList<Long>();\n        for (long i : x) {\n   \
    \         String s = String.valueOf(i);\n            if (s.contains(\"2\") ||\
    \ s.contains(\"4\") || s.contains(\"6\") || s.contains(\"8\") || s.contains(\"\
    0\"))\n                continue;\n            o.add(i);\n        }\n        o.sort(Comparator.naturalOrder());\n\
    \        return o;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (hasOnlyUniqueDigits(i)) {\n                res.add(i);\n     \
    \       }\n        }\n        Collections.sort(res);\n        return res;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3fxuoquv.java:20: error: cannot find symbol\n            if (hasOnlyUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasOnlyUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ long evenDigits = 2l;\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (long element : x) {\n            long temp = element;\n        \
    \    boolean hasEvenDigit = false;\n            while (temp > 0) {\n         \
    \       if (temp % 10 == evenDigits) {\n                    hasEvenDigit = true;\n\
    \                    break;\n                }\n                temp /= 10;\n\
    \            }\n            if (!hasEvenDigit) {\n                result.add(element);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjabf6xu1.java:39)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return uniqueDigits_soln2(x);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk97tcy59.java:18: error: cannot find symbol\n        return uniqueDigits_soln2(x);\n\
    \               ^\n  symbol:   method uniqueDigits_soln2(ArrayList<Long>)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long e : x) {\n \
    \           if (!hasEvenDigit(e)) {\n                ans.add(e);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnvmf5vcg.java:20: error: cannot find symbol\n            if (!hasEvenDigit(e))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Start typing your Java solution below\n        // DO NOT write main() function\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (long num\
    \ : x) {\n            if (num < 10) {\n                result.add(num);\n    \
    \        } else {\n                String numString = String.valueOf(num);\n \
    \               for (int i = 0; i < numString.length(); i++) {\n             \
    \       int digit = Integer.parseInt(String.valueOf(numString.charAt(i)));\n \
    \                   if (digit % 2 == 0) {\n                        break;\n  \
    \                  }\n                    if (i == numString.length() - 1) {\n\
    \                        result.add(num);\n                    }\n           \
    \     }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptrla1lb4.java:40)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (long y : x) {\n \
    \           if (y > 9) {\n                boolean isUnique = true;\n         \
    \       while (y > 0) {\n                    if ((y % 10) % 2 == 0) {\n      \
    \                  isUnique = false;\n                        break;\n       \
    \             }\n                    y /= 10;\n                }\n           \
    \     if (isUnique) {\n                    ret.add(y);\n                }\n  \
    \          } else {\n                ret.add(y);\n            }\n        }\n \
    \       Collections.sort(ret);\n        return ret;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7talfpsd.java:40)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ HashSet<Long> answer = new HashSet<Long>();\n        for (Long num : x) {\n\
    \            if (!hasEvenDigit(num)) {\n                answer.add(num);\n   \
    \         }\n        }\n        ArrayList<Long> sorted = new ArrayList<Long>(answer);\n\
    \        Collections.sort(sorted);\n        return sorted;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg8_9s434.java:20: error: cannot find symbol\n            if (!hasEvenDigit(num))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long y : x) {\n \
    \           if (!y.toString().matches(\".*[0,2,4,6,8].*\")) {\n              \
    \  ret.add(y);\n            }\n        }\n        Collections.sort(ret);\n   \
    \     return ret;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> z = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         boolean hasEvenDigit = false;\n            for (Long j : x) {\n    \
    \            if (j % 2 == 0) {\n                    hasEvenDigit = true;\n   \
    \                 break;\n                }\n            }\n            if (!hasEvenDigit)\
    \ {\n                z.add(i);\n            }\n        }\n        Collections.sort(z);\n\
    \        return z;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61ffwdxf.java:35)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long x0 : x) {\n\
    \            if (!(x0.toString().contains(\"2\") || x0.toString().contains(\"\
    4\") || x0.toString().contains(\"6\") || x0.toString().contains(\"8\"))) {\n \
    \               ret.add(x0);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwyw06xln.java:29)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long item : x)\
    \ {\n            if (is_unique(item)) {\n                result.add(item);\n \
    \           }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvu6ww8a_.java:20: error: cannot find symbol\n            if (is_unique(item))\
    \ {\n                ^\n  symbol:   method is_unique(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (!(i.toString().contains(\"2\") || i.toString().contains(\"4\"\
    ) || i.toString().contains(\"6\") || i.toString().contains(\"8\"))) {\n      \
    \          result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcj52c729.java:29)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> retval = new ArrayList<Long>();\n        Iterator<Long> it =\
    \ x.iterator();\n        Long curr;\n        boolean found;\n        while (it.hasNext())\
    \ {\n            curr = it.next();\n            found = false;\n            while\
    \ (curr > 0) {\n                if (curr % 2 == 0) {\n                    found\
    \ = true;\n                    break;\n                }\n                curr\
    \ /= 10;\n            }\n            if (!found) {\n                retval.add(curr);\n\
    \            }\n        }\n        Collections.sort(retval);\n        return retval;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphz6s3ny8.java:40)\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long e : x) {\n\
    \            if (e % 2 != 0) {\n                result.add(e);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4brh6kmh.java:27)\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> !i.toString().matches(\".*[24680]\")).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4euph0_e.java:22)\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> al = new ArrayList<Long>();\n        for (Long n : x) {\n  \
    \          // Check for even digit using modulo.\n            if (n % 2 == 0)\
    \ {\n                continue;\n            }\n            al.add(n);\n      \
    \  }\n        Collections.sort(al);\n        return al;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyfqrutu.java:31)\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().replaceAll(\"[0-9]*[02468]\", \"\").length() == i.toString().length())\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010769
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueDigits = new ArrayList<Long>();\n        for (Long value\
    \ : x) {\n            if (!hasEvenDigit(value)) {\n                uniqueDigits.add(value);\n\
    \            }\n        }\n        Collections.sort(uniqueDigits);\n        return\
    \ uniqueDigits;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe5k5k810.java:20: error: cannot find symbol\n            if (!hasEvenDigit(value))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010768
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (i.toString().matches(\"^[0-9]*[13579]+[0-9]*$\")) {\n          \
    \      y.add(i);\n            }\n        }\n        return y;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdtwdgzld.java:27)\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().contains(\"2\") || i.toString().contains(\"4\")\
    \ || i.toString().contains(\"6\") || i.toString().contains(\"8\") || i.toString().contains(\"\
    0\")) {\n                continue;\n            }\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010769
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // write your code here.\n        ArrayList<Long> array1 = new ArrayList<Long>();\n\
    \        for(Long i : x){\n            if(isOddDigit(i)){\n                array1.add(i);\n\
    \            }\n        }\n        Collections.sort(array1);\n        return array1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ihbgstf.java:21: error: cannot find symbol\n            if(isOddDigit(i)){\n\
    \               ^\n  symbol:   method isOddDigit(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpmdkq_bdy.java:22)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // your code\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgew85m4k.java:22)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ /////\n        // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l)))\n        // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l)))\n        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            if (unique(x.get(i)))\
    \ {\n                res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvlh1xzwa.java:23: error: cannot find symbol\n            if (unique(x.get(i)))\
    \ {\n                ^\n  symbol:   method unique(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> list = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++){\n            boolean flag = true;\n            Long num = x.get(i);\n\
    \            while (num > 0){\n                if ((num % 10) % 2 == 0){\n   \
    \                 flag = false;\n                    break;\n                }\n\
    \                num /= 10;\n            }\n            if (flag){\n         \
    \       list.add(x.get(i));\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long num : x) {\n\
    \            if (Integer.toString(num.intValue()).chars().map(c -> c - '0').filter(d\
    \ -> d % 2 == 0).count() == 0) {\n                res.add(num);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> al = new ArrayList<Long>();\n        for (Long l : x) {\n  \
    \          if (!hasEvenDigit(l)) {\n                al.add(l);\n            }\n\
    \        }\n        al.sort(null);\n        return al;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv4159hpk.java:20: error: cannot find symbol\n            if (!hasEvenDigit(l))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010769
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> Long.toString(i).chars().allMatch(j -> (j - '0')\
    \ % 2 != 0)).sorted().collect(Collectors.toCollection(ArrayList::new));\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         String xstr = String.valueOf(i);\n            Boolean xHasEven = false;\n\
    \            for (int c = 0; c < xstr.length(); c++) {\n                if (Integer.parseInt(xstr.substring(c,\
    \ c + 1)) % 2 == 0) {\n                    xHasEven = true;\n                \
    \    break;\n                }\n            }\n            if (!xHasEven) {\n\
    \                y.add(i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> r = new ArrayList<Long>();\n        for (Long e : x) {\n   \
    \         ArrayList<Long> digits = new ArrayList<Long>();\n            long x0\
    \ = e;\n            while (x0 > 0) {\n                digits.add(x0 % 10);\n \
    \               x0 /= 10;\n            }\n            Collections.reverse(digits);\n\
    \            boolean isEven = false;\n            for (Long e0 : digits) {\n \
    \               if (e0 % 2 == 0) {\n                    isEven = true;\n     \
    \               break;\n                }\n            }\n            if (!isEven)\
    \ {\n                r.add(e);\n            }\n        }\n        Collections.sort(r);\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (Stream.of(i.toString().split(\"\")).anyMatch((it) -> it.equals(\"\
    2\") || it.equals(\"4\") || it.equals(\"6\") || it.equals(\"8\") || it.equals(\"\
    0\"))) {\n                continue;\n            }\n            res.add(i);\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprz98bduk.java:28)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ for (int i = 0; i < x.size(); i++) {\n            if (String.valueOf(x.get(i)).contains(\"\
    2\") || String.valueOf(x.get(i)).contains(\"4\") || String.valueOf(x.get(i)).contains(\"\
    6\") || String.valueOf(x.get(i)).contains(\"8\")) {\n                x.remove(i);\n\
    \                i--;\n            }\n        }\n        Collections.sort(x);\n\
    \        return x;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0f5mgw0w.java:29)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ throw new RuntimeException(\"Problem.uniqueDigits is not implemented\");\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Problem.uniqueDigits\
    \ is not implemented\n\tat Problem.uniqueDigits(tmpay9y9tiz.java:18)\n\tat Problem.main(tmpay9y9tiz.java:21)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> c = new ArrayList<Long>();\n        for (int i = 0; i < x.size();\
    \ i++) {\n            if (uniqueDigits2(x.get(i))) {\n                c.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(c);\n        return c;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_x1pnh0x.java:20: error: cannot find symbol\n            if (uniqueDigits2(x.get(i)))\
    \ {\n                ^\n  symbol:   method uniqueDigits2(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> output = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (!Long.toString(i).matches(\".*[2468].*\")) {\n              \
    \  output.add(i);\n            }\n        }\n        Collections.sort(output);\n\
    \        return output;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9vec_wx.java:29)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (long num : x)\
    \ {\n            String s = String.valueOf(num);\n            boolean evenDigit\
    \ = false;\n            for (int i = 0; i < s.length(); i++) {\n             \
    \   if (Integer.parseInt(String.valueOf(s.charAt(i))) % 2 == 0) {\n          \
    \          evenDigit = true;\n                    break;\n                }\n\
    \            }\n            if (!evenDigit) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return uniqueDigits_2(x);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ep364tq.java:18: error: cannot find symbol\n        return uniqueDigits_2(x);\n\
    \               ^\n  symbol:   method uniqueDigits_2(ArrayList<Long>)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> uniqueDigits_x = new ArrayList<Long>();\n        for (Long x_i\
    \ : x) {\n            boolean uniqueDigits_x_i = true;\n            while (x_i\
    \ > 0) {\n                int digit = (int)(x_i % 10);\n                if (digit\
    \ % 2 == 0) {\n                    uniqueDigits_x_i = false;\n               \
    \     break;\n                }\n                x_i = x_i / 10;\n           \
    \ }\n            if (uniqueDigits_x_i) {\n                uniqueDigits_x.add(x_i);\n\
    \            }\n        }\n        Collections.sort(uniqueDigits_x);\n       \
    \ return uniqueDigits_x;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpye9o5x27.java:37)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(num -> (num.toString().chars().anyMatch(digit -> digit\
    \ % 2 == 1))).sorted().collect(Collectors.toCollection(ArrayList::new));\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghuw58u0.java:21)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> oddDigits = new ArrayList<Long>();\n        for (Long longValue\
    \ : x) {\n            boolean hasEvenDigit = false;\n            for (char charValue\
    \ : longValue.toString().toCharArray()) {\n                if ((int)charValue\
    \ % 2 == 0) {\n                    hasEvenDigit = true;\n                    break;\n\
    \                }\n            }\n            if (!hasEvenDigit) {\n        \
    \        oddDigits.add(longValue);\n            }\n        }\n        Collections.sort(oddDigits);\n\
    \        return oddDigits;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> out = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (isUniqueDigits(i)) {\n                out.add(i);\n          \
    \  }\n        }\n        Collections.sort(out);\n        return out;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfmc90t0s.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpg3w3ewar.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_cdy0_9.java:21)\n"
  stdout: ''
  timestamp: 1660010760
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // REPLACE WITH YOUR CODE\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp8u2gqrcf.java:22)\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // remove all even elements.\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long item : x) {\n            boolean result2 = checkOddDigits(item);\n\
    \            if (result2) {\n                result.add(item);\n            }\n\
    \        }\n        // sort the array.\n        Collections.sort(result);\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuikpby9h.java:21: error: cannot find symbol\n            boolean\
    \ result2 = checkOddDigits(item);\n                              ^\n  symbol:\
    \   method checkOddDigits(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n\tif (x.isEmpty())\
    \ return new ArrayList<Long>();\n\treturn uniqueDigits(x, 0, 0);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwk98i9rm.java:19: error: method uniqueDigits in class Problem cannot\
    \ be applied to given types;\n\treturn uniqueDigits(x, 0, 0);\n\t       ^\n  required:\
    \ ArrayList<Long>\n  found:    ArrayList<Long>,int,int\n  reason: actual and formal\
    \ argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660010770
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> unique = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            String s = i.toString();\n            Boolean hasEven = false;\n\
    \            for (int j = 0; j < s.length(); j++) {\n                if (Integer.parseInt(s.substring(j,\
    \ j + 1)) % 2 == 0) {\n                    hasEven = true;\n                 \
    \   break;\n                }\n            }\n            if (!hasEven) {\n  \
    \              unique.add(i);\n            }\n        }\n        Collections.sort(unique);\n\
    \        return unique;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010770
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of positive integers x. return\
    \ a sorted array list of all \n    // elements that hasn't any even digit.\n \
    \   // Note: Returned array list should be sorted in increasing order.\n    //\
    \ For example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> i.toString().chars().map(d -> Integer.parseInt(Character.toString((char)d))).allMatch(d\
    \ -> d % 2 != 0)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010771

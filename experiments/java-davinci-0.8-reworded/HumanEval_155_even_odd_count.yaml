name: HumanEval_155_even_odd_count
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an integer. return a pair that has the number of even\
  \ and odd digits respectively.\n    // Example:\n    // >>> evenOddCount((-12l))\n\
  \    // (Pair.with(1l, 1l))\n    // >>> evenOddCount((123l))\n    // (Pair.with(1l,\
  \ 2l))\n    public static Pair<Long, Long> evenOddCount(long num) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(evenOddCount((7l)).equals((Pair.with(0l,\
  \ 1l))));\n    assert(evenOddCount((-78l)).equals((Pair.with(1l, 1l))));\n    assert(evenOddCount((3452l)).equals((Pair.with(2l,\
  \ 2l))));\n    assert(evenOddCount((346211l)).equals((Pair.with(3l, 3l))));\n  \
  \  assert(evenOddCount((-345821l)).equals((Pair.with(3l, 3l))));\n    assert(evenOddCount((-2l)).equals((Pair.with(1l,\
  \ 0l))));\n    assert(evenOddCount((-45347l)).equals((Pair.with(2l, 3l))));\n  \
  \  assert(evenOddCount((0l)).equals((Pair.with(1l, 0l))));\n    }\n\n}\n"
completions: ['        return null;', "        // <<<INSERT_CODE_HERE>>>\n       \
    \ return null;", '        return null;', "        if (num == 0) {\n          \
    \  return Pair.with(1l, 0l);\n        } else if (num < 0) {\n            num =\
    \ -num;\n        }\n        long oddCount = 0;\n        long evenCount = 0;\n\
    \        while (num > 0) {\n            long digit = num % 10;\n            if\
    \ (digit % 2 == 0) {\n                evenCount += 1;\n            } else {\n\
    \                oddCount += 1;\n            }\n            num /= 10;\n     \
    \   }\n        return Pair.with(evenCount, oddCount);", "        long odd = 0;\n\
    \        long even = 0;\n        for (int i = 0; i < String.valueOf(num).length();\
    \ i++) {\n            if (String.valueOf(num).charAt(i) % 2 == 0)\n          \
    \      even++;\n            else\n                odd++;\n        }\n        return\
    \ Pair.with(even, odd);", "        long evens = 0;\n        long odds = 0;\n \
    \       String numString = String.valueOf(num);\n        String[] digits = numString.split(\"\
    \");\n        List<String> list = Arrays.asList(digits);\n        for (String\
    \ s : list) {\n            if (s.equals(\"-\")) {\n                continue;\n\
    \            }\n            long number = Long.parseLong(s);\n            if (number\
    \ % 2 == 0) {\n                evens++;\n            } else {\n              \
    \  odds++;\n            }\n        }\n        return Pair.with(evens, odds);",
  '        throw new UnsupportedOperationException("Remove this line and replace with
    your implementation.");', "        // your code here\n        return null;", " \
    \       long oddCount = 0;\n        long evenCount = 0;\n        long absoluteNum\
    \ = Math.abs(num);\n        while (absoluteNum > 0) {\n            long digit\
    \ = absoluteNum % 10;\n            if (digit % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  absoluteNum /= 10;\n        }\n        return Pair.with(evenCount, oddCount);",
  "        // Start coding from here.\n        long evenDigits = num < 0 ? \n    \
    \        Math.abs(num) : num;\n        long oddDigits = num < 0 ? \n         \
    \   Math.abs(num) : num;\n        long evenCount = 0;\n        long oddCount =\
    \ 0;\n        while (evenDigits > 0) {\n            evenCount += evenDigits %\
    \ 2 == 0 ? 1 : 0;\n            evenDigits /= 10;\n        }\n        while (oddDigits\
    \ > 0) {\n            oddCount += oddDigits % 2 == 1 ? 1 : 0;\n            oddDigits\
    \ /= 10;\n        }\n        return Pair.with(evenCount, oddCount);", "      \
    \  // write your code here.\n        return null;", '        return null;', '        throw
    new UnsupportedOperationException("Not implemented.");', '        return null;',
  "        long even = 0, odd = 0;\n        for (char digit : Long.toString(num).toCharArray())\
    \ {\n            if (Character.getNumericValue(digit) % 2 == 0) {\n          \
    \      even++;\n            } else {\n                odd++;\n            }\n\
    \        }\n        return Pair.with(even, odd);", "        Pair<Long, Long> solution\
    \ = Pair.with(0l, 0l);\n        String numString = String.valueOf(num);\n    \
    \    for (int i = 0; i < numString.length(); i++) {\n            int digit = Integer.parseInt(String.valueOf(numString.charAt(i)));\n\
    \            if (digit % 2 == 0) {\n                solution = solution.setAt0(solution.getValue0()\
    \ + 1);\n            } else {\n                solution = solution.setAt1(solution.getValue1()\
    \ + 1);\n            }\n        }\n        return solution;", '        throw new
    RuntimeException("Not implemented yet.");', "        // Check the digit pairs\
    \ of the input number, and increment the respective odd or even counter.\n   \
    \     // We do this by diving the number by 10, to remove the least significant\
    \ bit. We then modulo divide the result by 10 to get the last digit.\n       \
    \ // Once the number is 0, we return the results as a tuple.\n        long even\
    \ = 0, odd = 0;\n        while (num != 0) {\n            long lastDigit = num\
    \ % 10;\n            if (lastDigit % 2 == 0) {\n                even++;\n    \
    \        } else {\n                odd++;\n            }\n            num /= 10;\n\
    \        }\n        return Pair.with(even, odd);", '        return null;', " \
    \       // int sum even, odd\n        int evenSum = 0;\n        int oddSum = 0;\n\
    \        // find abs(num)\n        long numAbs = num;\n        if (num < 0) {\n\
    \            numAbs = -num;\n        }\n        // for each digit of numAbs\n\
    \        while (numAbs > 0) {\n            // get digit\n            long digit\
    \ = numAbs % 10;\n            // update evenSum or oddSum\n            if (digit\
    \ % 2 == 0) {\n                evenSum += 1;\n            } else {\n         \
    \       oddSum += 1;\n            }\n            // shift numAbs to the right\n\
    \            numAbs /= 10;\n        }\n        // return pair of evenSum and oddSum\n\
    \        return Pair.with(evenSum, oddSum);", "      long oddCount = 0;\n    \
    \  long evenCount = 0;\n      while (num != 0) {\n        if (num % 2 == 0) {\n\
    \          evenCount++;\n        } else {\n          oddCount++;\n        }\n\
    \        num /= 10;\n      }\n      return Pair.with(evenCount, oddCount);", " \
    \       long odd = 0;\n        long even = 0;\n        while (num != 0) {\n  \
    \          if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 10;\n        }\n  \
    \      return Pair.with(even, odd);", "        // For example, 1234, becomes\n\
    \        // 1. 123, and 4\n        // 2. 12, and 3\n        // 3. 1, and 2\n \
    \       // 4. 0, and 1\n        int numOfDigits = (int) Math.log10(num) + 1;\n\
    \        int evenDigits = 0;\n        int oddDigits = 0;\n        long digit;\n\
    \        for (int i = 0; i < numOfDigits; i++) {\n            digit = num % 10;\n\
    \            if (digit % 2 == 0) {\n                evenDigits++;\n          \
    \  } else {\n                oddDigits++;\n            }\n            num /= 10;\n\
    \        }\n        return Pair.with((long) evenDigits, (long) oddDigits);", '        return
    Pair.with(1l, 2l);', '        throw new UnsupportedOperationException("Problem");',
  "        long odd = 0;\n        long even = 0;\n        while (num != 0) {\n   \
    \         long digit = num % 10;\n            if (digit % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 10;\n        }\n        return Pair.with(even, odd);", " \
    \       long evenCount = 0;\n        long oddCount = 0;\n        long tempNum\
    \ = num;\n        while (tempNum != 0) {\n            if (tempNum % 2 == 0) {\n\
    \                evenCount += 1;\n            } else {\n                oddCount\
    \ += 1;\n            }\n            tempNum /= 10;\n        }\n        return\
    \ Pair.with(evenCount, oddCount);", '        return null;', "        long odd\
    \ = 0;\n        long even = 0;\n        for (; num != 0; num /= 10) {\n      \
    \      if (num % 2 == 0) {\n                even += 1;\n            } else {\n\
    \                odd += 1;\n            }\n        }\n        return Pair.with(even,\
    \ odd);", "        long evenCount = 0;\n        long oddCount = 0;\n        long\
    \ absNum = Math.abs(num);\n        while (absNum > 0) {\n            if (absNum\
    \ % 2 == 0) {\n                evenCount++;\n            } else {\n          \
    \      oddCount++;\n            }\n            absNum /= 10;\n        }\n    \
    \    return Pair.with(evenCount, oddCount);", '        throw new RuntimeException("Not
    implemented");', "        String s = String.valueOf(num);\n        int evenCount\
    \ = 0;\n        int oddCount = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            int digit = s.charAt(i) - '0';\n            if (digit % 2 ==\
    \ 0) {\n                evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n        }\n        return Pair.with(Long.valueOf(evenCount), Long.valueOf(oddCount));",
  "        long even = 0;\n        long odd = 0;\n        while (num != 0) {\n   \
    \         if (num % 2 == 0) {\n                even += 1;\n            } else\
    \ {\n                odd += 1;\n            }\n            num /= 10;\n      \
    \  }\n        return Pair.with(even, odd);", "        long even = 0l;\n      \
    \  long odd = 0l;\n        long num2 = num;\n        while (num2 != 0) {\n   \
    \         long temp = num2 % 10;\n            if (temp % 2 == 0) {\n         \
    \       even++;\n            } else {\n                odd++;\n            }\n\
    \            num2 = num2 / 10;\n        }\n        return Pair.with(even, odd);",
  "        long even = 0;\n        long odd = 0;\n        String[] nums = Long.toString(num).split(\"\
    \");\n        for (String i : nums) {\n            if (Integer.parseInt(i) % 2\
    \ == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n        }\n        return Pair.with(even, odd);", "        String\
    \ numbers = String.valueOf(num);\n        long oddCount = 0;\n        long evenCount\
    \ = 0;\n        for (int i = 0; i < numbers.length(); i++) {\n            long\
    \ digit = numbers.charAt(i) - '0';\n            if (digit % 2 == 0) {\n      \
    \          evenCount++;\n            } else {\n                oddCount++;\n \
    \           }\n        }\n        return Pair.with(evenCount, oddCount);", " \
    \       // CODE HERE\n        return Pair.with(0l, 0l);", "        // Fill in\
    \ your code here.\n        return null;", "        long even = 0;\n        long\
    \ odd = 0;\n        String numString = String.valueOf(num);\n        for (int\
    \ i = 0; i < numString.length(); i++) {\n            String digit = numString.substring(i,\
    \ i + 1);\n            if (digit.equals(\"-\") == false) {\n                if\
    \ (Integer.parseInt(digit) % 2 == 0) {\n                    even++;\n        \
    \        } else {\n                    odd++;\n                }\n           \
    \ }\n        }\n        return Pair.with(even, odd);", "        //implement the\
    \ body of this method\n        return null;", "        long even = num < 0 ? 1\
    \ : 0;\n        long odd = 0;\n        num = Math.abs(num);\n        for (; num\
    \ > 0; num /= 10) {\n            if ((num % 10) % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n        }\n    \
    \    return Pair.with(even, odd);", '        throw new UnsupportedOperationException("Not
    yet implemented.");', "        // Write your code here.\n        throw new UnsupportedOperationException(\"\
    Oops. Not implemented.\");", "        String numString = Long.toString(num);\n\
    \        long evenCount = 0;\n        long oddCount = 0;\n        for (int i =\
    \ 0; i < numString.length(); i++) {\n            char ch = numString.charAt(i);\n\
    \            int number = Character.getNumericValue(ch);\n            if (number\
    \ % 2 == 0) {\n                evenCount++;\n            } else {\n          \
    \      oddCount++;\n            }\n        }\n        return Pair.with(evenCount,\
    \ oddCount);", '        return null;', "        // TODO: implement me\n      \
    \  return null;", "        if (num == 0) return Pair.with(1l, 0l);\n        String\
    \ str = String.valueOf(num);\n        int evens = 0;\n        int odds = 0;\n\
    \        for (int i = 0; i < str.length(); i++) {\n            if (str.charAt(i)\
    \ == '-') continue;\n            if (str.charAt(i) % 2 == 0) evens++;\n      \
    \      else odds++;\n        }\n        return Pair.with((long) evens, (long)\
    \ odds);", '        return null;', "        // Fill in your code here\n      \
    \  long even = 0;\n        long odd = 0;\n        boolean isNegative = false;\n\
    \        if (num < 0) {\n            isNegative = true;\n            num = num\
    \ * -1;\n        }\n        while (num > 0) {\n            if (num % 2 == 0)\n\
    \                even += 1;\n            else\n                odd += 1;\n   \
    \         num = num / 10;\n        }\n        if (isNegative)\n            odd\
    \ += 1;\n        return Pair.with(even, odd);", "        int odd = 0;\n      \
    \  int even = 0;\n        for (long i=num; i>0; i /= 10) {\n            if (i\
    \ % 2 == 0) {\n                even += 1;\n            } else {\n            \
    \    odd += 1;\n            }\n        }\n        return Pair.with(even, odd);",
  '        return Pair.with(1l, 1l);', '        // Fill in your code here', "    \
    \    long evenCount = 0, oddCount = 0;\n        String number = String.valueOf(num);\n\
    \        if (num >= 0) {\n            for (int i = 0; i < number.length(); i++)\
    \ {\n                if (number.charAt(i) % 2 == 0) {\n                    evenCount++;\n\
    \                } else {\n                    oddCount++;\n                }\n\
    \            }\n        } else {\n            number = number.substring(1);\n\
    \            for (int i = 0; i < number.length(); i++) {\n                if (number.charAt(i)\
    \ % 2 == 0) {\n                    evenCount++;\n                } else {\n  \
    \                  oddCount++;\n                }\n            }\n        }\n\
    \        return Pair.with(evenCount, oddCount);", "        // \u2193\u2193\u2193\
    \u2193 your code goes here \u2193\u2193\u2193\u2193\n        long even = 0;\n\
    \        long odd = 0;\n        if (num < 0) {\n            num = -num;\n    \
    \    }\n        while (num > 0) {\n            long digit = num % 10;\n      \
    \      if (digit % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 10;\n        }\n  \
    \      return Pair.with(even, odd);\n        // \u2191\u2191\u2191\u2191 end of\
    \ your code \u2191\u2191\u2191\u2191", "        // Fill in the code here\n   \
    \     List<Long> numbers = new ArrayList<>();\n        while (num > 0) {\n   \
    \         numbers.add(num % 10);\n            num /= 10;\n        }\n        long\
    \ odd_count = 0;\n        long even_count = 0;\n        for (long number : numbers)\
    \ {\n            if (number % 2 == 0) {\n                even_count++;\n     \
    \       } else {\n                odd_count++;\n            }\n        }\n   \
    \     return Pair.with(even_count, odd_count);", '        return null;', "   \
    \     // Implement a solution here\n        long evenCount = 0, oddCount = 0;\n\
    \        while (num != 0) {\n            if (num % 2 == 0) {\n               \
    \ evenCount++;\n            } else {\n                oddCount++;\n          \
    \  }\n            num /= 10;\n        }\n        return Pair.with(evenCount, oddCount);",
  "        long even = 0;\n        long odd = 0;\n        while (num != 0) {\n   \
    \         if (num % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n            num /= 10;\n        }\n  \
    \      return Pair.with(even, odd);", '        return Pair.with(0l,0l);', "  \
    \      long evens = 0;\n        long odds = 0;\n        while (num != 0) {\n \
    \           if (num % 2 == 0) {\n                evens++;\n            } else\
    \ {\n                odds++;\n            }\n            num /= 10;\n        }\n\
    \        return Pair.with(evens, odds);", "        long even = 0;\n        long\
    \ odd = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n    \
    \            even++;\n            } else {\n                odd++;\n         \
    \   }\n            num /= 10;\n        }\n        return Pair.with(even, odd);",
  "        // Your code goes here.\n        return Pair.with(1l, 1l);", "        String\
    \ s = String.valueOf(num);\n        return Pair.with(s.chars().filter(i -> i %\
    \ 2 == 0).count(), s.chars().filter(i -> i % 2 != 0).count());", "        /* your\
    \ code here! */\n        return null;", "        long even=0,odd=0;\n        while(num!=0){\n\
    \            long x=num%10;\n            if(x%2==0)\n                even++;\n\
    \            else\n                odd++;\n            num/=10;\n        }\n \
    \       return Pair.with(even,odd);", "        Long even = 0l;\n        Long odd\
    \ = 0l;\n        while (num != 0) {\n            if (num % 2 == 0) {\n       \
    \         even += 1;\n            } else {\n                odd += 1;\n      \
    \      }\n            num /= 10;\n        }\n        return Pair.with(even, odd);",
  "        int evenCounter = 0;\n        int oddCounter = 0;\n        int checker\
    \ = 0;\n        if (num < 0) {\n            checker = -1;\n            num = num\
    \ * -1;\n        } else {\n            checker = 1;\n        }\n        while\
    \ (num > 0) {\n            int lastDigit = (int) num % 10;\n            if (lastDigit\
    \ % 2 == 0) {\n                evenCounter++;\n            } else {\n        \
    \        oddCounter++;\n            }\n            num = num / 10;\n        }\n\
    \        long evenCounterLong = evenCounter;\n        long oddCounterLong = oddCounter;\n\
    \        if (checker == -1) {\n            evenCounterLong = evenCounterLong +\
    \ 1;\n        }\n        return Pair.with(evenCounterLong, oddCounterLong);",
  '        return null;', "        long evenCount = 0;\n        long oddCount = 0;\n\
    \        if (num == 0) {\n            return Pair.with(evenCount, oddCount);\n\
    \        }\n        if (num < 0) {\n            num = num * -1;\n        }\n \
    \       while (num > 0) {\n            if (num % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  num = num / 10;\n        }\n        return Pair.with(evenCount, oddCount);",
  "        // your code goes here\n        return null;", '        // Write your code
    here.', "        // Fill up the body.\n        return null;", '        return
    null;', "        long oddCount = 0;\n        long evenCount = 0;\n        while\
    \ (num != 0) {\n            long digit = num % 10;\n            if (digit % 2\
    \ == 0) {\n                evenCount++;\n            } else {\n              \
    \  oddCount++;\n            }\n            num /= 10;\n        }\n        return\
    \ Pair.with(evenCount, oddCount);", '        // Put your code here', "       \
    \ int cnt_even = 0;\n        int cnt_odd = 0;\n        while (num != 0) {\n  \
    \          int digit = (int) (num % 10);\n            if (digit % 2 == 0)\n  \
    \              cnt_even++;\n            else\n                cnt_odd++;\n   \
    \         num /= 10;\n        }\n        return Pair.with((long) cnt_even, (long)\
    \ cnt_odd);", '        return new Pair<Long, Long>(null, null);', "        //\
    \ Write your code here\n        // To print results to the standard output you\
    \ can use System.out.println()\n        // Example: System.out.println(\"Hello\
    \ world!\");\n        throw new UnsupportedOperationException(\"Please remove\
    \ this line and implement your code here!\");", "        // \u2193\u2193\u2193\
    \u2193 your code goes here \u2193\u2193\u2193\u2193\n        return null;", " \
    \       String string = String.valueOf(num);\n        String[] strings = string.split(\"\
    \");\n        long counterOdd = 0;\n        long counterEven = 0;\n        for\
    \ (String s : strings) {\n            if (Integer.parseInt(s) % 2 == 0) {\n  \
    \              counterEven++;\n            } else {\n                counterOdd++;\n\
    \            }\n        }\n        return Pair.with(counterEven, counterOdd);",
  '        return null;', "        // Replace the line below with your implementation.\n\
    \        long even = 0;\n        long odd = 0;\n        if (num == 0) {\n    \
    \        even = 1;\n        }\n        else {\n            int n = 0;\n      \
    \      long num1 = num;\n            while (num1 != 0) {\n                num1\
    \ = num1 / 10;\n                n = n + 1;\n            }\n            long[]\
    \ array1 = new long[n];\n            long[] array2 = new long[n];\n          \
    \  int i = 0;\n            long num2 = num;\n            while (num2 != 0) {\n\
    \                array1[i] = num2 % 10;\n                num2 = num2 / 10;\n \
    \               i = i + 1;\n            }\n            for (int j = 0; j < array1.length;\
    \ j++) {\n                if (array1[j] % 2 == 0) {\n                    even\
    \ = even + 1;\n                }\n                else {\n                   \
    \ odd = odd + 1;\n                }\n            }\n        }\n        return\
    \ Pair.with(even, odd);", "        // TODO: Implementation goes here.\n      \
    \  long evenDigits = 0;\n        long oddDigits = 0;\n        while (num != 0)\
    \ {\n            if (num % 2 == 0) {\n                evenDigits++;\n        \
    \    } else {\n                oddDigits++;\n            }\n            num /=\
    \ 10;\n        }\n        return new Pair<Long, Long>(evenDigits, oddDigits);",
  '        throw new UnsupportedOperationException("Not Implemented");', "       \
    \ long even = 0l;\n        long odd = 0l;\n        while (num != 0) {\n      \
    \      long digit = num % 10;\n            if (digit % 2 == 0) {\n           \
    \     even++;\n            } else {\n                odd++;\n            }\n \
    \           num /= 10;\n        }\n        return Pair.with(even, odd);", "  \
    \      long even = 0;\n        long odd = 0;\n        String n = String.valueOf(num);\n\
    \        String[] arr = n.split(\"\");\n        for (int i = 0; i < arr.length;\
    \ i++) {\n            int temp = Integer.parseInt(arr[i]);\n            if (temp\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n        }\n        return Pair.with(even, odd);", " \
    \       long numCopy = num;\n        long evenCount = 0;\n        long oddCount\
    \ = 0;\n        boolean isNegative = num < 0;\n        if (isNegative) {\n   \
    \         num = num * -1;\n        }\n        long digit = num % 10;\n       \
    \ if (digit % 2 == 0) {\n            evenCount++;\n        } else {\n        \
    \    oddCount++;\n        }\n        while (num / 10 > 0) {\n            num =\
    \ num / 10;\n            digit = num % 10;\n            if (digit % 2 == 0) {\n\
    \                evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n        }\n        if (isNegative) {\n            oddCount++;\n\
    \        }\n        return Pair.with(evenCount, oddCount);", "        if (num\
    \ == 0) return Pair.with(1l, 0l);\n        long odd = 0;\n        long even =\
    \ 0;\n        if (num < 0) {\n            num = Math.abs(num);\n            odd\
    \ = 1;\n        }\n        while (num > 0) {\n            long digit = num % 10;\n\
    \            if (digit % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num /= 10;\n        }\n\
    \        return Pair.with(even, odd);", "        if (num < 0) {\n            return\
    \ new Pair<>(0l, 0l);\n        }\n        long a = 0;\n        long b = 0;\n \
    \       while (num > 0) {\n            if (num % 2 == 0) {\n                a\
    \ += 1;\n            } else {\n                b += 1;\n            }\n      \
    \      num /= 10;\n        }\n        return new Pair<>(a, b);", "        // 1\
    \ * 10^0 * 1\n        // 2 * 10^1 * 2\n        // 3 * 10^2 * 3\n        // 4 *\
    \ 10^3 * 4\n        // 5 * 10^4 * 5\n        long evenCount = 0;\n        long\
    \ oddCount = 0;\n        long temp = num;\n        while (temp != 0) {\n     \
    \       long remainder = temp % 10;\n            if (remainder % 2 == 0) {\n \
    \               evenCount += 1;\n            } else {\n                oddCount\
    \ += 1;\n            }\n            temp /= 10;\n        }\n        return Pair.with(evenCount,\
    \ oddCount);", "        // YOUR CODE HERE\n        return null;", "        //\
    \ TODO: implement this method\n        return null;", "        int even = 0;\n\
    \        int odd = 0;\n        while (num != 0) {\n            if (num % 2 ==\
    \ 0) {\n                even += 1;\n            } else {\n                odd\
    \ += 1;\n            }\n            num /= 10;\n        }\n        return Pair.with(Long.valueOf(even),\
    \ Long.valueOf(odd));", "        // Give me your best solution please :)\n   \
    \     long res = 0, x = 1;\n        while (num > 0) {\n            if ((num &\
    \ 1) == 0)\n                res += 1 * x;\n            num >>= 1;\n          \
    \  x *= 10;\n        }\n        return new Pair<Long, Long>(res, x / 10 - res);",
  "        // TODO: Implement\n        return Pair.with(0l, 0l);", "        long evens\
    \ = num < 0 ? 1 : 0;\n        long odds = 0;\n        num = Math.abs(num);\n \
    \       while (num > 0) {\n            if (num % 2 == 0) {\n                evens++;\n\
    \            } else {\n                odds++;\n            }\n            num\
    \ /= 10;\n        }\n        return Pair.with(evens, odds);", "        // WRITE\
    \ YOUR CODE HERE\n        return null;", "        String s = Long.toString(num);\n\
    \        long countEven = 0;\n        long countOdd = 0;\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            if (Character.getNumericValue(s.charAt(i))\
    \ % 2 == 0) {\n                countEven++;\n            } else {\n          \
    \      countOdd++;\n            }\n        }\n        return Pair.with(countEven,\
    \ countOdd);", "        // TODO: IMPLEMENT THIS CODE\n        return null;", '        return
    new Pair<Long, Long>(0l, 0l);', "        // Fill in your solution here\n     \
    \   int odd = 0;\n        int even = 0;\n        while (num > 0) {\n         \
    \   if (num % 2 == 0) {\n                even += 1;\n            } else {\n  \
    \              odd += 1;\n            }\n            num /= 10;\n        }\n \
    \       return Pair.with(even, odd);", '        return null;', "        int evenCount\
    \ = 0;\n        int oddCount = 0;\n        for (char c : Long.toString(num).toCharArray())\
    \ {\n            if (c % 2 == 0) evenCount++;\n            else oddCount++;\n\
    \        }\n        return Pair.with(evenCount, oddCount);", "        long even\
    \ = 0;\n        long odd = 0;\n        while (num != 0) {\n            long digit\
    \ = num % 10;\n            if (digit % 2 == 0) {\n                even++;\n  \
    \          } else {\n                odd++;\n            }\n            num /=\
    \ 10;\n        }\n        return Pair.with(even, odd);", "        // >>> your_code_here\
    \ <<<\n        return Pair.with(1l, 1l);", "        // Write your code here.\n\
    \        return null;", '        // Fill in your answer below.', "        // Fill\
    \ the gaps!\n        return Pair.with(0l, 0l);", "        long even = (long)0;\n\
    \        long odd = (long)0;\n        long n = num;\n        while ((n) != (0l))\
    \ {\n            if (((n) % (2l)) == (0l)) {\n                even += (long)1;\n\
    \            } else {\n                odd += (long)1;\n            }\n      \
    \      n = (long)((n) / (10l));\n        }\n        return Pair.with(even, odd);",
  "        long evens = 0;\n        long odds = 0;\n        while (num != 0) {\n \
    \           long rem = num % 10;\n            if (rem % 2 == 0) {\n          \
    \      evens += 1;\n            } else {\n                odds += 1;\n       \
    \     }\n            num /= 10;\n        }\n        return Pair.with(evens, odds);",
  "        if (num == 0) {\n            return Pair.with(1l, 0l);\n        } else\
    \ if (num < 0) {\n            num = Math.abs(num);\n        }\n        // Complete\
    \ this method\n        long numDigits = (long)Math.floor(Math.log10(num)) + 1;\n\
    \        long evenCount = 0, oddCount = 0;\n        for (long i = 0; i < numDigits;\
    \ i++) {\n            long digit = num % 10;\n            if (digit % 2 == 0)\
    \ {\n                evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n            num /= 10;\n        }\n        return Pair.with(evenCount,\
    \ oddCount);", '        return null;', '        return null;', "        // write\
    \ your solution here\n        return null;", "        String number = String.valueOf(num);\n\
    \        Pair<Long, Long> result = Pair.with(0l, 0l);\n        for (int i = 0;\
    \ i < number.length(); i++) {\n            if ((number.charAt(i) - '0') % 2 ==\
    \ 0) {\n                result = result.setAt0(result.getValue0() + 1);\n    \
    \        } else {\n                result = result.setAt1(result.getValue1() +\
    \ 1);\n            }\n        }\n        return result;", "        long digits\
    \ = 0l;\n        long evens = 0l;\n        long odds = 0l;\n        for (; num\
    \ != 0; num /= 10) {\n            long digit = num % 10;\n            digits +=\
    \ 1;\n            if (digit % 2 == 0) {\n                evens += 1;\n       \
    \     } else {\n                odds += 1;\n            }\n        }\n       \
    \ return Pair.with(evens, odds);", '        throw new UnsupportedOperationException("Not
    implemented");', "        long counterOdd = 0;\n        long counterEven = 0;\n\
    \        long result[] = new long[2];\n        while (num > 0) {\n           \
    \ if (num % 2 == 0) {\n                counterEven++;\n            } else {\n\
    \                counterOdd++;\n            }\n            num /= 10;\n      \
    \  }\n        return Pair.with(counterEven, counterOdd);", "        if (num ==\
    \ 0l) return Pair.with(1l, 0l);\n        if (num < 0l) num = -num;\n        long\
    \ evenCount = 0l;\n        long oddCount = 0l;\n        while (num > 0l) {\n \
    \           long digit = num % 10l;\n            if (digit % 2l == 0l)\n     \
    \           evenCount += 1l;\n            else\n                oddCount += 1l;\n\
    \            num /= 10l;\n        }\n        return Pair.with(evenCount, oddCount);",
  "        String s = String.valueOf(num);\n        long even = 0;\n        long odd\
    \ = 0;\n        for (char c : s.toCharArray()) {\n            int x = Character.getNumericValue(c);\n\
    \            if (x % 2 == 0) {\n                even++;\n            } else {\n\
    \                odd++;\n            }\n        }\n        return Pair.with(even,\
    \ odd);", '        return null;', "      int even = 0;\n      int odd = 0;\n \
    \     while (num > 0) {\n        if (num % 2 == 0) {\n          even++;\n    \
    \    } else {\n          odd++;\n        }\n        num /= 10;\n      }\n    \
    \  return Pair.with(new Long(even), new Long(odd));", '        return null;',
  "        long even = 0;\n        long odd = 0;\n        num = Math.abs(num);\n \
    \       while (num > 0) {\n            if (num % 2 == 0)\n                even++;\n\
    \            else\n                odd++;\n            num /= 10;\n        }\n\
    \        return Pair.with(even, odd);", "        int even = 0;\n        int odd\
    \ = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 10;\n        }\n        return Pair.with(Long.valueOf(even),\
    \ Long.valueOf(odd));", "        // Your code here\n        long even = 0;\n \
    \       long odd = 0;\n        for (long i = 0; i < 10; i += 1) {\n          \
    \  if (num % 2 == 0) {\n                even += 1;\n            } else {\n   \
    \             odd += 1;\n            }\n            num /= 10;\n        }\n  \
    \      return new Pair<Long, Long>(even, odd);", '        return Pair.with(0l,
    0l);', '        // your code here', '        return null;', "        long even\
    \ = 0, odd = 0;\n        while (num != 0) {\n            long tmp = num % 10;\n\
    \            if (tmp % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n            num /= 10;\n        }\n\
    \        return Pair.with(even, odd);", "        String number = String.valueOf(num);\n\
    \        long even = 0;\n        long odd = 0;\n        for (int i = 0; i < number.length();\
    \ i++) {\n            if (number.charAt(i) % 2 == 0)\n                even++;\n\
    \            else\n                odd++;\n        }\n        return Pair.with(even,\
    \ odd);", '        return null;', "        long oddCount = 0;\n        long evenCount\
    \ = 0;\n        if (num < 0) {\n            num = num * -1;\n        }\n     \
    \   while (num > 0) {\n            if (num % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  num = num / 10;\n        }\n        return Pair.with(evenCount, oddCount);",
  "        int x = 0;\n        int y = 0;\n        while (num != 0) {\n          \
    \  long n = num % 10;\n            if (n % 2 == 0) {\n                x += 1;\n\
    \            } else {\n                y += 1;\n            }\n            num\
    \ /= 10;\n        }\n        return Pair.with(x, y);", "        long evenCount\
    \ = 0;\n        long oddCount = 0;\n        while (num != 0) {\n            long\
    \ digit = num % 10;\n            if (digit % 2 == 0)\n                evenCount++;\n\
    \            else\n                oddCount++;\n            num /= 10;\n     \
    \   }\n        return Pair.with(evenCount, oddCount);", "        // **********\
    \ IMPLEMENT **********\n        return null;", "        long even = 0;\n     \
    \   long odd = 0;\n        for (int i = 0; i < 10; i++) {\n            long count\
    \ = new BigInteger(Long.toString(num)).divide(BigInteger.TEN.pow(i)).mod(BigInteger.TEN).longValue();\n\
    \            if (count % 2 == 0) {\n                even += count;\n         \
    \   } else {\n                odd += count;\n            }\n        }\n      \
    \  return Pair.with(even, odd);", "        long even = 0;\n        long odd =\
    \ 0;\n        if (num < 0) {\n            num = num * -1;\n        }\n       \
    \ while (num > 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ = num / 10;\n        }\n        return Pair.with(even, odd);", "        // TODO:\
    \ Write your code here.\n        return null;", "        long evens = 0;\n   \
    \     long odds = 0;\n        while (num != 0) {\n            long digit = num\
    \ % 10;\n            if (digit % 2 == 0) {\n                evens += 1;\n    \
    \        } else {\n                odds += 1;\n            }\n            num\
    \ /= 10;\n        }\n        return Pair.with(evens, odds);", '        return
    null;', "        // Write your code here.\n        return null;", '        return
    null;', '        return null;', "        // write code here\n        long even\
    \ = 0;\n        long odd = 0;\n        while (num > 0) {\n            long reminder\
    \ = num % 10;\n            if (reminder % 2 == 0) {\n                even += 1;\n\
    \            } else {\n                odd += 1;\n            }\n            num\
    \ = num / 10;\n        }\n        return Pair.with(even, odd);", '        return
    Pair.with(5l, 6l);', "        long evens = 0;\n        long odds = 0;\n      \
    \  while (num != 0) {\n            long lastDigit = num % 10;\n            if\
    \ (lastDigit % 2 == 0) {\n                evens++;\n            } else {\n   \
    \             odds++;\n            }\n            num /= 10;\n        }\n    \
    \    return Pair.with(evens, odds);", "        long even = 0;\n        long odd\
    \ = 0;\n        while (num != 0) {\n            if (num % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 10;\n        }\n        return Pair.with(even, odd);", " \
    \       long oddCount = 0;\n        long evenCount = 0;\n        while (num !=\
    \ 0) {\n            long digit = num % 10;\n            if (digit % 2 == 0) {\n\
    \                evenCount += 1;\n            } else {\n                oddCount\
    \ += 1;\n            }\n            num /= 10;\n        }\n        return Pair.with(evenCount,\
    \ oddCount);", "        // TODO: write code\n        return null;", "        long\
    \ even = 0;\n        long odd = 0;\n        while (num != 0) {\n            long\
    \ rem = num % 10;\n            if (rem % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 10;\n        }\n        return Pair.with(even, odd);", "        long even\
    \ = 0, odd = 0;\n        while (num != 0) {\n            int currDigit = (int)\
    \ num % 10;\n            if (currDigit % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 10;\n        }\n        return Pair.with(even, odd);", '        return null;',
  "        int o = 0;\n        int e = 0;\n        long n = Math.abs(num);\n     \
    \   while (n > 0) {\n            if (n % 2 == 0) {\n                e++;\n   \
    \         } else {\n                o++;\n            }\n            n /= 10;\n\
    \        }\n        return Pair.with(e, o);", "        // you code goes here\n\
    \        return null;", "        long odd = 0;\n        long even = 0;\n     \
    \   while (num != 0) {\n            if (num % 2 == 0) {\n                even\
    \ += 1;\n            } else {\n                odd += 1;\n            }\n    \
    \        num /= 10;\n        }\n        return Pair.with(even, odd);", '        return
    Pair.with(0l, 0l);', '        return null;', "        if (num == 0) return Pair.with(1l,\
    \ 0l);\n        Pair<Long, Long> output = Pair.with(0l, 0l);\n        if (num\
    \ < 0) num *= -1;\n        while (num > 0) {\n            long digit = num % 10;\n\
    \            if (digit % 2 == 0) output.setValue0(output.getValue0() + 1);\n \
    \           else output.setValue1(output.getValue1() + 1);\n            num /=\
    \ 10;\n        }\n        return output;", '        return null;', "        long\
    \ even = 0;\n        long odd = 0;\n        if (num < 0) {\n            odd++;\n\
    \            num = num * -1;\n        }\n        while (num != 0) {\n        \
    \    long digit = num % 10;\n            if (digit % 2 == 0) {\n             \
    \   even++;\n            } else {\n                odd++;\n            }\n   \
    \         num = num / 10;\n        }\n        return Pair.with(even, odd);", " \
    \       // Your code here.\n        long odd=0;\n        long even=0;\n      \
    \  while(num>0){\n            long r=num%10;\n            if(r%2==0){\n      \
    \          even++;\n            }\n            else{\n                odd++;\n\
    \            }\n            num=num/10;\n        }\n        return new Pair<Long,Long>(even,odd);",
  "        // if (num == 0) {\n        //     return Pair.with(0l, 0l);\n        //\
    \ }\n        // if (num < 0) {\n        //     num = -num;\n        // }\n   \
    \     // long odd = 0;\n        // long even = 0;\n        // while (num > 0)\
    \ {\n        //     long curr = num % 10;\n        //     if (curr % 2 == 0) {\n\
    \        //         even++;\n        //     } else {\n        //         odd++;\n\
    \        //     }\n        //     num /= 10;\n        // }\n        // return\
    \ Pair.with(even, odd);\n        long odd = (num == 0) ? 0 : 1;\n        long\
    \ even = (num % 2 == 0) ? 1 : 0;\n        long curr = num / 10;\n        while\
    \ (curr != 0) {\n            long digit = curr % 10;\n            if (digit %\
    \ 2 == 0) {\n                even++;\n            } else {\n                odd++;\n\
    \            }\n            curr /= 10;\n        }\n        return Pair.with(even,\
    \ odd);", "        long odd_count = 0;\n        long even_count = 0;\n       \
    \ while (num != 0) {\n            if (num % 2 == 0) {\n                even_count\
    \ += 1;\n            } else {\n                odd_count += 1;\n            }\n\
    \            num /= 10;\n        }\n        return Pair.with(even_count, odd_count);",
  "        String s = Long.toString(num);\n        long even = 0;\n        long odd\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            long current\
    \ = Character.getNumericValue(s.charAt(i));\n            if (current == 0) {\n\
    \                even++;\n            } else if (current % 2 == 0) {\n       \
    \         even++;\n            } else {\n                odd++;\n            }\n\
    \        }\n        return Pair.with(even, odd);", "        long evens = 0;\n\
    \        long odds = 0;\n        if (num < 0) {\n            num = -num;\n   \
    \     }\n        while (num > 0) {\n            if (num % 2 == 0) {\n        \
    \        evens++;\n            } else {\n                odds++;\n           \
    \ }\n            num /= 10;\n        }\n        return new Pair<Long, Long>(evens,\
    \ odds);", '        return null;', "        long even = 0;\n        long odd =\
    \ 0;\n        if (num < 0) {\n            even = 0;\n            odd = 1;\n  \
    \          num = -num;\n        }\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n            num /= 10;\n        }\n        return Pair.with(even,\
    \ odd);", "        Pair<Long, Long> result = new Pair<Long, Long>(0l, 0l);\n \
    \       while (num != 0) {\n            if (num % 2 == 0) {\n                result\
    \ = result.setAt0(result.getValue0() + 1);\n            } else {\n           \
    \     result = result.setAt1(result.getValue1() + 1);\n            }\n       \
    \     num /= 10;\n        }\n        return result;", "        long evenCount\
    \ = 0;\n        long oddCount = 0;\n        while (num != 0) {\n            int\
    \ digit = (int) num % 10;\n            if (digit % 2 == 0) {\n               \
    \ evenCount++;\n            } else {\n                oddCount++;\n          \
    \  }\n            num /= 10;\n        }\n        return Pair.with(evenCount, oddCount);",
  "        long oddCount = 0;\n        long evenCount = 0;\n        if (num < 0) {\n\
    \            evenCount++;\n            num = -num;\n        }\n        while (num\
    \ > 0) {\n            if (num % 2 == 0)\n                evenCount++;\n      \
    \      else\n                oddCount++;\n            num /= 10;\n        }\n\
    \        return Pair.with(evenCount, oddCount);", "        long evenCount = 0l;\n\
    \        long oddCount = 0l;\n        for (long i = Math.abs(num); i != 0; i /=\
    \ 10) {\n            if (i % 2 == 0)\n                evenCount++;\n         \
    \   else\n                oddCount++;\n        }\n        return Pair.with(evenCount,\
    \ oddCount);", "        int odd = 0;\n        int even = 0;\n        while (num\
    \ != 0) {\n            int digit = (int) num % 10;\n            if (digit % 2\
    \ == 0)\n                even++;\n            else\n                odd++;\n \
    \           num /= 10;\n        }\n        return Pair.with(new Long(even), new\
    \ Long(odd));", "        // TODO: return a tuple with (number of even digits,\
    \ number of odd digits)\n        Pair<Long, Long> result = Pair.with(0l, 0l);\n\
    \        // Get all the digits from the integer\n        Set<Long> digits = new\
    \ HashSet<>();\n        while (num > 0) {\n            digits.add(num % 10);\n\
    \            num /= 10;\n        }\n        // Count the even digits\n       \
    \ for (Long digit : digits) {\n            if (digit % 2 == 0) {\n           \
    \     result = result.setAt0(result.getValue0() + 1);\n            } else {\n\
    \                result = result.setAt1(result.getValue1() + 1);\n           \
    \ }\n        }\n        return result;", "        // replace the line below with\
    \ your code\n        String string = String.valueOf(num);\n        String[] arr\
    \ = string.split(\"\");\n        int even = 0;\n        int odd = 0;\n       \
    \ for (int i = 0; i < arr.length; i++) {\n            if (arr[i].equals(\"-\"\
    )) {\n                continue;\n            }\n            int elem = Integer.parseInt(arr[i]);\n\
    \            if (elem % 2 == 0) {\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n        return Pair.with((long)\
    \ even, (long) odd);", "        long evenCount = 0, oddCount = 0;\n        while\
    \ (num != 0) {\n            if (num % 2 == 0) {\n                evenCount++;\n\
    \            } else {\n                oddCount++;\n            }\n          \
    \  num /= 10;\n        }\n        return Pair.with(evenCount, oddCount);", '        return
    Pair.with(num, num);', "        // Start your code here\n        Pair<Long, Long>\
    \ p = new Pair<>(0l, 0l);\n        int even = 0;\n        int odd = 0;\n     \
    \   while (num != 0) {\n            if (num % 2 == 0) {\n                even++;\n\
    \            } else {\n                odd++;\n            }\n            num\
    \ /= 10;\n        }\n        p = new Pair<>((long) even, (long) odd);\n      \
    \  return p;", "        int even_cnt = 0;\n        int odd_cnt = 0;\n        while\
    \ (num != 0) {\n            int last_digit = (int) (num % 10);\n            if\
    \ (last_digit % 2 == 0) {\n                even_cnt += 1;\n            } else\
    \ {\n                odd_cnt += 1;\n            }\n            num /= 10;\n  \
    \      }\n        return Pair.with((long) even_cnt, (long) odd_cnt);", "     \
    \   // write your code here\n        return null;", "        long even = 0;\n\
    \        long odd = 0;\n        if (num < 0) {\n            num = num * -1;\n\
    \        }\n        while (num != 0) {\n            long rem = num % 10;\n   \
    \         if (rem % 2 == 0) {\n                even = even + 1;\n            }\
    \ else {\n                odd = odd + 1;\n            }\n            num = num\
    \ / 10;\n        }\n        return Pair.with(even, odd);", '        return null;',
  "        long even = 0;\n        long odd = 0;\n        while (num != 0) {\n   \
    \         long digit = num % 10;\n            if (digit % 2 == 0) {\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \            num /= 10;\n        }\n        return Pair.with(even, odd);", " \
    \       long a = 0;\n        long b = 0;\n        if (num < 0) {\n           \
    \ a = 1;\n            num = -num;\n        }\n        while (num > 0) {\n    \
    \        long digit = num % 10;\n            if (digit % 2 == 0) {\n         \
    \       a++;\n            } else {\n                b++;\n            }\n    \
    \        num /= 10;\n        }\n        return Pair.with(a, b);", '        return
    null;', "        // Your solution here\n        return null;", "        // write\
    \ your code here\n        return null;", "        // Implement me\n        long\
    \ odd = 0, even = 0;\n        do {\n            if ((num % 10) % 2 == 0) {\n \
    \               even++;\n            } else {\n                odd++;\n      \
    \      }\n            num /= 10;\n        } while (num != 0);\n        return\
    \ Pair.with(even, odd);", "        Pair<Long, Long> evenOdd = Pair.with(0l, 0l);\n\
    \        long i = num < 0 ? -num : num;\n        while (i > 0) {\n           \
    \ if (i % 2 == 0) {\n                evenOdd.setValue0(evenOdd.getValue0() + 1);\n\
    \            } else {\n                evenOdd.setValue1(evenOdd.getValue1() +\
    \ 1);\n            }\n            i /= 10;\n        }\n        return evenOdd;",
  '        return null;', "        // >>> YOUR CODE HERE <<<\n        return null;",
  '        return null;', "        if (num == 0) {\n            return Pair.with(1l,\
    \ 0l);\n        } else if (num < 0) {\n            return Pair.with(0l, 1l);\n\
    \        } else {\n            long evenCount = 0;\n            long oddCount\
    \ = 0;\n            long rNum = Math.abs(num);\n            while (rNum > 0) {\n\
    \                long digit = rNum % 10;\n                if (digit % 2 == 0)\
    \ {\n                    evenCount++;\n                } else {\n            \
    \        oddCount++;\n                }\n                rNum /= 10;\n       \
    \     }\n            return Pair.with(evenCount, oddCount);\n        }", '        return
    null;', '        return null;', "        // Write your code here and return the\
    \ answer.\n        return null;", "        // YOUR CODE GOES HERE\n        Pair<Long,\
    \ Long> answer = Pair.with(0l, 0l);\n        if (num < 0) {\n            num =\
    \ num * -1;\n        }\n        while (num > 0) {\n            if (num % 2 ==\
    \ 0) {\n                answer = answer.setAt0(answer.getValue0() + 1);\n    \
    \        } else {\n                answer = answer.setAt1(answer.getValue1() +\
    \ 1);\n            }\n            num = num / 10;\n        }\n        return answer;",
  "        int odd = 0;\n        int even = 0;\n        String s = String.valueOf(num);\n\
    \        String[] split_str = s.split(\"\");\n        for (int i = 0; i < split_str.length;\
    \ i++) {\n            if ((Integer.parseInt(split_str[i]) % 2) == 0) {\n     \
    \           even += 1;\n            } else {\n                odd += 1;\n    \
    \        }\n        }\n        return Pair.with(Long.valueOf(even), Long.valueOf(odd));",
  "        Pair<Long, Long> newPair = Pair.with(0l, 0l);\n        long numAbs = Math.abs(num);\n\
    \        if (numAbs == 0) {\n            return newPair;\n        }\n        if\
    \ (numAbs % 2 == 0) {\n            newPair = Pair.with(1l, 0l);\n        } else\
    \ {\n            newPair = Pair.with(0l, 1l);\n        }\n        return evenOddCount(numAbs\
    \ / 10).addAt0(newPair.getValue0()).addAt1(newPair.getValue1());", "        num\
    \ = Math.abs(num);\n        long evenCnt = 0;\n        long oddCnt = 0;\n    \
    \    while (num > 0) {\n            if (num % 2 == 0) {\n                evenCnt++;\n\
    \            } else {\n                oddCnt++;\n            }\n            num\
    \ /= 10;\n        }\n        return Pair.with(evenCnt, oddCnt);"]
stop_tokens:
- "\n    }\n"

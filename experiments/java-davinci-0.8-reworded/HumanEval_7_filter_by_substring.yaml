name: HumanEval_7_filter_by_substring
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Filter an input array list of strings only for ones that\
  \ contain given substring\n    // >>> filterBySubstring((new ArrayList<String>(Arrays.asList())),\
  \ (\"a\"))\n    // (new ArrayList<String>(Arrays.asList()))\n    // >>> filterBySubstring((new\
  \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"bacd\", (String)\"\
  cde\", (String)\"array\"))), (\"a\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  abc\", (String)\"bacd\", (String)\"array\")))\n    public static ArrayList<String>\
  \ filterBySubstring(ArrayList<String> strings, String substring) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(filterBySubstring((new\
  \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    assert(filterBySubstring((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
  , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"\
  xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
  , (String)\"xxxAAA\", (String)\"xxx\")))));\n    assert(filterBySubstring((new ArrayList<String>(Arrays.asList((String)\"\
  xxx\", (String)\"asd\", (String)\"aaaxxy\", (String)\"john doe\", (String)\"xxxAAA\"\
  , (String)\"xxx\"))), (\"xx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  xxx\", (String)\"aaaxxy\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    assert(filterBySubstring((new\
  \ ArrayList<String>(Arrays.asList((String)\"grunt\", (String)\"trumpet\", (String)\"\
  prune\", (String)\"gruesome\"))), (\"run\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  grunt\", (String)\"prune\")))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

language: java
name: HumanEval_18_how_many_times
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          index++;\n                count++;\n            }\n        }\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) return 0l;\n        else if (string.equals(substring))\
    \ return 1l;\n        else if (string.contains(substring)) return 1l + howManyTimes(string.substring(string.indexOf(substring)\
    \ + 1), substring);\n        else return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long counter\
    \ = 0;\n        int stringLength = string.length();\n        int substringLength\
    \ = substring.length();\n        for (int i = 0; i < stringLength; i++) {\n  \
    \          boolean match = true;\n            for (int j = 0; j < substringLength;\
    \ j++) {\n                if (i + j > stringLength - 1) {\n                  \
    \  break;\n                }\n                if (string.charAt(i + j) != substring.charAt(j))\
    \ {\n                    match = false;\n                    break;\n        \
    \        }\n            }\n            if (match) {\n                counter++;\n\
    \            }\n        }\n        return counter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp210f_6o8.java:40)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (i\
    \ + substring.length() > string.length()) {\n                return count;\n \
    \           }\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long res\
    \ = 0;\n        // the implementation goes here\n        return res;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9m6x7ats.java:23)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int index\
    \ = 0;\n        int count = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          count++;\n                index++;\n            }\n        }\n    \
    \    return (long) count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if(string.isEmpty()\
    \ || substring.isEmpty()) return 0;\n        long count = 0;\n        for(int\
    \ i = 0; i < string.length(); ++i) {\n            if(string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean isEqual = true;\n                for(int j = 1; j\
    \ < substring.length(); ++j) {\n                    if(i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        isEqual\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if(isEqual) {\n                    ++count;\n      \
    \              i += substring.length() - 1;\n                }\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwysx2cu.java:39)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long n\
    \ = (long) 0;\n        for (int i = 0; i < string.length(); i++) {\n         \
    \   if (string.charAt(i) == substring.charAt(0)) {\n                for (int j\
    \ = 0; j < substring.length(); j++) {\n                    if (i + j >= string.length())\n\
    \                        break;\n                    if (string.charAt(i + j)\
    \ != substring.charAt(j))\n                        break;\n                  \
    \  if (j == substring.length() - 1)\n                        n++;\n          \
    \      }\n            }\n        }\n        return n;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ == 0 || substring.length() == 0) return 0l;\n        long ans = 0l;\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            String chunk = string.substring(i,\
    \ Math.min(i + substring.length(), string.length()));\n            int len = chunk.length();\n\
    \            if (len == substring.length() && chunk.equals(substring)) {\n   \
    \             ans++;\n            }\n        }\n        return ans;\n    }\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.isEmpty()\
    \ || substring.isEmpty()) {\n            return 0l;\n        }\n        long count\
    \ = 0l;\n        int pos = string.indexOf(substring);\n        while (pos != -1)\
    \ {\n            count += 1l;\n            pos = string.indexOf(substring, pos\
    \ + 1);\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int ls\
    \ = string.length();\n        int lsub = substring.length();\n        int i =\
    \ 0;\n        long n = 0;\n        while(i <= ls - lsub) {\n            if(string.substring(i,\
    \ i + lsub).equals(substring)) {\n                n += 1;\n                i +=\
    \ lsub;\n            } else {\n                i += 1;\n            }\n      \
    \  }\n        return n;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1daoumg.java:34)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // firstly,\
    \ calculate the length of substring\n        int sublen = substring.length();\n\
    \        if (sublen == 0) {\n            return 0;\n        }\n        char[]\
    \ sArr = string.toCharArray();\n        char[] subArr = substring.toCharArray();\n\
    \        // count the number of substring in the original string\n        long\
    \ count = 0;\n        // then use a double loop to find all the same substring\
    \ in the original string\n        for (int i = 0; i < sArr.length; i++) {\n  \
    \          // It is possible that sArr[i] is not the beginning of a substring.\n\
    \            // Hence, we only compare it with subArr[0] if sArr[i] is the first\
    \ char.\n            if (sArr[i] == subArr[0]) {\n                // after that,\
    \ check the other characters in the substring\n                int j = 0;\n  \
    \              for (j = 0; j < sublen; j++) {\n                    // if all the\
    \ characters are the same, then count is plus one\n                    if (sArr[i\
    \ + j] != subArr[j]) {\n                        break;\n                    }\n\
    \                }\n                if (j == sublen) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 9 out of bounds for length 9\n\tat Problem.howManyTimes(tmpmg6gq4e0.java:35)\n\
    \tat Problem.main(tmpmg6gq4e0.java:49)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().filter(c -> c == substring.charAt(0)).mapToObj(i -> string.substring(i,\
    \ i + substring.length())).filter(substring::equals).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 120, end 121, length 7\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.lambda$howManyTimes$1(tmpgwakjv36.java:17)\n\
    \tat java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)\n\
    \tat java.base/java.util.stream.IntPipeline$10$1.accept(IntPipeline.java:393)\n\
    \tat java.base/java.lang.StringLatin1$CharsSpliterator.forEachRemaining(StringLatin1.java:824)\n\
    \tat java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:711)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.howManyTimes(tmpgwakjv36.java:17)\n\tat Problem.main(tmpgwakjv36.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long times\
    \ = 0;\n        int i = 0;\n        while (i <= string.length() - substring.length())\
    \ {\n            int j = 0;\n            while (j < substring.length() && string.charAt(i\
    \ + j) == substring.charAt(j)) {\n                j++;\n            }\n      \
    \      if (j == substring.length()) {\n                times++;\n            \
    \    i += j;\n            } else {\n                i++;\n            }\n    \
    \    }\n        return times;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhi6zlgp.java:36)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ IntStream.range(0, string.length() - substring.length() + 1)\n            .mapToObj(i\
    \ -> string.substring(i, i + substring.length()))\n            .filter(string.substring(i,\
    \ i + substring.length())::equals)\n            .count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ee8ifti.java:19: error: cannot find symbol\n            .filter(string.substring(i,\
    \ i + substring.length())::equals)\n                                     ^\n \
    \ symbol:   variable i\n  location: class Problem\n/tmp/tmp7ee8ifti.java:19: error:\
    \ cannot find symbol\n            .filter(string.substring(i, i + substring.length())::equals)\n\
    \                                        ^\n  symbol:   variable i\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int idx\
    \ = string.indexOf(substring);\n        long count = 0;\n        while (idx >=\
    \ 0) {\n            count++;\n            idx = string.indexOf(substring, idx\
    \ + 1);\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if(string.equals(\"\
    \") || substring.equals(\"\")) {\n            return 0l;\n        }\n        final\
    \ long[] result = {0l};\n        IntStream.range(0, string.length()).forEach(i\
    \ -> {\n            if(i + substring.length() - 1 < string.length()) {\n     \
    \           String token = string.substring(i, i + substring.length());\n    \
    \            if(token.equals(substring)) {\n                    result[0]++;\n\
    \                }\n            }\n        });\n        return result[0];\n  \
    \  }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ howManyTimes((\"\"), (\"a\"))\n        // (0l)\n        // >>> howManyTimes((\"\
    aaa\"), (\"a\"))\n        // (3l)\n        // >>> howManyTimes((\"aaaa\"), (\"\
    aa\"))\n        // (3l)\n        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (i + substring.length() <= string.length())\
    \ {\n                String cmp = string.substring(i, i + substring.length());\n\
    \                if (cmp.equals(substring)) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0;\n        }\n     \
    \   // substring = \"abcde\"\n        // string = \"abcdefgabcdefghijk\"\n   \
    \     // string[i] -> \"abcde\"\n        // string[i + 1] -> \"bcdef\"\n     \
    \   // string[i + 2] -> \"cdefg\"\n        long n = string.length() - substring.length()\
    \ + 1;\n        long cnt = 0;\n        for (int i = 0; i < n; i++) {\n       \
    \     if (string.substring(i, i + substring.length()).equals(substring)) {\n \
    \               cnt += 1;\n            }\n        }\n        return cnt;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (i\
    \ + substring.length() <= string.length()) {\n                String sub = string.substring(i,\
    \ i + substring.length());\n                if (sub.equals(substring)) {\n   \
    \                 count++;\n                }\n            }\n        }\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Stream.iterate(0, i -> i <= string.length() - substring.length(), i -> i + 1)\n\
    \            .filter(i -> string.substring(i, i + substring.length()).equals(substring))\n\
    \            .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(x\
    \ -> \"\".equals(x.toString()) ? \"\" : x.toString()).map(x -> x.length() == 0\
    \ ? 0 : 1).reduce(0, (a, b) -> a + b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z_nmtog.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int sizeOfString\
    \ = string.length();\n        int sizeOfSubstring = substring.length();\n    \
    \    return IntStream.range(0, sizeOfString - sizeOfSubstring + 1)\n         \
    \   .map(offset -> string.substring(offset, offset + sizeOfSubstring))\n     \
    \       .filter(substring::equals)\n            .count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22_ff8dt.java:20: error: incompatible types: bad return type in\
    \ lambda expression\n            .map(offset -> string.substring(offset, offset\
    \ + sizeOfSubstring))\n                                           ^\n    String\
    \ cannot be converted to int\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011201
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if(substring.length()\
    \ > string.length()) return 0l;\n        long times = 0l;\n        for(int i =\
    \ 0; i < string.length() - substring.length() + 1; i++) {\n            if(string.substring(i,\
    \ i + substring.length()).equals(substring)) times++;\n        }\n        return\
    \ times;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011201
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Arrays.stream(string.split(substring, -1)).count() - 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr_zxw2xn.java:22)\n"
  stdout: ''
  timestamp: 1660011201
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        throw new\
    \ RuntimeException(\"Not implemented\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.howManyTimes(tmpycfiz42s.java:17)\n\tat Problem.main(tmpycfiz42s.java:20)\n"
  stdout: ''
  timestamp: 1660011201
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ howManyTimes(string, substring, 0);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzagybdk8.java:17: error: method howManyTimes in class Problem cannot\
    \ be applied to given types;\n        return howManyTimes(string, substring, 0);\n\
    \               ^\n  required: String,String\n  found:    String,String,int\n\
    \  reason: actual and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011201
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0l;\n        } else if (string.length()\
    \ == substring.length()) {\n            return string.equals(substring) ? 1l :\
    \ 0l;\n        } else {\n            int length = substring.length();\n      \
    \      long count = 0l;\n            for (int start = 0; start < string.length()\
    \ - length + 1; start++) {\n                if (string.substring(start, start\
    \ + length).equals(substring)) {\n                    count++;\n             \
    \   }\n            }\n            return count;\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011201
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.indexOf(substring,\
    \ i) == i)\n                count++;\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011201
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0l;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                StringBuilder sb = new StringBuilder();\n\
    \                int j = 0;\n                while (i < string.length() && j <\
    \ substring.length() && string.charAt(i) == substring.charAt(j)) {\n         \
    \           sb.append(string.charAt(i));\n                    i++;\n         \
    \           j++;\n                }\n                if (sb.toString().equals(substring))\
    \ {\n                    result++;\n                }\n                i--;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphz5na0cx.java:38)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // TODO:\
    \ implement\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgryktn3s.java:22)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while (index >= 0) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          count += 1;\n                index += substring.length();\n       \
    \     }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp__8y7d7a.java:31)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        String\
    \ temp = string;\n        int step = substring.length();\n        long count =\
    \ 0;\n        for (int i = 0; i < temp.length(); i++) {\n            if (temp.indexOf(substring)\
    \ != -1) {\n                temp = temp.substring(temp.indexOf(substring) + step);\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzjmk3lu.java:30)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long length_string\
    \ = (long)string.length();\n        long length_substring = (long)substring.length();\n\
    \        long count = 0l;\n        for (long i = 0l; i < (length_string - length_substring\
    \ + 1l); i++) {\n            if (string.substring((int)i, (int)(i + length_substring)).equals(substring))\
    \ {\n                count = count + 1l;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ my_string = \"aklsdjasdjasdfasdf\"\n        // >>> my_substring = \"asdf\"\n\
    \        // >>> my_string.count(my_substring)\n        // 2\n        return (long)string.codePoints().filter(ch\
    \ -> ch == substring.codePointAt(0)).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghpfgk28.java:26)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // ***\
    \ your code here ***\n        // Use String methods.\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpolic49uq.java:23)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); ++i) {\n            for (int\
    \ j = 0; j < substring.length(); ++j) {\n                if (i + j >= string.length())\
    \ {\n                    break;\n                }\n                if (string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                    break;\n               \
    \ }\n                if (j == substring.length() - 1) {\n                    ++count;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        if (string.length() < substring.length()) {\n            return\
    \ result;\n        } else {\n            int begin = 0;\n            while (begin\
    \ + substring.length() <= string.length()) {\n                if (string.substring(begin,\
    \ begin + substring.length()).equals(substring)) {\n                    result\
    \ += 1;\n                    begin += substring.length();\n                } else\
    \ {\n                    begin += 1;\n                }\n            }\n     \
    \       return result;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcorjh5ap.java:36)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        int size = substring.length();\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            result++;\n            index = string.indexOf(substring,\
    \ index + size);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmm1tunq.java:29)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long c\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            int j\
    \ = 0;\n            while (i + j < string.length() && j < substring.length() &&\
    \ substring.charAt(j) == string.charAt(i + j)) {\n                j++;\n     \
    \       }\n            if (j == substring.length()) {\n                c++;\n\
    \            }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ -1;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5peasp2s.java:20)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.isEmpty()\
    \ || substring.isEmpty()) {\n            return 0;\n        }\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt48sjyia.java:31)\n"
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while (true) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) break;\n            count++;\n       \
    \     index++;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ howManyTimes((\"\"), (\"a\"))\n        // (0l)\n        // >>> howManyTimes((\"\
    aaa\"), (\"a\"))\n        // (3l)\n        // >>> howManyTimes((\"aaaa\"), (\"\
    aa\"))\n        // (3l)\n        int sublen = substring.length();\n        int\
    \ len = string.length();\n        long answer = 0l;\n        for (int i = 0; i\
    \ <= len - sublen; i++) {\n            if (string.substring(i, i + sublen).equals(substring))\
    \ {\n                answer++;\n            }\n        }\n        return answer;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int count\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            for (int\
    \ j = 0; j < substring.length(); j++) {\n                if (i + j < string.length()\
    \ && string.charAt(i + j) == substring.charAt(j)) {\n                    if (j\
    \ == substring.length() - 1) {\n                        result++;\n          \
    \          }\n                } else {\n                    break;\n         \
    \       }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011202
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0;\n        }\n        if (string.equals(substring))\
    \ {\n            return 1;\n        }\n        return howManyTimes(string.substring(1),\
    \ substring) + (string.substring(0, substring.length()).equals(substring) ? 1\
    \ : 0);\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long cnt\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                cnt++;\n            }\n        }\n        return cnt;\n \
    \   }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long) IntStream.range(0, string.length()).filter(index -> {\n            return\
    \ IntStream.range(0, substring.length()).allMatch(index2 -> {\n              \
    \  return index + index2 < string.length() && string.charAt(index + index2) ==\
    \ substring.charAt(index2);\n            });\n        }).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n \
    \   assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int slen = string.length();\n        int len = substring.length();\n\
    \        int i = 0;\n        while (i < slen) {\n            String curr = string.substring(i,\
    \ i + len);\n            if (curr.equals(substring)) {\n                count\
    \ += 1;\n                i += len;\n            } else {\n                i +=\
    \ 1;\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmptk2c3kup.java:22)\n\
    \tat Problem.main(tmptk2c3kup.java:35)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Stream.iterate(0, i -> i + 1)\n            .map(i -> string.indexOf(substring,\
    \ i))\n            .takeWhile(i -> i != -1)\n            .count();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n \
    \   assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzw8eazz_.java:24)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long) Math.ceil((string.length() - substring.length() + 1) / (double) (substring.length()));\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2ae1wt5.java:21)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int len1\
    \ = string.length();\n        int len2 = substring.length();\n        int ret\
    \ = 0;\n        int index = string.indexOf(substring);\n        while (index >=\
    \ 0) {\n            ret++;\n            string = string.substring(index + len2);\n\
    \            index = string.indexOf(substring);\n        }\n        return ret;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplmqj55o0.java:31)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        // TODO: fill in here\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5_knpgb.java:23)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long l\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                l++;\n            }\n        }\n        return l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        throw new\
    \ UnsupportedOperationException(\"Please implement the howManyTimes() method\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement the howManyTimes() method\n\tat Problem.howManyTimes(tmpqgom16uq.java:17)\n\
    \tat Problem.main(tmpqgom16uq.java:20)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (i\
    \ + substring.length() <= string.length()) {\n                String temp = string.substring(i,\
    \ i + substring.length());\n                if (temp.equals(substring)) {\n  \
    \                  result++;\n                }\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            String tmp = string.substring(i, i + substring.length());\n \
    \           if (tmp.equals(substring)) {\n                count += 1;\n      \
    \      }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            for (int\
    \ j = 0; j < substring.length(); j++) {\n                if (string.charAt(i)\
    \ == substring.charAt(j)) {\n                    result++;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyk_6epv7.java:30)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int counter\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                counter++;\n            }\n        }\n        return counter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long)Math.ceil((double)string.length()/(double)substring.length());\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4thn_28x.java:21)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int sizeOfString\
    \ = string.length();\n        int sizeOfSubstring = substring.length();\n    \
    \    if (sizeOfString == 0 || sizeOfSubstring == 0) return 0l;\n        int howManyTimes\
    \ = 0;\n        int index = string.indexOf(substring);\n        while (index !=\
    \ -1) {\n            ++howManyTimes;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return howManyTimes;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ IntStream.range(0, string.length()).filter(i -> string.regionMatches(i, substring,\
    \ 0, substring.length())).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        StringBuilder\
    \ sb = new StringBuilder(string);\n        long count = 0;\n        for (int i\
    \ = 0; i < sb.length(); ++i) {\n            if (sb.substring(i).startsWith(substring))\
    \ {\n                ++count;\n                i += substring.length() - 1;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpevckn6qr.java:30)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig7udaao.java:21)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0;\n        }\n        if (string.length()\
    \ == substring.length()) {\n            return string.equals(substring) ? 1 :\
    \ 0;\n        }\n        long count = 0;\n        for (int i = 0; i <= string.length()\
    \ - substring.length(); i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // Assert.assertNotNull(string);\n\
    \        // Assert.assertNotNull(substring);\n        // Assert.assertTrue(!string.isEmpty());\n\
    \        // Assert.assertTrue(!substring.isEmpty());\n        // Assert.assertTrue(string.length()\
    \ >= substring.length());\n        int N = string.length();\n        int M = substring.length();\n\
    \        int n = N - M + 1;\n        long[] H = new long[n];\n        long[] pows\
    \ = new long[M];\n        H[0] = substring.charAt(0);\n        pows[0] = 1;\n\
    \        long pow = 1;\n        long P = 1000000007;\n        long x = 1;\n  \
    \      long ans = 0;\n        for (int i = 1; i < M; i++) {\n            x = (x\
    \ * x) % P;\n            pows[i] = x;\n            H[0] = (H[0] * x + substring.charAt(i))\
    \ % P;\n        }\n        for (int i = 1; i < n; i++) {\n            H[i] = (H[i\
    \ - 1] * x + string.charAt(i + M - 1) - string.charAt(i - 1) * pows[M - 1]) %\
    \ P;\n            if (H[i] < 0) {\n                H[i] += P;\n            }\n\
    \        }\n        for (int i = 0; i < n; i++) {\n            if (H[i] == H[0])\
    \ {\n                boolean ok = true;\n                for (int j = 0; j < M;\
    \ j++) {\n                    if (string.charAt(i + j) != substring.charAt(j))\
    \ {\n                        ok = false;\n                        break;\n   \
    \                 }\n                }\n                if (ok) {\n          \
    \          ans++;\n                }\n            }\n        }\n        return\
    \ ans;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 0 out of bounds for length 0\n\tat Problem.howManyTimes(tmp2tdbbtkm.java:27)\n\
    \tat Problem.main(tmp2tdbbtkm.java:61)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7r1glhq8.java:28)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        throw new\
    \ UnsupportedOperationException(\"Not implemented yet.\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet.\n\tat Problem.howManyTimes(tmpnywtv3ef.java:17)\n\tat Problem.main(tmpnywtv3ef.java:20)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ <= 0 || substring.length() <= 0) {\n            return 0;\n        }\n     \
    \   int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        if (i + substring.length() > string.length()) {\n                break;\n\
    \            }\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Stream.iterate(0, n -> n + 1)\n            .limit(string.length() - substring.length()\
    \ + 1)\n            .filter(n -> string.substring(n, n + substring.length()).equals(substring))\n\
    \            .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ IntStream.range(0, string.length() - substring.length() + 1)\n            .filter(s\
    \ -> string.substring(s, s + substring.length()).equals(substring))\n        \
    \    .count();\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ myString = \"aaaaaaaaa\"\n        // >>> myString.replace(\"aa\", \"\")\n  \
    \      // 'a'\n        // >>> myString.replace(\"aa\", \"\").length()\n      \
    \  // 1\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83umqfa6.java:26)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long n\
    \ = 0l;\n        long k = 0l;\n        long m = substring.length();\n        while\
    \ (n < string.length()) {\n            if (string.substring(n, Math.min(n + m,\
    \ string.length())).equals(substring)) {\n                k++;\n             \
    \   n += m;\n            } else {\n                n++;\n            }\n     \
    \   }\n        return k;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8td_s0ej.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (string.substring(n, Math.min(n + m, string.length())).equals(substring))\
    \ {\n                                 ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long x\
    \ = -1;\n        int index = 0;\n        while (true) {\n            x++;\n  \
    \          index = string.indexOf(substring, index);\n            if (index ==\
    \ -1) {\n                break;\n            }\n            index += substring.length();\n\
    \        }\n        return x;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwp_kytja.java:32)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int s =\
    \ string.length();\n        int u = substring.length();\n        if (u == 0) {\n\
    \            return 0;\n        }\n        if (s == 0) {\n            return 0;\n\
    \        }\n        if (u > s) {\n            return 0;\n        }\n        int\
    \ l = s - u;\n        long r = 0;\n        for (int i = 0; i <= l; i++) {\n  \
    \          if (string.substring(i, i + u).equals(substring)) {\n             \
    \   r++;\n            }\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int i =\
    \ 0;\n        long n = 0;\n        while ((i = string.indexOf(substring, i)) !=\
    \ -1) {\n            i++;\n            n++;\n        }\n        return n;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) return 0;\n        if (string.equals(substring)) return\
    \ 1;\n        if (string.substring(0, substring.length()).equals(substring)) return\
    \ 1 + howManyTimes(string.substring(1), substring);\n        return howManyTimes(string.substring(1),\
    \ substring);\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            for (int\
    \ j = 0; j < substring.length(); j++) {\n                if (string.charAt(i +\
    \ j) != substring.charAt(j)) {\n                    break;\n                }\n\
    \                if (j == substring.length() - 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 9\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpqyp59wir.java:20)\n\
    \tat Problem.main(tmpqyp59wir.java:33)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.split(substring, -1).length - 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdrgp02h.java:22)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long) Stream.iterate(0, n -> n + 1)\n            .takeWhile(n -> n <= string.length()\
    \ - substring.length())\n            .filter(n -> string.substring(n, n + substring.length()).equals(substring))\n\
    \            .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long)Stream.iterate(0, i -> i + 1).takeWhile(i -> i <= string.length() - substring.length()).filter(i\
    \ -> string.substring(i, i + substring.length()).equals(substring)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int index\
    \ = -1;\n        int count = 0;\n        while ((index = string.indexOf(substring,\
    \ index + 1)) != -1) {\n            count++;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (i + substring.length() <= string.length())\
    \ {\n                    boolean found = true;\n                    for (int j\
    \ = 1; j < substring.length(); j++) {\n                        if (string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                            found = false;\n\
    \                            break;\n                        }\n             \
    \       }\n                    if (found) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int pointer = 0;\n        while (pointer != -1) {\n          \
    \  pointer = string.indexOf(substring, pointer);\n            if (pointer != -1)\
    \ {\n                pointer += substring.length();\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgd7sbx2s.java:31)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.equals(\"\
    \") || substring.equals(\"\")) {\n            return 0;\n        } else {\n  \
    \          return string.split(substring, -1).length - 1;\n        }\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnhg3pw0d.java:26)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ java.util.regex.Pattern.compile(substring).matcher(string).results().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0as4ra1y.java:22)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // no substring\
    \ to find.\n        if (substring.length() == 0) {\n            return 0l;\n \
    \       }\n        // no string to count.\n        if (string.length() == 0) {\n\
    \            return 0l;\n        }\n        // String is smaller than substring.\n\
    \        if (string.length() < substring.length()) {\n            return 0l;\n\
    \        }\n        long n = 0l;\n        for (int i = 0; i <= string.length()\
    \ - substring.length(); i++) {\n            boolean match = true;\n          \
    \  for (int j = 0; j < substring.length(); j++) {\n                if (string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                    match = false;\n       \
    \             break;\n                }\n            }\n            if (match)\
    \ {\n                n++;\n            }\n        }\n        return n;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long cnt\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                cnt++;\n            }\n        }\n        return cnt;\n \
    \   }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c\
    \ -> string.split(c + \"\")).flatMap(Arrays::stream).filter(s -> s.indexOf(substring)\
    \ >= 0).count();\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpju013jdq.java:21)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig7udaao.java:21)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int index\
    \ = 0;\n        int count = 0;\n        while(index >= 0) {\n            index\
    \ = string.indexOf(substring, index);\n            if(index >= 0) {\n        \
    \        count += 1;\n                index += substring.length();\n         \
    \   }\n        }\n        return (long) count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvineyqob.java:31)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int count\
    \ = 0;\n        int index = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          count++;\n                index += substring.length();\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ysgk49u.java:31)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int ans\
    \ = 0;\n        int length = substring.length();\n        for (int i = 0; i <\
    \ string.length() - length + 1; i++) {\n            if (string.substring(i, i\
    \ + length).equals(substring)) {\n                ans++;\n            }\n    \
    \    }\n        return ans;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long ret\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            String substring1 = string.substring(i, i + substring.length());\n\
    \            if (substring1.equals(substring)) {\n                ret++;\n   \
    \         }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        if(string.length() < substring.length()) {\n            return\
    \ result;\n        }\n        for(int i = 0; i < string.length() - substring.length()\
    \ + 1; i++) {\n            if(string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                result++;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); ++i) {\n            if (i+substring.length()\
    \ > string.length()) {\n                break;\n            }\n            String\
    \ currentString = string.substring(i, i+substring.length());\n            if (currentString.equals(substring))\
    \ {\n                count += 1;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        String\
    \ s = string;\n        String t = substring;\n        int n = s.length();\n  \
    \      int m = t.length();\n        if (m > n) return 0;\n        long res = 0;\n\
    \        for (int i = 0; i <= n - m; i++) {\n            int j = 0;\n        \
    \    while (j < m && s.charAt(i + j) == t.charAt(j)) {\n                j++;\n\
    \            }\n            if (j == m) {\n                res++;\n          \
    \  }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while (index < string.length()) {\n  \
    \          index = string.indexOf(substring, index);\n            if (index ==\
    \ -1) {\n                break;\n            }\n            count++;\n       \
    \     index++;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // you\
    \ code here\n        int l1 = string.length();\n        int l2 = substring.length();\n\
    \        if (l1 < l2) return 0;\n        else if (l1 == l2) {\n            if\
    \ (string.equals(substring)) return 1;\n            else return 0;\n        }\n\
    \        else {\n            long count = 0;\n            for (int i = 0; i <=\
    \ l1 - l2; i++) {\n                if (string.substring(i, i + l2).equals(substring))\
    \ {\n                    count += 1;\n                }\n            }\n     \
    \       return count;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long res\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                res++;\n            }\n        }\n        return res;\n \
    \   }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\n\
    \                count++;\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        String sub = substring;\n        while (string.contains(sub))\
    \ {\n            result++;\n            int i = string.indexOf(sub);\n       \
    \     i++;\n            string = string.substring(i);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.replaceAll(\"(?!\" + substring + \")+\", \" \").split(\" \").length -\
    \ 1;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1o9eh2ti.java:20)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig7udaao.java:21)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwslcv99v.java:28)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int index\
    \ = 0;\n        int count = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          index += substring.length();\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pgl70gm.java:31)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Long.valueOf(\n                string.length() -\n                string.replace(substring,\
    \ \"\").length()\n        ) / substring.length();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70wffrky.java:25)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (i\
    \ + substring.length() <= string.length()) {\n                String currentString\
    \ = string.substring(i, i + substring.length());\n                if (currentString.equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0l;\n        }\n    \
    \    long count = 0l;\n        int j = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(j)) {\n       \
    \         j++;\n                if (j == substring.length()) {\n             \
    \       count++;\n                    j = 0;\n                }\n            }\
    \ else {\n                j = 0;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpojpsuosj.java:38)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long c=0;\n\
    \        int i=0;\n        while(i<string.length()){\n            if(string.substring(i).startsWith(substring)){\n\
    \                c++;\n                i+=substring.length();\n            }else{\n\
    \                i++;\n            }\n        }\n        return c;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n \
    \   assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwp_bqhix.java:32)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwslcv99v.java:28)\n"
  stdout: ''
  timestamp: 1660011205
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int size = substring.length();\n        int i = 0;\n        while\
    \ (i < string.length()) {\n            if (string.substring(i, i + size).equals(substring))\
    \ {\n                count += 1;\n                i += size;\n            } else\
    \ {\n                i += 1;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpo_aj_dk1.java:21)\n\
    \tat Problem.main(tmpo_aj_dk1.java:33)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0l;\n        for (int i = 0; i < string.length(); i++) {\n            if (i\
    \ + substring.length() <= string.length()) {\n                if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                    result++;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011206
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ IntStream.range(0, (string.length() - substring.length() + 1)).mapToObj(i ->\
    \ string.substring(i, (i + substring.length()))).filter(substring::equals).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011206
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int subStringLength\
    \ = substring.length();\n        int stringLength = string.length();\n       \
    \ long count = 0;\n        for (int i = 0; i < stringLength; i++) {\n        \
    \    for (int j = i + 1; j <= stringLength; j++) {\n                if (j - i\
    \ == subStringLength) {\n                    if (string.substring(i, j).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0;\n        }\n        if (string.equals(substring))\
    \ {\n            return 1;\n        }\n        int result = 0;\n        int i\
    \ = 0;\n        while (i < string.length() - substring.length() + 1) {\n     \
    \       if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                result++;\n                i += substring.length();\n       \
    \     } else {\n                i++;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo3peg9tz.java:38)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0l;\n        }\n        if (string.length()\
    \ == substring.length()) {\n            return (string.equals(substring)) ? 1l\
    \ : 0l;\n        }\n        long count = 0l;\n        long lastCount = howManyTimes(string.substring(1),\
    \ substring);\n        if (lastCount == 0) {\n            if (string.substring(0,\
    \ 1).equals(substring)) {\n                count++;\n            }\n        }\
    \ else {\n            if (string.substring(0, 1).equals(substring.substring(0,\
    \ 1))) {\n                count += lastCount;\n            }\n        }\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplaok32wy.java:38)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        String\
    \ regex = String.format(\"(?=%s)\", substring);\n        int num = (int) Arrays.stream(string.split(regex,\
    \ -1)).count() - 1;\n        return num;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1zw_6qjy.java:23)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.isEmpty()\
    \ || substring.isEmpty()) return 0;\n        return string.split(substring, -1).length\
    \ - 1;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpius9guj1.java:23)\n"
  stdout: ''
  timestamp: 1660011206
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long counter\
    \ = 0;\n        int N = string.length();\n        int M = substring.length();\n\
    \        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < M; j++)\
    \ {\n                if (i + j < N && string.charAt(i + j) == substring.charAt(j))\
    \ {\n                    if (j == M - 1) counter++;\n                } else break;\n\
    \            }\n        }\n        return counter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Long.valueOf(string.split(substring, -1).length) - 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgd38nr7x.java:22)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.split(substring, -1).length - 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgdrgp02h.java:22)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long n\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            int a\
    \ = string.indexOf(substring, i);\n            if (a == -1) {\n              \
    \  break;\n            }\n            n++;\n            i = a;\n        }\n  \
    \      return n;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ string.split(substring).length-1\n        // 3\n        // >>> \"\".split(\"\
    ,\").length-1\n        // -1\n        if (string.length() == 0 || substring.length()\
    \ == 0) return 0;\n        return (long) string.split(substring).length - 1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpagt49_p1.java:26)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ java.util.regex.Pattern.compile(substring).matcher(string).results().count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0as4ra1y.java:22)\n"
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ IntStream.range(0, string.length() - substring.length() + 1)\n             \
    \   .filter(idx -> string.substring(idx, idx + substring.length()).equals(substring))\n\
    \                .count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long)IntStream.range(0, string.length() - substring.length() + 1)\n       \
    \     .filter(i -> string.substring(i, i + substring.length()).equals(substring))\n\
    \            .count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long) string.split(substring, -1).length - 1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnjw9sok7.java:22)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int lastIndex\
    \ = 0;\n        int count = 0;\n        while(lastIndex != -1){\n            lastIndex\
    \ = string.indexOf(substring,lastIndex);\n            if(lastIndex != -1){\n \
    \               count ++;\n                lastIndex += substring.length();\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbddxh6yn.java:31)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (i\
    \ + substring.length() > string.length()) {\n                break;\n        \
    \    }\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count += 1;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long ans\
    \ = 0;\n        int idx = 0;\n        while (idx < string.length()) {\n      \
    \      idx = string.indexOf(substring, idx);\n            if (idx == -1) break;\n\
    \            ++ans;\n            idx += substring.length();\n        }\n     \
    \   return ans;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0wbi5276.java:30)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        if (string.length() == 0) {\n            return count;\n     \
    \   } else {\n            for (int i = 0; i < string.length(); i++) {\n      \
    \          if (string.substring(i).startsWith(substring)) {\n                \
    \    count++;\n                }\n            }\n            return count;\n \
    \       }\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        int from = 0;\n        int index = string.indexOf(substring, from);\n\
    \        while (index >= 0) {\n            from = index + 1;\n            result++;\n\
    \            index = string.indexOf(substring, from);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Stream.iterate(0, x -> x <= string.length() - substring.length(), x -> x + 1)\n\
    \                .filter(x -> string.substring(x, x + substring.length()).equals(substring))\n\
    \                .count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int n = string.length();\n        int m = substring.length();\n\
    \        for (int i = 0; i < n; i++) {\n            if (i+m > n) {\n         \
    \       break;\n            }\n            String fragment = string.substring(i,\
    \ i+m);\n            if (fragment.equals(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int strIndex = 0;\n        int subIndex = 0;\n        int strLen\
    \ = string.length();\n        int subLen = substring.length();\n        while\
    \ (strIndex < strLen) {\n            char strChar = string.charAt(strIndex);\n\
    \            char subChar = substring.charAt(subIndex);\n            if (strChar\
    \ == subChar) {\n                subIndex += 1;\n                if (subIndex\
    \ == subLen) {\n                    count += 1;\n                    subIndex\
    \ = 0;\n                }\n            } else {\n                subIndex = 0;\n\
    \            }\n            strIndex += 1;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3avwuzy5.java:41)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().mapToObj(ch -> Character.toString((char) ch)).filter(c -> c.equals(substring)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4v8d6zn4.java:22)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long howManyTimes\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            int index\
    \ = string.indexOf(substring, i);\n            if (index != -1) {\n          \
    \      howManyTimes++;\n                i = index;\n            }\n        }\n\
    \        return howManyTimes;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0;\n        }\n        long ret\
    \ = 0;\n        int i = 0;\n        while (i <= string.length() - substring.length())\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                ret++;\n                i += substring.length();\n      \
    \      } else {\n                i++;\n            }\n        }\n        return\
    \ ret;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1wdqb4ev.java:35)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // BigInteger\
    \ temp = BigInteger.ZERO;\n        // for (BigInteger i = BigInteger.ZERO; i.compareTo(new\
    \ BigInteger(string.length() + \"\")) < 0; i = i.add(BigInteger.ONE)) {\n    \
    \    //     if (i.add(new BigInteger(substring.length() + \"\")).compareTo(new\
    \ BigInteger(string.length() + \"\")) <= 0) {\n        //         if (string.substring(i.intValue(),\
    \ i.add(new BigInteger(substring.length() + \"\")).intValue()).equals(substring))\
    \ {\n        //             temp = temp.add(BigInteger.ONE);\n        //     \
    \    }\n        //     }\n        // }\n        // return temp;\n        long\
    \ temp = 0;\n        for (long i = 0; i < string.length(); i++) {\n          \
    \  if (i + substring.length() <= string.length()) {\n                if (string.substring((int)i,\
    \ (int)(i + substring.length())).equals(substring)) {\n                    temp++;\n\
    \                }\n            }\n        }\n        return temp;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n \
    \   assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011207
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        Matcher\
    \ matcher = Pattern.compile(Pattern.quote(substring)).matcher(string);\n     \
    \   long count = 0;\n        while (matcher.find()) {\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdey1toyh.java:17: error: cannot find symbol\n        Matcher matcher\
    \ = Pattern.compile(Pattern.quote(substring)).matcher(string);\n        ^\n  symbol:\
    \   class Matcher\n  location: class Problem\n/tmp/tmpdey1toyh.java:17: error:\
    \ cannot find symbol\n        Matcher matcher = Pattern.compile(Pattern.quote(substring)).matcher(string);\n\
    \                          ^\n  symbol:   variable Pattern\n  location: class\
    \ Problem\n/tmp/tmpdey1toyh.java:17: error: cannot find symbol\n        Matcher\
    \ matcher = Pattern.compile(Pattern.quote(substring)).matcher(string);\n     \
    \                                     ^\n  symbol:   variable Pattern\n  location:\
    \ class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ < substring.length()) {\n            return 0;\n        }\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length() - substring.length() + 1;\
    \ i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ \n            (long) IntStream.range(0, string.length() - substring.length()\
    \ + 1)\n                .filter(i -> substring.equals(string.substring(i, i +\
    \ substring.length())))\n                .count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        throw new\
    \ RuntimeException(\"Not Implemented.\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented.\n\
    \tat Problem.howManyTimes(tmpc3kdlm_g.java:17)\n\tat Problem.main(tmpc3kdlm_g.java:20)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ a = \"aaaaaa\"\n        // >>> a.replace(\"aa\", \"A\")\n        // 'AaAaA'\n\
    \        // >>> a.replace(\"aa\", \"A\").length()\n        // 5\n        // >>>\
    \ a.length()\n        // 6\n        // >>> 6 - 5\n        // 1\n        return\
    \ (long) Math.ceil(((double) string.length() - (double) string.replace(substring,\
    \ \"\").length()) / (double) substring.length());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe3fqpo7o.java:31)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long total\
    \ = 0;\n        int start = 0;\n        while(true) {\n            int location\
    \ = string.indexOf(substring, start);\n            if(location == -1) break;\n\
    \            total++;\n            start = location + 1;\n        }\n        return\
    \ total;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        String[]\
    \ parts = string.split(substring);\n        return parts.length - 1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0t_emoio.java:22)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = string.indexOf(substring);\n        while (index !=\
    \ -1) {\n            count++;\n            index = string.indexOf(substring, index\
    \ + 1);\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int size\
    \ = substring.length();\n        long result = 0;\n        for (int i = 0; i <\
    \ string.length() - size + 1; i++) {\n            if (string.substring(i, i +\
    \ size).equals(substring)) {\n                result += 1;\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        int index = 0;\n        for (;;) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) break;\n            result += 1;\n   \
    \         index += 1;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        if (string.isEmpty() || substring.isEmpty()) {\n            return\
    \ count;\n        }\n        int len = substring.length();\n        int index\
    \ = string.indexOf(substring);\n        while (index != -1) {\n            count++;\n\
    \            index = string.indexOf(substring, index + len);\n        }\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3z9adi6.java:32)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011204
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ java.util.stream.IntStream.range(0, string.length() - substring.length() + 1).map(i\
    \ ->\n        {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                return 1;\n            } else {\n                return 0;\n\
    \            }\n        }).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ Arrays.stream(string.split(substring)).length - 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfloowsj.java:17: error: cannot find symbol\n        return Arrays.stream(string.split(substring)).length\
    \ - 1;\n                                                     ^\n  symbol:   variable\
    \ length\n  location: interface Stream<String>\n1 error\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                result++;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int start\
    \ = 0;\n        int end = substring.length();\n        int count = 0;\n      \
    \  int length = string.length();\n        while (end <= length) {\n          \
    \  String sub = string.substring(start, end);\n            if (sub.equals(substring))\
    \ {\n                count++;\n            }\n            start++;\n         \
    \   end++;\n        }\n        return (long) count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig7udaao.java:21)\n"
  stdout: ''
  timestamp: 1660011203
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (string + string).substring(1, string.length() + string.length() - 1).split(substring).length\
    \ - 1;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 1, end -1, length 0\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpl1jovr8k.java:17)\n\
    \tat Problem.main(tmpl1jovr8k.java:20)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // <<<\
    \ Don't delete this line. It's used for automatic testing!\n        long result\
    \ = 0;\n        // Iterate through the original string to find the first occurence\
    \ of the substring.\n        for (int i = 0; i < string.length(); i++) {\n   \
    \         // If the first character of the substring matches, check if the rest\
    \ of the substring matches.\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() >= i + substring.length()) {\n      \
    \              boolean isMatch = true;\n                    for (int j = 0; j\
    \ < substring.length(); j++) {\n                        if (string.charAt(i +\
    \ j) != substring.charAt(j)) {\n                            isMatch = false;\n\
    \                            break;\n                        }\n             \
    \       }\n                    if (isMatch) {\n                        result++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index++;\n            count++;\n        }\n  \
    \      return count;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx42oao7.java:21)\n"
  stdout: ''
  timestamp: 1660011200
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ stream(string.split(substring)).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq864gevk.java:17: error: cannot find symbol\n        return stream(string.split(substring)).count();\n\
    \               ^\n  symbol:   method stream(String[])\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int length\
    \ = substring.length();\n        int count = 0;\n        for (int i = 0; i <=\
    \ string.length() - length; i++) {\n            if (string.substring(i, i + length).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int result\
    \ = 0;\n        int index = 0;\n        while(index < string.length()) {\n   \
    \         int match = string.indexOf(substring, index);\n            if(match\
    \ == -1) {\n                break;\n            }\n            result += 1;\n\
    \            index = match + 1;\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n \
    \   assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long)string.split(substring, -1).length - 1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfsmohg2u.java:22)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        int indexOf = string.indexOf(substring);\n        while (indexOf\
    \ != -1) {\n            result++;\n            indexOf = string.indexOf(substring,\
    \ indexOf + 1);\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long)string.split(substring, -1).length - 1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfsmohg2u.java:22)\n"
  stdout: ''
  timestamp: 1660011208
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // BEGIN\
    \ Solution\n        return (long) string.chars().parallel().mapToObj(i -> new\
    \ String(new char[]{(char) i})).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n        // END Solution\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgwf7wk1k.java:23)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long ans\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.startsWith(substring,\
    \ i)) {\n                ans += 1;\n            }\n        }\n        return ans;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0l;\n        }\n    \
    \    long count = 0l;\n        for (int i = 0; i < string.length(); i++) {\n \
    \           if (string.charAt(i) == substring.charAt(0)) {\n                int\
    \ index = 0;\n                boolean isFound = true;\n                while (index\
    \ < substring.length() && i + index < string.length()) {\n                   \
    \ if (string.charAt(i + index) != substring.charAt(index)) {\n               \
    \         isFound = false;\n                        break;\n                 \
    \   }\n                    index++;\n                }\n                if (isFound)\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsnvy8oy.java:42)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // your\
    \ code here\n        long res = 0;\n        int index = 0;\n        int len =\
    \ substring.length();\n        while(index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if(index != -1) {\n                index += len;\n    \
    \            res++;\n            }\n        }\n        return res;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n \
    \   assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgx4di15o.java:33)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int sl\
    \ = string.length();\n        int subl = substring.length();\n        if (sl ==\
    \ 0 || subl == 0 || subl > sl) {\n            return 0l;\n        }\n        int\
    \ c = 0;\n        for (int i = 0; i <= sl - subl; i++) {\n            if (string.substring(i,\
    \ i + subl).equals(substring)) {\n                c++;\n            }\n      \
    \  }\n        return (long) c;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (int) Stream.iterate(0,n->n+1).limit(string.length()).filter(n->string.substring(n).startsWith(substring)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ ENTER CODE HERE <<<\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy095m8wy.java:22)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long counter\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i +=\
    \ 1) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                counter += 1;\n            }\n        }\n        return counter;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ == 0 || substring.length() == 0) return 0l;\n        if (string.length() < substring.length())\
    \ return 0l;\n        long count = 0l;\n        int lastIndex = 0;\n        for\
    \ (;;) {\n            int index = string.indexOf(substring, lastIndex);\n    \
    \        if (index == -1) break;\n            count += 1l;\n            lastIndex\
    \ = index + 1;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int len\
    \ = substring.length();\n        // We add the last character of the original\
    \ string to ensure we can find the last pattern\n        // in the string.\n \
    \       String stringWithLastCharacter = string + string.charAt(string.length()\
    \ - 1);\n        // 0 offset for the first position.\n        long offset = 0l;\n\
    \        long howManyTimes = 0l;\n        // We will try to find the substring\
    \ in the string using a sliding window in the original string.\n        // The\
    \ window will be of the same size as the substring (len).\n        while (offset\
    \ < stringWithLastCharacter.length() - len) {\n            // We get the substring\
    \ in the sliding window in the original string.\n            String sub = stringWithLastCharacter.substring(offset,\
    \ offset + len);\n            // If it is equal to the pattern we are looking\
    \ for we have found one occurence of the\n            // pattern.\n          \
    \  if (sub.equals(substring)) {\n                howManyTimes += 1l;\n       \
    \         // We can skip the window to the next occurence of the pattern.\n  \
    \              offset += len;\n            } else {\n                // Otherwise\
    \ we move the window one position to the right.\n                offset += 1l;\n\
    \            }\n        }\n        return howManyTimes;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzdkmue2n.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            String sub = stringWithLastCharacter.substring(offset,\
    \ offset + len);\n                                                           ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        long result\
    \ = 0;\n        int pos = string.indexOf(substring);\n        while (pos >= 0)\
    \ {\n            result++;\n            pos = string.indexOf(substring, pos +\
    \ 1);\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0;\n        }\n     \
    \   int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        int start = i;\n            int end = start + substring.length();\n \
    \           if (end <= string.length()) {\n                String found = string.substring(start,\
    \ end);\n                if (found.equals(substring)) {\n                    count\
    \ += 1;\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ IntStream.range(0, string.length() - substring.length() + 1)\n          .mapToObj(i\
    \ -> new Pair<>(string.substring(i, i + substring.length()), i))\n          .filter(pair\
    \ -> pair.getValue0().equals(substring))\n          .count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.howManyTimes(tmpvkol1mck.java:17)\n\tat Problem.main(tmpvkol1mck.java:23)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        // >>>\
    \ howManyTimes((\"\"), (\"a\"))\n        // (0l)\n        // >>> howManyTimes((\"\
    aaa\"), (\"a\"))\n        // (3l)\n        // >>> howManyTimes((\"aaaa\"), (\"\
    aa\"))\n        // (3l)\n        // >>> howManyTimes((\"ababa\"), (\"aba\"))\n\
    \        // (2l)\n        // >>> howManyTimes((\"aabaaabaaa\"), (\"aa\"))\n  \
    \      // (7l)\n        // >>> howManyTimes((\"aabaaabaaa\"), (\"a\"))\n     \
    \   // (11l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"abc\"))\n   \
    \     // (4l)\n        // >>> howManyTimes((\"aaaaaa\"), (\"aa\"))\n        //\
    \ (5l)\n        // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n        // (3l)\n \
    \       // >>> howManyTimes((\"a\"), (\"a\"))\n        // (1l)\n        // >>>\
    \ howManyTimes((\"\"), (\"\"))\n        // (1l)\n        // >>> howManyTimes((\"\
    a\"), (\"\"))\n        // (1l)\n        // >>> howManyTimes((\"abcabcabcabc\"\
    ), (\"abcabcabcabc\"))\n        // (1l)\n        // >>> howManyTimes((\"abcabcabcabc\"\
    ), (\"abcabcabc\"))\n        // (1l)\n        // >>> howManyTimes((\"abcabcabcabc\"\
    ), (\"abcabcab\"))\n        // (0l)\n        // >>> howManyTimes((\"abcabcabcabc\"\
    ), (\"\"))\n        // (1l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"\
    f\"))\n        // (0l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"abcabcdef\"\
    ))\n        // (0l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"abcdabcabc\"\
    ))\n        // (0l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"abcd\"\
    ))\n        // (0l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"abcdabcd\"\
    ))\n        // (0l)\n        // >>> howManyTimes((\"abcabcabcabc\"), (\"abcdabcdab\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx9r9m2qw.java:60: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        //return\
    \ Pattern.compile(Pattern.quote(substring)).matcher(string).results().count();\n\
    \        long count = 0;\n        for (int i = 0; i <= string.length() - substring.length();\
    \ i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ string.chars().mapToObj(\n            i -> string.substring(i, string.length())\n\
    \        ).filter(\n            s -> s.startsWith(substring)\n        ).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 120, end 7, length 7\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.lambda$howManyTimes$0(tmpcqj6ztjf.java:18)\n\
    \tat java.base/java.util.stream.IntPipeline$1$1.accept(IntPipeline.java:180)\n\
    \tat java.base/java.lang.StringLatin1$CharsSpliterator.forEachRemaining(StringLatin1.java:824)\n\
    \tat java.base/java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:711)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.howManyTimes(tmpcqj6ztjf.java:21)\n\tat Problem.main(tmpcqj6ztjf.java:25)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        if (string.isEmpty()\
    \ || substring.isEmpty()) {\n            return 0;\n        }\n        return\
    \ string.split(substring, -1).length - 1;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1g63d18y.java:25)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        return\
    \ (long) string.split(substring, -1).length - 1;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnjw9sok7.java:22)\n"
  stdout: ''
  timestamp: 1660011207
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        final int\
    \ sl = string.length();\n        final int dl = substring.length();\n        int\
    \ counter = 0;\n        for (int i = 0; i < sl - dl + 1; i++) {\n            if\
    \ (string.substring(i, i + dl).equals(substring)) {\n                counter++;\n\
    \            }\n        }\n        return counter;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0l));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n      int count\
    \ = 0;\n      int idx = 0;\n      while ((idx = string.indexOf(substring, idx))\
    \ != -1) {\n        idx += substring.length();\n        count++;\n      }\n  \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0hf784gu.java:28)\n"
  stdout: ''
  timestamp: 1660011209
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"\
    ), (\"a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3l)\n    // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public\
    \ static long howManyTimes(String string, String substring) {\n        int sublen\
    \ = substring.length();\n        long count = 0;\n        for (int index = 0;\
    \ index <= string.length() - sublen; index++) {\n            count += string.substring(index,\
    \ index + sublen).equals(substring) ? 1 : 0;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011209

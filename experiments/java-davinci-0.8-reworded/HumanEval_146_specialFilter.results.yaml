language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // need to\
    \ change this function's name, it's a reserved word\n        class helper {\n\
    \            public long getFirstDigit(long n) {\n                long[] digits\
    \ = getDigits(n);\n                return digits[0];\n            }\n        \
    \    public long getLastDigit(long n) {\n                long[] digits = getDigits(n);\n\
    \                return digits[digits.length - 1];\n            }\n          \
    \  public long[] getDigits(long n) {\n                ArrayList<Long> digits =\
    \ new ArrayList<Long>();\n                while (n != 0) {\n                 \
    \   digits.add(n % 10);\n                    n /= 10;\n                }\n   \
    \             Collections.reverse(digits);\n                return digits.stream().mapToLong(i\
    \ -> i).toArray();\n            }\n        }\n        helper h = new helper();\n\
    \        return nums.stream().filter(x -> x > 10).filter(x -> {\n            long\
    \ firstDigit = h.getFirstDigit(x);\n            long lastDigit = h.getLastDigit(x);\n\
    \            return firstDigit % 2 != 0 && lastDigit % 2 != 0;\n        }).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // get numbers\
    \ which are > 10\n        List<Long> biggerThan10 = nums.stream().filter(i ->\
    \ i > 10).collect(Collectors.toList());\n        // filter even numbers and get\
    \ the first and last digit of a number\n        return biggerThan10.stream().filter(i\
    \ -> {\n                long firstDigit = i % 10;\n                long lastDigit\
    \ = (i / 10) % 10;\n                return firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0;\n            }).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppany6c0w.java:30)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        //first and\
    \ last digits of number are odd\n        // LongStream.range(1,10).boxed().collect(Collectors.toCollection(ArrayList::new));\
    \ \n        // long a = nums.stream().filter(n -> n % 10 % 2 != 0).count();\n\
    \        return nums.stream().filter(n -> n > 10 && n % 10 % 2 != 0 && n / (long)Math.pow(10,\
    \ Math.floor(Math.log10(n))) % 2 != 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3ycwqtw4.java:23: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                   \
    \         ^\n  symbol:   method isFirstDigitOdd(long)\n  location: class Problem\n\
    /tmp/tmp3ycwqtw4.java:23: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num)) {\n                        \
    \                            ^\n  symbol:   method isLastDigitOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 1l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafqig_ga.java:21)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // INSERT\
    \ YOUR CODE HERE\n        List<Long> listOfAllNums = new ArrayList<>();\n    \
    \    for (Long num : nums) {\n            listOfAllNums.add(num);\n        }\n\
    \        // listOfAllNums.forEach(System.out::println);\n        List<Long> numList\
    \ = new ArrayList<>();\n        for (Long num : listOfAllNums) {\n           \
    \ if (num > 10) {\n                // System.out.println(num);\n             \
    \   // List<Integer> numList = new ArrayList<>();\n                List<String>\
    \ numListAsString = new ArrayList<>();\n                numListAsString.add(num.toString());\n\
    \                for (String numStr : numListAsString) {\n                   \
    \ char[] arrayOfChars = numStr.toCharArray();\n                    // System.out.println(arrayOfChars[0]);\n\
    \                    // System.out.println(arrayOfChars[arrayOfChars.length -\
    \ 1]);\n                    if (arrayOfChars[0] % 2 != 0 && arrayOfChars[arrayOfChars.length\
    \ - 1] % 2 != 0) {\n                        numList.add(num);\n              \
    \      }\n                }\n            }\n        }\n        // numList.forEach(System.out::println);\n\
    \        return numList.size();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Replace\
    \ the line below with your answer.\n        return nums.stream().filter(l -> l\
    \ > 10 && (l % 10) % 2 == 1 && (l % 10) == l / (long)Math.pow(10, numLength(l)\
    \ - 1)).count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9atk575s.java:19: error: cannot find symbol\n        return nums.stream().filter(l\
    \ -> l > 10 && (l % 10) % 2 == 1 && (l % 10) == l / (long)Math.pow(10, numLength(l)\
    \ - 1)).count();\n                                                           \
    \                                                ^\n  symbol:   method numLength(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n\t\t// YOUR CODE\
    \ HERE\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmee_2ejl.java:23)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> Math.abs(num) > 10 &&\n                                            Math.abs(num)\
    \ / 10 % 2 != 0 &&\n                                            Math.abs(num)\
    \ % 10 % 2 != 0)\n                            .count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhzmjzcq.java:25)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy13j25v.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(\
    \ x -> {\n            Long t = Math.abs(x);\n            return x > 10 && t %\
    \ 10 % 2 != 0 && t / 10 % 10 % 2 != 0;\n        }).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgqnk6kv.java:26)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && Math.abs(x) % 10 % 2 != 0 && x / 10 % 10 % 2 != 0).count();\n \
    \   }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptogp0ow7.java:23)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // INSERT\
    \ YOUR CODE HERE\n        return nums.stream().filter(v -> v > 10 &&\n       \
    \     Math.abs(v) % 10 % 2 != 0 && v / 10 % 10 % 2 != 0).count();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6x83eka.java:25)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here.\n        // Find all numbers in the array list that are greater\
    \ than 10\n        List<Long> tenOrAbove = new ArrayList<Long>();\n        for\
    \ (Long num : nums) {\n            if (num > 10) {\n                tenOrAbove.add(num);\n\
    \            }\n        }\n        // Find all numbers in the array list that\
    \ have an odd first and last digit\n        List<Long> oddFirstAndLast = new ArrayList<Long>();\n\
    \        for (Long num : tenOrAbove) {\n            String numAsString = num.toString();\n\
    \            String firstDigitAsString = String.valueOf(numAsString.charAt(0));\n\
    \            String lastDigitAsString = String.valueOf(numAsString.charAt(numAsString.length()\
    \ - 1));\n            Long firstDigit = Long.parseLong(firstDigitAsString);\n\
    \            Long lastDigit = Long.parseLong(lastDigitAsString);\n           \
    \ if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n                oddFirstAndLast.add(num);\n\
    \            }\n        }\n        return oddFirstAndLast.size();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyilztq_.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy13j25v.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(e\
    \ -> e > 10 && isFirstLastDigitOdd(e)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyldpyikl.java:18: error: cannot find symbol\n        return nums.stream().filter(e\
    \ -> e > 10 && isFirstLastDigitOdd(e)).count();\n                            \
    \                       ^\n  symbol:   method isFirstLastDigitOdd(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> Math.abs(n) > 10 && n % 2 != 0 && n % 5 != 0).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpakf09zs6.java:23)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n      throw new UnsupportedOperationException(\"\
    Please implement this function\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement this function\n\tat Problem.specialFilter(tmp21503qo6.java:18)\n\t\
    at Problem.main(tmp21503qo6.java:21)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> isOdd(firstDigit(x)) && isOdd(lastDigit(x))).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu35f0sjq.java:18: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> isOdd(firstDigit(x)) && isOdd(lastDigit(x))).count();\n\
    \                                                                   ^\n  symbol:\
    \   method firstDigit(Long)\n  location: class Problem\n/tmp/tmpu35f0sjq.java:18:\
    \ error: cannot find symbol\n        return nums.stream().filter(x -> x > 10).filter(x\
    \ -> isOdd(firstDigit(x)) && isOdd(lastDigit(x))).count();\n                 \
    \                                                                          ^\n\
    \  symbol:   method lastDigit(Long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(Problem::filter).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppibxp430.java:18: error: invalid method reference\n        return\
    \ nums.stream().filter(Problem::filter).count();\n                           \
    \         ^\n  cannot find symbol\n    symbol:   method filter(T)\n    location:\
    \ class Problem\n  where T is a type-variable:\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozmd4n1h.java:25)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        //long count\
    \ = 0;\n        // for (long l : nums) {\n        //     if (l > 10 && l % 2 !=\
    \ 0 && (l / 10) % 2 != 0) {\n        //         count++;\n        //     }\n \
    \       // }\n        // return count;\n        return nums.stream().filter(l\
    \ -> l > 10 && l % 2 != 0 && (l / 10) % 2 != 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1njbdf4.java:30)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your solution here\n        return nums.stream().filter(e -> e > 10 && (e %\
    \ 10) % 2 != 0 && (e / 10) % 2 != 0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1mb9ahut.java:24)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long out0\
    \ = 0l;\n        for (Long n : nums) {\n            if (n >= 10l) {\n        \
    \        if (n >= 0l) {\n                    if (n % 2l == 1l) {\n           \
    \             if (n % 10l == 1l) {\n                            out0 = out0 +\
    \ 1l;\n                        }\n                    }\n                } else\
    \ {\n                    if (n % 2l == -1l) {\n                        if (n %\
    \ 10l == -1l) {\n                            out0 = out0 + 1l;\n             \
    \           }\n                    }\n                }\n            }\n     \
    \   }\n        return out0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptjeh2pla.java:40)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long i : nums) {\n            if (i > 10 && i % 2 != 0 &&\
    \ isOdd(i)) {\n                count += 1;\n            }\n        }\n       \
    \ return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsxtyub4r.java:20: error: cannot find symbol\n            if (i\
    \ > 10 && i % 2 != 0 && isOdd(i)) {\n                                        ^\n\
    \  symbol:   method isOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(\n\
    \            n -> n > 10\n            && n.toString().length() > 1\n         \
    \   && n.toString().charAt(0) % 2 != 0\n            && n.toString().charAt(n.toString().length()\
    \ - 1) % 2 != 0\n        ).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> firstDigit(n) % 2 != 0 && lastDigit(n) % 2 != 0 && n > 10).count();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp44eu1cbc.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> firstDigit(n) % 2 != 0 && lastDigit(n) % 2 != 0 && n > 10).count();\n   \
    \                                      ^\n  symbol:   method firstDigit(Long)\n\
    \  location: class Problem\n/tmp/tmp44eu1cbc.java:18: error: cannot find symbol\n\
    \        return nums.stream().filter(n -> firstDigit(n) % 2 != 0 && lastDigit(n)\
    \ % 2 != 0 && n > 10).count();\n                                             \
    \                      ^\n  symbol:   method lastDigit(Long)\n  location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> (n > 10 && n % 2 == 1 && (n < 0 ? -n : n) % 10 == 1)).count();\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqxrvsw8.java:22)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        throw new\
    \ RuntimeException(\"Define me\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Define me\n\t\
    at Problem.specialFilter(tmpjzvkucl8.java:18)\n\tat Problem.main(tmpjzvkucl8.java:21)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> \n            num > 10 && \n            num % 2 == 1 && \n            num\
    \ % 10 == 1 || num % 10 == 3 || num % 10 == 5 || num % 10 == 7 || num % 10 ==\
    \ 9\n        ).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfw_1yjl0.java:25)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isFirstDigitOdd(num)\
    \ && isLastDigitOdd(num))\n                count++;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_m4ck2l7.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstDigitOdd(num) && isLastDigitOdd(num))\n                     \
    \       ^\n  symbol:   method isFirstDigitOdd(long)\n  location: class Problem\n\
    /tmp/tmp_m4ck2l7.java:20: error: cannot find symbol\n            if (num > 10\
    \ && isFirstDigitOdd(num) && isLastDigitOdd(num))\n                          \
    \                          ^\n  symbol:   method isLastDigitOdd(long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n\
    \            long num = nums.get(i);\n            if (num > 10) {\n          \
    \      String s = String.valueOf(num);\n                String firstDigit = String.valueOf(s.charAt(0));\n\
    \                String lastDigit = String.valueOf(s.charAt(s.length() - 1));\n\
    \                if (isOdd(firstDigit) && isOdd(lastDigit)) {\n              \
    \      result++;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzg_36ia_.java:26: error: cannot find symbol\n                if\
    \ (isOdd(firstDigit) && isOdd(lastDigit)) {\n                    ^\n  symbol:\
    \   method isOdd(String)\n  location: class Problem\n/tmp/tmpzg_36ia_.java:26:\
    \ error: cannot find symbol\n                if (isOdd(firstDigit) && isOdd(lastDigit))\
    \ {\n                                         ^\n  symbol:   method isOdd(String)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        // hmmm... interesting...\n        // Interesting in a bad way.\
    \ \n        // It's an arraylist. I can't use indexOf because arraylist is not\
    \ indexable. \n        // I'll have to iterate over the arraylist and put the\
    \ matches in another arraylist.\n        ArrayList<Long> matches = new ArrayList<Long>();\n\
    \        // I can't use a for loop because of concurrentmodificationexception\n\
    \        // I'll have to use an iterator.\n        // I think I'll use both a\
    \ while loop and an iterator.\n        Iterator<Long> iter = nums.iterator();\n\
    \        while (iter.hasNext()) {\n            long value = iter.next();\n   \
    \         int first_digit = (int) (value / Math.pow(10, Math.floor(Math.log10(value))));\n\
    \            int last_digit = (int) (value % 10);\n            if (first_digit\
    \ % 2 != 0 && last_digit % 2 != 0 && value > 10) {\n                matches.add(value);\n\
    \            }\n        }\n        return matches.size();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x / 10 % 2 == 1 && x % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7x5engl.java:22)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n      return nums.stream().filter(n\
    \ -> n > 10 && (n%10)%2 != 0 && (n/10)%2 != 0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8p8tzcgc.java:23)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10).filter(num -> num % 2 == 1).filter(num -> (num % 10) % 2 == 1).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp15cghrlx.java:23)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (isNumberOdd(num)) {\n                    count++;\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe2s72lt3.java:21: error: cannot find symbol\n                if\
    \ (isNumberOdd(num)) {\n                    ^\n  symbol:   method isNumberOdd(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // nums =\
    \ [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n        // write your\
    \ code here\n\n        return -1l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1g8_dvi.java:24)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10).filter(n -> (n % 10) % 2 == 1).filter(n -> ((n / 10) % 10) % 2 ==\
    \ 1).count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_y2ncnn0.java:23)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return nums.stream().filter(num -> num > 10).filter(num -> num % 2\
    \ == 1).filter(num -> num % 10 == 1 || num % 10 == 3 || num % 10 == 5 || num %\
    \ 10 == 7 || num % 10 == 9).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxq6ahz_.java:26)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> {\n            if (x > 10) {\n                if (x < 0) {\n            \
    \        x = x * -1;\n                }\n                if (x % 10 % 2 != 0 &&\
    \ x / 10 % 10 % 2 != 0) {\n                    return true;\n                }\n\
    \            }\n            return false;\n        }).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cqx3t1w.java:33)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && (num / 10) % 2 == 1) {\n                total++;\n            }\n     \
    \   }\n        return total;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgl8_xi4t.java:29)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        // Your code here\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8lgm5_ii.java:24)\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long l : nums) {\n            if (l > 10) {\n           \
    \     String num = l.toString();\n                if (num.length() > 1) {\n  \
    \                  if (num.charAt(0) % 2 != 0 && num.charAt(num.length() - 1)\
    \ % 2 != 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long n =\
    \ nums.size();\n        // TODO\n        return n;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv4aywnuw.java:23)\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long numberCount\
    \ = 0;\n        for (Long number : nums) {\n            if (number > 10 && isDigitOdd(number.toString().charAt(0))\
    \ && isDigitOdd(number.toString().charAt(number.toString().length() - 1))) {\n\
    \                numberCount++;\n            }\n        }\n        return numberCount;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfowyt1kz.java:20: error: cannot find symbol\n            if (number\
    \ > 10 && isDigitOdd(number.toString().charAt(0)) && isDigitOdd(number.toString().charAt(number.toString().length()\
    \ - 1))) {\n                               ^\n  symbol:   method isDigitOdd(char)\n\
    \  location: class Problem\n/tmp/tmpfowyt1kz.java:20: error: cannot find symbol\n\
    \            if (number > 10 && isDigitOdd(number.toString().charAt(0)) && isDigitOdd(number.toString().charAt(number.toString().length()\
    \ - 1))) {\n                                                                 \
    \         ^\n  symbol:   method isDigitOdd(char)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> isOdd(n) && Math.abs(n) > 10).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdw8eztee.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> isOdd(n) && Math.abs(n) > 10).count();\n                                \
    \         ^\n  symbol:   method isOdd(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n    \t\treturn nums.stream().filter(Problem::isGreaterThanTen).filter(Problem::isFirstAndLastDigitOdd).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdm3acwq9.java:18: error: invalid method reference\n    \t\treturn\
    \ nums.stream().filter(Problem::isGreaterThanTen).filter(Problem::isFirstAndLastDigitOdd).count();\n\
    \    \t\t                            ^\n  cannot find symbol\n    symbol:   method\
    \ isGreaterThanTen(T)\n    location: class Problem\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n/tmp/tmpdm3acwq9.java:18:\
    \ error: invalid method reference\n    \t\treturn nums.stream().filter(Problem::isGreaterThanTen).filter(Problem::isFirstAndLastDigitOdd).count();\n\
    \    \t\t                                                              ^\n  cannot\
    \ find symbol\n    symbol:   method isFirstAndLastDigitOdd()\n    location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        //long count = nums.stream().filter(num -> num >= 10 && num%2 == 1\
    \ && isOdd(num)).count();\n        //long count = nums.stream().filter(num ->\
    \ num >= 10 && num%2 == 1 && isOdd(num)).mapToLong(num -> num).sum();\n      \
    \  //long count = nums.stream().filter(num -> num >= 10 && num%2 == 1 && isOdd(num)).collect(Collectors.summingLong(num\
    \ -> num));\n        long count = nums.stream().filter(num -> num >= 10 && num%2\
    \ == 1 && isOdd(num)).collect(Collectors.summingLong(Long::longValue));\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvqu9q50z.java:24: error: cannot find symbol\n        long count\
    \ = nums.stream().filter(num -> num >= 10 && num%2 == 1 && isOdd(num)).collect(Collectors.summingLong(Long::longValue));\n\
    \                                                                            ^\n\
    \  symbol:   method isOdd(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011511
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here.\n        //Store number of elements that match the criteria\
    \ in a variable\n        long count = 0;\n        //Iterate through the list\n\
    \        for(long num : nums){\n            //If the number is above 10, check\
    \ if the first and last digits are odd\n            if(num > 10){\n          \
    \      String strNum = String.valueOf(num);\n                char firstDigit =\
    \ strNum.charAt(0);\n                char lastDigit = strNum.charAt(strNum.length()\
    \ - 1);\n                //If both digits are odd, count variable is incremented\
    \ by 1\n                if(Character.getNumericValue(firstDigit) % 2 != 0 && Character.getNumericValue(lastDigit)\
    \ % 2 != 0){\n                    count += 1;\n                }\n           \
    \ }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        /*\n    \
    \     * Write your code here.\n         */\n        return 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4b6zh3_g.java:25)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Fill in\
    \ your code here\n        int ans = 0;\n        for (Long i : nums) {\n      \
    \      if (i > 10) {\n                String num = i.toString();\n           \
    \     if (num.charAt(0) % 2 != 0 && num.charAt(num.length() - 1) % 2 != 0) {\n\
    \                    ans++;\n                }\n            }\n        }\n   \
    \     return ans;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return (long)nums.stream().filter(n\
    \ -> n > 10 && n % 2 == 1 && n / 10 % 2 == 1 && n % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg51sb417.java:22)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> (x > 10) && (isFirstDigitOdd(x)) && (isLastDigitOdd(x))).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4n2ht6xj.java:18: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> (x > 10) && (isFirstDigitOdd(x)) && (isLastDigitOdd(x))).count();\n     \
    \                                                 ^\n  symbol:   method isFirstDigitOdd(Long)\n\
    \  location: class Problem\n/tmp/tmp4n2ht6xj.java:18: error: cannot find symbol\n\
    \        return nums.stream().filter(x -> (x > 10) && (isFirstDigitOdd(x)) &&\
    \ (isLastDigitOdd(x))).count();\n                                            \
    \                                  ^\n  symbol:   method isLastDigitOdd(Long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // get first\
    \ and last digits of a number\n        ArrayList<Tuple2<Long, Long>> firstAndLastDigits\
    \ = new ArrayList<Tuple2<Long, Long>>();\n        for (Long num : nums) {\n  \
    \          Long lastDigit = num % 10;\n            Long firstDigit = 0l;\n   \
    \         while (num != 0) {\n                firstDigit = num % 10;\n       \
    \         num /= 10;\n            }\n            firstAndLastDigits.add(new Tuple2<Long,\
    \ Long>(firstDigit, lastDigit));\n        }\n        // check greater than 10\
    \ and both digits are odd\n        long count = 0;\n        for (Tuple2<Long,\
    \ Long> digits : firstAndLastDigits) {\n            Long firstDigit = digits.getValue0();\n\
    \            Long lastDigit = digits.getValue1();\n            if (firstDigit\
    \ > 0 && lastDigit > 0 && firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5423bh0l.java:19: error: cannot find symbol\n        ArrayList<Tuple2<Long,\
    \ Long>> firstAndLastDigits = new ArrayList<Tuple2<Long, Long>>();\n         \
    \         ^\n  symbol:   class Tuple2\n  location: class Problem\n/tmp/tmp5423bh0l.java:19:\
    \ error: cannot find symbol\n        ArrayList<Tuple2<Long, Long>> firstAndLastDigits\
    \ = new ArrayList<Tuple2<Long, Long>>();\n                                   \
    \                                      ^\n  symbol:   class Tuple2\n  location:\
    \ class Problem\n/tmp/tmp5423bh0l.java:27: error: cannot find symbol\n       \
    \     firstAndLastDigits.add(new Tuple2<Long, Long>(firstDigit, lastDigit));\n\
    \                                       ^\n  symbol:   class Tuple2\n  location:\
    \ class Problem\n/tmp/tmp5423bh0l.java:31: error: cannot find symbol\n       \
    \ for (Tuple2<Long, Long> digits : firstAndLastDigits) {\n             ^\n  symbol:\
    \   class Tuple2\n  location: class Problem\n4 errors\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        throw new\
    \ RuntimeException(\"not implemented\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: not implemented\n\
    \tat Problem.specialFilter(tmpsnmmspg8.java:18)\n\tat Problem.main(tmpsnmmspg8.java:21)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x%2 != 0 && x/10%2 != 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq03k690v.java:23)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Enter\
    \ your code here.\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvtovl962.java:23)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Enter\
    \ your code here.\n        return nums.stream().filter(i -> {\n            String\
    \ s = i.toString();\n            return s.length() > 1 && s.charAt(0) % 2 != 0\
    \ && s.charAt(s.length() - 1) % 2 != 0 && i > 10;\n        }).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Put your\
    \ code here\n        return 1l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ph5pzfv.java:22)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long res\
    \ = 0;\n        for (long n : nums) {\n            if (n > 10 && n % 2 == 1 &&\
    \ n % 10 == 1) {\n                res += 1;\n            }\n        }\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpn9tkdv.java:28)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num >= 10 && num % 2 == 1 && is_both_first_and_last_odd(num)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmjtr4mtd.java:18: error: cannot find symbol\n        return nums.stream().filter(num\
    \ -> num >= 10 && num % 2 == 1 && is_both_first_and_last_odd(num)).count();\n\
    \                                                                        ^\n \
    \ symbol:   method is_both_first_and_last_odd(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        int oddCount = 0;\n        for(int i = 0; i < nums.size(); i++) {\n\
    \            String number = String.valueOf(nums.get(i));\n            if(number.length()\
    \ < 2) {\n                continue;\n            }\n            if(isOdd(number.charAt(0))\
    \ && isOdd(number.charAt(number.length() - 1)) && nums.get(i) > 10) {\n      \
    \          oddCount++;\n            }\n        }\n        return oddCount;\n \
    \   }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpon1ndul7.java:27: error: cannot find symbol\n            if(isOdd(number.charAt(0))\
    \ && isOdd(number.charAt(number.length() - 1)) && nums.get(i) > 10) {\n      \
    \         ^\n  symbol:   method isOdd(char)\n  location: class Problem\n/tmp/tmpon1ndul7.java:27:\
    \ error: cannot find symbol\n            if(isOdd(number.charAt(0)) && isOdd(number.charAt(number.length()\
    \ - 1)) && nums.get(i) > 10) {\n                                          ^\n\
    \  symbol:   method isOdd(char)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi8nam4es.java:23)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return (long)nums.stream().filter(x\
    \ -> isSpecial(x)).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo83volh7.java:18: error: cannot find symbol\n        return (long)nums.stream().filter(x\
    \ -> isSpecial(x)).count();\n                                               ^\n\
    \  symbol:   method isSpecial(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> ((x > 10) && (((x % 10) & 1) == 1) && ((x / 10) % 2 == 1))).count();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2qhk05ta.java:23)\n"
  stdout: ''
  timestamp: 1660011512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Filter\
    \ out the numbers less than 10\n        List<Long> filtered = nums.stream().filter(num\
    \ -> num >= 10).collect(Collectors.toList());\n        // Get the first and last\
    \ digits\n        // and filter out the numbers whose first and last digits are\
    \ not odd\n        List<Long> result = filtered.stream().filter(num -> {\n   \
    \         String str = String.valueOf(num);\n            String firstDigit = String.valueOf(str.charAt(0));\n\
    \            String lastDigit = String.valueOf(str.charAt(str.length() - 1));\n\
    \            return Integer.parseInt(firstDigit) % 2 != 0 && Integer.parseInt(lastDigit)\
    \ % 2 != 0;\n        }).collect(Collectors.toList());\n        return (long)result.size();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            int first = (int)(num % 10);\n\
    \            int last = (int)(num / Math.pow(10, Math.floor(Math.log10(num))));\n\
    \            if (num > 10 && (first % 2 == 1 && last % 2 == 1)) {\n          \
    \      count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // YOUR CODE\
    \ HERE\n        return nums.stream().filter(num -> num >= 10 && num.toString().charAt(0)\
    \ % 2 != 0 && num.toString().charAt(num.toString().length() - 1) % 2 != 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> {\n            String temp = Long.toString(x);\n            if (temp.length()\
    \ > 1) {\n                char firstDigit = temp.charAt(0);\n                char\
    \ lastDigit = temp.charAt(temp.length() - 1);\n                if (Character.getNumericValue(firstDigit)\
    \ % 2 != 0 && Character.getNumericValue(lastDigit) % 2 != 0) {\n             \
    \       return true;\n                }\n            }\n            return false;\n\
    \        }).filter(x -> x > 10).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here!\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ygfi271.java:23)\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0l;\n        for (long num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count += 1l;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdut_mnci.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long n : nums) {\n            if (n > 10 && n % 2 == 1 &&\
    \ numOfDigits(n) > 1 && (n % 10) % 2 == 1)\n                count++;\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq713vlci.java:20: error: cannot find symbol\n            if (n\
    \ > 10 && n % 2 == 1 && numOfDigits(n) > 1 && (n % 10) % 2 == 1)\n           \
    \                             ^\n  symbol:   method numOfDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long n =\
    \ 0;\n        for (long x : nums) {\n            if (x > 10 && isFirstLastOdd(x))\
    \ {\n                n++;\n            }\n        }\n        return n;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2hf0bh85.java:20: error: cannot find symbol\n            if (x\
    \ > 10 && isFirstLastOdd(x)) {\n                          ^\n  symbol:   method\
    \ isFirstLastOdd(long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long r =\
    \ 0;\n        long n = 0;\n        // Insert your code here\n        for (long\
    \ s : nums) {\n            n = s;\n            if (n > 10) {\n               \
    \ if (n % 2 != 0) {\n                    String w = String.valueOf(n);\n     \
    \               char[] c = w.toCharArray();\n                    if (c[0] % 2\
    \ != 0 && c[c.length - 1] % 2 != 0) {\n                        r++;\n        \
    \            }\n                }\n            }\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(\
    \ x -> x > 10).filter(x -> {\n            long lastDigit = x % 10;\n         \
    \   long firstDigit = x / (long)Math.pow(10, Math.floor(Math.log10(x)));\n   \
    \         return (firstDigit % 2 != 0 && lastDigit % 2 != 0);\n        }).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> isValid(x)).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu_hu1z8k.java:18: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> isValid(x)).count();\n                                         ^\n  symbol:\
    \   method isValid(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> (x > 10) && isOdd(x) && isOdd(x%10)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpphh1qz53.java:18: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> (x > 10) && isOdd(x) && isOdd(x%10)).count();\n                         \
    \                            ^\n  symbol:   method isOdd(Long)\n  location: class\
    \ Problem\n/tmp/tmpphh1qz53.java:18: error: cannot find symbol\n        return\
    \ nums.stream().filter(x -> (x > 10) && isOdd(x) && isOdd(x%10)).count();\n  \
    \                                                               ^\n  symbol: \
    \  method isOdd(long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> (n > 10) && (n % 2 != 0) && (n / Math.pow(10, (int)Math.log10(n)) % 2 !=\
    \ 0)).count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvtx5icf2.java:23)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Method\
    \ 1\n        // return (nums.stream().filter(e -> e > 10).filter(e -> e % 2 ==\
    \ 1).filter(e -> {\n        //     long temp = e;\n        //     temp /= 10;\n\
    \        //     return temp % 2 == 1;\n        // }).count());\n        // Method\
    \ 2\n        return (nums.stream().filter(e -> e > 10).filter(e -> e % 2 == 1).filter(e\
    \ -> {\n            long first = e;\n            long last = e % 10;\n       \
    \     first /= 10;\n            while (first >= 10) {\n                first /=\
    \ 10;\n            }\n            return first % 2 == 1 && last % 2 == 1;\n  \
    \      }).count());\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0l;\n        // Your Code Here\n        for(Long x : nums){\n            long\
    \ temp = x;\n            long first_digit = temp%10;\n            long last_digit\
    \ = 0;\n            while(temp>0){\n                last_digit = temp%10;\n  \
    \              temp = temp/10;\n            }\n            if(x>10 && first_digit%2!=0\
    \ && last_digit%2!=0){\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Enter\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzejo_r3i.java:23)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long result = 0;\n        for (Long n : nums) {\n            if (n\
    \ > 10) {\n                if (n % 2 == 1) {\n                    n = n / 10;\n\
    \                    while (n > 0) {\n                        if (n % 10 % 2 ==\
    \ 1) {\n                            result++;\n                            break;\n\
    \                        }\n                        n = n / 10;\n            \
    \        }\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> x > 0 ? x % 10 == 1 || x % 10\
    \ == 3 || x % 10 == 5 || x % 10 == 7 || x % 10 == 9 : x % 10 == -1 || x % 10 ==\
    \ -3 || x % 10 == -5 || x % 10 == -7 || x % 10 == -9).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptp5uu9aj.java:23)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> {\n            String s = x.toString();\n\
    \            return Integer.parseInt(s.substring(0, 1)) % 2 == 1 && Integer.parseInt(s.substring(s.length()\
    \ - 1)) % 2 == 1;\n        }).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeokh2hi_.java:23)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long j =\
    \ 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10) {\n                if (nums.get(i) % 2 == 1) {\n                    j++;\n\
    \                }\n            }\n        }\n        return j;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xpzytpa.java:31)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(Problem::isSpecial).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4vxls1jn.java:18: error: invalid method reference\n        return\
    \ nums.stream().filter(Problem::isSpecial).count();\n                        \
    \            ^\n  cannot find symbol\n    symbol:   method isSpecial(T)\n    location:\
    \ class Problem\n  where T is a type-variable:\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy13j25v.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        int count = 0;\n        for (Long num : nums) {\n  \
    \          long last = num % 10;\n            if (last % 2 == 1 && Math.abs(num)\
    \ > 10) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkztohlul.java:31)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // your code\
    \ here\n        long cnt = 0;\n        for (long n : nums) {\n            if (n\
    \ < 10) continue;\n            String s = String.valueOf(n);\n            if (s.length()\
    \ < 2) continue;\n            int d1 = s.charAt(0) - '0';\n            int d2\
    \ = s.charAt(s.length() - 1) - '0';\n            if (d1 % 2 == 1 && d2 % 2 ==\
    \ 1) cnt += 1;\n        }\n        return cnt;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(Problem::isOddAndGreaterThanTen).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi34j4226.java:18: error: invalid method reference\n        return\
    \ nums.stream().filter(Problem::isOddAndGreaterThanTen).count();\n           \
    \                         ^\n  cannot find symbol\n    symbol:   method isOddAndGreaterThanTen(T)\n\
    \    location: class Problem\n  where T is a type-variable:\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // ADD CODE\
    \ HERE\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovh04zyy.java:23)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num > 0 &&\
    \ (num % 10) % 2 != 0 && (num % (long)Math.pow(10, (int)Math.log10(num))) % 2\
    \ != 0) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzdyvwppd.java:29)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long a: nums) {\n            long b = a;\n            if\
    \ (a < 0) {\n                b = -a;\n            }\n            if (b > 10) {\n\
    \                long right = b % 10;\n                long left = b;\n      \
    \          while (left >= 10) {\n                    left /= 10;\n           \
    \     }\n                if (left % 2 == 1 && right % 2 == 1) {\n            \
    \        count += 1;\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewsvyzvj.java:39)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwmqgkrig.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && bothFirstAndLastDigitsAreOdd(n)).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_sy7zanr.java:18: error: cannot find symbol\n        return nums.stream().filter(n\
    \ -> n > 10 && bothFirstAndLastDigitsAreOdd(n)).count();\n                   \
    \                                ^\n  symbol:   method bothFirstAndLastDigitsAreOdd(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long ans\
    \ = 0;\n        for (long i : nums) {\n            if (i > 10 && (i / 10) % 2\
    \ != 0 && i % 2 != 0) {\n                ans += 1;\n            }\n        }\n\
    \        return ans;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc54vz3q.java:29)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyilztq_.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> {\n            if (x < 10) {\n                return false;\n           \
    \ }\n            final long first = x % 10;\n            final long last = x /\
    \ Math.pow(10, Math.log10(x));\n            return first % 2 != 0 && last % 2\
    \ != 0;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6uh8n4w6.java:23: error: incompatible types: possible lossy conversion\
    \ from double to long\n            final long last = x / Math.pow(10, Math.log10(x));\n\
    \                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long number\
    \ = 0;\n        return number;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7sn5x7p.java:23)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        throw new\
    \ UnsupportedOperationException(\"Replace this string with your implementation.\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Replace\
    \ this string with your implementation.\n\tat Problem.specialFilter(tmpfny2b9fc.java:18)\n\
    \tat Problem.main(tmpfny2b9fc.java:21)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // fill-in\
    \ code here\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyz504nwk.java:23)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return -1;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpucrxsks3.java:21)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> {\n            long i = n;\n            long fd = i % 10;\n            while\
    \ (i > 9) {\n                i /= 10;\n            }\n            long ld = i;\n\
    \            return fd % 2 != 0 && ld % 2 != 0 && Math.abs(n) > 10;\n        }).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6k5w7w1t.java:30)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long ctr\
    \ = 0;\n        for (Long x : nums) {\n            if (x > 10 && x < 100) {\n\
    \                if (x % 2 == 1 && (x / 10) % 2 == 1) {\n                    ctr++;\n\
    \                }\n            } else if (x > 99) {\n                if (x %\
    \ 2 == 1 && (x / 10) % 2 == 1 && (x / 100) % 2 == 1) {\n                    ctr++;\n\
    \                }\n            }\n        }\n        return ctr;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfo9roaxp.java:35)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long total\
    \ = 0l;\n        for (Long num : nums) {\n            if (num > 10l && Math.abs(num)\
    \ % 2 == 1 && Math.abs(num / 10) % 2 == 1) {\n                total++;\n     \
    \       }\n        }\n        return total;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64sz3tsm.java:29)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // REPLACE\
    \ WITH YOUR CODE\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozgzri5o.java:23)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x >= 10 && (x % 10) % 2 != 0 && (x / (long)Math.pow(10, (int)Math.log10(x)))\
    \ % 2 != 0).count();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && (num % 10\
    \ % 2 != 0) && num / 10 % 2 != 0) {\n                count += 1;\n           \
    \ }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj6rbkakp.java:29)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num >= 10\
    \ && num < 100) {\n                long first = num / 10;\n                long\
    \ last = num % 10;\n                if (first % 2 != 0 && last % 2 != 0) {\n \
    \                   result++;\n                }\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqtwloyda.java:33)\n"
  stdout: ''
  timestamp: 1660011515
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // default\
    \ return value, change it as you wish\n        long ret = 0;\n        for (long\
    \ num : nums) {\n            long highBit = num / 10;\n            long lowBit\
    \ = num % 10;\n            long absNum = Math.abs(num);\n            if (Math.abs(highBit)\
    \ % 2 == 1 && Math.abs(lowBit) % 2 == 1 && absNum > 10) {\n                ret\
    \ += 1;\n            }\n        }\n        return ret;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuytv0mzp.java:32)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        // return 0;\n        return nums.stream().filter(a -> a > 10).filter(a\
    \ -> a.toString().substring(0, 1).equals(\"1\") || a.toString().substring(0, 1).equals(\"\
    3\") || a.toString().substring(0, 1).equals(\"5\") || a.toString().substring(0,\
    \ 1).equals(\"7\") || a.toString().substring(0, 1).equals(\"9\")).filter(a ->\
    \ a.toString().substring(a.toString().length() - 1).equals(\"1\") || a.toString().substring(a.toString().length()\
    \ - 1).equals(\"3\") || a.toString().substring(a.toString().length() - 1).equals(\"\
    5\") || a.toString().substring(a.toString().length() - 1).equals(\"7\") || a.toString().substring(a.toString().length()\
    \ - 1).equals(\"9\")).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x>10 && x%2!=0 && x%10!=0).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9iik5qgu.java:23)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your solution here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo5hgpei3.java:23)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Given\
    \ a list of numbers nums, find the number of numbers in nums that are greater\
    \ than 10 and have \n        // both the first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n        // \n        // Here are some examples:\n    \
    \    // \n        // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l))))\n        // (1l)\n        // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l))))\n        // (2l)\n        // \n        // Be careful with negatives\
    \ numbers: -14 is not valid, but -15 is valid.\n        // \n        // \n   \
    \     // \n        // \n        // \n        // \n        // \n        // \n \
    \       // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n        // \n        // \n        // \n\
    \        // \n        // \n        // \n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1t2v_kdu.java:107: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // ENTER\
    \ CODE HERE\n        return -1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpje3by_pp.java:22)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num.toString().matches(\"[1-9][^0-9]*[1-9]\")).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ag0la1n.java:22)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // start\
    \ from here\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxdin8kq.java:23)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // write\
    \ your code here\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3niayj7x.java:19: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && num % 2 == 1 && num % 10 == 1).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2e_0h_n.java:22)\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeokh2hi_.java:23)\n"
  stdout: ''
  timestamp: 1660011514
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long counter\
    \ = 0;\n        for (long i : nums) {\n            if (i > 10) {\n           \
    \     String str = Long.toString(i);\n                if (str.charAt(0) % 2 !=\
    \ 0 && str.charAt(str.length() - 1) % 2 != 0) {\n                    counter++;\n\
    \                }\n            }\n        }\n        return counter;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011516
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Hint:\
    \ You can use java.lang.Long#toString and java.lang.Long#parseLong\n        //\
    \ to convert between String and Long\n        // Hint: You can use java.lang.String#length\
    \ and java.lang.String#charAt\n        // to access the first/last digit of a\
    \ String (treated as a number)\n        // I do not know why this problem is here,\
    \ you should be able to solve it.\n        long count = 0l;\n        for (long\
    \ num : nums) {\n            String s = num + \"\";\n            long first =\
    \ (s.charAt(0) - '0');\n            long last = (s.charAt(s.length() - 1) - '0');\n\
    \            if (Math.abs(num) > 10 && first % 2 == 1 && last % 2 == 1) {\n  \
    \              count++;\n            }\n        }\n        return count;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> \n            (n > 10) && (n % 2 == 1) && (n % 10 == 1 || n % 10 == 3 ||\
    \ n % 10 == 5 || n % 10 == 7 || n % 10 == 9)\n        ).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3zwqds3x.java:25)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long n : nums) {\n            if (Math.abs(n) > 10 && (n\
    \ < 0 || n > 0)) {\n                long firstDigit = Math.abs(n) % 10;\n    \
    \            long lastDigit = (long) (Math.abs(n) / Math.pow(10, Math.floor(Math.log10(Math.abs(n)))));\n\
    \                if (firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            \
    \        result++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprza5qdnd.java:31)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long x : nums) {\n            if (x > 10 && oddFirstLast(x))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0r07asv_.java:20: error: cannot find symbol\n            if (x\
    \ > 10 && oddFirstLast(x)) {\n                          ^\n  symbol:   method\
    \ oddFirstLast(Long)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011516
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // BEGIN\
    \ CODE HERE\n        return 0l;\n        // END CODE HERE\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9ehsc51.java:24)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && (n % 10) % 2 == 1 && (n / 10) % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ag5pu2l.java:23)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // insert\
    \ code here\n        return 1l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw_jgb8pp.java:22)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n      return nums.stream().filter(n\
    \ -> n > 10 && (n%10)%2 == 1 && ((n/10)%10)%2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3k8p1r90.java:23)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (Math.abs(x) / 10) % 2 != 0 && (Math.abs(x) % 10) % 2 != 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp317kbgqt.java:23)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> {\n            if (num < 10) {\n                return false;\n         \
    \   }\n            String numStr = num.toString();\n            char[] numChars\
    \ = numStr.toCharArray();\n            return numChars[0] % 2 != 0 && numChars[numChars.length\
    \ - 1] % 2 != 0;\n        }).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long n : nums) {\n            if (n >= 10 && n % 2 == 1 &&\
    \ n % 10 == 1) {\n                sum += 1;\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8hkqoms.java:28)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(Problem::specialNumber).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5kcid826.java:18: error: invalid method reference\n        return\
    \ nums.stream().filter(Problem::specialNumber).count();\n                    \
    \                ^\n  cannot find symbol\n    symbol:   method specialNumber(T)\n\
    \    location: class Problem\n  where T is a type-variable:\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long c =\
    \ 0;\n        for (long i : nums) {\n            if (i > 10) {\n             \
    \   if (i % 2 == 1) {\n                    long x = i;\n                    if\
    \ (x % 10 == 1 || x % 10 == 3 || x % 10 == 5 || x % 10 == 7 || x % 10 == 9) {\n\
    \                        c++;\n                    }\n                }\n    \
    \        }\n        }\n        return c;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn67sbxxy.java:34)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyilztq_.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(e\
    \ -> {\n        \treturn e >= 10 && e % 2 == 1 && e / 10 % 2 == 1 && e % 10 %\
    \ 2 == 1;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvb0efokc.java:25)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // YOUR CODE\
    \ HERE\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmwnt4ji.java:23)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(p\
    \ -> {\n            if (p < 10 || p > 100) return false;\n            ArrayList<Long>\
    \ digits = new ArrayList<Long>();\n            while (p > 0) {\n             \
    \   digits.add(p % 10);\n                p /= 10;\n            }\n           \
    \ return digits.get(0) % 2 == 1 && digits.get(digits.size() - 1) % 2 == 1;\n \
    \       }).count();\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchz1v_ew.java:31)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && bothOdd(num)).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoift6yk7.java:18: error: cannot find symbol\n        return nums.stream().filter(num\
    \ -> num > 10 && bothOdd(num)).count();\n                                    \
    \                   ^\n  symbol:   method bothOdd(Long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // create\
    \ lambda function\n        // return numbers greater than 10\n        // for each\
    \ number greater than 10, get first and last digits\n        // if first and last\
    \ digits are odd, return number\n        // add all numbers greater than 10 with\
    \ odd first and last digits, return sum\n\n        long sum = 0;\n        for\
    \ (long number : nums) {\n            // check if greater than 10\n          \
    \  if (number > 10) {\n                String num = String.valueOf(number);\n\
    \                String firstNum = num.substring(0, 1);\n                String\
    \ lastNum = num.substring(num.length() - 1);\n                int first = Integer.parseInt(firstNum);\n\
    \                int last = Integer.parseInt(lastNum);\n                if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                    sum++;\n                }\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n>10 && n%2!=0 && (n/10)%2!=0 && n%10%2!=0).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpepauez.java:23)\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // function\
    \ implementation\n        // BigInteger(long)\n        return nums.stream().filter(num\
    \ -> BigInteger.valueOf(num).isProbablePrime(1) && BigInteger.valueOf(num).isProbablePrime(1)).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprof1b55x.java:23)\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(e->{\n\
    \            int first_digit = (int)(e/Math.pow(10, e.toString().length()-1));\n\
    \            int last_digit = (int)(e%10);\n            return ((first_digit%2)\
    \ + (last_digit%2) == 1) && e > 10;\n        }).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3c87tvzr.java:28)\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10 && (num % 10 == 1 || num % 10 == 3 || num % 10 == 5 || num % 10\
    \ == 7 || num % 10 == 9)).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jbgj4zo.java:23)\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        int count\
    \ = 0;\n        // write your code here\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                if (first_digit(nums.get(i))\
    \ % 2 != 0 && last_digit(nums.get(i)) % 2 != 0) {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n        return count;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm1dt0nzo.java:22: error: cannot find symbol\n                if\
    \ (first_digit(nums.get(i)) % 2 != 0 && last_digit(nums.get(i)) % 2 != 0) {\n\
    \                    ^\n  symbol:   method first_digit(Long)\n  location: class\
    \ Problem\n/tmp/tmpm1dt0nzo.java:22: error: cannot find symbol\n             \
    \   if (first_digit(nums.get(i)) % 2 != 0 && last_digit(nums.get(i)) % 2 != 0)\
    \ {\n                                                         ^\n  symbol:   method\
    \ last_digit(Long)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(e\
    \ -> e > 10 && isFirstAndLastDigitOdd(e)).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppriznd9z.java:18: error: cannot find symbol\n        return nums.stream().filter(e\
    \ -> e > 10 && isFirstAndLastDigitOdd(e)).count();\n                         \
    \                          ^\n  symbol:   method isFirstAndLastDigitOdd(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10 && n%2 != 0 && n/10%2 != 0).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw4fprfdu.java:23)\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // your code\
    \ goes here\n        return nums.stream().filter(n -> n.toString().charAt(0) %\
    \ 2 != 0 &&\n                                          n.toString().charAt(n.toString().length()\
    \ - 1) % 2 != 0 &&\n                                          n > 10).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011518
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && (x.toString().charAt(0) - '0') % 2 == 1 && (x.toString().charAt(x.toString().length()\
    \ - 1) - '0') % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011518
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x % 2 == 1).filter(x -> {\n            long m = x;\n\
    \            while (m > 9) {\n                m /= 10;\n            }\n      \
    \      return m % 2 == 1;\n        }).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10).filter(num -> {\n            String numStr = String.valueOf(num);\n\
    \            return isOdd(numStr.charAt(0)) && isOdd(numStr.charAt(numStr.length()\
    \ - 1));\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppmudl6t2.java:20: error: cannot find symbol\n            return\
    \ isOdd(numStr.charAt(0)) && isOdd(numStr.charAt(numStr.length() - 1));\n    \
    \               ^\n  symbol:   method isOdd(char)\n  location: class Problem\n\
    /tmp/tmppmudl6t2.java:20: error: cannot find symbol\n            return isOdd(numStr.charAt(0))\
    \ && isOdd(numStr.charAt(numStr.length() - 1));\n                            \
    \                  ^\n  symbol:   method isOdd(char)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // your code\
    \ goes here\n        return 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu65kwdny.java:23)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1).filter(x -> {\n            String str = String.valueOf(x);\n\
    \            return str.charAt(0) % 2 == 1 && str.charAt(str.length() - 1) % 2\
    \ == 1;\n        }).count();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // your code\
    \ goes here\n        Long count = 0l;\n        for (Long num : nums) {\n     \
    \       if (num > 10 && (num % 10) % 2 != 0 && num.toString().charAt(0) % 2 !=\
    \ 0) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long l : nums) {\n            if (l > 10 && isOdd(l) && isFirstAndLastDigitOdd(l))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi7g83_lj.java:20: error: cannot find symbol\n            if (l\
    \ > 10 && isOdd(l) && isFirstAndLastDigitOdd(l)) {\n                         \
    \ ^\n  symbol:   method isOdd(Long)\n  location: class Problem\n/tmp/tmpi7g83_lj.java:20:\
    \ error: cannot find symbol\n            if (l > 10 && isOdd(l) && isFirstAndLastDigitOdd(l))\
    \ {\n                                      ^\n  symbol:   method isFirstAndLastDigitOdd(Long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011518
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(i\
    \ -> i > 10 && getFirstDigit(i) % 2 != 0 && getLastDigit(i) % 2 != 0).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8m5h5uvf.java:18: error: cannot find symbol\n        return nums.stream().filter(i\
    \ -> i > 10 && getFirstDigit(i) % 2 != 0 && getLastDigit(i) % 2 != 0).count();\n\
    \                                                   ^\n  symbol:   method getFirstDigit(Long)\n\
    \  location: class Problem\n/tmp/tmp8m5h5uvf.java:18: error: cannot find symbol\n\
    \        return nums.stream().filter(i -> i > 10 && getFirstDigit(i) % 2 != 0\
    \ && getLastDigit(i) % 2 != 0).count();\n                                    \
    \                                            ^\n  symbol:   method getLastDigit(Long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // YOUR CODE\
    \ HERE\n        long count = 0;\n        for (long x : nums) {\n            if\
    \ (x > 10 && x % 2 != 0 && x / 10 % 2 != 0) {\n                count++;\n    \
    \        }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4usbijty.java:30)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy13j25v.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && nums.stream().filter(y -> x % 10 == y).findFirst().isPresent()\
    \ && nums.stream().filter(y -> x / 10 == y).findFirst().isPresent()).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp427ftabr.java:22)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n      return nums.stream().filter(num\
    \ -> num > 10).filter(num -> num > 10 && num < 100 && (num/10)%2 == 1 && num%2\
    \ == 1).count();\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpatro2bz5.java:23)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        long count = 0;\n        for (long num : nums) {\n \
    \           if (Math.abs(num) > 10 && num % 2 != 0 && num % 5 != 0) {\n      \
    \          count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_b188s4s.java:30)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ code here\n        return -1l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp941rac5i.java:22)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isOdd(num)\
    \ && isOdd(num % 10)) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4j1vk7m6.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num) && isOdd(num % 10)) {\n                            ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmp4j1vk7m6.java:20: error:\
    \ cannot find symbol\n            if (num > 10 && isOdd(num) && isOdd(num % 10))\
    \ {\n                                          ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && x % 2 == 1 && x % 10 == 1).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe1kjnsrq.java:22)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy13j25v.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10).filter(x -> x%2==1 && (x/10)%2==1).count();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn62212m5.java:23)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long cnt\
    \ = 0;\n        for (Long x : nums) {\n            if (x > 10 && firstDigit(x)\
    \ % 2 == 1 && lastDigit(x) % 2 == 1) {\n                cnt += 1;\n          \
    \  }\n        }\n        return cnt;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm92u34ok.java:20: error: cannot find symbol\n            if (x\
    \ > 10 && firstDigit(x) % 2 == 1 && lastDigit(x) % 2 == 1) {\n               \
    \           ^\n  symbol:   method firstDigit(Long)\n  location: class Problem\n\
    /tmp/tmpm92u34ok.java:20: error: cannot find symbol\n            if (x > 10 &&\
    \ firstDigit(x) % 2 == 1 && lastDigit(x) % 2 == 1) {\n                       \
    \                             ^\n  symbol:   method lastDigit(Long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n    \t// Iterate\
    \ over all the numbers in the list\n    \t// If it is greater than 10 and it has\
    \ odd first and last digits, add 1 to a counter\n    \tlong counter = 0;\n   \
    \ \tfor (Long num : nums) {\n    \t\tlong firstDigit = num % 10;\n    \t\tlong\
    \ lastDigit = (long)num / 10;\n    \t\tif (firstDigit % 2 != 0 && lastDigit %\
    \ 2 != 0 && num > 10) {\n    \t\t\tcounter += 1;\n    \t\t}\n    \t}\n    \treturn\
    \ counter;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozjxai4u.java:33)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy13j25v.java:22)\n"
  stdout: ''
  timestamp: 1660011509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num / 10 % 2 == 1) {\n                count += 1;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8xkrnczu.java:29)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(e\
    \ -> e > 10 && e % 2 == 1 && (e / 10) % 2 == 1 && e % 10 == 1).count();\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppi0nowf0.java:22)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = 0;\n                long lastDigit = 0;\n        \
    \        if (num < 0) {\n                    firstDigit = Math.abs(num) % 10;\n\
    \                    lastDigit = num % 10;\n                } else {\n       \
    \             lastDigit = num % 10;\n                    while (num > 0) {\n \
    \                       firstDigit = num % 10;\n                        num /=\
    \ 10;\n                    }\n                }\n                if (firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0) {\n                    result++;\n         \
    \       }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(n\
    \ -> n > 10).filter(Problem::filter).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpufhtmcz7.java:18: error: invalid method reference\n        return\
    \ nums.stream().filter(n -> n > 10).filter(Problem::filter).count();\n       \
    \                                                 ^\n  cannot find symbol\n  \
    \  symbol:   method filter(T)\n    location: class Problem\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> {\n            if (num > 10) {\n                long lastDigit = num % 10;\n\
    \                long firstDigit = num;\n                while (firstDigit >=\
    \ 10) {\n                    firstDigit /= 10;\n                }\n          \
    \      return firstDigit % 2 == 1 && lastDigit % 2 == 1;\n            }\n    \
    \        return false;\n        }).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudijw4l0.java:23)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10).filter(num -> num % 2 == 1).filter(num -> num / 10 % 2 == 1).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52gtov59.java:23)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long oddFirst\
    \ = nums.stream().filter(n -> {\n            long firstDigit = 0;\n          \
    \  for (long i = n; i > 0; i /= 10) {\n                firstDigit = i % 10;\n\
    \            }\n            return n > 10 && firstDigit % 2 == 1;\n        }).count();\n\
    \        long oddLast = nums.stream().filter(n -> {\n            long lastDigit\
    \ = 0;\n            for (long i = n; i > 0; i /= 10) {\n                lastDigit\
    \ = i % 10;\n            }\n            return n > 10 && lastDigit % 2 == 1;\n\
    \        }).count();\n        return oddFirst + oddLast;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjjr_rup1.java:36)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Your code\
    \ here\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1).filter(x\
    \ -> x % 10 == 1 || x % 10 == 3 || x % 10 == 5 || x % 10 == 7 || x % 10 == 9).count();\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuy0o1ohb.java:24)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // YOUR CODE\
    \ HERE\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmwnt4ji.java:23)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return (long)nums.stream().filter(x\
    \ -> x.toString().length() > 1 && x > 10).filter(y -> y.toString().startsWith(\"\
    1\") || y.toString().startsWith(\"3\") || y.toString().startsWith(\"5\") || y.toString().startsWith(\"\
    7\") || y.toString().startsWith(\"9\")).filter(z -> z.toString().endsWith(\"1\"\
    ) || z.toString().endsWith(\"3\") || z.toString().endsWith(\"5\") || z.toString().endsWith(\"\
    7\") || z.toString().endsWith(\"9\")).count();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // YOUR CODE\
    \ HERE\n        long count = 0;\n        for (long i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get((int)i) > 10) {\n                long temp = nums.get((int)i);\n\
    \                String str = String.valueOf(temp);\n                if (str.charAt(0)\
    \ % 2 != 0 && str.charAt(str.length() - 1) % 2 != 0) {\n                    count\
    \ += 1;\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return \n\
    \            nums.stream()\n                .filter(i ->\n                {\n\
    \                    String value = i.toString();\n                    int l_digit\
    \ = Character.getNumericValue(value.charAt(0));\n                    int r_digit\
    \ = Character.getNumericValue(value.charAt(value.length() - 1));\n           \
    \         return i > 10 && (l_digit % 2 != 0 && r_digit % 2 != 0);\n         \
    \       })\n                .count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(num\
    \ -> num > 10).filter(num -> num < 100).filter(num -> num % 2 == 1).filter(num\
    \ -> (num / 10) % 2 == 1).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph9ep4hlb.java:23)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0l;\n        for (long num : nums) {\n            if (Math.abs(num) > 10 &&\
    \ isFirstAndLastDigitOdd(num)) {\n                count++;\n            }\n  \
    \      }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpor63qkcf.java:20: error: cannot find symbol\n            if (Math.abs(num)\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                                   \
    \   ^\n  symbol:   method isFirstAndLastDigitOdd(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n    \treturn nums.stream().filter(x\
    \ -> {\n    \t\tString stringX = x.toString();\n    \t\treturn stringX.length()\
    \ >= 2 && x > 10 && (stringX.charAt(0) % 2 != 0) && (stringX.charAt(stringX.length()\
    \ - 1) % 2 != 0);\n    \t}).count();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        // For each number in the input array, use firstDigit and lastDigit\
    \ to extract the first and last digits,\n        // then check whether the number\
    \ is greater than 10, and both digits are odd numbers.\n        // You should\
    \ increment the count by 1 if these conditions are satisfied.\n        // You\
    \ can use num.toString().charAt(0) to extract the first digit of a number.\n \
    \       // You can use num.toString().charAt(num.toString().length() - 1) to extract\
    \ the last digit of a number.\n        for (Long num : nums) {\n            if\
    \ (num.toString().charAt(0) % 2 != 0 && num.toString().charAt(num.toString().length()\
    \ - 1) % 2 != 0 && num > 10)\n                count++;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(c\
    \ -> c >= 10 && (c % 10) % 2 != 0 && (c / 10) % 2 != 0).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmnctjg0.java:23)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n\t\tint count = 0;\n\
    \t\tfor (long l : nums) {\n\t\t\tif (l > 10 && l > -10) {\n\t\t\t\tint i = (int)l;\n\
    \t\t\t\tString s = Integer.toString(i);\n\t\t\t\tif (s.length() == 1) {\n\t\t\t\
    \t\tif (i % 2 == 1) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\
    \t\t\t\tint first = Integer.parseInt(Character.toString(s.charAt(0)));\n\t\t\t\
    \t\tint last = Integer.parseInt(Character.toString(s.charAt(s.length() - 1)));\n\
    \t\t\t\t\tif (first % 2 == 1 && last % 2 == 1) {\n\t\t\t\t\t\tcount++;\n\t\t\t\
    \t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        return nums.stream().filter(x\
    \ -> x > 10 && firstDigit(x) % 2 != 0 && lastDigit(x) % 2 != 0).count();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpotpas8m4.java:18: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> x > 10 && firstDigit(x) % 2 != 0 && lastDigit(x) % 2 != 0).count();\n   \
    \                                                ^\n  symbol:   method firstDigit(Long)\n\
    \  location: class Problem\n/tmp/tmpotpas8m4.java:18: error: cannot find symbol\n\
    \        return nums.stream().filter(x -> x > 10 && firstDigit(x) % 2 != 0 &&\
    \ lastDigit(x) % 2 != 0).count();\n                                          \
    \                                   ^\n  symbol:   method lastDigit(Long)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && isBothFirstAndLastDigitsOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiah_j1mr.java:20: error: cannot find symbol\n            if (num\
    \ > 10 && isBothFirstAndLastDigitsOdd(num)) {\n                            ^\n\
    \  symbol:   method isBothFirstAndLastDigitsOdd(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // placeholder\
    \ for correctness, not for points\n        return 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jppuin1.java:23)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        //IMPLEMENT\n\
    \        return 0;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9lfexgxc.java:23)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long i : nums) {\n            if (i < 0) i = -i;\n      \
    \      if (i > 10 && i % 2 == 1 && i % 10 == 1) count++;\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2p_uj7l6.java:27)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long count = 0;\n        for (long l : nums) {\n            if (l\
    \ > 10 && isOdd(l / 10) && isOdd(l % 10)) {\n                count++;\n      \
    \      }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwl_y_m79.java:23: error: cannot find symbol\n            if (l\
    \ > 10 && isOdd(l / 10) && isOdd(l % 10)) {\n                          ^\n  symbol:\
    \   method isOdd(long)\n  location: class Problem\n/tmp/tmpwl_y_m79.java:23: error:\
    \ cannot find symbol\n            if (l > 10 && isOdd(l / 10) && isOdd(l % 10))\
    \ {\n                                           ^\n  symbol:   method isOdd(long)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // Type your\
    \ solution here\n        Long count = (long)0;\n        for(Long n : nums){\n\
    \            if(n >= (long)10l){\n                String ns = n.toString();\n\
    \                char first = ns.charAt(0);\n                char last = ns.charAt(ns.length()-1);\n\
    \                if(first%2 != 0 && last%2 != 0){\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long cnt\
    \ = 0;\n        for (long n : nums) {\n            if (n > 10 && Character.getNumericValue(Long.toString(n).charAt(0))\
    \ % 2 != 0 && Character.getNumericValue(Long.toString(n).charAt(Long.toString(n).length()\
    \ - 1)) % 2 != 0)\n                cnt++;\n        }\n        return cnt;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        // your code\
    \ here\n        return nums.stream().filter(e -> e > 10).filter(e -> e % 2 ==\
    \ 1).filter(e -> e > 9).filter(e -> e % 10 % 2 == 1).count();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpll00jre5.java:24)\n"
  stdout: ''
  timestamp: 1660011521

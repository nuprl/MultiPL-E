language: java
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        Long max = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i += 1) {\n            if (l.get(i) > max) {\n                max = l.get(i);\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Fill in the function.\n        return l.stream().max(Long::compare).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long lp : l) {\n          \
    \  if (lp > max) max = lp;\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long maxElement = l.get(0);\n        for (int i = 1; i < l.size();\
    \ i++) {\n            if (l.get(i) > maxElement) {\n                maxElement\
    \ = l.get(i);\n            }\n        }\n        return maxElement;\n    }\n \
    \   public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // >>> YOUR CODE HERE <<<\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2q5fyl48.java:16: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // YOUR CODE HERE\n        long curMax = Long.MIN_VALUE;\n   \
    \     for (long element : l) {\n            if (element > curMax) {\n        \
    \        curMax = element;\n            }\n        }\n        return curMax;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long a = l.get(0);\n        for (int i = 1; i < l.size(); i +=\
    \ 1) {\n            a = Math.max(a, l.get(i));\n        }\n        return a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // \u541B\u306E\u529B\u3067\u306F\u89E3\u3051\u306A\u3044\uFF01\
    \n        // \u7D20\u76F4\u306B\u5168\u63A2\u7D22\uFF01\n        long n = l.size();\n\
    \        long max = Long.MIN_VALUE;\n        for (long i = 0; i < n; i++) {\n\
    \            max = Math.max(max, l.get((int)i));\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long result = l.get(0);\n        for (long item : l) {\n     \
    \       if (item > result) {\n                result = item;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long a : l) {\n           \
    \ if (a > max) {\n                max = a;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long m = Long.MIN_VALUE;\n        for (long i : l)\n         \
    \   m = Math.max(m, i);\n        return m;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > max) {\n                max = l.get(i);\n    \
    \        }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return (long)l.stream().max(Comparator.comparing(Long::valueOf)).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long ret = Long.MIN_VALUE;\n        for (Long i : l) {\n     \
    \       ret = Math.max(ret, i);\n        }\n        return ret;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(0l, Math::max);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > max) {\n                max = l.get(i);\n    \
    \        }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return null;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf91ce29p.java:15: error: incompatible types: <null> cannot be converted\
    \ to long\n        return null;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long[] a = new long[l.size()];\n        for (int i = 0; i < l.size();\
    \ i++)\n            a[i] = l.get(i);\n        long max = a[0];\n        for (int\
    \ i = 1; i < a.length; i++)\n            if (a[i] > max)\n                max\
    \ = a[i];\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i: l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long i : l)\n       \
    \     if (i > max)\n                max = i;\n        return max;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0) {\n            throw new Error(\"Empty list\
    \ is provided.\");\n        }\n        long max = Long.MIN_VALUE;\n        for\
    \ (long i : l) {\n            if (i > max) {\n                max = i;\n     \
    \       }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i : l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Insert code here.\n        long max = Long.MIN_VALUE;\n   \
    \     for (long elem : l) {\n            if (elem > max) {\n                max\
    \ = elem;\n            }\n        }\n        return max;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(0l, Math::max);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = -1000000000;\n        for (long elem : l) {\n     \
    \       if (elem > max) {\n                max = elem;\n            }\n      \
    \  }\n        return max;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (l.get(i) > max) {\n                max = l.get(i);\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Fill up this function\n        long max=l.get(0);\n       \
    \ for(int i=1;i<l.size();i++)\n        {\n            if(l.get(i)>max)\n     \
    \       {\n                max=l.get(i);\n            }\n        }\n        return\
    \ max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0) {\n            return 0;\n        }\n     \
    \   else {\n            long max = l.get(0);\n            for (int i = 1; i <\
    \ l.size(); i++) {\n                if (l.get(i) > max) {\n                  \
    \  max = l.get(i);\n                }\n            }\n            return max;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max=l.get(0);\n        for(int i=1;i<l.size();i++)\n    \
    \        if(l.get(i)>max)\n                max=l.get(i);\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (l.get(i) > max) {\n                max = l.get(i);\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > max)\n                max = l.get(i);\n      \
    \  }\n        return max;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, (a, b) -> Long.max(a,\
    \ b));\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) max = e;\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long e : l) {\n           \
    \ if (e > max) {\n                max = e;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long maxElement = -10000000000l;\n        for (long i: l) {\n\
    \            if (i > maxElement) {\n                maxElement = i;\n        \
    \    }\n        }\n        return maxElement;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0) return 0;\n        return Collections.max(l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (l.get(i) > max) {\n                max = l.get(i);\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        Collections.sort(l);\n        return l.get(l.size() - 1);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = -100000000000l;\n        for (long v : l)\n       \
    \     if (v > max)\n                max = v;\n        return max;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (l.get(i) > max) {\n                max = l.get(i);\n        \
    \    }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Write your code here.\n        return -1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqjy0jn55.java:19)\n"
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long i : l) {\n     \
    \       if (i > max) {\n                max = i;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long x : l) {\n     \
    \       if (x > max) {\n                max = x;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long mx = -1000000000000000000l;\n        for (long elem : l)\
    \ {\n            if (elem > mx) {\n                mx = elem;\n            }\n\
    \        }\n        return mx;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Fill in code here.\n        long max=Long.MIN_VALUE;\n    \
    \    for(long a:l){\n            if(a>max){\n                max=a;\n        \
    \    }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, Math::max);\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = -1000000000;\n        for (long value : l) {\n    \
    \        if (value > max) {\n                max = value;\n            }\n   \
    \     }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Replace line below with your code.\n        return l.stream().max(Long::compare).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i: l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, Math::max);\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsaa1yc80.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // >>> Solution\n        long max = l.get(0);\n        for (int\
    \ i = 1; i < l.size(); i++) {\n            if (l.get(i) > max) {\n           \
    \     max = l.get(i);\n            }\n        }\n        return max;\n       \
    \ // <<< Solution\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        /* Solution */\n        return l.stream().max(Comparator.naturalOrder()).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long m = Long.MIN_VALUE;\n        for (long a : l) {\n       \
    \     if (a > m) {\n                m = a;\n            }\n        }\n       \
    \ return m;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, Math::max);\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, Math::max);\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // REPLACE WITH YOUR CODE\n        if (l.size() == 0) {\n    \
    \        return 0;\n        }\n        long max = l.get(0);\n        for (long\
    \ i : l) {\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        throw new RuntimeException(\"Not implemented.\");\n    }\n   \
    \ public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented.\n\
    \tat Problem.maxElement(tmpu3jyrpvv.java:15)\n\tat Problem.main(tmpu3jyrpvv.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long maxElement = Long.MIN_VALUE;\n        for (long x : l) {\n\
    \            if (x > maxElement) {\n                maxElement = x;\n        \
    \    }\n        }\n        return maxElement;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long ret = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > ret) ret = l.get(i);\n        }\n        return\
    \ ret;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n\tlong a = l.get(0);\n\tfor (int i = 1; i < l.size(); i++) {\n\t    a\
    \ = Math.max(a, l.get(i));\n\t}\n\treturn a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i : l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Fill in the implementation here.\n        long max = l.get(0);\n\
    \        for (int i = 1; i < l.size(); i++) {\n            long num = l.get(i);\n\
    \            if (num > max) {\n                max = num;\n            }\n   \
    \     }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (long x : l) {\n            if (x >\
    \ max) {\n                max = x;\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return (long) l.stream().max(Long::compare).get();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long l_ : l)\n            if\
    \ (l_ > max)\n                max = l_;\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // >>> Solution\n        long max = 0;\n        for (long e :\
    \ l) {\n            if (e > max) {\n                max = e;\n            }\n\
    \        }\n        return max;\n        // <<< Solution\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsaa1yc80.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long n = l.get(i);\n            if (n > max) {\n            \
    \    max = n;\n            }\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgegb8hz.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i : l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // return the maximum element in l.\n        return 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmyth4e34.java:19)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0) {\n            throw new IllegalArgumentException(\"\
    empty\");\n        }\n        return Collections.max(l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        int i = 0;\n        while (i < l.size())\
    \ {\n            if (l.get(i) > max) {\n                max = l.get(i);\n    \
    \        }\n            i = i + 1;\n        }\n        return max;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > max)\n                max = l.get(i);\n      \
    \  }\n        return max;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long elem : l) {\n  \
    \          if (elem > max) {\n                max = elem;\n            }\n   \
    \     }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (l.get(i) > max) {\n                max = l.get(i);\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        Long[] a = l.toArray(new Long[l.size()]);\n        Arrays.sort(a);\n\
    \        return a[a.length - 1];\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long n : l) {\n     \
    \       if (n > max) max = n;\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n\tlong max = Long.MIN_VALUE;\n\tfor (long i : l) {\n\t    if (i > max)\
    \ {\n\t\tmax = i;\n\t    }\n\t}\n\treturn max;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long x : l) {\n     \
    \       if (x > max) {\n                max = x;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long r = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > r) {\n                r = l.get(i);\n        \
    \    }\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        Collections.sort(l);\n        return l.get(l.size() - 1);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long result = -(2l << 51);\n        for (long i: l) {\n      \
    \      if (i > result) {\n                result = i;\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max;\n        if (l.size() == 0) {\n            max = 0l;\n\
    \        } else {\n            max = l.get(0);\n            for (int i = 1; i\
    \ < l.size(); i++) {\n                if (l.get(i) > max) {\n                \
    \    max = l.get(i);\n                }\n            }\n        }\n        return\
    \ max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        Long max_elem = Long.MIN_VALUE;\n        for (Long elem : l) {\n\
    \            if (elem > max_elem) {\n                max_elem = elem;\n      \
    \      }\n        }\n        return max_elem;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long x : l) {\n     \
    \       if (x > max) {\n                max = x;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Your Code Here\n        return 0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy05k5w1w.java:19)\n"
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long i : l) {\n     \
    \       if (i > max) {\n                max = i;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long i : l)\n       \
    \     if (i > max)\n                max = i;\n        return max;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (l.get(i) > max) {\n                max = l.get(i);\n        \
    \    }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkgegb8hz.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long r = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > r) {\n                r = l.get(i);\n        \
    \    }\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return (long) l.stream().max(Long::compare).get();\n    }\n  \
    \  public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i : l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long elem : l) {\n  \
    \          if (elem > max) {\n                max = elem;\n            }\n   \
    \     }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long elem : l) {\n  \
    \          if (elem > max) {\n                max = elem;\n            }\n   \
    \     }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long v : l)\n       \
    \     if (v > max)\n                max = v;\n        return max;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // >>> YOUR CODE HERE <<<\n        return l.stream().max(Long::compare).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        Long m = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            m = Math.max(m, l.get(i));\n        }\n        return m;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, (a, b) -> Math.max(a,\
    \ b));\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(0l, Math::max);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        //get the max element from the list\n        long max = 0;\n \
    \       for(int i = 0; i < l.size(); i++){\n            if(l.get(i) > max){\n\
    \                max = l.get(i);\n            }\n        }\n        return max;\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        throw new RuntimeException(\"Not implemented.\");\n    }\n   \
    \ public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented.\n\
    \tat Problem.maxElement(tmpu3jyrpvv.java:15)\n\tat Problem.main(tmpu3jyrpvv.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long maxElement = Long.MIN_VALUE;\n        for (long i : l) {\n\
    \            if (i > maxElement) {\n                maxElement = i;\n        \
    \    }\n        }\n        return maxElement;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max;\n        max = l.get(0);\n        for (int i = 1; i\
    \ < l.size(); i++) {\n            long current;\n            current = l.get(i);\n\
    \            if (current > max) {\n                max = current;\n          \
    \  }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long i : l) {\n     \
    \       if (i > max) {\n                max = i;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return (long) Collections.max(l);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0) {\n            return 0;\n        }\n     \
    \   long m = l.get(0);\n        for (int i = 1; i < l.size(); i++) {\n       \
    \     if (l.get(i) > m) {\n                m = l.get(i);\n            }\n    \
    \    }\n        return m;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (l.get(i) > max)\n                max = l.get(i);\n \
    \       }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long i : l) {\n     \
    \       if (i > max) {\n                max = i;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0) return 0l;\n        long max = l.get(0);\n\
    \        for (int i = 1; i < l.size(); i++) {\n            if (l.get(i) > max)\
    \ {\n                max = l.get(i);\n            }\n        }\n        return\
    \ max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        throw new RuntimeException(\"IMPLEMENT ME\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: IMPLEMENT ME\n\
    \tat Problem.maxElement(tmp01myjs7k.java:15)\n\tat Problem.main(tmp01myjs7k.java:18)\n"
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long x : l) {\n     \
    \       if (x > max) {\n                max = x;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long m = Long.MIN_VALUE;\n        for (long i : l) {\n       \
    \     if (i > m) {\n                m = i;\n            }\n        }\n       \
    \ return m;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long x : l) {\n           \
    \ if (x > max) max = x;\n        }\n        return max;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long a = l.get(i);\n            if (a > max) {\n            \
    \    max = a;\n            }\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        if (l.size() == 0)\n            return 0;\n        return l.stream().reduce((long)0,\
    \ (a, b) -> (a > b) ? a : b);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = -1000000000;\n        for (long a : l) {\n        \
    \    if (a > max) {\n                max = a;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i : l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long res = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > res) {\n                res = l.get(i);\n    \
    \        }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long x : l) {\n     \
    \       if (x > max) {\n                max = x;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (long i : l) {\n           \
    \ if (i > max) {\n                max = i;\n            }\n        }\n       \
    \ return max;\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Your code here\n        return 0l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxgyr4f7.java:19)\n"
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Write your code here.\n        return Collections.max(l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // REPLACE WITH YOUR CODE\n        return 0l;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1m9ebxot.java:19)\n"
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long maxElement = Long.MIN_VALUE;\n        for (long elem : l)\
    \ {\n            if (elem > maxElement) {\n                maxElement = elem;\n\
    \            }\n        }\n        return maxElement;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, (a, b) -> Math.max(a,\
    \ b));\n    }\n    public static void main(String[] args) {\n    assert(maxElement((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (3l));\n \
    \   assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l,\
    \ (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l, (long)1l, (long)-10l))))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsaa1yc80.java:18)\n"
  stdout: ''
  timestamp: 1660010676
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long v : l) {\n     \
    \       if (v > max) {\n                max = v;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long m = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > m) {\n                m = l.get(i);\n        \
    \    }\n        }\n        return m;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            if (l.get(i) > max)\n                max = l.get(i);\n      \
    \  }\n        return max;\n    }\n    public static void main(String[] args) {\n\
    \    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) {\n                max = e;\n            }\n        }\n \
    \       return max;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\
    \ == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010677
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Long::compare).get();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010673
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return Collections.max(l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        // Replace this code with your own.\n        return 1;\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5gpm9kke.java:19)\n"
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().max(Comparator.naturalOrder()).get();\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        return l.stream().reduce(Long.MIN_VALUE, Math::max);\n    }\n\
    \    public static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010675
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long x = l.get(i);\n            if (x > max) {\n            \
    \    max = x;\n            }\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = Long.MIN_VALUE;\n        for (long e : l) {\n     \
    \       if (e > max) max = e;\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010674
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = l.get(0);\n        for (int i = 1; i < l.size(); i++)\
    \ {\n            long e = l.get(i);\n            if (e > max) {\n            \
    \    max = e;\n            }\n        }\n        return max;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return maximum element in the array list.\n    // >>>\
    \ maxElement((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
    \    // (3l)\n    // >>> maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (123l)\n    public static long maxElement(ArrayList<Long>\
    \ l) {\n        long max = 0;\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (max < l.get(i)) {\n                max = l.get(i);\n        \
    \    }\n        }\n        return max;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l)))) == (3l));\n    assert(maxElement((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)124l,\
    \ (long)1l, (long)-10l)))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010678

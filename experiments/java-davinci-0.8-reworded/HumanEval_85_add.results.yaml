language: java
name: HumanEval_85_add
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ans\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                ans += lst.get(i);\n       \
    \     }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        //if(lst\
    \ == null)\n        //    return null;\n        long sum = 0l;\n        for(int\
    \ i = 0; i < lst.size(); i+=2) {\n            if(lst.get(i) % 2 == 0)\n      \
    \          sum += lst.get(i);\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzsykedb0.java:24)\n"
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (acc, element) -> acc + element);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrju91oc.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzoxahpn4.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((a,\
    \ b) -> a + b).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndyytcfk.java:20)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new RuntimeException(\"Not implemented.\");\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented.\n\
    \tat Problem.add(tmp2imju864.java:14)\n\tat Problem.main(tmp2imju864.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long a\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0)\n                a += lst.get(i);\n        }\n\
    \        return a;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((long)0,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx41hrh3i.java:20)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 2;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfidzu9p9.java:17)\n"
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd04en1xm.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long r\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                r += lst.get(i);\n         \
    \   }\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            if (lst.get(i)\
    \ % 2 == 0) {\n                sum += lst.get(i);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps3yih14s.java:23)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ans\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            ans +=\
    \ lst.get(i);\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaaddwpqz.java:21)\n"
  stdout: ''
  timestamp: 1660011563
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x%2 == 0)).filter(x -> (lst.indexOf(x)%2 == 1)).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpensw_p5a.java:20)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x % 2 == 0)).reduce(0l, (acc, curr) -> acc + curr);\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vjfo_3a.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0 && x % 4 != 0).reduce(0l, (x, y) -> x +\
    \ y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgipz5s81.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // type\
    \ your code here.\n        return (long)0l;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpma87c5zt.java:18)\n"
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x%2 == 0 && lst.indexOf(x)%2 == 1)).mapToLong(x ->\
    \ x).sum();\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp45fhc3uh.java:20)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(1l, (a,b) -> a*b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfijf0jo6.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e -> e % 2 == 0).reduce(0l, (a,b) -> a + b);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt4nos8u.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                res += lst.get(i);\n       \
    \     }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> i % 2 == 0).filter(i -> lst.indexOf(i) % 2 == 1).reduce((a,\
    \ b) -> a + b).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjl5xz1l2.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long n\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                n += lst.get(i);\n         \
    \   }\n        }\n        return n;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x%2 == 0).filter(x -> lst.indexOf(x)%2 == 1).reduce((sum,\
    \ x) -> sum + x).get();\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_ugrwjy.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = (long)0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 1) {\n                if (lst.get(i) % 2 == 0) {\n               \
    \     res += lst.get(i);\n                }\n            }\n        }\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        if(lst.size()\
    \ == 0) return 0l;\n        if(lst.size() == 1) return lst.get(0);\n        return\
    \ lst.get(0) + lst.get(2) + lst.get(4) + lst.get(6) + lst.get(8);\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 2 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.add(tmpbbtyvp74.java:16)\n\tat Problem.main(tmpbbtyvp74.java:19)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // your\
    \ code goes here\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehj2ch0u.java:15: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            long x = lst.get(i);\n\
    \            if (i % 2 == 1 && x % 2 == 0) {\n                result += x;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(it -> (it % 2) == 0).skip(1).limit(1).reduce((long)0, (long)0,\
    \ Long::sum);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ew8tbid.java:14: error: method reduce in interface Stream<T> cannot\
    \ be applied to given types;\n        return lst.stream().filter(it -> (it % 2)\
    \ == 0).skip(1).limit(1).reduce((long)0, (long)0, Long::sum);\n              \
    \                                                          ^\n  required: U,BiFunction<U,?\
    \ super Long,U>,BinaryOperator<U>\n  found:    long,long,Long::sum\n  reason:\
    \ cannot infer type-variable(s) U\n    (argument mismatch; long cannot be converted\
    \ to BiFunction<U,? super Long,U>)\n  where U,T are type-variables:\n    U extends\
    \ Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new UnsupportedOperationException(\"Problem solution not implemented.\");\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ solution not implemented.\n\tat Problem.add(tmpbn93w4_b.java:14)\n\tat Problem.main(tmpbn93w4_b.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        for (long\
    \ i = 0l; i < lst.size(); i++) {\n            if (i % 2 == 0 && lst.get((int)i)\
    \ % 2 == 0) {\n                return lst.get((int)i);\n            }\n      \
    \  }\n        return 0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvfzuygh.java:22)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzoxahpn4.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // ...\
    \ your code goes here ...\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg6eyitnz.java:15: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> (i%2==0 && lst.indexOf(i)%2!=0)).mapToLong(Long::longValue).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bc5x_rm.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (int)x%2 == 0).filter(x -> (int)x%2 == 0).reduce(0l,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpglewhmsx.java:14: error: incompatible types: Long cannot be converted\
    \ to int\n        return lst.stream().filter(x -> (int)x%2 == 0).filter(x -> (int)x%2\
    \ == 0).reduce(0l, (x, y) -> x + y);\n                                       \
    \      ^\n/tmp/tmpglewhmsx.java:14: error: incompatible types: Long cannot be\
    \ converted to int\n        return lst.stream().filter(x -> (int)x%2 == 0).filter(x\
    \ -> (int)x%2 == 0).reduce(0l, (x, y) -> x + y);\n                           \
    \                                             ^\n2 errors\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // implement\
    \ this function.\n        return 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbkhgv3es.java:18)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd04en1xm.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(v -> v % 2 == 0).filter(v -> lst.indexOf(v) % 2 == 1).reduce(0l,\
    \ (v1, v2) -> v1 + v2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpasxqbynm.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ret\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i += 2) {\n            long x\
    \ = lst.get(i);\n            if (x % 2 == 0) {\n                ret += x;\n  \
    \          }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8p6poama.java:24)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ (long)IntStream.range(0, lst.size()).filter(i -> i % 2 == 1).mapToLong(lst::get).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbm0vi_5l.java:18)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x.intValue() % 2 == 0 && lst.indexOf(x) % 2 == 1)).reduce(0l,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_qau13zt.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // BEGIN\
    \ SOLUTION\n        return lst.stream().filter(n -> n % 2 == 0).skip(1).reduce(0l,\
    \ (n, p) -> n + p);\n        // END SOLUTION\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6y3fx4k.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        \n        int lstSize = lst.size();\n        long sum = 0;\n     \
    \   int i = 0;\n        while (i < lstSize) {\n            if (i % 2 == 1) {\n\
    \                long number = lst.get(i);\n                if (number % 2 ==\
    \ 0) {\n                    sum += number;\n                }\n            }\n\
    \            i++;\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> i % 2 == 0).filter(j -> lst.indexOf(j) % 2 == 1).reduce(0l,\
    \ (acc, j) -> acc + j);\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp51_j12ob.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n      return lst.stream().filter(x\
    \ -> x % 2 == 0).skip(1).reduce(0l, (x, y) -> x + y);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnmee3v6.java:18)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x % 2 == 0) && (lst.indexOf(x) % 2 == 1)).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplu2kau78.java:20)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,\
    \ y) -> x + y).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphp6j96j6.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // YOUR\
    \ CODE HERE\n        throw new RuntimeException(\"Not Implemented\");\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented\n\
    \tat Problem.add(tmpt0g_n227.java:15)\n\tat Problem.main(tmpt0g_n227.java:18)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,\
    \ y) -> x + y).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphp6j96j6.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Code\
    \ here\n        return lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x)\
    \ % 2 != 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpie6d62_3.java:21)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new UnsupportedOperationException(\"Problem.add has not been implemented\");\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.add\
    \ has not been implemented\n\tat Problem.add(tmp1aho3mjf.java:14)\n\tat Problem.main(tmp1aho3mjf.java:17)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (lst.indexOf(x) % 2) == 1).filter(x -> x % 2 == 0).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tst8j50.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e -> e % 2 == 0).filter(e -> lst.indexOf(e) % 2 == 1).reduce((e1,\
    \ e2) -> e1 + e2).get();\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkx4v_3xu.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int out0\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            long i0 =\
    \ lst.get(i);\n            if (i % 2 == 1 && i0 % 2 == 0) {\n                out0\
    \ += i0;\n            }\n        }\n        return out0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        try {\n\
    \            return (long)lst.stream().reduce((a, b) -> b).get();\n        } catch\
    \ (Exception ex) {\n            return 0;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrrvhfr1.java:23)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).skip(1).reduce(0l, (a, b) -> a + b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphj6jqhqq.java:18)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ l1 = new ArrayList<Long>();\n        for (int i = 0; i < lst.size(); i += 2)\
    \ {\n            l1.add(lst.get(i));\n        }\n        return sum_array(l1);\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvyuu450o.java:18: error: cannot find symbol\n        return sum_array(l1);\n\
    \               ^\n  symbol:   method sum_array(ArrayList<Long>)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x % 2 == 0 && lst.indexOf(x) % 2 == 1)).reduce(0l,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpez1rk4wc.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0 && lst.indexOf(x) % 2 == 1).reduce(Long::sum).get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ll0dosb.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // BEGIN\
    \ SOLUTION\n        long acc = 0l;\n        for (int i = 0; i < lst.size(); i\
    \ += 2) {\n            acc += lst.get(i);\n        }\n        return acc;\n  \
    \      // END SOLUTION\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnt1zxxa1.java:23)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e -> e % 2 == 0 && lst.indexOf(e) % 2 == 1).reduce(0l, (x,\
    \ y) -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplflgb58k.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            if (lst.get(i)\
    \ % 2 == 0) {\n                res += lst.get(i);\n            }\n        }\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd686hvwg.java:23)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (int i = 0; i < lst.size(); i +=\
    \ 2) {\n            long e = lst.get(i);\n            if (e % 2 == 0) {\n    \
    \            result.add(e);\n            }\n        }\n        long sum = 0l;\n\
    \        for (long e : result) {\n            sum += e;\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprppsy01z.java:28)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (a, b) -> a + (b % 2 == 0 ? b : 0));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfy1r4gp.java:17)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long rv\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            long e =\
    \ lst.get(i);\n            if (i % 2 == 1 && e % 2 == 0) {\n                rv\
    \ += e;\n            }\n        }\n        return rv;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> {\n                return (x % 2) == 0;\n         \
    \   }).filter(x -> {\n                return (lst.indexOf(x) % 2) == 1;\n    \
    \        }).mapToLong(x -> {\n                return x;\n            }).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx511myl4.java:26)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> i % 2 == 0).filter(i -> lst.indexOf(i) % 2 == 1).reduce((x,\
    \ y) -> x + y).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfwe4585.java:20)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Create\
    \ an array with the elements of lst.\n        long[] arr = new long[lst.size()];\n\
    \        for (int i = 0; i < lst.size(); i++) {\n            arr[i] = lst.get(i);\n\
    \        }\n        // Return the sum of even elements at odd indices.\n     \
    \   return IntStream.range(0, arr.length)\n            .filter(i -> i % 2 == 1)\n\
    \            .filter(i -> arr[i] % 2 == 0)\n            .mapToLong(i -> arr[i])\n\
    \            .sum();\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ (long)lst.stream().filter(x -> x % 2 == 0).reduce(0l, (long a, long b) -> a\
    \ + b);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmy71xh35.java:14: error: no suitable method found for reduce(long,(long\
    \ a, l[...]a + b)\n        return (long)lst.stream().filter(x -> x % 2 == 0).reduce(0l,\
    \ (long a, long b) -> a + b);\n                                              \
    \           ^\n    method Stream.reduce(Long,BinaryOperator<Long>) is not applicable\n\
    \      (argument mismatch; incompatible parameter types in lambda expression)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Long,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ ((Stream) lst.stream()).filter(x ->\n            (long)x % 2 == 0\n        ).filter(x\
    \ ->\n            (long)x % 2 == 0\n        ).skip(1).mapToLong(x ->\n       \
    \     (long)x\n        ).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmj6b3bo.java:24)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(num -> num % 2 == 0).filter(num -> lst.indexOf(num) % 2\
    \ == 1).reduce(0l, (a, b) -> a + b);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp140lxgpu.java:20)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long r\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            r += lst.get(i);\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxkvz0db.java:21)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (sum, x) -> sum + (x % 2 == 0 && lst.indexOf(x) % 2\
    \ == 1 ? x : 0));\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfb9c3atm.java:20)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        long i = 1l;\n        while (i < lst.size()) {\n            long\
    \ num = lst.get((int)i);\n            if (num % 2l == 0l) {\n                sum\
    \ += num;\n            }\n            i += 2l;\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long count\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                count += lst.get(i);\n     \
    \       }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long s\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            long x = lst.get(i);\n\
    \            if (i % 2 == 1 && x % 2 == 0) {\n                s += x;\n      \
    \      }\n        }\n        return s;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0)\n                sum += lst.get(i);\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().mapToLong(n -> n).filter(n -> n % 2 == 0).skip(1).limit(1).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsbprpou.java:18)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0)\n                result += lst.get(i);\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        //return\
    \ (long)lst.stream().filter(x -> x % 2 == 0).collect(Collectors.toList()).get(0);\n\
    \        return (long)lst.stream().filter(x -> x % 2 == 0).findFirst().get();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvch7_elt.java:18)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> i % 2 == 0).filter(i -> lst.indexOf(i) % 2 == 1).reduce((long)0l,\
    \ (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp29hr4iv6.java:20)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Long val\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i += 2) {\n            val +=\
    \ lst.get(i);\n        }\n        return val;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfxs0wwyu.java:21)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ IntStream.range(0, lst.size())\n                .filter(i -> i % 2 == 1)\n \
    \               .mapToLong(i -> lst.get(i))\n                .sum();\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6shuf9r9.java:21)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,\
    \ y) -> x + y).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphp6j96j6.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = (long)0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (lst.get(i) % (long)2l == (long)0l && i % (long)2l == (long)1l) {\n        \
    \        res += lst.get(i);\n            }\n        }\n        return res;\n \
    \   }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        Long L\
    \ = 0l;\n        ArrayList<Long> L2 = new ArrayList<Long>();\n        for (Long\
    \ i = 0l; i < lst.size(); i++) {\n            if (i % 2 == 1 && lst.get(i.intValue())\
    \ % 2 == 0) {\n                L = L + lst.get(i.intValue());\n            }\n\
    \        }\n        return L;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // This\
    \ is a \"method-only\" submission. \n        // You only need to complete this\
    \ method. \n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ans\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                ans += lst.get(i);\n       \
    \     }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n      long sum\
    \ = 0;\n      for (int i = 0; i < lst.size(); i++) {\n        if (i % 2 == 1 &&\
    \ lst.get(i) % 2 == 0) {\n          sum += lst.get(i);\n        }\n      }\n \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        //TODO:\
    \ Make it work.\n        long res = 0;\n        if(lst == null) return res;\n\
    \        for(int i = 0; i < lst.size(); i++){\n            if(lst.get(i) % 2 ==\
    \ 0){\n                if(i % 2 != 0){\n                    res += lst.get(i);\n\
    \                }\n            }\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new UnsupportedOperationException(\"Not Implemented Yet.\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ Implemented Yet.\n\tat Problem.add(tmpr00_xpra.java:14)\n\tat Problem.main(tmpr00_xpra.java:17)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            sum +=\
    \ lst.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjna390ew.java:21)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (x, y) -> x + y);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd04en1xm.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long rv\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            long x = lst.get(i);\n\
    \            if (i % 2 == 1 && x % 2 == 0) {\n                rv += x;\n     \
    \       }\n        }\n        return rv;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        //throw\
    \ new UnsupportedOperationException(\"Method not implemented yet\");\n       \
    \ int len = lst.size();\n        long sum = 0l;\n        for (int i = 0; i < len;\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                res += lst.get(i);\n       \
    \     }\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ (long)lst.stream().filter(x -> (x.longValue() % (long)2l) == (long)0l).filter(y\
    \ -> (y.longValue() % (long)2l) == (long)1l).reduce((long)0l, (long x, long y)\
    \ -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzvpwsw08.java:14: error: no suitable method found for reduce(long,(long\
    \ x, l[...]x + y)\n        return (long)lst.stream().filter(x -> (x.longValue()\
    \ % (long)2l) == (long)0l).filter(y -> (y.longValue() % (long)2l) == (long)1l).reduce((long)0l,\
    \ (long x, long y) -> x + y);\n                                              \
    \                                                                            \
    \               ^\n    method Stream.reduce(Long,BinaryOperator<Long>) is not\
    \ applicable\n      (argument mismatch; incompatible parameter types in lambda\
    \ expression)\n    method Stream.<U>reduce(U,BiFunction<U,? super Long,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((long)0,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx41hrh3i.java:20)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new UnsupportedOperationException(\"Problem P07.add has not been implemented\"\
    );\n    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ P07.add has not been implemented\n\tat Problem.add(tmphpof9jd_.java:14)\n\t\
    at Problem.main(tmphpof9jd_.java:17)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).reduce(0l, (x, y) -> x + y);\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59df1wrx.java:17)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0 && (lst.indexOf(x) % 2 != 0)).reduce(0l,\
    \ (a,b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeygkg37c.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> ((x) % (2l) == (0l)) && (lst.indexOf(x) % (2l) == (1l))).reduce((x,\
    \ y) -> (x) + (y)).get();\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdl7fb9a6.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (x, y) -> (x % 2) == 0 ? x + y : x);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8r_lotcm.java:17)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n\t\treturn lst.stream().filter(e\
    \ -> !(((lst.indexOf(e) % 2) == 0))).reduce(0l, Long::sum);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptxl86wmg.java:18)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new RuntimeException(\"Not yet implemented\");\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not yet implemented\n\
    \tat Problem.add(tmpg0uy73kf.java:14)\n\tat Problem.main(tmpg0uy73kf.java:17)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (x, y) -> (x + y) * y, (x, y) -> y);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9yl805r.java:17)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ret\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i += 2) {\n            ret +=\
    \ lst.get(i);\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3zg0rr4b.java:21)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ IntStream.range(0, lst.size())\n                        .filter(n -> n % 2 ==\
    \ 1)\n                        .mapToLong(n -> lst.get(n))\n                  \
    \      .filter(n -> n % 2 == 0)\n                        .sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ret\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                ret += lst.get(i);\n       \
    \     }\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            sum +=\
    \ lst.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjna390ew.java:21)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e->(e % 2) == 0).filter(e->(lst.indexOf(e) % 2) == 1).mapToLong(e->e).sum();\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3fypdyk.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ new Solution().add(lst);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8v38u9ob.java:14: error: cannot find symbol\n        return new\
    \ Solution().add(lst);\n                   ^\n  symbol:   class Solution\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> i % 2 == 0).filter(i -> lst.indexOf(i) % 2 == 1).reduce((long)0l,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczj40zto.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e -> e % 2 == 0 && lst.indexOf(e) % 2 == 1).mapToLong(a\
    \ -> a).sum();\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpum5rfpna.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (lst.indexOf(x) % 2 == 1 && x % 2 == 0)).mapToLong(x\
    \ -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4oy_wcur.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n      return IntStream.range(0,\
    \ lst.size())\n        .filter(n -> n % 2 == 1)\n        .mapToLong(n -> lst.get(n))\n\
    \        .filter(n -> n % 2 == 0)\n        .sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ (lst.stream().filter(x -> (x % 2 == 0)).filter(x -> (lst.indexOf(x) % 2 == 1)).reduce((long)0l,\
    \ (x, y) -> (x + y)));\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeu6omol0.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0;\n        for (int i = 0; i < lst.size(); i+=2) {\n            if (lst.get(i)\
    \ % 2 == 0) {\n                res += lst.get(i);\n            }\n        }\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9q6dm4f.java:23)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        //Write\
    \ code here\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum\
    \ += lst.get(i);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Your\
    \ code goes here.\n        long sum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).reduce((x,\
    \ y) -> x + y).get();\n    }\n    public static void main(String[] args) {\n \
    \   assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphp6j96j6.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long res\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            long c =\
    \ lst.get(i);\n            if (i % 2 == 1 && c % 2 == 0) {\n                res\
    \ += c;\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().mapToLong(x -> x).filter(x -> x % 2 == 0).sum();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3vuyl41.java:17)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // TODO\n\
    \        return (long)0l;\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9qsakwa.java:18)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long e\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            long n\
    \ = lst.get(i);\n            if (n % 2 == 0) {\n                e += n;\n    \
    \        }\n        }\n        return e;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvpco3hpn.java:24)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(num -> (num % 2 == 0)).reduce(0l, (a, b) -> a + b);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsoz7gwau.java:17)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        ArrayList<Long>\
    \ ret = new ArrayList<Long>();\n        int i = 0;\n        for (Long elt : lst)\
    \ {\n            if (i % 2 == 1 && elt % 2 == 0) {\n                ret.add(elt);\n\
    \            }\n            i++;\n        }\n        return ret.stream().reduce((long)0l,\
    \ (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(i -> i % 2 == 0).skip(1).reduce(0l, Long::sum);\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08ll9is5.java:18)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x % 2l) == 0l).mapToLong(x -> x).sum();\n    }\n \
    \   public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmkmcjsht.java:17)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().mapToLong(Long::longValue).filter(num -> {if (num % 2 == 0) {return\
    \ true;} else {return false;}}).filter(num -> {if (lst.indexOf(num) % 2 == 0)\
    \ {return true;} else {return false;}}).sum();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy7vde1zn.java:17)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long result\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                result += lst.get(i);\n    \
    \        }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        int i = 0;\n        while (i < lst.size()) {\n            if (i\
    \ % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n   \
    \         }\n            i++;\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Your\
    \ code here.\n        long sum = 0l;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n             \
    \   sum += lst.get(i);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(p -> p % 2 == 0).skip(1).reduce(0l, (x, y) -> x + y);\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuo6crthg.java:18)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // 2.\
    \ filter on list elements where index is odd\n        // 3. map to long (to match\
    \ return type)\n        // 4. return sum\n        return lst.stream().filter(t\
    \ -> lst.indexOf(t) % 2 == 1).mapToLong(t -> t).sum();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfiiac0wj.java:21)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(a -> a % 2 == 0).skip(1).reduce(0l, (acc, b) -> acc + b);\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7gvmtlcz.java:18)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(1l, (x, y) -> (x * y));\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyrgte3_i.java:17)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(e -> e%2 == 0).skip(1).limit(1).findFirst().get();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_j_0hh9.java:18)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().mapToLong(a -> a.longValue()).filter(n -> (n % 2) == 0).filter(n\
    \ -> (n % 2) == 0).sum();\n    }\n    public static void main(String[] args) {\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) ==\
    \ (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94emu4os.java:17)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        // your solution goes here.\n        for (int i = 0; i < lst.size();\
    \ i += 2) {\n            if (lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5c9cs77q.java:24)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ Streams.zip(Streams.range(0, lst.size()), lst.stream(),\n            (i,e) ->\
    \ Pair.with(i,e))\n            .filter(p -> (p.getValue0() % 2) == 1)\n      \
    \      .map(p -> p.getValue1())\n            .filter(e -> (e % 2) == 0)\n    \
    \        .reduce(0l, (l1,l2) -> l1 + l2);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrcr8ngi.java:14: error: cannot find symbol\n        return Streams.zip(Streams.range(0,\
    \ lst.size()), lst.stream(),\n               ^\n  symbol:   variable Streams\n\
    \  location: class Problem\n/tmp/tmpzrcr8ngi.java:14: error: cannot find symbol\n\
    \        return Streams.zip(Streams.range(0, lst.size()), lst.stream(),\n    \
    \                       ^\n  symbol:   variable Streams\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().reduce(0l, (a,b) -> b % 2 == 0 && lst.indexOf(b) % 2 == 1 ? a +\
    \ b : a);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpowy4i7x8.java:20)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        int n\
    \ = lst.size();\n        long sum = 0l;\n        for (int i = 0; i < n; i++) {\n\
    \            long value = lst.get(i);\n            if (i % 2 == 1 && value % 2\
    \ == 0) {\n                sum += value;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> (x % 2 == 0 && lst.indexOf(x) % 2 == 1)).reduce(0l,\
    \ (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n   \
    \ assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpez1rk4wc.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ret\
    \ = 0;\n        for (int i = 0; i < lst.size(); i += 2) {\n            ret +=\
    \ lst.get(i);\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuf4jswt.java:21)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ret\
    \ = 0;\n        int i = 0;\n        while (i < lst.size()) {\n            if (i\
    \ % 2 == 1) {\n                ret += lst.get(i);\n            }\n           \
    \ i += 1;\n        }\n        return ret;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ehv61ob.java:26)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n  \
    \          if (i % 2 == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqenx45c.java:17)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0 && lst.indexOf(x) % 2 == 1).reduce(0l, (a,\
    \ b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0g3l807.java:20)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ 0l;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzoxahpn4.java:17)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0l;\n        for (int i = 0; i < lst.size(); i += 2) {\n            long x\
    \ = lst.get(i);\n            if (x % 2 == 0) {\n                sum += x;\n  \
    \          }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84dyhonh.java:24)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ lst.stream().filter(x -> x % 2 == 0).filter(x -> lst.indexOf(x) % 2 == 1).collect(Collectors.summingLong(Long::longValue));\n\
    \    }\n    public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgm7oomva.java:20)\n"
  stdout: ''
  timestamp: 1660011573
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // The\
    \ body of the function\n        return lst.stream().reduce(0l, (acc, curr) ->\
    \ acc + curr);\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphetjzfao.java:18)\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // List<Long>\
    \ arr = lst.stream().filter(x -> x % 2 != 0).collect(Collectors.toList());\n \
    \       // Long sum = arr.stream().reduce(0l, (x, y) -> x + y);\n        // Long\
    \ sum = lst.stream().filter(x -> x % 2 != 0).reduce(0l, (x, y) -> x + y);\n  \
    \      Long sum = lst.stream().filter(x -> x % 2 != 0).reduce(0l, Long::sum);\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n\
    \    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l,\
    \ (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnd8jdxqt.java:21)\n"
  stdout: ''
  timestamp: 1660011573
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        return\
    \ null;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpas0od06e.java:14: error: incompatible types: <null> cannot be converted\
    \ to long\n        return null;\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1660011572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        throw\
    \ new UnsupportedOperationException(\"Need to implement\");\n    }\n    public\
    \ static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Need\
    \ to implement\n\tat Problem.add(tmpsxc8tz30.java:14)\n\tat Problem.main(tmpsxc8tz30.java:17)\n"
  stdout: ''
  timestamp: 1660011573
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long ret=0l;\n\
    \        for(int i=0;i<lst.size();i+=2)\n            ret+=lst.get(i);\n      \
    \  return ret;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnm8avbyx.java:20)\n"
  stdout: ''
  timestamp: 1660011573
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 1 && lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        // Loop\
    \ through the list to sum the evens at odd indices.\n        long sum = 0l;\n\
    \        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2 == 1 &&\
    \ lst.get(i) % 2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011573

language: rs
name: HumanEval_57_monotonic
results:
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut last = l[0];\n    let mut increasing = true;\n\
    \    for i in 1..l.len() {\n        if l[i] < last {\n            increasing =\
    \ false;\n        }\n        if increasing && l[i] < last {\n            return\
    \ false;\n        }\n        if !increasing && l[i] > last {\n            return\
    \ false;\n        }\n        last = l[i];\n    }\n    true\n}\n\nfn main() {\n\
    \    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]),\
    \ true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        } else if l[i] < l[i - 1] {\n            inc = false;\n        }\n  \
    \  }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l == l.iter().cloned().collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp0c8j7ulj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n         \
    \   decreasing = false;\n        }\n        if l[i] < l[i - 1] {\n           \
    \ increasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 1
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut increasing = true;\n\
    \    for x in l {\n        if x < prev {\n            increasing = false;\n  \
    \          break;\n        }\n        prev = x;\n    }\n    if increasing {\n\
    \        return true;\n    }\n    let mut prev = l[0];\n    for x in l {\n   \
    \     if x > prev {\n            return false;\n        }\n        prev = x;\n\
    \    }\n    true\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `l`\n   --> /tmp/tmp96xsvzbf.rs:21:20\n\
    \    |\n8   | fn monotonic(l: Vec<isize>) -> bool {\n    |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n...\n11  |     for x in l {\n    |              - `l` moved due to this\
    \ implicit call to `.into_iter()`\n...\n21  |     let mut prev = l[0];\n    |\
    \                    ^ value borrowed here after move\n    |\nnote: this function\
    \ takes ownership of the receiver `self`, which moves `l`\nhelp: consider iterating\
    \ over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n\
    \    |\n11  |     for x in &l {\n    |              +\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0382`.\n"
  stdout: ''
  timestamp: 1660011450
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l == l.iter().cloned().collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp0c8j7ulj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 1
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut increasing = true;\n\
    \    for i in l {\n        if i < prev {\n            increasing = false;\n  \
    \          break;\n        }\n        prev = i;\n    }\n    if increasing {\n\
    \        return true;\n    }\n    let mut prev = l[0];\n    for i in l {\n   \
    \     if i > prev {\n            return false;\n        }\n        prev = i;\n\
    \    }\n    true\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `l`\n   --> /tmp/tmpy6k6zlto.rs:21:20\n\
    \    |\n8   | fn monotonic(l: Vec<isize>) -> bool {\n    |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n...\n11  |     for i in l {\n    |              - `l` moved due to this\
    \ implicit call to `.into_iter()`\n...\n21  |     let mut prev = l[0];\n    |\
    \                    ^ value borrowed here after move\n    |\nnote: this function\
    \ takes ownership of the receiver `self`, which moves `l`\nhelp: consider iterating\
    \ over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n\
    \    |\n11  |     for i in &l {\n    |              +\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0382`.\n"
  stdout: ''
  timestamp: 1660011450
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        }\n        if l[i] < l[i - 1] {\n            inc = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 1;\n    let mut inc\
    \ = true;\n    let mut dec = true;\n    while i < l.len() - 1 {\n        if l[i]\
    \ > l[j] {\n            inc = false;\n        }\n        if l[i] < l[j] {\n  \
    \          dec = false;\n        }\n        i += 1;\n        j += 1;\n    }\n\
    \    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 1
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    let mut l_sorted = l.clone();\n\
    \    l_sorted.sort();\n    l == l_sorted || l == l_sorted.iter().rev().cloned().collect()\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0283]: type annotations needed\n  --> /tmp/tmpx73uyocf.rs:12:24\n\
    \   |\n12 |     l == l_sorted || l == l_sorted.iter().rev().cloned().collect()\n\
    \   |                        ^^ cannot infer type\n   |\n   = note: multiple `impl`s\
    \ satisfying `Vec<isize>: PartialEq<_>` found in the `alloc` crate:\n        \
    \   - impl<T, U, A, N> PartialEq<&[U; N]> for Vec<T, A>\n             where A:\
    \ Allocator, T: PartialEq<U>;\n           - impl<T, U, A, N> PartialEq<[U; N]>\
    \ for Vec<T, A>\n             where A: Allocator, T: PartialEq<U>;\n         \
    \  - impl<T, U, A1, A2> PartialEq<Vec<U, A2>> for Vec<T, A1>\n             where\
    \ A1: Allocator, A2: Allocator, T: PartialEq<U>;\n           - impl<T, U, A> PartialEq<&[U]>\
    \ for Vec<T, A>\n             where A: Allocator, T: PartialEq<U>;\n         \
    \  and 2 more\nhelp: consider specifying the type argument in the method call\n\
    \   |\n12 |     l == l_sorted || l == l_sorted.iter().rev().cloned().collect::<B>()\n\
    \   |                                                                 +++++\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0283`.\n"
  stdout: ''
  timestamp: 1660011450
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut increasing = true;\n\
    \    for i in l {\n        if i > prev {\n            if !increasing {\n     \
    \           return false;\n            }\n        } else if i < prev {\n     \
    \       increasing = false;\n        }\n        prev = i;\n    }\n    true\n}\n\
    \nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  let mut prev = l[0];\n    for i in 1..l.len() {\n        if l[i] < prev {\n\
    \            inc = false;\n        }\n        if l[i] > prev {\n            dec\
    \ = false;\n        }\n        prev = l[i];\n    }\n    inc || dec\n}\n\nfn main()\
    \ {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]),\
    \ true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 1
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut increasing = true;\n\
    \    for i in l {\n        if i < prev {\n            increasing = false;\n  \
    \          break;\n        }\n        prev = i;\n    }\n    if increasing {\n\
    \        return true;\n    }\n    let mut prev = l[0];\n    for i in l {\n   \
    \     if i > prev {\n            return false;\n        }\n        prev = i;\n\
    \    }\n    true\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `l`\n   --> /tmp/tmpy6k6zlto.rs:21:20\n\
    \    |\n8   | fn monotonic(l: Vec<isize>) -> bool {\n    |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n...\n11  |     for i in l {\n    |              - `l` moved due to this\
    \ implicit call to `.into_iter()`\n...\n21  |     let mut prev = l[0];\n    |\
    \                    ^ value borrowed here after move\n    |\nnote: this function\
    \ takes ownership of the receiver `self`, which moves `l`\nhelp: consider iterating\
    \ over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n\
    \    |\n11  |     for i in &l {\n    |              +\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0382`.\n"
  stdout: ''
  timestamp: 1660011450
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n            inc = false;\n\
    \        }\n        if l[i - 1] < l[i] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  let mut prev = l[0];\n    for i in l {\n        if i < prev {\n           \
    \ inc = false;\n        }\n        if i > prev {\n            dec = false;\n \
    \       }\n        prev = i;\n    }\n    inc || dec\n}\n\nfn main() {\n    let\
    \ candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut monotonic = true;\n    let mut increasing\
    \ = true;\n    let mut decreasing = true;\n    for i in 1..l.len() {\n       \
    \ if l[i] > l[i - 1] {\n            decreasing = false;\n        } else if l[i]\
    \ < l[i - 1] {\n            increasing = false;\n        }\n    }\n    if !increasing\
    \ && !decreasing {\n        monotonic = false;\n    }\n    monotonic\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l == l.iter().cloned().collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp0c8j7ulj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut inc = true;\n \
    \   let mut dec = true;\n    for i in l {\n        if i > prev {\n           \
    \ dec = false;\n        } else if i < prev {\n            inc = false;\n     \
    \   }\n        prev = i;\n    }\n    inc || dec\n}\n\nfn main() {\n    let candidate\
    \ = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 1
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut increasing = true;\n\
    \    for i in l {\n        if i < prev {\n            increasing = false;\n  \
    \          break;\n        }\n        prev = i;\n    }\n    if increasing {\n\
    \        return true;\n    }\n    let mut prev = l[0];\n    for i in l {\n   \
    \     if i > prev {\n            return false;\n        }\n        prev = i;\n\
    \    }\n    true\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: borrow of moved value: `l`\n   --> /tmp/tmpy6k6zlto.rs:21:20\n\
    \    |\n8   | fn monotonic(l: Vec<isize>) -> bool {\n    |              - move\
    \ occurs because `l` has type `Vec<isize>`, which does not implement the `Copy`\
    \ trait\n...\n11  |     for i in l {\n    |              - `l` moved due to this\
    \ implicit call to `.into_iter()`\n...\n21  |     let mut prev = l[0];\n    |\
    \                    ^ value borrowed here after move\n    |\nnote: this function\
    \ takes ownership of the receiver `self`, which moves `l`\nhelp: consider iterating\
    \ over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n\
    \    |\n11  |     for i in &l {\n    |              +\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0382`.\n"
  stdout: ''
  timestamp: 1660011450
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 1;\n    let mut inc = true;\n    let\
    \ mut dec = true;\n    while i < l.len() {\n        if l[i] > l[i - 1] {\n   \
    \         dec = false;\n        } else if l[i] < l[i - 1] {\n            inc =\
    \ false;\n        }\n        i += 1;\n    }\n    inc || dec\n}\n\nfn main() {\n\
    \    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]),\
    \ true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        }\n        if l[i] < l[i - 1] {\n            inc = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 1;\n    let mut inc\
    \ = true;\n    let mut dec = true;\n    while j < l.len() {\n        if l[i] <\
    \ l[j] {\n            dec = false;\n        } else if l[i] > l[j] {\n        \
    \    inc = false;\n        }\n        i += 1;\n        j += 1;\n    }\n    inc\
    \ || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n \
    \   l.len() == 1 || l.len() == l[0].abs() as usize + 1\n}\n\nfn main() {\n   \
    \ let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpk_mbk8d3.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut last = l[0];\n    let mut increasing = true;\n\
    \    for i in 1..l.len() {\n        if l[i] > last {\n            if !increasing\
    \ {\n                return false;\n            }\n        } else if l[i] < last\
    \ {\n            increasing = false;\n        }\n        last = l[i];\n    }\n\
    \    true\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 1;\n    let mut inc\
    \ = true;\n    let mut dec = true;\n    while j < l.len() {\n        if l[i] >\
    \ l[j] {\n            inc = false;\n        }\n        if l[i] < l[j] {\n    \
    \        dec = false;\n        }\n        i += 1;\n        j += 1;\n    }\n  \
    \  inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut inc = true;\n    let\
    \ mut dec = true;\n    while i < l.len() - 1 {\n        if l[i] > l[i + 1] {\n\
    \            inc = false;\n        }\n        if l[i] < l[i + 1] {\n         \
    \   dec = false;\n        }\n        i += 1;\n    }\n    return inc || dec;\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l == l.iter().cloned().collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp0c8j7ulj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        inc &= l[i - 1] <= l[i];\n        dec &= l[i\
    \ - 1] >= l[i];\n    }\n    inc || dec\n}\n\nfn main() {\n    let candidate =\
    \ monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 1;\n    let mut inc\
    \ = true;\n    let mut dec = true;\n    while j < l.len() {\n        if l[i] >\
    \ l[j] {\n            inc = false;\n        }\n        if l[i] < l[j] {\n    \
    \        dec = false;\n        }\n        i += 1;\n        j += 1;\n    }\n  \
    \  inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut m = l[0];\n    let mut inc = true;\n    let\
    \ mut dec = true;\n    for i in l {\n        if i < m {\n            inc = false;\n\
    \        }\n        if i > m {\n            dec = false;\n        }\n        m\
    \ = i;\n    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        }\n        if l[i] < l[i - 1] {\n            inc = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        } else if l[i] < l[i - 1] {\n            inc = false;\n        }\n  \
    \  }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        inc &= l[i - 1] <= l[i];\n        dec &= l[i\
    \ - 1] >= l[i];\n    }\n    inc || dec\n}\n\nfn main() {\n    let candidate =\
    \ monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    if l.len() < 2 {\n        return true;\n    }\n \
    \   let mut prev = l[0];\n    let mut increasing = true;\n    for i in 1..l.len()\
    \ {\n        if l[i] > prev {\n            if !increasing {\n                return\
    \ false;\n            }\n        } else if l[i] < prev {\n            if increasing\
    \ {\n                increasing = false;\n            }\n        } else {\n  \
    \          return false;\n        }\n        prev = l[i];\n    }\n    true\n}\n\
    \nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpuih0m3uz.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n \
    \   l.len() == 1 || l.len() == l[0].abs() as usize + 1\n}\n\nfn main() {\n   \
    \ let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpk_mbk8d3.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n            inc = false;\n\
    \        }\n        if l[i - 1] < l[i] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   is_increasing = false;\n        }\n        if l[i - 1] < l[i] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut l = l;\n    l.sort();\n    l == l.iter().cloned().collect::<Vec<isize>>()\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `true`,\n right: `false`', /tmp/tmp0c8j7ulj.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    let mut i = 0;\n    while i < l.len() - 1 {\n        if l[i] >\
    \ l[i + 1] {\n            increasing = false;\n        }\n        if l[i] < l[i\
    \ + 1] {\n            decreasing = false;\n        }\n        i += 1;\n    }\n\
    \    increasing || decreasing\n}\n\nfn main() {\n    let candidate = monotonic;\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 101
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    if l.len() <= 1 {\n        return true;\n    }\n\
    \    let mut prev = l[0];\n    let mut increasing = true;\n    for i in 1..l.len()\
    \ {\n        if l[i] > prev {\n            if !increasing {\n                return\
    \ false;\n            }\n        } else if l[i] < prev {\n            if increasing\
    \ {\n                increasing = false;\n            }\n        } else {\n  \
    \          return false;\n        }\n        prev = l[i];\n    }\n    true\n}\n\
    \nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `false`,\n right: `true`', /tmp/tmpmo3mfps_.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut flag = false;\n    let mut prev = l[0];\n\
    \    for i in l {\n        if i > prev {\n            if flag {\n            \
    \    return false;\n            }\n        } else if i < prev {\n            flag\
    \ = true;\n        }\n        prev = i;\n    }\n    true\n}\n\nfn main() {\n \
    \   let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut prev = l[0];\n    let mut increasing = true;\n\
    \    for i in 1..l.len() {\n        if l[i] > prev {\n            if !increasing\
    \ {\n                return false;\n            }\n        } else if l[i] < prev\
    \ {\n            increasing = false;\n        }\n        prev = l[i];\n    }\n\
    \    true\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        }\n        if l[i] < l[i - 1] {\n            inc = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n         \
    \   decreasing = false;\n        }\n        if l[i] < l[i - 1] {\n           \
    \ increasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut m = l[0];\n    let mut inc = true;\n    let\
    \ mut dec = true;\n    for i in 1..l.len() {\n        if l[i] > m {\n        \
    \    dec = false;\n        } else if l[i] < m {\n            inc = false;\n  \
    \      }\n        m = l[i];\n    }\n    inc || dec\n}\n\nfn main() {\n    let\
    \ candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut m = l[0];\n    let mut d = 0;\n    for i\
    \ in 1..l.len() {\n        if l[i] > m {\n            if d == -1 {\n         \
    \       return false;\n            }\n            d = 1;\n        } else if l[i]\
    \ < m {\n            if d == 1 {\n                return false;\n            }\n\
    \            d = -1;\n        }\n        m = l[i];\n    }\n    true\n}\n\nfn main()\
    \ {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]),\
    \ true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 1;\n    let mut inc\
    \ = true;\n    let mut dec = true;\n    while j < l.len() {\n        if l[i] >\
    \ l[j] {\n            inc = false;\n        }\n        if l[i] < l[j] {\n    \
    \        dec = false;\n        }\n        i += 1;\n        j += 1;\n    }\n  \
    \  inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        inc &= l[i] >= l[i - 1];\n        dec &= l[i]\
    \ <= l[i - 1];\n    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n\
    \    assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] > l[i - 1] {\n         \
    \   decreasing = false;\n        }\n        if l[i] < l[i - 1] {\n           \
    \ increasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut m = l[0];\n    let mut d = 0;\n    for i\
    \ in 1..l.len() {\n        if l[i] > m {\n            if d == -1 {\n         \
    \       return false;\n            }\n            d = 1;\n        } else if l[i]\
    \ < m {\n            if d == 1 {\n                return false;\n            }\n\
    \            d = -1;\n        }\n        m = l[i];\n    }\n    true\n}\n\nfn main()\
    \ {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2, 4, 10]),\
    \ true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   is_increasing = false;\n        }\n        if l[i] > l[i - 1] {\n        \
    \    is_decreasing = false;\n        }\n    }\n    is_increasing || is_decreasing\n\
    }\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n  \
    \  assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4,\
    \ 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n  \
    \  assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i - 1] > l[i] {\n         \
    \   increasing = false;\n        }\n        if l[i - 1] < l[i] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut increasing = true;\n    let mut decreasing\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   increasing = false;\n        }\n        if l[i] > l[i - 1] {\n           \
    \ decreasing = false;\n        }\n    }\n    increasing || decreasing\n}\n\nfn\
    \ main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1, 2,\
    \ 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
    \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n\
    \    assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
    \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451
- exit_code: 0
  program: "/// Return True is list elements are monotonically increasing or decreasing.\n\
    /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20,\
    \ 4, 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
    \ Vec<isize>) -> bool {\n    let mut inc = true;\n    let mut dec = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            inc = false;\n\
    \        }\n        if l[i] > l[i - 1] {\n            dec = false;\n        }\n\
    \    }\n    inc || dec\n}\n\nfn main() {\n    let candidate = monotonic;\n   \
    \ assert_eq!(candidate(vec![1, 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1,\
    \ 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1, 20, 4, 10]), false);\n\
    \    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n    assert_eq!(candidate(vec![4,\
    \ 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 5, 60]), false);\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]), true);\n    assert_eq!(candidate(vec![9,\
    \ 9, 9, 9]), true);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011451

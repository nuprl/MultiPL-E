name: HumanEval_46_fib4
language: rs
prompt: "/// The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n/// fib4(0) -> 0\n/// fib4(1) -> 0\n/// fib4(2) ->\
  \ 2\n/// fib4(3) -> 0\n/// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  /// Please write a function to efficiently compute the n-th element of the fib4\
  \ number sequence.  Do not use recursion.\n/// >>> fib4(5)\n/// 4\n/// >>> fib4(6)\n\
  /// 8\n/// >>> fib4(7)\n/// 14\nfn fib4(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = fib4;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let\
    \ mut d = 0;\n    for _ in 3..n {\n        d = a + b + c;\n        a = b;\n  \
    \      b = c;\n        c = d;\n    }\n    d", "    let mut a = 0;\n    let mut\
    \ b = 0;\n    let mut c = 2;\n    let mut d = 0;\n    for _ in 0..n {\n      \
    \  d = a + b + c;\n        a = b;\n        b = c;\n        c = d;\n    }\n   \
    \ d", "    let mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut\
    \ d = 0;\n    let mut i = 3;\n    while i <= n {\n        let temp = a + b + c\
    \ + d;\n        a = b;\n        b = c;\n        c = d;\n        d = temp;\n  \
    \      i += 1;\n    }\n    d", "    if n < 0 {\n        panic!(\"n must be non-negative\"\
    );\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n      \
    \  return 0;\n    }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3\
    \ {\n        return 0;\n    }\n    let mut a = 0;\n    let mut b = 0;\n    let\
    \ mut c = 2;\n    let mut d = 0;\n    for _ in 4..n+1 {\n        let e = a + b\
    \ + c + d;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n \
    \   }\n    return d;", "    let mut a = 0;\n    let mut b = 0;\n    let mut c\
    \ = 2;\n    let mut d = 0;\n    for _ in 4..n + 1 {\n        d = a + b + c;\n\
    \        a = b;\n        b = c;\n        c = d;\n    }\n    d", "    let mut a\
    \ = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut d = 0;\n    for _\
    \ in 3..n {\n        let e = a + b + c + d;\n        a = b;\n        b = c;\n\
    \        c = d;\n        d = e;\n    }\n    a + b + c + d", "    if n == 0 {\n\
    \        return 0;\n    }\n    if n == 1 {\n        return 0;\n    }\n    if n\
    \ == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return 0;\n    }\n\
    \    let mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut d = 0;\n\
    \    for _ in 4..n + 1 {\n        let e = a + b + c + d;\n        a = b;\n   \
    \     b = c;\n        c = d;\n        d = e;\n    }\n    return d;", "    let\
    \ mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut d = 0;\n   \
    \ for _ in 0..n {\n        d = a + b + c;\n        a = b;\n        b = c;\n  \
    \      c = d;\n    }\n    d", "    let mut a = 0;\n    let mut b = 0;\n    let\
    \ mut c = 2;\n    let mut d = 0;\n    for _ in 3..n {\n        d = a + b + c;\n\
    \        a = b;\n        b = c;\n        c = d;\n    }\n    d", "    let mut a\
    \ = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut d = 0;\n    for _\
    \ in 4..n+1 {\n        let e = a + b + c + d;\n        a = b;\n        b = c;\n\
    \        c = d;\n        d = e;\n    }\n    d", "    let mut a = 0;\n    let mut\
    \ b = 0;\n    let mut c = 2;\n    let mut d = 0;\n    let mut e = 0;\n    for\
    \ _ in 3..n {\n        e = a + b + c + d;\n        a = b;\n        b = c;\n  \
    \      c = d;\n        d = e;\n    }\n    e", "    if n < 0 {\n        panic!(\"\
    n must be >= 0\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n\
    \ == 1 {\n        return 0;\n    }\n    if n == 2 {\n        return 2;\n    }\n\
    \    if n == 3 {\n        return 0;\n    }\n    let mut a = 0;\n    let mut b\
    \ = 0;\n    let mut c = 2;\n    let mut d = 0;\n    for _ in 4..n + 1 {\n    \
    \    let e = a + b + c + d;\n        a = b;\n        b = c;\n        c = d;\n\
    \        d = e;\n    }\n    a + b + c + d", "    let mut a = 0;\n    let mut b\
    \ = 0;\n    let mut c = 2;\n    let mut d = 0;\n    for _ in 3..n {\n        d\
    \ = a + b + c;\n        a = b;\n        b = c;\n        c = d;\n    }\n    d",
  "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 0;\n\
    \    }\n    if n == 2 {\n        return 2;\n    }\n    if n == 3 {\n        return\
    \ 0;\n    }\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let\
    \ mut d = 0;\n    for _ in 4..n+1 {\n        let temp = a + b + c + d;\n     \
    \   a = b;\n        b = c;\n        c = d;\n        d = temp;\n    }\n    return\
    \ a + b + c + d;", "    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n\
    \        return 0;\n    }\n    if n == 2 {\n        return 2;\n    }\n    if n\
    \ == 3 {\n        return 0;\n    }\n    let mut a = 0;\n    let mut b = 0;\n \
    \   let mut c = 2;\n    let mut d = 0;\n    for _ in 4..n+1 {\n        let temp\
    \ = a + b + c + d;\n        a = b;\n        b = c;\n        c = d;\n        d\
    \ = temp;\n    }\n    return a + b + c + d;", "    let mut a = 0;\n    let mut\
    \ b = 0;\n    let mut c = 2;\n    let mut d = 0;\n    for _ in 3..n {\n      \
    \  d = a + b + c;\n        a = b;\n        b = c;\n        c = d;\n    }\n   \
    \ d", "    let mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut\
    \ d = 0;\n    for _ in 3..n {\n        d = a + b + c;\n        a = b;\n      \
    \  b = c;\n        c = d;\n    }\n    d", "    if n < 0 {\n        panic!(\"n\
    \ must be positive\");\n    }\n    let mut a = 0;\n    let mut b = 0;\n    let\
    \ mut c = 2;\n    let mut d = 0;\n    for _ in 3..n {\n        let e = a + b +\
    \ c + d;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n   \
    \ }\n    a + b + c + d", "    let mut fib4_n_minus_1 = 0;\n    let mut fib4_n_minus_2\
    \ = 0;\n    let mut fib4_n_minus_3 = 2;\n    let mut fib4_n_minus_4 = 0;\n   \
    \ let mut fib4_n = 0;\n    for _ in 4..n+1 {\n        fib4_n = fib4_n_minus_1\
    \ + fib4_n_minus_2 + fib4_n_minus_3 + fib4_n_minus_4;\n        fib4_n_minus_4\
    \ = fib4_n_minus_3;\n        fib4_n_minus_3 = fib4_n_minus_2;\n        fib4_n_minus_2\
    \ = fib4_n_minus_1;\n        fib4_n_minus_1 = fib4_n;\n    }\n    fib4_n", " \
    \   let mut a = 0;\n    let mut b = 0;\n    let mut c = 2;\n    let mut d = 0;\n\
    \    for _ in 3..n {\n        d = a + b + c;\n        a = b;\n        b = c;\n\
    \        c = d;\n    }\n    d"]
stop_tokens:
- "\n}"

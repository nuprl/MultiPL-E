name: HumanEval_116_sort_array
language: rs
prompt: "/// In this Kata, you have to sort an array of non-negative integers according\
  \ to\n/// number of ones in their binary representation in ascending order.\n///\
  \ For similar number of ones, sort based on decimal value.\n/// It must be implemented\
  \ like this:\n/// >>> sort_array(vec![1, 5, 2, 3, 4])\n/// vec![1, 2, 3, 4, 5]\n\
  /// >>> sort_array(vec![-2, -3, -4, -5, -6])\n/// vec![-6, -5, -4, -3, -2]\n///\
  \ >>> sort_array(vec![1, 0, 2, 3, 4])\n/// vec![0, 1, 2, 3, 4]\nfn sort_array(arr:\
  \ Vec<isize>) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = sort_array;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones\
    \ = a.count_ones();\n        let b_ones = b.count_ones();\n        if a_ones ==\
    \ b_ones {\n            a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n\
    \        }\n    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b|\
    \ {\n        let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n\
    \        if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n     \
    \       a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr =\
    \ arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n     \
    \   let b_ones = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n\
    \        } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a = a.abs();\n  \
    \      let b = b.abs();\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(&b)\n  \
    \      } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones != b_ones {\n            a_ones.cmp(&b_ones)\n\
    \        } else {\n            a.cmp(b)\n        }\n    });\n    arr", "    let\
    \ mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr: Vec<(usize,\
    \ isize)> = arr.into_iter().map(|x| (x.count_ones(), x)).collect();\n    arr.sort_by(|a,\
    \ b| match a.0.cmp(&b.0) {\n        Ordering::Equal => a.1.cmp(&b.1),\n      \
    \  x => x,\n    });\n    arr.into_iter().map(|(_, x)| x).collect()", "    let\
    \ mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let (a_ones, a_dec) = count_ones_and_dec(*a);\n        let (b_ones, b_dec)\
    \ = count_ones_and_dec(*b);\n        if a_ones == b_ones {\n            a_dec.cmp(&b_dec)\n\
    \        } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a = format!(\"{:b}\", a).chars().filter(|&c|\
    \ c == '1').count();\n        let b = format!(\"{:b}\", b).chars().filter(|&c|\
    \ c == '1').count();\n        if a == b {\n            a.cmp(&b)\n        } else\
    \ {\n            a.cmp(&b)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a = a.abs();\n  \
    \      let b = b.abs();\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(&b)\n  \
    \      } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr",
  "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n\
    \        let b_ones = b.count_ones();\n        if a_ones == b_ones {\n       \
    \     a.cmp(b)\n        } else {\n            a_ones.cmp(&b_ones)\n        }\n\
    \    });\n    arr", "    let mut arr = arr;\n    arr.sort_by(|a, b| {\n      \
    \  let a_ones = a.count_ones();\n        let b_ones = b.count_ones();\n      \
    \  if a_ones == b_ones {\n            a.cmp(b)\n        } else {\n           \
    \ a_ones.cmp(&b_ones)\n        }\n    });\n    arr", "    let mut arr = arr;\n\
    \    arr.sort_by(|a, b| {\n        let a_ones = a.count_ones();\n        let b_ones\
    \ = b.count_ones();\n        if a_ones == b_ones {\n            a.cmp(b)\n   \
    \     } else {\n            a_ones.cmp(&b_ones)\n        }\n    });\n    arr"]
stop_tokens:
- "\n}"

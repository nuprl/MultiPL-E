name: HumanEval_57_monotonic
language: rs
prompt: "/// Return True is list elements are monotonically increasing or decreasing.\n\
  /// >>> monotonic(vec![1, 2, 4, 20])\n/// true\n/// >>> monotonic(vec![1, 20, 4,\
  \ 10])\n/// false\n/// >>> monotonic(vec![4, 1, 0, -10])\n/// true\nfn monotonic(l:\
  \ Vec<isize>) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut increasing = true;\n    let mut decreasing = true;\n  \
    \  for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            increasing\
    \ = false;\n        }\n        if l[i] > l[i - 1] {\n            decreasing =\
    \ false;\n        }\n    }\n    increasing || decreasing", "    let mut inc =\
    \ true;\n    let mut dec = true;\n    for i in 1..l.len() {\n        if l[i -\
    \ 1] > l[i] {\n            inc = false;\n        }\n        if l[i - 1] < l[i]\
    \ {\n            dec = false;\n        }\n    }\n    inc || dec", "    let mut\
    \ inc = true;\n    let mut dec = true;\n    for i in 1..l.len() {\n        if\
    \ l[i] < l[i - 1] {\n            inc = false;\n        }\n        if l[i] > l[i\
    \ - 1] {\n            dec = false;\n        }\n    }\n    inc || dec", "    let\
    \ mut inc = true;\n    let mut dec = true;\n    for i in 1..l.len() {\n      \
    \  if l[i - 1] > l[i] {\n            inc = false;\n        }\n        if l[i -\
    \ 1] < l[i] {\n            dec = false;\n        }\n    }\n    inc || dec", " \
    \   let mut is_increasing = true;\n    let mut is_decreasing = true;\n    for\
    \ i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            is_increasing =\
    \ false;\n        }\n        if l[i] > l[i - 1] {\n            is_decreasing =\
    \ false;\n        }\n    }\n    is_increasing || is_decreasing", "    let mut\
    \ increasing = true;\n    let mut decreasing = true;\n    for i in 1..l.len()\
    \ {\n        if l[i] < l[i - 1] {\n            increasing = false;\n        }\n\
    \        if l[i] > l[i - 1] {\n            decreasing = false;\n        }\n  \
    \  }\n    increasing || decreasing", "    let mut is_increasing = true;\n    let\
    \ mut is_decreasing = true;\n    for i in 1..l.len() {\n        if l[i] < l[i\
    \ - 1] {\n            is_increasing = false;\n        }\n        if l[i] > l[i\
    \ - 1] {\n            is_decreasing = false;\n        }\n    }\n    is_increasing\
    \ || is_decreasing", "    let mut increasing = true;\n    let mut decreasing =\
    \ true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n           \
    \ increasing = false;\n        }\n        if l[i] > l[i - 1] {\n            decreasing\
    \ = false;\n        }\n    }\n    increasing || decreasing", "    let mut increasing\
    \ = true;\n    let mut decreasing = true;\n    for i in 1..l.len() {\n       \
    \ if l[i] < l[i - 1] {\n            increasing = false;\n        }\n        if\
    \ l[i] > l[i - 1] {\n            decreasing = false;\n        }\n    }\n    increasing\
    \ || decreasing", "    let mut increasing = true;\n    let mut decreasing = true;\n\
    \    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            increasing\
    \ = false;\n        }\n        if l[i] > l[i - 1] {\n            decreasing =\
    \ false;\n        }\n    }\n    increasing || decreasing", "    let mut inc =\
    \ true;\n    let mut dec = true;\n    for i in 1..l.len() {\n        if l[i] <\
    \ l[i - 1] {\n            inc = false;\n        }\n        if l[i] > l[i - 1]\
    \ {\n            dec = false;\n        }\n    }\n    inc || dec", "    let mut\
    \ inc = true;\n    let mut dec = true;\n    for i in 1..l.len() {\n        if\
    \ l[i] < l[i - 1] {\n            inc = false;\n        }\n        if l[i] > l[i\
    \ - 1] {\n            dec = false;\n        }\n    }\n    inc || dec", "    let\
    \ mut is_increasing = true;\n    let mut is_decreasing = true;\n    for i in 1..l.len()\
    \ {\n        if l[i] > l[i - 1] {\n            is_decreasing = false;\n      \
    \  }\n        if l[i] < l[i - 1] {\n            is_increasing = false;\n     \
    \   }\n    }\n    is_increasing || is_decreasing", "    let mut is_increasing\
    \ = true;\n    let mut is_decreasing = true;\n    for i in 1..l.len() {\n    \
    \    if l[i] < l[i - 1] {\n            is_increasing = false;\n        }\n   \
    \     if l[i] > l[i - 1] {\n            is_decreasing = false;\n        }\n  \
    \  }\n    is_increasing || is_decreasing", "    let mut increasing = true;\n \
    \   let mut decreasing = true;\n    for i in 1..l.len() {\n        if l[i - 1]\
    \ > l[i] {\n            increasing = false;\n        }\n        if l[i - 1] <\
    \ l[i] {\n            decreasing = false;\n        }\n    }\n    increasing ||\
    \ decreasing", "    let mut increasing = true;\n    let mut decreasing = true;\n\
    \    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n            increasing\
    \ = false;\n        }\n        if l[i] > l[i - 1] {\n            decreasing =\
    \ false;\n        }\n    }\n    increasing || decreasing", "    let mut inc =\
    \ true;\n    let mut dec = true;\n    for i in 1..l.len() {\n        if l[i] <\
    \ l[i - 1] {\n            inc = false;\n        }\n        if l[i] > l[i - 1]\
    \ {\n            dec = false;\n        }\n    }\n    inc || dec", "    let mut\
    \ inc = true;\n    let mut dec = true;\n    for i in 1..l.len() {\n        if\
    \ l[i] < l[i - 1] {\n            inc = false;\n        }\n        if l[i] > l[i\
    \ - 1] {\n            dec = false;\n        }\n    }\n    inc || dec", "    let\
    \ mut increasing = true;\n    let mut decreasing = true;\n    for i in 1..l.len()\
    \ {\n        if l[i] < l[i - 1] {\n            increasing = false;\n        }\n\
    \        if l[i] > l[i - 1] {\n            decreasing = false;\n        }\n  \
    \  }\n    increasing || decreasing", "    let mut inc = true;\n    let mut dec\
    \ = true;\n    for i in 1..l.len() {\n        if l[i] < l[i - 1] {\n         \
    \   inc = false;\n        }\n        if l[i] > l[i - 1] {\n            dec = false;\n\
    \        }\n    }\n    inc || dec"]
stop_tokens:
- "\n}"

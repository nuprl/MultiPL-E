name: HumanEval_88_sort_array
language: rs
prompt: "/// Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n/// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n/// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n/// Note:\n/// * don't\
  \ change the given array.\n/// Examples:\n/// >>> sort_array(vec![])\n/// Vec::<isize>::new()\n\
  /// >>> sort_array(vec![5])\n/// vec![5]\n/// >>> sort_array(vec![2, 4, 3, 0, 1,\
  \ 5])\n/// vec![0, 1, 2, 3, 4, 5]\n/// >>> sort_array(vec![2, 4, 3, 0, 1, 5, 6])\n\
  /// vec![6, 5, 4, 3, 2, 1, 0]\nfn sort_array(array: Vec<isize>) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = sort_array;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    let mut tmp;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            tmp = array[i];\n            array[i] = array[j];\n\
    \            array[j] = tmp;\n        }\n        i += 1;\n        j -= 1;\n  \
    \  }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n    \
    \    let (first, last) = (array[0], array[array.len() - 1]);\n        if (first\
    \ + last) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n        } else\
    \ {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n        if array[0] % 2 == 0 {\n\
    \            array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort();\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let len = array.len();\n\
    \    if len == 0 {\n        return array;\n    }\n    if len == 1 {\n        return\
    \ array;\n    }\n    if (array[0] + array[len - 1]) % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        for i in 0..array.len() - 1 {\n \
    \           if (array[0] + array[array.len() - 1]) % 2 == 0 {\n              \
    \  if array[i] < array[i + 1] {\n                    array.swap(i, i + 1);\n \
    \                   sorted = false;\n                }\n            } else {\n\
    \                if array[i] > array[i + 1] {\n                    array.swap(i,\
    \ i + 1);\n                    sorted = false;\n                }\n          \
    \  }\n        }\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       } else {\n            i += 1;\n            j -= 1;\n        }\n    }\n\
    \    if array.len() % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let (first, last) = (array[0], array[array.len() - 1]);\n   \
    \     let (mut left, mut right) = (0, array.len() - 1);\n        while left <\
    \ right {\n            if (first + last) % 2 == 0 {\n                while array[left]\
    \ < array[right] {\n                    left += 1;\n                }\n      \
    \          if left < right {\n                    array.swap(left, right);\n \
    \                   right -= 1;\n                }\n            } else {\n   \
    \             while array[left] > array[right] {\n                    left +=\
    \ 1;\n                }\n                if left < right {\n                 \
    \   array.swap(left, right);\n                    right -= 1;\n              \
    \  }\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 0 {\n        array.sort();\n    } else {\n \
    \       array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n    }\
    \ else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        } else {\n            i += 1;\n   \
    \         j -= 1;\n        }\n    }\n    if array.len() % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n       \
    \         i += 1;\n                j -= 1;\n            } else if array[i] % 2\
    \ == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n        if array[i] % 2 == 0 {\n\
    \            array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    array", "    let mut array = array;\n \
    \   let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n    \
    \    if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 0 {\n        array.sort();\n    } else {\n \
    \       array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        } else {\n            i += 1;\n            j -= 1;\n\
    \        }\n    }\n    if i == j && array[i] % 2 == 0 {\n        array.swap(i,\
    \ i + 1);\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if array[i] >\
    \ array[i + 1] {\n                array.swap(i, i + 1);\n                sorted\
    \ = false;\n            }\n            i += 1;\n        }\n        while j > i\
    \ {\n            if array[j] < array[j - 1] {\n                array.swap(j, j\
    \ - 1);\n                sorted = false;\n            }\n            j -= 1;\n\
    \        }\n    }\n    if array[0] + array[array.len() - 1] % 2 == 0 {\n     \
    \   array.reverse();\n    }\n    array", "    let mut array = array;\n    let\
    \ mut sorted = false;\n    while !sorted {\n        sorted = true;\n        for\
    \ i in 0..array.len() - 1 {\n            if (array[0] + array[array.len() - 1])\
    \ % 2 == 0 {\n                if array[i] < array[i + 1] {\n                 \
    \   array.swap(i, i + 1);\n                    sorted = false;\n             \
    \   }\n            } else {\n                if array[i] > array[i + 1] {\n  \
    \                  array.swap(i, i + 1);\n                    sorted = false;\n\
    \                }\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    if array.len() > 1 {\n        let (first, last) = (array[0],\
    \ array[array.len() - 1]);\n        if (first + last) % 2 == 0 {\n           \
    \ array.sort_by(|a, b| b.cmp(a));\n        } else {\n            array.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    array", "    let mut array = array;\n \
    \   let mut sorted = false;\n    while !sorted {\n        sorted = true;\n   \
    \     for i in 0..array.len() - 1 {\n            if array[i] > array[i + 1] {\n\
    \                array.swap(i, i + 1);\n                sorted = false;\n    \
    \        }\n        }\n    }\n    if array.len() > 1 && array[0] + array[array.len()\
    \ - 1] % 2 == 0 {\n        array.reverse();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ tmp;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n     \
    \       tmp = array[i];\n            array[i] = array[j];\n            array[j]\
    \ = tmp;\n        }\n        i += 1;\n        j -= 1;\n    }\n    array"]
stop_tokens:
- "\n}"

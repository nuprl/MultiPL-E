name: HumanEval_124_valid_date
language: rs
prompt: "/// You have to write a function which validates a given date string and\n\
  /// returns True if the date is valid otherwise False.\n/// The date is valid if\
  \ all of the following rules are satisfied:\n/// 1. The date string is not empty.\n\
  /// 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  /// 3. The months should not be less than 1 or higher than 12.\n/// 4. The date\
  \ should be in the format: mm-dd-yyyy\n/// >>> valid_date(String::from(\"03-11-2000\"\
  ))\n/// true\n/// >>> valid_date(String::from(\"15-01-2012\"))\n/// false\n/// >>>\
  \ valid_date(String::from(\"04-0-2040\"))\n/// false\n/// >>> valid_date(String::from(\"\
  06-04-2020\"))\n/// true\n/// >>> valid_date(String::from(\"06/04/2020\"))\n///\
  \ false\nfn valid_date(date: String) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    if date_regex.is_match(&date) {\n        let date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n        let month = date_vec[0].parse::<u32>().unwrap();\n\
    \        let day = date_vec[1].parse::<u32>().unwrap();\n        let year = date_vec[2].parse::<u32>().unwrap();\n\
    \        if month > 12 || day > 31 || year < 1000 {\n            return false;\n\
    \        }\n        if month == 2 && day > 29 {\n            return false;\n \
    \       }\n        if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ && day > 30 {\n            return false;\n        }\n        return true;\n\
    \    }\n    return false;", "    let mut date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n   \
    \ let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if month == 4 || month == 6 || month == 9 || month == 11 {\n     \
    \   if day > 30 {\n            return false;\n        }\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    let caps = re.captures(&date).unwrap();\n    let month = caps.get(1).unwrap().as_str().parse::<u32>().unwrap();\n\
    \    let day = caps.get(2).unwrap().as_str().parse::<u32>().unwrap();\n    let\
    \ year = caps.get(3).unwrap().as_str().parse::<u32>().unwrap();\n    let days_in_month\
    \ = match month {\n        1 | 3 | 5 | 7 | 8 | 10 | 12 => 31,\n        4 | 6 |\
    \ 9 | 11 => 30,\n        2 => if year % 4 == 0 { 29 } else { 28 },\n        _\
    \ => 0,\n    };\n    if day > days_in_month {\n        return false;\n    }\n\
    \    true", "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    ).unwrap();\n    let date_regex_match = date_regex.is_match(&date);\n    if !date_regex_match\
    \ {\n        return false;\n    }\n    let date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    let month: u32 = date_vec[0].parse().unwrap();\n    let day:\
    \ u32 = date_vec[1].parse().unwrap();\n    let year: u32 = date_vec[2].parse().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day > 29 || day < 1 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 || day < 1 {\n            return false;\n        }\n    }\
    \ else {\n        if day > 31 || day < 1 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n\
    \    for i in date_split {\n        match i.parse::<i32>() {\n            Ok(n)\
    \ => date_vec.push(n),\n            Err(_) => return false,\n        }\n    }\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if date_vec[2] % 4\
    \ == 0 {\n        days_in_month[1] = 29;\n    }\n    if date_vec[0] < 1 || date_vec[0]\
    \ > 12 {\n        return false;\n    }\n    if date_vec[1] < 1 || date_vec[1]\
    \ > days_in_month[(date_vec[0] - 1) as usize] {\n        return false;\n    }\n\
    \    true", "    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    if\
    \ date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    if year < 1 {\n     \
    \   return false;\n    }\n    true", "    let mut date_iter = date.split('-');\n\
    \    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_iter {\n   \
    \     date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month: u32 = match date_vec[0].parse() {\n        Ok(num) => num,\n\
    \        Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_vec[2].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    if month < 1 || month > 12 {\n        return false;\n\
    \    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n            return\
    \ false;\n        }\n    } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day < 1 || day > 30 {\n            return false;\n     \
    \   }\n    } else {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    }\n    return true;", "    let mut date_split = date.split('-');\n\
    \    let mut date_vec: Vec<i32> = Vec::new();\n    for i in date_split {\n   \
    \     let num = i.parse::<i32>();\n        match num {\n            Ok(n) => date_vec.push(n),\n\
    \            Err(_) => return false,\n        }\n    }\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0];\n    let\
    \ day = date_vec[1];\n    let year = date_vec[2];\n    if month > 12 || month\
    \ < 1 {\n        return false;\n    }\n    if day > 31 || day < 1 {\n        return\
    \ false;\n    }\n    if month == 2 {\n        if day > 29 {\n            return\
    \ false;\n        }\n    }\n    if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day > 30 {\n            return false;\n        }\n    }\n\
    \    if year < 1 {\n        return false;\n    }\n    true", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for\
    \ i in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month\
    \ > 12 || month < 1 {\n        return false;\n    }\n    if month == 2 {\n   \
    \     if day > 29 || day < 1 {\n            return false;\n        }\n    } else\
    \ if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day >\
    \ 30 || day < 1 {\n            return false;\n        }\n    } else {\n      \
    \  if day > 31 || day < 1 {\n            return false;\n        }\n    }\n   \
    \ return true;", "    let mut date_split = date.split(\"-\");\n    let mut date_vec:\
    \ Vec<i32> = Vec::new();\n    for i in date_split {\n        let num = i.parse::<i32>();\n\
    \        match num {\n            Ok(n) => date_vec.push(n),\n            Err(_)\
    \ => return false,\n        }\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0];\n    let day = date_vec[1];\n  \
    \  let year = date_vec[2];\n    if month < 1 || month > 12 {\n        return false;\n\
    \    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n            return\
    \ false;\n        }\n    } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day < 1 || day > 30 {\n            return false;\n     \
    \   }\n    } else {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    }\n    if year < 1 {\n        return false;\n    }\n    true",
  "    let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_split {\n        date_vec.push(i);\n    }\n \
    \   if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    } else {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    }\n    if year < 0 {\n        return false;\n    }\n\
    \    return true;", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    if year < 1\
    \ {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ if date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n\
    \    let day: i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "   \
    \ let date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut date_split = date.split(\"-\");\n    let month = date_split.next().unwrap();\n\
    \    let day = date_split.next().unwrap();\n    let year = date_split.next().unwrap();\n\
    \    if month.len() != 2 || day.len() != 2 || year.len() != 4 {\n        return\
    \ false;\n    }\n    let month = month.parse::<u32>().unwrap();\n    let day =\
    \ day.parse::<u32>().unwrap();\n    let year = year.parse::<u32>().unwrap();\n\
    \    if month == 0 || month > 12 {\n        return false;\n    }\n    if day ==\
    \ 0 {\n        return false;\n    }\n    if month == 2 {\n        if day > 29\
    \ {\n            return false;\n        }\n    } else if month == 4 || month ==\
    \ 6 || month == 9 || month == 11 {\n        if day > 30 {\n            return\
    \ false;\n        }\n    } else {\n        if day > 31 {\n            return false;\n\
    \        }\n    }\n    true", "    let mut date_split = date.split(\"-\");\n \
    \   let mut date_vec: Vec<i32> = Vec::new();\n    for i in date_split {\n    \
    \    match i.parse::<i32>() {\n            Ok(n) => date_vec.push(n),\n      \
    \      Err(_) => return false,\n        }\n    }\n    if date_vec.len() != 3 {\n\
    \        return false;\n    }\n    if date_vec[0] < 1 || date_vec[0] > 12 {\n\
    \        return false;\n    }\n    if date_vec[0] == 2 {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 29 {\n            return false;\n        }\n    } else\
    \ if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0] ==\
    \ 7\n        || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12\n \
    \   {\n        if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n\
    \        }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n \
    \           return false;\n        }\n    }\n    true", "    let date_regex =\
    \ Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\").unwrap();\n\
    \    if !date_regex.is_match(&date) {\n        return false;\n    }\n    let date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    let month = date_vec[0].parse::<u32>().unwrap();\n\
    \    let day = date_vec[1].parse::<u32>().unwrap();\n    if month > 12 || day\
    \ > 31 {\n        return false;\n    }\n    if month == 2 && day > 29 {\n    \
    \    return false;\n    }\n    if (month == 4 || month == 6 || month == 9 || month\
    \ == 11) && day > 30 {\n        return false;\n    }\n    true", "    let mut\
    \ date_split = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n\
    \    for i in date_split {\n        match i.parse::<i32>() {\n            Ok(num)\
    \ => date_vec.push(num),\n            Err(_) => return false,\n        }\n   \
    \ }\n    if date_vec.len() != 3 {\n        return false;\n    }\n    let mut days_in_month\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if date_vec[2] % 4\
    \ == 0 {\n        days_in_month[1] = 29;\n    }\n    if date_vec[0] > 0 && date_vec[0]\
    \ <= 12 && date_vec[1] > 0 && date_vec[1] <= days_in_month[(date_vec[0] - 1) as\
    \ usize] {\n        return true;\n    }\n    false", "    let mut date_split =\
    \ date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i\
    \ in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "  \
    \  let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_split {\n        date_vec.push(i);\n    }\n \
    \   if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 1000 || year > 9999 {\n        return false;\n   \
    \ }\n    return true;", "    let mut date_iter = date.split(\"-\");\n    let mut\
    \ date_vec: Vec<i32> = Vec::new();\n    for i in date_iter {\n        let num:\
    \ i32 = i.parse().unwrap();\n        date_vec.push(num);\n    }\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0];\n    let\
    \ day = date_vec[1];\n    let year = date_vec[2];\n    if month > 12 || month\
    \ < 1 {\n        return false;\n    }\n    if day > 31 || day < 1 {\n        return\
    \ false;\n    }\n    if month == 2 {\n        if day > 29 {\n            return\
    \ false;\n        }\n    }\n    if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day > 30 {\n            return false;\n        }\n    }\n\
    \    return true;", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    ).unwrap();\n    if re.is_match(&date) {\n        let date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n        let month = date_vec[0].parse::<i32>().unwrap();\n  \
    \      let day = date_vec[1].parse::<i32>().unwrap();\n        let year = date_vec[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            return false;\n        }\n\
    \        if month == 2 {\n            if day < 1 || day > 29 {\n             \
    \   return false;\n            }\n        } else if month == 4 || month == 6 ||\
    \ month == 9 || month == 11 {\n            if day < 1 || day > 30 {\n        \
    \        return false;\n            }\n        } else {\n            if day <\
    \ 1 || day > 31 {\n                return false;\n            }\n        }\n \
    \       return true;\n    }\n    return false;", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ if date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    let mut date_vec_len\
    \ = date_vec.len();\n    if date_vec_len != 3 {\n        return false;\n    }\n\
    \    let mut date_vec_int: Vec<i32> = Vec::new();\n    for i in 0..date_vec_len\
    \ {\n        let date_int = date_vec[i].parse::<i32>();\n        match date_int\
    \ {\n            Ok(n) => date_vec_int.push(n),\n            Err(_) => return\
    \ false,\n        }\n    }\n    let mut date_vec_int_len = date_vec_int.len();\n\
    \    if date_vec_int_len != 3 {\n        return false;\n    }\n    let mut month\
    \ = date_vec_int[0];\n    let mut day = date_vec_int[1];\n    let mut year = date_vec_int[2];\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    return true;", "    let mut date_split = date.split(\"-\");\n\
    \    let mut date_vec: Vec<i32> = Vec::new();\n    for i in date_split {\n   \
    \     match i.parse::<i32>() {\n            Ok(num) => date_vec.push(num),\n \
    \           Err(_) => return false,\n        }\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    if date_vec[0] < 1 || date_vec[0] > 12\
    \ {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 29 {\n            return false;\n        }\n    } else\
    \ if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0] ==\
    \ 7\n        || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12\n \
    \   {\n        if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n\
    \        }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n \
    \           return false;\n        }\n    }\n    if date_vec[2] < 1 {\n      \
    \  return false;\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month > 12 || month\
    \ < 1 {\n        return false;\n    }\n    if day > 31 || day < 1 {\n        return\
    \ false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n\
    \    if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day\
    \ > 30 {\n            return false;\n        }\n    }\n    if year < 0 {\n   \
    \     return false;\n    }\n    true", "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n\
    \    }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month\
    \ = date_vec[0].parse::<u32>().unwrap();\n    let day = date_vec[1].parse::<u32>().unwrap();\n\
    \    if month == 2 {\n        if day > 29 {\n            return false;\n     \
    \   }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 {\n            return false;\n        }\n    } else if day\
    \ > 31 {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_vec_int: Vec<i32> = Vec::new();\n    for i in\
    \ date_vec {\n        match i.parse::<i32>() {\n            Ok(n) => date_vec_int.push(n),\n\
    \            Err(_) => return false,\n        }\n    }\n    if date_vec_int[0]\
    \ < 1 || date_vec_int[0] > 12 {\n        return false;\n    }\n    if date_vec_int[0]\
    \ == 2 {\n        if date_vec_int[1] < 1 || date_vec_int[1] > 29 {\n         \
    \   return false;\n        }\n    } else if date_vec_int[0] == 1\n        || date_vec_int[0]\
    \ == 3\n        || date_vec_int[0] == 5\n        || date_vec_int[0] == 7\n   \
    \     || date_vec_int[0] == 8\n        || date_vec_int[0] == 10\n        || date_vec_int[0]\
    \ == 12\n    {\n        if date_vec_int[1] < 1 || date_vec_int[1] > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if date_vec_int[1] <\
    \ 1 || date_vec_int[1] > 30 {\n            return false;\n        }\n    }\n \
    \   if date_vec_int[2] < 1 {\n        return false;\n    }\n    true", "    let\
    \ mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n\
    \    for i in date_split {\n        match i.parse::<i32>() {\n            Ok(n)\
    \ => date_vec.push(n),\n            Err(_) => return false,\n        }\n    }\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    if date_vec[0]\
    \ < 1 || date_vec[0] > 12 {\n        return false;\n    }\n    if date_vec[0]\
    \ == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n            return\
    \ false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0]\
    \ == 5 || date_vec[0] == 7\n        || date_vec[0] == 8 || date_vec[0] == 10 ||\
    \ date_vec[0] == 12\n    {\n        if date_vec[1] < 1 || date_vec[1] > 31 {\n\
    \            return false;\n        }\n    } else {\n        if date_vec[1] <\
    \ 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n    if\
    \ date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let mut v:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if v.len() != 3 {\n        return\
    \ false;\n    }\n    let mut v: Vec<i32> = v.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n\
    \    if v[0] < 1 || v[0] > 12 {\n        return false;\n    }\n    if v[0] ==\
    \ 2 {\n        if v[1] < 1 || v[1] > 29 {\n            return false;\n       \
    \ }\n    } else if v[0] == 1 || v[0] == 3 || v[0] == 5 || v[0] == 7 || v[0] ==\
    \ 8 || v[0] == 10 || v[0] == 12 {\n        if v[1] < 1 || v[1] > 31 {\n      \
    \      return false;\n        }\n    } else {\n        if v[1] < 1 || v[1] > 30\
    \ {\n            return false;\n        }\n    }\n    true", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<&str> = vec![];\n    for i in\
    \ date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n\
    \        return false;\n    }\n    let month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month\
    \ < 1 || month > 12 {\n        return false;\n    }\n    if month == 2 {\n   \
    \     if day < 1 || day > 29 {\n            return false;\n        }\n    } else\
    \ if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day <\
    \ 1 || day > 30 {\n            return false;\n        }\n    } else {\n      \
    \  if day < 1 || day > 31 {\n            return false;\n        }\n    }\n   \
    \ if year < 1 {\n        return false;\n    }\n    true", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    true", "    let mut date_iter = date.split(\"-\");\n    let mut\
    \ date_vec: Vec<u32> = Vec::new();\n    for i in date_iter {\n        match i.parse::<u32>()\
    \ {\n            Ok(n) => date_vec.push(n),\n            Err(_) => return false,\n\
    \        }\n    }\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let month = date_vec[0];\n    let day = date_vec[1];\n    let year = date_vec[2];\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let mut date_iter = date.split(\"\
    -\");\n    let mut date_vec: Vec<i32> = vec![];\n    for i in date_iter {\n  \
    \      match i.parse::<i32>() {\n            Ok(n) => date_vec.push(n),\n    \
    \        Err(_) => return false,\n        }\n    }\n    if date_vec.len() != 3\
    \ {\n        return false;\n    }\n    if date_vec[0] < 1 || date_vec[0] > 12\
    \ {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 29 {\n            return false;\n        }\n    } else\
    \ if date_vec[0] == 1\n        || date_vec[0] == 3\n        || date_vec[0] ==\
    \ 5\n        || date_vec[0] == 7\n        || date_vec[0] == 8\n        || date_vec[0]\
    \ == 10\n        || date_vec[0] == 12\n    {\n        if date_vec[1] < 1 || date_vec[1]\
    \ > 31 {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n   \
    \ if date_vec.len() != 3 {\n        return false;\n    }\n    let mut date_vec_int:\
    \ Vec<i32> = vec![];\n    for i in date_vec {\n        match i.parse::<i32>()\
    \ {\n            Ok(n) => date_vec_int.push(n),\n            Err(_) => return\
    \ false,\n        }\n    }\n    if date_vec_int[0] < 1 || date_vec_int[0] > 12\
    \ {\n        return false;\n    }\n    if date_vec_int[0] == 2 {\n        if date_vec_int[1]\
    \ < 1 || date_vec_int[1] > 29 {\n            return false;\n        }\n    } else\
    \ if date_vec_int[0] == 4 || date_vec_int[0] == 6 || date_vec_int[0] == 9 || date_vec_int[0]\
    \ == 11 {\n        if date_vec_int[1] < 1 || date_vec_int[1] > 30 {\n        \
    \    return false;\n        }\n    } else {\n        if date_vec_int[1] < 1 ||\
    \ date_vec_int[1] > 31 {\n            return false;\n        }\n    }\n    true",
  "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n\
    \    let day: i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x|\
    \ x.parse::<i32>().unwrap()).collect();\n    if date_vec[0] < 1 || date_vec[0]\
    \ > 12 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if\
    \ date_vec[1] < 1 || date_vec[1] > 29 {\n            return false;\n        }\n\
    \    } else if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0]\
    \ == 7 || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12 {\n     \
    \   if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n    \
    \    }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n     \
    \       return false;\n        }\n    }\n    true", "    let mut date_split =\
    \ date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i\
    \ in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n\
    \    let day: i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    if year < 0 {\n     \
    \   return false;\n    }\n    return true;", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    if re.is_match(&date) {\n        let mut d = date.split(\"-\"\
    );\n        let month = d.next().unwrap().parse::<u32>().unwrap();\n        let\
    \ day = d.next().unwrap().parse::<u32>().unwrap();\n        let year = d.next().unwrap().parse::<u32>().unwrap();\n\
    \        if month > 12 || day > 31 || day < 1 {\n            return false;\n \
    \       }\n        if month == 2 && day > 29 {\n            return false;\n  \
    \      }\n        if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \            if day > 30 {\n                return false;\n            }\n   \
    \     }\n        return true;\n    }\n    return false;", "    let date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    if date_regex.is_match(&date) {\n        let date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n        let month = date_vec[0].parse::<i32>().unwrap();\n\
    \        let day = date_vec[1].parse::<i32>().unwrap();\n        let year = date_vec[2].parse::<i32>().unwrap();\n\
    \        if month > 0 && month < 13 {\n            if month == 2 {\n         \
    \       if year % 4 == 0 {\n                    if day > 0 && day < 30 {\n   \
    \                     return true;\n                    }\n                } else\
    \ {\n                    if day > 0 && day < 29 {\n                        return\
    \ true;\n                    }\n                }\n            } else if month\
    \ == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10\
    \ || month == 12 {\n                if day > 0 && day < 32 {\n               \
    \     return true;\n                }\n            } else {\n                if\
    \ day > 0 && day < 31 {\n                    return true;\n                }\n\
    \            }\n        }\n    }\n    false", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<u32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<u32>().unwrap();\n    let year = date_vec[2].parse::<u32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let date_split: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_split.len() != 3 {\n        return\
    \ false;\n    }\n    let month: u32 = match date_split[0].parse() {\n        Ok(num)\
    \ => num,\n        Err(_) => return false,\n    };\n    let day: u32 = match date_split[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_split[2].parse() {\n        Ok(num) => num,\n       \
    \ Err(_) => return false,\n    };\n    if month < 1 || month > 12 {\n        return\
    \ false;\n    }\n    if day < 1 || day > 31 {\n        return false;\n    }\n\
    \    if month == 2 && day > 29 {\n        return false;\n    }\n    if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n        return\
    \ false;\n    }\n    if year < 1 {\n        return false;\n    }\n    true", " \
    \   let mut date_iter = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_iter {\n        date_vec.push(i);\n    }\n  \
    \  if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    return true;", "    let mut is_valid\
    \ = true;\n    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n  \
    \  if date_vec.len() != 3 {\n        is_valid = false;\n    } else {\n       \
    \ let month = date_vec[0].parse::<i32>().unwrap();\n        let day = date_vec[1].parse::<i32>().unwrap();\n\
    \        let year = date_vec[2].parse::<i32>().unwrap();\n        if month < 1\
    \ || month > 12 {\n            is_valid = false;\n        } else if month == 2\
    \ {\n            if day < 1 || day > 29 {\n                is_valid = false;\n\
    \            }\n        } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n            if day < 1 || day > 30 {\n                is_valid = false;\n\
    \            }\n        } else {\n            if day < 1 || day > 31 {\n     \
    \           is_valid = false;\n            }\n        }\n    }\n    is_valid",
  "    let re = Regex::new(r\"(\\d{2})-(\\d{2})-(\\d{4})\").unwrap();\n    if !re.is_match(&date)\
    \ {\n        return false;\n    }\n    let caps = re.captures(&date).unwrap();\n\
    \    let month = caps[1].parse::<u32>().unwrap();\n    let day = caps[2].parse::<u32>().unwrap();\n\
    \    let year = caps[3].parse::<u32>().unwrap();\n    if month < 1 || month >\
    \ 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n        return\
    \ false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n\
    \    if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day\
    \ > 30 {\n            return false;\n        }\n    }\n    if year < 1900 || year\
    \ > 2100 {\n        return false;\n    }\n    true", "    let mut date_split =\
    \ date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i\
    \ in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "  \
    \  let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x|\
    \ x.parse::<i32>().unwrap()).collect();\n    if date_vec[0] < 1 || date_vec[0]\
    \ > 12 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if\
    \ date_vec[1] < 1 || date_vec[1] > 29 {\n            return false;\n        }\n\
    \    } else if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0]\
    \ == 7 || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12 {\n     \
    \   if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n    \
    \    }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n     \
    \       return false;\n        }\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut day = date_vec.pop().unwrap();\n    let mut month\
    \ = date_vec.pop().unwrap();\n    let mut year = date_vec.pop().unwrap();\n  \
    \  if day.len() != 2 || month.len() != 2 || year.len() != 4 {\n        return\
    \ false;\n    }\n    let day = day.parse::<i32>().unwrap();\n    let month = month.parse::<i32>().unwrap();\n\
    \    let year = year.parse::<i32>().unwrap();\n    if month < 1 || month > 12\
    \ {\n        return false;\n    }\n    if day < 1 || day > 31 {\n        return\
    \ false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n\
    \    if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day\
    \ > 30 {\n            return false;\n        }\n    }\n    true", "    let date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month: u32 = match date_vec[0].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let day:\
    \ u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_) =>\
    \ return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n   \
    \     Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month <\
    \ 1 || month > 12 {\n        return false;\n    }\n    if day < 1 || day > 31\
    \ {\n        return false;\n    }\n    if month == 2 && day > 29 {\n        return\
    \ false;\n    }\n    if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ && day > 30 {\n        return false;\n    }\n    if year < 1 {\n        return\
    \ false;\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n   \
    \ let day = date_vec.pop().unwrap();\n    let month = date_vec.pop().unwrap();\n\
    \    let year = date_vec.pop().unwrap();\n    if year.len() != 4 {\n        return\
    \ false;\n    }\n    if month.len() != 2 || day.len() != 2 {\n        return false;\n\
    \    }\n    let day_num = day.parse::<u32>().unwrap();\n    let month_num = month.parse::<u32>().unwrap();\n\
    \    let year_num = year.parse::<u32>().unwrap();\n    if month_num > 12 || month_num\
    \ < 1 {\n        return false;\n    }\n    if day_num > 31 || day_num < 1 {\n\
    \        return false;\n    }\n    if month_num == 2 {\n        if day_num > 29\
    \ {\n            return false;\n        }\n    }\n    if month_num == 4 || month_num\
    \ == 6 || month_num == 9 || month_num == 11 {\n        if day_num > 30 {\n   \
    \         return false;\n        }\n    }\n    true", "    let mut date = date.split(\"\
    -\");\n    let mut date_vec: Vec<u32> = Vec::new();\n    for i in date {\n   \
    \     match i.parse::<u32>() {\n            Ok(n) => date_vec.push(n),\n     \
    \       Err(_) => return false,\n        }\n    }\n    if date_vec.len() != 3\
    \ {\n        return false;\n    }\n    let (month, day, year) = (date_vec[0],\
    \ date_vec[1], date_vec[2]);\n    if month < 1 || month > 12 {\n        return\
    \ false;\n    }\n    if day < 1 || day > 31 {\n        return false;\n    }\n\
    \    if month == 2 && day > 29 {\n        return false;\n    }\n    if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n        return\
    \ false;\n    }\n    if year < 1 {\n        return false;\n    }\n    true", " \
    \   let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_split {\n        date_vec.push(i);\n    }\n \
    \   if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month > 12 || month\
    \ < 1 {\n        return false;\n    }\n    if day > 31 || day < 1 {\n        return\
    \ false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n\
    \    if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day\
    \ > 30 {\n            return false;\n        }\n    }\n    if year < 0 {\n   \
    \     return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_vec_int: Vec<i32> = Vec::new();\n    for i in\
    \ date_vec {\n        match i.parse::<i32>() {\n            Ok(n) => date_vec_int.push(n),\n\
    \            Err(_) => return false,\n        }\n    }\n    let month = date_vec_int[0];\n\
    \    let day = date_vec_int[1];\n    let year = date_vec_int[2];\n    if month\
    \ < 1 || month > 12 {\n        return false;\n    }\n    if month == 2 {\n   \
    \     if day < 1 || day > 29 {\n            return false;\n        }\n    } else\
    \ if month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month\
    \ == 10\n        || month == 12\n    {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    if year < 0 {\n     \
    \   return false;\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let day = date_vec.pop().unwrap();\n    let month = date_vec.pop().unwrap();\n\
    \    let year = date_vec.pop().unwrap();\n    if year.len() != 4 {\n        return\
    \ false;\n    }\n    let day = day.parse::<u8>().unwrap();\n    let month = month.parse::<u8>().unwrap();\n\
    \    let year = year.parse::<u16>().unwrap();\n    if month > 12 || month < 1\
    \ {\n        return false;\n    }\n    if day < 1 {\n        return false;\n \
    \   }\n    if month == 2 {\n        if day > 29 {\n            return false;\n\
    \        }\n    } else if month == 4 || month == 6 || month == 9 || month == 11\
    \ {\n        if day > 30 {\n            return false;\n        }\n    } else {\n\
    \        if day > 31 {\n            return false;\n        }\n    }\n    true",
  "    let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_split {\n        date_vec.push(i);\n    }\n \
    \   if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    } else {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    }\n    if year < 1 {\n        return false;\n    }\n\
    \    return true;", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if re.is_match(&date) {\n        let v: Vec<&str> = date.split(\"\
    -\").collect();\n        let month = v[0].parse::<i32>().unwrap();\n        let\
    \ day = v[1].parse::<i32>().unwrap();\n        let year = v[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            return false;\n        }\n\
    \        if month == 2 {\n            if day < 1 || day > 29 {\n             \
    \   return false;\n            }\n        } else if month == 4 || month == 6 ||\
    \ month == 9 || month == 11 {\n            if day < 1 || day > 30 {\n        \
    \        return false;\n            }\n        } else {\n            if day <\
    \ 1 || day > 31 {\n                return false;\n            }\n        }\n \
    \       if year < 1 {\n            return false;\n        }\n        return true;\n\
    \    }\n    return false;", "    let mut date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n   \
    \ let month: i32 = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    if year < 1\
    \ {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<u32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<u32>().unwrap();\n    let year = date_vec[2].parse::<u32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1900 || year > 2100 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month\
    \ < 1 || month > 12 {\n        return false;\n    }\n    if month == 2 {\n   \
    \     if day < 1 || day > 29 {\n            return false;\n        }\n    } else\
    \ if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day <\
    \ 1 || day > 30 {\n            return false;\n        }\n    } else {\n      \
    \  if day < 1 || day > 31 {\n            return false;\n        }\n    }\n   \
    \ return true;", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let date_regex = Regex::new(r\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\").unwrap();\n    if date_regex.is_match(&date)\
    \ {\n        let date_vec: Vec<&str> = date.split(\"-\").collect();\n        let\
    \ month: u32 = date_vec[0].parse().unwrap();\n        let day: u32 = date_vec[1].parse().unwrap();\n\
    \        let year: u32 = date_vec[2].parse().unwrap();\n        if month > 12\
    \ || month < 1 {\n            return false;\n        }\n        if month == 2\
    \ {\n            if day > 29 || day < 1 {\n                return false;\n   \
    \         }\n        } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n            if day > 30 || day < 1 {\n                return false;\n\
    \            }\n        } else {\n            if day > 31 || day < 1 {\n     \
    \           return false;\n            }\n        }\n        return true;\n  \
    \  }\n    return false;", "    let mut date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n   \
    \ let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if month == 4 || month == 6 || month == 9 || month == 11 {\n     \
    \   if day > 30 {\n            return false;\n        }\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let date_regex = Regex::new(r\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\").unwrap();\n    let date_regex_match\
    \ = date_regex.is_match(&date);\n    if !date_regex_match {\n        return false;\n\
    \    }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month:\
    \ i32 = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    if year < 1\
    \ {\n        return false;\n    }\n    true", "    let mut parts = date.split(\"\
    -\");\n    let month = parts.next().unwrap().parse::<u32>().unwrap();\n    let\
    \ day = parts.next().unwrap().parse::<u32>().unwrap();\n    let year = parts.next().unwrap().parse::<u32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if year % 4 == 0 {\n            if day > 29 || day < 1 {\n \
    \               return false;\n            }\n        } else {\n            if\
    \ day > 28 || day < 1 {\n                return false;\n            }\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 || day < 1 {\n            return false;\n        }\n    }\
    \ else {\n        if day > 31 || day < 1 {\n            return false;\n      \
    \  }\n    }\n    true", "    let date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    re.is_match(&date)", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    let caps = re.captures(&date).unwrap();\n    let month = caps.get(1).unwrap().as_str().parse::<u32>().unwrap();\n\
    \    let day = caps.get(2).unwrap().as_str().parse::<u32>().unwrap();\n    let\
    \ year = caps.get(3).unwrap().as_str().parse::<u32>().unwrap();\n    if month\
    \ == 2 {\n        if day > 29 {\n            return false;\n        }\n      \
    \  if day == 29 {\n            if year % 4 != 0 {\n                return false;\n\
    \            }\n            if year % 100 == 0 && year % 400 != 0 {\n        \
    \        return false;\n            }\n        }\n    }\n    if month == 4 ||\
    \ month == 6 || month == 9 || month == 11 {\n        if day > 30 {\n         \
    \   return false;\n        }\n    }\n    if month == 1 || month == 3 || month\
    \ == 5 || month == 7 || month == 8 || month == 10 || month == 12 {\n        if\
    \ day > 31 {\n            return false;\n        }\n    }\n    true", "    let\
    \ re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    ).unwrap();\n    if re.is_match(&date) {\n        let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n        let year: i32 = date_vec[2].parse().unwrap();\n\
    \        let month: i32 = date_vec[0].parse().unwrap();\n        let day: i32\
    \ = date_vec[1].parse().unwrap();\n        if month == 2 {\n            if year\
    \ % 4 == 0 {\n                if day <= 29 {\n                    return true;\n\
    \                }\n            } else {\n                if day <= 28 {\n   \
    \                 return true;\n                }\n            }\n        } else\
    \ if month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month\
    \ == 10 || month == 12 {\n            if day <= 31 {\n                return true;\n\
    \            }\n        } else {\n            if day <= 30 {\n               \
    \ return true;\n            }\n        }\n    }\n    false", "    let date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month: u32 = match date_vec[0].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let day:\
    \ u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_) =>\
    \ return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n   \
    \     Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month >\
    \ 12 || month < 1 {\n        return false;\n    }\n    if day > 31 || day < 1\
    \ {\n        return false;\n    }\n    if month == 2 && day > 29 {\n        return\
    \ false;\n    }\n    if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ && day > 30 {\n        return false;\n    }\n    true", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut month = date_split.next().unwrap().parse::<i32>().unwrap();\n\
    \    let mut day = date_split.next().unwrap().parse::<i32>().unwrap();\n    let\
    \ mut year = date_split.next().unwrap().parse::<i32>().unwrap();\n    if month\
    \ < 1 || month > 12 {\n        return false;\n    }\n    if day < 1 || day > 31\
    \ {\n        return false;\n    }\n    if month == 2 && day > 29 {\n        return\
    \ false;\n    }\n    if month == 4 || month == 6 || month == 9 || month == 11\
    \ {\n        if day > 30 {\n            return false;\n        }\n    }\n    if\
    \ year < 1 {\n        return false;\n    }\n    return true;", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let mut month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ mut day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n      \
    \  Err(_) => return false,\n    };\n    let mut year: u32 = match date_vec[2].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if\
    \ month > 12 || month < 1 {\n        return false;\n    }\n    if day > 31 ||\
    \ day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29 {\n \
    \       return false;\n    }\n    if month == 4 || month == 6 || month == 9 ||\
    \ month == 11 {\n        if day > 30 {\n            return false;\n        }\n\
    \    }\n    if year < 1 {\n        return false;\n    }\n    return true;", " \
    \   let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut month: i32 = date_vec[0].parse().unwrap();\n\
    \    let mut day: i32 = date_vec[1].parse().unwrap();\n    let mut year: i32 =\
    \ date_vec[2].parse().unwrap();\n    if month < 1 || month > 12 {\n        return\
    \ false;\n    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n     \
    \       return false;\n        }\n    } else if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    } else {\n        if day < 1 || day > 31 {\n        \
    \    return false;\n        }\n    }\n    if year < 1 {\n        return false;\n\
    \    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let mut date_vec:\
    \ Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n \
    \   if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n \
    \   if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ if date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n\
    \    let day: i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut valid = true;\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        valid = false;\n    } else {\n        let\
    \ month = date_vec[0].parse::<i32>().unwrap();\n        let day = date_vec[1].parse::<i32>().unwrap();\n\
    \        let year = date_vec[2].parse::<i32>().unwrap();\n        if month < 1\
    \ || month > 12 {\n            valid = false;\n        } else if month == 2 {\n\
    \            if day < 1 || day > 29 {\n                valid = false;\n      \
    \      }\n        } else if month == 4 || month == 6 || month == 9 || month ==\
    \ 11 {\n            if day < 1 || day > 30 {\n                valid = false;\n\
    \            }\n        } else {\n            if day < 1 || day > 31 {\n     \
    \           valid = false;\n            }\n        }\n        if year < 1 {\n\
    \            valid = false;\n        }\n    }\n    valid", "    let mut valid\
    \ = true;\n    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n  \
    \  if date_vec.len() != 3 {\n        valid = false;\n    } else {\n        let\
    \ year = date_vec.pop().unwrap();\n        let month = date_vec.pop().unwrap();\n\
    \        let day = date_vec.pop().unwrap();\n        if year.len() != 4 {\n  \
    \          valid = false;\n        } else {\n            let year_num: i32 = year.parse().unwrap();\n\
    \            if year_num < 0 {\n                valid = false;\n            }\n\
    \        }\n        if month.len() != 2 {\n            valid = false;\n      \
    \  } else {\n            let month_num: i32 = month.parse().unwrap();\n      \
    \      if month_num < 1 || month_num > 12 {\n                valid = false;\n\
    \            }\n        }\n        if day.len() != 2 {\n            valid = false;\n\
    \        } else {\n            let day_num: i32 = day.parse().unwrap();\n    \
    \        if day_num < 1 || day_num > 31 {\n                valid = false;\n  \
    \          }\n        }\n    }\n    valid", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day:\
    \ i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    if year < 1 {\n     \
    \   return false;\n    }\n    return true;", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day:\
    \ i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    return true;", "    let mut date_iter\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n    for\
    \ date_str in date_iter {\n        match date_str.parse::<i32>() {\n         \
    \   Ok(date_num) => date_vec.push(date_num),\n            Err(_) => return false,\n\
    \        }\n    }\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let month = date_vec[0];\n    let day = date_vec[1];\n    let year = date_vec[2];\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "   \
    \ let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<i32> = Vec::new();\n    for i in date_split {\n\
    \        let j = i.parse::<i32>();\n        match j {\n            Ok(k) => date_vec.push(k),\n\
    \            Err(_) => return false,\n        }\n    }\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0];\n    let\
    \ day = date_vec[1];\n    let year = date_vec[2];\n    if month < 1 || month >\
    \ 12 {\n        return false;\n    }\n    if month == 2 {\n        if day < 1\
    \ || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    if year < 1\
    \ {\n        return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<u32> = Vec::new();\n    for i in date_split {\n\
    \        match i.parse::<u32>() {\n            Ok(n) => date_vec.push(n),\n  \
    \          Err(_) => return false,\n        }\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month = date_vec[0];\n    let day\
    \ = date_vec[1];\n    let year = date_vec[2];\n    if month < 1 || month > 12\
    \ {\n        return false;\n    }\n    if month == 2 {\n        if year % 4 ==\
    \ 0 {\n            if day < 1 || day > 29 {\n                return false;\n \
    \           }\n        } else {\n            if day < 1 || day > 28 {\n      \
    \          return false;\n            }\n        }\n    } else if month == 1 ||\
    \ month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month\
    \ == 12 {\n        if day < 1 || day > 31 {\n            return false;\n     \
    \   }\n    } else {\n        if day < 1 || day > 30 {\n            return false;\n\
    \        }\n    }\n    true", "    let mut date_parts = date.split(\"-\");\n \
    \   let month = date_parts.next().unwrap().parse::<i32>().unwrap();\n    let day\
    \ = date_parts.next().unwrap().parse::<i32>().unwrap();\n    let year = date_parts.next().unwrap().parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<u32> = Vec::new();\n\
    \    for i in date_split {\n        match i.parse::<u32>() {\n            Ok(n)\
    \ => date_vec.push(n),\n            Err(_) => return false,\n        }\n    }\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    if date_vec[0]\
    \ > 12 || date_vec[0] < 1 {\n        return false;\n    }\n    if date_vec[0]\
    \ == 2 {\n        if date_vec[1] > 29 || date_vec[1] < 1 {\n            return\
    \ false;\n        }\n    } else if date_vec[0] == 4 || date_vec[0] == 6 || date_vec[0]\
    \ == 9 || date_vec[0] == 11 {\n        if date_vec[1] > 30 || date_vec[1] < 1\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ > 31 || date_vec[1] < 1 {\n            return false;\n        }\n    }\n   \
    \ true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n   \
    \ if date_vec.len() != 3 {\n        return false;\n    }\n    let mut day: i32\
    \ = date_vec[1].parse().unwrap();\n    let mut month: i32 = date_vec[0].parse().unwrap();\n\
    \    let mut year: i32 = date_vec[2].parse().unwrap();\n    if year < 0 {\n  \
    \      return false;\n    }\n    if month < 1 || month > 12 {\n        return\
    \ false;\n    }\n    if month == 2 {\n        if year % 4 == 0 {\n           \
    \ if day < 1 || day > 29 {\n                return false;\n            }\n   \
    \     } else {\n            if day < 1 || day > 28 {\n                return false;\n\
    \            }\n        }\n    } else if month == 1 || month == 3 || month ==\
    \ 5 || month == 7 || month == 8 || month == 10 || month == 12 {\n        if day\
    \ < 1 || day > 31 {\n            return false;\n        }\n    } else {\n    \
    \    if day < 1 || day > 30 {\n            return false;\n        }\n    }\n \
    \   return true;", "    let mut split = date.split(\"-\");\n    let mut date_vec:\
    \ Vec<i32> = Vec::new();\n    for i in split {\n        match i.parse::<i32>()\
    \ {\n            Ok(n) => date_vec.push(n),\n            Err(_) => return false,\n\
    \        }\n    }\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let month = date_vec[0];\n    let day = date_vec[1];\n    let year = date_vec[2];\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day > 29 || day < 1 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 || day < 1 {\n            return false;\n        }\n    }\
    \ else {\n        if day > 31 || day < 1 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut result = true;\n    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        result = false;\n    } else {\n       \
    \ let mut days = date_vec[1].parse::<i32>().unwrap();\n        let mut months\
    \ = date_vec[0].parse::<i32>().unwrap();\n        let mut years = date_vec[2].parse::<i32>().unwrap();\n\
    \        if months < 1 || months > 12 {\n            result = false;\n       \
    \ } else {\n            if months == 2 {\n                if days < 1 || days\
    \ > 29 {\n                    result = false;\n                }\n           \
    \ } else if months == 1 || months == 3 || months == 5 || months == 7 || months\
    \ == 8 || months == 10 || months == 12 {\n                if days < 1 || days\
    \ > 31 {\n                    result = false;\n                }\n           \
    \ } else {\n                if days < 1 || days > 30 {\n                    result\
    \ = false;\n                }\n            }\n        }\n    }\n    result", " \
    \   let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut month: i32 = date_vec[0].parse().unwrap();\n\
    \    let mut day: i32 = date_vec[1].parse().unwrap();\n    let mut year: i32 =\
    \ date_vec[2].parse().unwrap();\n    if month < 1 || month > 12 {\n        return\
    \ false;\n    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n     \
    \       return false;\n        }\n    } else if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    } else {\n        if day < 1 || day > 31 {\n        \
    \    return false;\n        }\n    }\n    if year < 1 {\n        return false;\n\
    \    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let mut date_iter = date.split(\"\
    -\");\n    let mut date_vec: Vec<i32> = vec![];\n    for i in date_iter {\n  \
    \      match i.parse::<i32>() {\n            Ok(n) => date_vec.push(n),\n    \
    \        Err(_) => return false,\n        }\n    }\n    if date_vec.len() != 3\
    \ {\n        return false;\n    }\n    let month = date_vec[0];\n    let day =\
    \ date_vec[1];\n    let year = date_vec[2];\n    if month < 1 || month > 12 {\n\
    \        return false;\n    }\n    if day < 1 || day > 31 {\n        return false;\n\
    \    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n    if\
    \ (month == 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n    \
    \    return false;\n    }\n    if year < 1 {\n        return false;\n    }\n \
    \   true", "    let mut date_split = date.split(\"-\");\n    let mut date_vec:\
    \ Vec<i32> = Vec::new();\n    for i in date_split {\n        match i.parse::<i32>()\
    \ {\n            Ok(n) => date_vec.push(n),\n            Err(_) => return false,\n\
    \        }\n    }\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7\n        || date_vec[0] == 8 ||\
    \ date_vec[0] == 10 || date_vec[0] == 12\n    {\n        if date_vec[1] < 1 ||\
    \ date_vec[1] > 31 {\n            return false;\n        }\n    } else {\n   \
    \     if date_vec[1] < 1 || date_vec[1] > 30 {\n            return false;\n  \
    \      }\n    }\n    if date_vec[2] < 1 {\n        return false;\n    }\n    true",
  "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\"\
    ).unwrap();\n    if !re.is_match(&date) {\n        return false;\n    }\n    let\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month: u32 = date_vec[0].parse().unwrap();\n\
    \    let day: u32 = date_vec[1].parse().unwrap();\n    if month > 12 || day >\
    \ 31 {\n        return false;\n    }\n    if month == 2 && day > 29 {\n      \
    \  return false;\n    }\n    if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day > 30 {\n            return false;\n        }\n    }\n\
    \    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    } else {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    }\n    if year < 1 {\n        return false;\n    }\n\
    \    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    } else {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    }\n    if year < 1 {\n        return false;\n    }\n\
    \    true", "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n\
    \    }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month:\
    \ u32 = date_vec[0].parse().unwrap();\n    let day: u32 = date_vec[1].parse().unwrap();\n\
    \    if month == 2 {\n        if day > 29 {\n            return false;\n     \
    \   }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 {\n            return false;\n        }\n    } else if day\
    \ > 31 {\n        return false;\n    }\n    true", "    let mut date_iter = date.split('-');\n\
    \    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_iter {\n   \
    \     date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    } else {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    }\n    if year < 1 {\n        return false;\n    }\n\
    \    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let mut date_vec:\
    \ Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n \
    \   if date_vec[0] > 12 || date_vec[0] < 1 {\n        return false;\n    }\n \
    \   if date_vec[0] == 2 {\n        if date_vec[1] > 29 || date_vec[1] < 1 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 4 || date_vec[0]\
    \ == 6 || date_vec[0] == 9 || date_vec[0] == 11 {\n        if date_vec[1] > 30\
    \ || date_vec[1] < 1 {\n            return false;\n        }\n    } else {\n \
    \       if date_vec[1] > 31 || date_vec[1] < 1 {\n            return false;\n\
    \        }\n    }\n    return true;", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if (month == 4 || month == 6 || month == 9 || month == 11) && day\
    \ > 30 {\n        return false;\n    }\n    if year < 0 {\n        return false;\n\
    \    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let mut date_vec:\
    \ Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n \
    \   if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n \
    \   if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ if date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 1 {\n        return false;\n    }\n    return true;",
  "    let date_split: Vec<&str> = date.split(\"-\").collect();\n    if date_split.len()\
    \ != 3 {\n        return false;\n    }\n    let month: i32 = date_split[0].parse().unwrap();\n\
    \    let day: i32 = date_split[1].parse().unwrap();\n    let year: i32 = date_split[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let date_vec: Vec<&str> =\
    \ date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day: i32 =\
    \ date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day:\
    \ i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ vec![];\n    for i in date_split {\n        date_vec.push(i);\n    }\n    if\
    \ date_vec.len() != 3 {\n        return false;\n    }\n    let mut date_vec_int:\
    \ Vec<i32> = vec![];\n    for i in date_vec {\n        if let Ok(n) = i.parse::<i32>()\
    \ {\n            date_vec_int.push(n);\n        } else {\n            return false;\n\
    \        }\n    }\n    if date_vec_int[0] < 1 || date_vec_int[0] > 12 {\n    \
    \    return false;\n    }\n    if date_vec_int[0] == 2 {\n        if date_vec_int[1]\
    \ < 1 || date_vec_int[1] > 29 {\n            return false;\n        }\n    } else\
    \ if date_vec_int[0] == 1\n        || date_vec_int[0] == 3\n        || date_vec_int[0]\
    \ == 5\n        || date_vec_int[0] == 7\n        || date_vec_int[0] == 8\n   \
    \     || date_vec_int[0] == 10\n        || date_vec_int[0] == 12\n    {\n    \
    \    if date_vec_int[1] < 1 || date_vec_int[1] > 31 {\n            return false;\n\
    \        }\n    } else {\n        if date_vec_int[1] < 1 || date_vec_int[1] >\
    \ 30 {\n            return false;\n        }\n    }\n    true", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut date_split = date.split(\"-\");\n    let mut is_valid = true;\n    if\
    \ let Some(month) = date_split.next() {\n        if let Some(day) = date_split.next()\
    \ {\n            if let Some(year) = date_split.next() {\n                if month.len()\
    \ != 2 || day.len() != 2 || year.len() != 4 {\n                    is_valid =\
    \ false;\n                } else {\n                    let month: i32 = match\
    \ month.parse() {\n                        Ok(num) => num,\n                 \
    \       Err(_) => {\n                            is_valid = false;\n         \
    \                   0\n                        }\n                    };\n   \
    \                 let day: i32 = match day.parse() {\n                       \
    \ Ok(num) => num,\n                        Err(_) => {\n                     \
    \       is_valid = false;\n                            0\n                   \
    \     }\n                    };\n                    let year: i32 = match year.parse()\
    \ {\n                        Ok(num) => num,\n                        Err(_) =>\
    \ {\n                            is_valid = false;\n                         \
    \   0\n                        }\n                    };\n                   \
    \ if month < 1 || month > 12 {\n                        is_valid = false;\n  \
    \                  } else if month == 2 {\n                        if year % 4\
    \ == 0 {\n                            if day < 1 || day > 29 {\n             \
    \                   is_valid = false;\n                            }\n       \
    \                 } else {\n                            if day < 1 || day > 28\
    \ {\n                                is_valid = false;\n                     \
    \       }\n                        }\n                    } else if month == 1\
    \ || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month\
    \ == 12 {\n                        if day < 1 || day > 31 {\n                \
    \            is_valid = false;\n                        }\n                  \
    \  } else {\n                        if day < 1 || day > 30 {\n              \
    \              is_valid = false;\n                        }\n                \
    \    }\n                }\n            } else {\n                is_valid = false;\n\
    \            }\n        } else {\n            is_valid = false;\n        }\n \
    \   } else {\n        is_valid = false;\n    }\n    is_valid", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n\
    \    let day: i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "   \
    \ let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    ).unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n   \
    \ }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month:\
    \ u32 = date_vec[0].parse().unwrap();\n    let day: u32 = date_vec[1].parse().unwrap();\n\
    \    let year: u32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    return true;",
  "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x|\
    \ x.parse::<i32>().unwrap()).collect();\n    if date_vec[0] < 1 || date_vec[0]\
    \ > 12 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if\
    \ date_vec[1] < 1 || date_vec[1] > 29 {\n            return false;\n        }\n\
    \    } else if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0]\
    \ == 7 || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12 {\n     \
    \   if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n    \
    \    }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n     \
    \       return false;\n        }\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let date_vec: Vec<&str> =\
    \ date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month: u32 = match date_vec[0].parse() {\n        Ok(n) => n,\n\
    \        Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(n) => n,\n        Err(_) => return false,\n    };\n    let year:\
    \ u32 = match date_vec[2].parse() {\n        Ok(n) => n,\n        Err(_) => return\
    \ false,\n    };\n    if month < 1 || month > 12 {\n        return false;\n  \
    \  }\n    if day < 1 || day > 31 {\n        return false;\n    }\n    if month\
    \ == 2 && day > 29 {\n        return false;\n    }\n    if (month == 4 || month\
    \ == 6 || month == 9 || month == 11) && day > 30 {\n        return false;\n  \
    \  }\n    if year < 1 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut valid = true;\n    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n\
    \    if date_vec.len() != 3 {\n        valid = false;\n    } else {\n        let\
    \ mut month = date_vec[0].parse::<i32>().unwrap();\n        let mut day = date_vec[1].parse::<i32>().unwrap();\n\
    \        let mut year = date_vec[2].parse::<i32>().unwrap();\n        if month\
    \ < 1 || month > 12 {\n            valid = false;\n        } else if day < 1 ||\
    \ day > 31 {\n            valid = false;\n        } else if month == 2 && day\
    \ > 29 {\n            valid = false;\n        } else if (month == 4 || month ==\
    \ 6 || month == 9 || month == 11) && day > 30 {\n            valid = false;\n\
    \        } else if year < 1 {\n            valid = false;\n        }\n    }\n\
    \    valid", "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    ).unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n   \
    \ }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month\
    \ = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    true", "    let mut date_split = date.split(\"-\");\n    let\
    \ mut date_vec: Vec<i32> = Vec::new();\n    let mut date_valid = true;\n    for\
    \ i in date_split {\n        match i.parse::<i32>() {\n            Ok(n) => date_vec.push(n),\n\
    \            Err(_) => date_valid = false,\n        }\n    }\n    if date_vec.len()\
    \ != 3 {\n        date_valid = false;\n    }\n    if date_valid {\n        match\
    \ date_vec[0] {\n            1 | 3 | 5 | 7 | 8 | 10 | 12 => {\n              \
    \  if date_vec[1] < 1 || date_vec[1] > 31 {\n                    date_valid =\
    \ false;\n                }\n            }\n            4 | 6 | 9 | 11 => {\n\
    \                if date_vec[1] < 1 || date_vec[1] > 30 {\n                  \
    \  date_valid = false;\n                }\n            }\n            2 => {\n\
    \                if date_vec[1] < 1 || date_vec[1] > 29 {\n                  \
    \  date_valid = false;\n                }\n            }\n            _ => date_valid\
    \ = false,\n        }\n    }\n    date_valid", "    let date_vec: Vec<&str> =\
    \ date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day: i32 =\
    \ date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    true", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n    for\
    \ i in date_split {\n        match i.parse::<i32>() {\n            Ok(n) => date_vec.push(n),\n\
    \            Err(_) => return false,\n        }\n    }\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    if date_vec[0] < 1 || date_vec[0]\
    \ > 12 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if\
    \ date_vec[1] < 1 || date_vec[1] > 29 {\n            return false;\n        }\n\
    \    } else if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0]\
    \ == 7\n        || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12\n\
    \    {\n        if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n\
    \        }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n \
    \           return false;\n        }\n    }\n    if date_vec[2] < 1 {\n      \
    \  return false;\n    }\n    true", "    let date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let month: u32 = match date_vec[0].parse() {\n        Ok(num) => num,\n \
    \       Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_vec[2].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    if month < 1 || month > 12 {\n        return false;\n\
    \    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n            return\
    \ false;\n        }\n    } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day < 1 || day > 30 {\n            return false;\n     \
    \   }\n    } else {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let mut month = date_vec[0].parse::<u32>().unwrap();\n    let mut day = date_vec[1].parse::<u32>().unwrap();\n\
    \    let mut year = date_vec[2].parse::<u32>().unwrap();\n    if month < 1 ||\
    \ month > 12 {\n        return false;\n    }\n    if month == 2 {\n        if\
    \ day < 1 || day > 29 {\n            return false;\n        }\n    } else if month\
    \ == 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day\
    \ > 30 {\n            return false;\n        }\n    } else {\n        if day <\
    \ 1 || day > 31 {\n            return false;\n        }\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    return true;", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for\
    \ i in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month\
    \ < 1 || month > 12 {\n        return false;\n    }\n    if day < 1 || day > 31\
    \ {\n        return false;\n    }\n    if month == 2 && day > 29 {\n        return\
    \ false;\n    }\n    if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ && day > 30 {\n        return false;\n    }\n    if year < 1 {\n        return\
    \ false;\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n   \
    \ let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if (month == 4 || month == 6 || month == 9 || month == 11) && day\
    \ > 30 {\n        return false;\n    }\n    if year < 1 {\n        return false;\n\
    \    }\n    true", "    let mut result = true;\n    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        result\
    \ = false;\n    } else {\n        let month: u32 = match date_vec[0].parse() {\n\
    \            Ok(num) => num,\n            Err(_) => 0,\n        };\n        let\
    \ day: u32 = match date_vec[1].parse() {\n            Ok(num) => num,\n      \
    \      Err(_) => 0,\n        };\n        let year: u32 = match date_vec[2].parse()\
    \ {\n            Ok(num) => num,\n            Err(_) => 0,\n        };\n     \
    \   if month < 1 || month > 12 {\n            result = false;\n        } else\
    \ if month == 2 {\n            if day < 1 || day > 29 {\n                result\
    \ = false;\n            }\n        } else if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n            if day < 1 || day > 30 {\n              \
    \  result = false;\n            }\n        } else {\n            if day < 1 ||\
    \ day > 31 {\n                result = false;\n            }\n        }\n    \
    \    if year < 1 {\n            result = false;\n        }\n    }\n    result",
  "    let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_split {\n        date_vec.push(i);\n    }\n \
    \   if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    true", "  \
    \  let mut date_iter = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n\
    \    for i in date_iter {\n        match i.parse::<i32>() {\n            Ok(n)\
    \ => date_vec.push(n),\n            Err(_) => return false,\n        }\n    }\n\
    \    if date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0];\n\
    \    let day = date_vec[1];\n    let year = date_vec[2];\n    if month < 1 ||\
    \ month > 12 {\n        return false;\n    }\n    if month == 2 {\n        if\
    \ day < 1 || day > 29 {\n            return false;\n        }\n    } else if month\
    \ == 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day\
    \ > 30 {\n            return false;\n        }\n    } else {\n        if day <\
    \ 1 || day > 31 {\n            return false;\n        }\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let day = date_vec.pop().unwrap();\n    let month = date_vec.pop().unwrap();\n\
    \    let year = date_vec.pop().unwrap();\n    if year.len() != 4 {\n        return\
    \ false;\n    }\n    if month.len() != 2 || day.len() != 2 {\n        return false;\n\
    \    }\n    let month_num = match month.parse::<u32>() {\n        Ok(num) => num,\n\
    \        Err(_) => return false,\n    };\n    let day_num = match day.parse::<u32>()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if\
    \ month_num > 12 || month_num < 1 {\n        return false;\n    }\n    if month_num\
    \ == 2 {\n        if day_num > 29 || day_num < 1 {\n            return false;\n\
    \        }\n    } else if month_num == 4 || month_num == 6 || month_num == 9 ||\
    \ month_num == 11 {\n        if day_num > 30 || day_num < 1 {\n            return\
    \ false;\n        }\n    } else {\n        if day_num > 31 || day_num < 1 {\n\
    \            return false;\n        }\n    }\n    true", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for\
    \ date_part in date_split {\n        date_vec.push(date_part);\n    }\n    if\
    \ date_vec.len() != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<u32>().unwrap();\n\
    \    let day = date_vec[1].parse::<u32>().unwrap();\n    let year = date_vec[2].parse::<u32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ true", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n   \
    \ if date_vec.len() != 3 {\n        return false;\n    }\n    let mut date_vec:\
    \ Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n \
    \   if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n \
    \   if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ true", "    let date_split: Vec<&str> = date.split(\"-\").collect();\n    if\
    \ date_split.len() != 3 {\n        return false;\n    }\n    let month = date_split[0].parse::<i32>().unwrap();\n\
    \    let day = date_split[1].parse::<i32>().unwrap();\n    let year = date_split[2].parse::<i32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 0 {\n        return false;\n    }\n    return true;",
  "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n\
    \    let day: i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if re.is_match(&date) {\n        let date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n        let month = date_vec[0].parse::<i32>().unwrap();\n\
    \        let day = date_vec[1].parse::<i32>().unwrap();\n        let year = date_vec[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            return false;\n        }\n\
    \        if day < 1 || day > 31 {\n            return false;\n        }\n    \
    \    if month == 2 && day > 29 {\n            return false;\n        }\n     \
    \   if (month == 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n\
    \            return false;\n        }\n        if year < 1 {\n            return\
    \ false;\n        }\n        return true;\n    }\n    return false;", "    let\
    \ mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let day = date_vec.pop().unwrap();\n\
    \    let month = date_vec.pop().unwrap();\n    let year = date_vec.pop().unwrap();\n\
    \    if year.len() != 4 {\n        return false;\n    }\n    if month.len() !=\
    \ 2 || day.len() != 2 {\n        return false;\n    }\n    let month_int = month.parse::<u32>().unwrap();\n\
    \    let day_int = day.parse::<u32>().unwrap();\n    let year_int = year.parse::<u32>().unwrap();\n\
    \    if month_int < 1 || month_int > 12 {\n        return false;\n    }\n    if\
    \ day_int < 1 || day_int > 31 {\n        return false;\n    }\n    if month_int\
    \ == 2 && day_int > 29 {\n        return false;\n    }\n    if month_int == 4\
    \ || month_int == 6 || month_int == 9 || month_int == 11 {\n        if day_int\
    \ > 30 {\n            return false;\n        }\n    }\n    if year_int < 1 {\n\
    \        return false;\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let day = date_vec.pop().unwrap();\n    let month = date_vec.pop().unwrap();\n\
    \    let year = date_vec.pop().unwrap();\n    if year.len() != 4 {\n        return\
    \ false;\n    }\n    if month.len() != 2 || day.len() != 2 {\n        return false;\n\
    \    }\n    let month_num = month.parse::<u32>().unwrap();\n    let day_num =\
    \ day.parse::<u32>().unwrap();\n    if month_num > 12 || month_num < 1 {\n   \
    \     return false;\n    }\n    if day_num > 31 || day_num < 1 {\n        return\
    \ false;\n    }\n    if month_num == 2 {\n        if day_num > 29 {\n        \
    \    return false;\n        }\n    }\n    if month_num == 4 || month_num == 6\
    \ || month_num == 9 || month_num == 11 {\n        if day_num > 30 {\n        \
    \    return false;\n        }\n    }\n    return true;", "    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<i32> = Vec::new();\n    for\
    \ i in date_split {\n        match i.parse::<i32>() {\n            Ok(n) => date_vec.push(n),\n\
    \            Err(_) => return false,\n        }\n    }\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    if date_vec[0] > 12 || date_vec[0]\
    \ < 1 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if date_vec[1]\
    \ > 29 || date_vec[1] < 1 {\n            return false;\n        }\n    } else\
    \ if date_vec[0] == 4 || date_vec[0] == 6 || date_vec[0] == 9 || date_vec[0] ==\
    \ 11 {\n        if date_vec[1] > 30 || date_vec[1] < 1 {\n            return false;\n\
    \        }\n    } else {\n        if date_vec[1] > 31 || date_vec[1] < 1 {\n \
    \           return false;\n        }\n    }\n    if date_vec[2] < 1 {\n      \
    \  return false;\n    }\n    true", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    ).unwrap();\n    let re_date = re.captures(&date);\n    if re_date.is_none() {\n\
    \        return false;\n    }\n    let date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day:\
    \ i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    true", "    let mut date_split = date.split(\"-\");\n    let\
    \ mut date_vec: Vec<u32> = Vec::new();\n    for i in date_split {\n        match\
    \ i.parse::<u32>() {\n            Ok(n) => date_vec.push(n),\n            Err(_)\
    \ => return false,\n        }\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut days_in_month = [31, 28, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31];\n    if date_vec[2] % 4 == 0 {\n        days_in_month[1] =\
    \ 29;\n    }\n    if date_vec[0] > 12 || date_vec[0] < 1 {\n        return false;\n\
    \    }\n    if date_vec[1] > days_in_month[(date_vec[0] - 1) as usize] || date_vec[1]\
    \ < 1 {\n        return false;\n    }\n    return true;", "    let date_regex\
    \ = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\").unwrap();\n\
    \    let date_split: Vec<&str> = date.split(\"-\").collect();\n    let month:\
    \ u32 = date_split[0].parse().unwrap();\n    let day: u32 = date_split[1].parse().unwrap();\n\
    \    let year: u32 = date_split[2].parse().unwrap();\n    let is_leap_year = (year\
    \ % 4 == 0 && year % 100 != 0) || year % 400 == 0;\n    let is_valid_date = match\
    \ month {\n        1 | 3 | 5 | 7 | 8 | 10 | 12 => day >= 1 && day <= 31,\n   \
    \     4 | 6 | 9 | 11 => day >= 1 && day <= 30,\n        2 => day >= 1 && day <=\
    \ 29 && is_leap_year,\n        _ => false,\n    };\n    date_regex.is_match(&date)\
    \ && is_valid_date", "    let mut date_split = date.split(\"-\");\n    let month\
    \ = date_split.next().unwrap();\n    let day = date_split.next().unwrap();\n \
    \   let year = date_split.next().unwrap();\n    if month.len() != 2 || day.len()\
    \ != 2 || year.len() != 4 {\n        return false;\n    }\n    let month = month.parse::<u8>().unwrap();\n\
    \    let day = day.parse::<u8>().unwrap();\n    let year = year.parse::<u16>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 1 {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let day = date_vec.pop().unwrap();\n    let month = date_vec.pop().unwrap();\n\
    \    let year = date_vec.pop().unwrap();\n    if year.len() != 4 {\n        return\
    \ false;\n    }\n    let day_int = day.parse::<i32>().unwrap();\n    let month_int\
    \ = month.parse::<i32>().unwrap();\n    let year_int = year.parse::<i32>().unwrap();\n\
    \    if month_int < 1 || month_int > 12 {\n        return false;\n    }\n    if\
    \ day_int < 1 {\n        return false;\n    }\n    if month_int == 2 {\n     \
    \   if day_int > 29 {\n            return false;\n        }\n    } else if month_int\
    \ == 4 || month_int == 6 || month_int == 9 || month_int == 11 {\n        if day_int\
    \ > 30 {\n            return false;\n        }\n    } else {\n        if day_int\
    \ > 31 {\n            return false;\n        }\n    }\n    return true;", "  \
    \  let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\"\
    ).unwrap();\n    let mut valid = false;\n    if re.is_match(&date) {\n       \
    \ let v: Vec<&str> = date.split(\"-\").collect();\n        let month = v[0].parse::<i32>().unwrap();\n\
    \        let day = v[1].parse::<i32>().unwrap();\n        if (month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\
    \ && day <= 31 && day >= 1 {\n            valid = true;\n        } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) && day <= 30 && day >= 1 {\n\
    \            valid = true;\n        } else if month == 2 && day <= 29 && day >=\
    \ 1 {\n            valid = true;\n        }\n    }\n    valid", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let mut date_vec_int: Vec<u32> = Vec::new();\n\
    \    for i in date_vec {\n        let j = i.parse::<u32>();\n        if j.is_err()\
    \ {\n            return false;\n        }\n        date_vec_int.push(j.unwrap());\n\
    \    }\n    if date_vec_int[0] > 12 || date_vec_int[0] < 1 {\n        return false;\n\
    \    }\n    if date_vec_int[0] == 2 {\n        if date_vec_int[1] > 29 || date_vec_int[1]\
    \ < 1 {\n            return false;\n        }\n    } else if date_vec_int[0] ==\
    \ 1\n        || date_vec_int[0] == 3\n        || date_vec_int[0] == 5\n      \
    \  || date_vec_int[0] == 7\n        || date_vec_int[0] == 8\n        || date_vec_int[0]\
    \ == 10\n        || date_vec_int[0] == 12\n    {\n        if date_vec_int[1] >\
    \ 31 || date_vec_int[1] < 1 {\n            return false;\n        }\n    } else\
    \ {\n        if date_vec_int[1] > 30 || date_vec_int[1] < 1 {\n            return\
    \ false;\n        }\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let day = date_vec.pop().unwrap();\n    let month = date_vec.pop().unwrap();\n\
    \    let year = date_vec.pop().unwrap();\n    if year.len() != 4 {\n        return\
    \ false;\n    }\n    let day_num = day.parse::<i32>().unwrap();\n    let month_num\
    \ = month.parse::<i32>().unwrap();\n    let year_num = year.parse::<i32>().unwrap();\n\
    \    if month_num < 1 || month_num > 12 {\n        return false;\n    }\n    if\
    \ day_num < 1 {\n        return false;\n    }\n    if month_num == 2 {\n     \
    \   if day_num > 29 {\n            return false;\n        }\n    } else if month_num\
    \ == 4 || month_num == 6 || month_num == 9 || month_num == 11 {\n        if day_num\
    \ > 30 {\n            return false;\n        }\n    } else {\n        if day_num\
    \ > 31 {\n            return false;\n        }\n    }\n    return true;", "  \
    \  let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut days: i32 = date_vec[1].parse().unwrap();\n\
    \    let mut months: i32 = date_vec[0].parse().unwrap();\n    let mut years: i32\
    \ = date_vec[2].parse().unwrap();\n    if days < 1 || days > 31 || months < 1\
    \ || months > 12 || years < 1 {\n        return false;\n    }\n    if months ==\
    \ 2 {\n        if days > 29 {\n            return false;\n        }\n    } else\
    \ if months == 4 || months == 6 || months == 9 || months == 11 {\n        if days\
    \ > 30 {\n            return false;\n        }\n    }\n    return true;", "  \
    \  let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x|\
    \ x.parse::<i32>().unwrap()).collect();\n    if date_vec[0] < 1 || date_vec[0]\
    \ > 12 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if\
    \ date_vec[1] < 1 || date_vec[1] > 29 {\n            return false;\n        }\n\
    \    } else if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0]\
    \ == 7 || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12 {\n     \
    \   if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n    \
    \    }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n     \
    \       return false;\n        }\n    }\n    true", "    let mut date_split =\
    \ date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for d\
    \ in date_split {\n        date_vec.push(d);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let mut date_int_vec: Vec<i32> = Vec::new();\n\
    \    for d in date_vec {\n        match d.parse::<i32>() {\n            Ok(i)\
    \ => date_int_vec.push(i),\n            Err(_) => return false,\n        }\n \
    \   }\n    if date_int_vec[0] > 12 || date_int_vec[0] < 1 {\n        return false;\n\
    \    }\n    if date_int_vec[0] == 2 {\n        if date_int_vec[1] > 29 || date_int_vec[1]\
    \ < 1 {\n            return false;\n        }\n    } else if date_int_vec[0] ==\
    \ 4 || date_int_vec[0] == 6 || date_int_vec[0] == 9 || date_int_vec[0] == 11 {\n\
    \        if date_int_vec[1] > 30 || date_int_vec[1] < 1 {\n            return\
    \ false;\n        }\n    } else {\n        if date_int_vec[1] > 31 || date_int_vec[1]\
    \ < 1 {\n            return false;\n        }\n    }\n    if date_int_vec[2] <\
    \ 1 {\n        return false;\n    }\n    true", "    let date_regex = Regex::new(r\"\
    (0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}\").unwrap();\n    date_regex.is_match(&date)",
  "    let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> =\
    \ Vec::new();\n    for i in date_split {\n        date_vec.push(i);\n    }\n \
    \   if date_vec.len() != 3 {\n        return false;\n    }\n    let month: i32\
    \ = date_vec[0].parse().unwrap();\n    let day: i32 = date_vec[1].parse().unwrap();\n\
    \    let year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    } else {\n        if day < 1 || day > 30 {\n            return\
    \ false;\n        }\n    }\n    return true;", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day:\
    \ i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    if year < 1 {\n     \
    \   return false;\n    }\n    true", "    let mut date_split = date.split(\"-\"\
    );\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split {\n\
    \        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: u32 = match date_vec[0].parse() {\n        Ok(num)\
    \ => num,\n        Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_vec[2].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    if month > 12 || month < 1 {\n        return false;\n\
    \    }\n    if month == 2 {\n        if day > 29 || day < 1 {\n            return\
    \ false;\n        }\n    } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day > 30 || day < 1 {\n            return false;\n     \
    \   }\n    } else {\n        if day > 31 || day < 1 {\n            return false;\n\
    \        }\n    }\n    return true;", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let mut month: u32 = date_vec[0].parse().unwrap();\n    let mut day: u32\
    \ = date_vec[1].parse().unwrap();\n    let mut year: u32 = date_vec[2].parse().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    return true;",
  "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\"\
    ).unwrap();\n    if re.is_match(&date) {\n        let v: Vec<&str> = date.split(\"\
    -\").collect();\n        let month = v[0].parse::<i32>().unwrap();\n        let\
    \ day = v[1].parse::<i32>().unwrap();\n        let year = v[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            return false;\n        }\n\
    \        if month == 2 {\n            if day < 1 || day > 29 {\n             \
    \   return false;\n            }\n        } else if month == 4 || month == 6 ||\
    \ month == 9 || month == 11 {\n            if day < 1 || day > 30 {\n        \
    \        return false;\n            }\n        } else {\n            if day <\
    \ 1 || day > 31 {\n                return false;\n            }\n        }\n \
    \       if year < 0 {\n            return false;\n        }\n        return true;\n\
    \    }\n    return false;", "    let mut date_vec: Vec<&str> = date.split(\"-\"\
    ).collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n   \
    \ let month = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if day < 1 || day > 31 {\n       \
    \ return false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n\
    \    }\n    if (month == 4 || month == 6 || month == 9 || month == 11) && day\
    \ > 30 {\n        return false;\n    }\n    if year < 0 {\n        return false;\n\
    \    }\n    true", "    let mut date_split = date.split(\"-\");\n    let mut date_vec:\
    \ Vec<i32> = Vec::new();\n    for item in date_split {\n        match item.parse::<i32>()\
    \ {\n            Ok(num) => date_vec.push(num),\n            Err(_) => return\
    \ false,\n        }\n    }\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let mut days = date_vec[1];\n    let mut months = date_vec[0];\n \
    \   let mut years = date_vec[2];\n    if months < 1 || months > 12 {\n       \
    \ return false;\n    }\n    if months == 2 {\n        if days < 1 || days > 29\
    \ {\n            return false;\n        }\n    } else if months == 1 || months\
    \ == 3 || months == 5 || months == 7 || months == 8 || months == 10 || months\
    \ == 12 {\n        if days < 1 || days > 31 {\n            return false;\n   \
    \     }\n    } else {\n        if days < 1 || days > 30 {\n            return\
    \ false;\n        }\n    }\n    if years < 1 {\n        return false;\n    }\n\
    \    true", "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n\
    \    }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month\
    \ = date_vec[0].parse::<u32>().unwrap();\n    let day = date_vec[1].parse::<u32>().unwrap();\n\
    \    if month == 2 {\n        if day > 29 {\n            return false;\n     \
    \   }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 {\n            return false;\n        }\n    } else if day\
    \ > 31 {\n        return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: u32 = match date_vec[0].parse() {\n        Ok(num)\
    \ => num,\n        Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_vec[2].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    if month > 12 || month < 1 {\n        return false;\n\
    \    }\n    if day > 31 || day < 1 {\n        return false;\n    }\n    if month\
    \ == 2 && day > 29 {\n        return false;\n    }\n    if (month == 4 || month\
    \ == 6 || month == 9 || month == 11) && day > 30 {\n        return false;\n  \
    \  }\n    if year < 1 {\n        return false;\n    }\n    true", "    let re\
    \ = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\").unwrap();\n\
    \    if re.is_match(&date) {\n        let date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n        let month: u32 = date_vec[0].parse().unwrap();\n    \
    \    let day: u32 = date_vec[1].parse().unwrap();\n        let year: u32 = date_vec[2].parse().unwrap();\n\
    \        if month == 2 {\n            if day > 29 {\n                return false;\n\
    \            }\n            if day == 29 {\n                if year % 4 != 0 {\n\
    \                    return false;\n                }\n                if year\
    \ % 100 == 0 && year % 400 != 0 {\n                    return false;\n       \
    \         }\n            }\n        } else if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n            if day > 30 {\n                return false;\n\
    \            }\n        } else if day > 31 {\n            return false;\n    \
    \    }\n        return true;\n    }\n    return false;", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let mut date_vec: Vec<u32> = date_vec\n      \
    \  .iter()\n        .map(|x| x.parse::<u32>().unwrap())\n        .collect();\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] > 29 {\n            return\
    \ false;\n        }\n    } else if date_vec[0] == 4 || date_vec[0] == 6 || date_vec[0]\
    \ == 9 || date_vec[0] == 11 {\n        if date_vec[1] > 30 {\n            return\
    \ false;\n        }\n    } else {\n        if date_vec[1] > 31 {\n           \
    \ return false;\n        }\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let mut date_vec: Vec<u32> = date_vec\n        .iter()\n\
    \        .map(|x| x.parse::<u32>().unwrap())\n        .collect();\n    if date_vec[0]\
    \ < 1 || date_vec[0] > 12 {\n        return false;\n    }\n    if date_vec[0]\
    \ == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n            return\
    \ false;\n        }\n    } else if date_vec[0] == 1\n        || date_vec[0] ==\
    \ 3\n        || date_vec[0] == 5\n        || date_vec[0] == 7\n        || date_vec[0]\
    \ == 8\n        || date_vec[0] == 10\n        || date_vec[0] == 12\n    {\n  \
    \      if date_vec[1] < 1 || date_vec[1] > 31 {\n            return false;\n \
    \       }\n    } else {\n        if date_vec[1] < 1 || date_vec[1] > 30 {\n  \
    \          return false;\n        }\n    }\n    true", "    let mut date_split\
    \ = date.split('-');\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i\
    \ in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month\
    \ > 12 || month < 1 {\n        return false;\n    }\n    if day > 31 || day <\
    \ 1 {\n        return false;\n    }\n    if month == 2 && day > 29 {\n       \
    \ return false;\n    }\n    if (month == 4 || month == 6 || month == 9 || month\
    \ == 11) && day > 30 {\n        return false;\n    }\n    if year < 1000 || year\
    \ > 9999 {\n        return false;\n    }\n    true", "    let re = Regex::new(r\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\").unwrap();\n    if re.is_match(&date)\
    \ {\n        let date_vec: Vec<&str> = date.split(\"-\").collect();\n        let\
    \ month = date_vec[0].parse::<i32>().unwrap();\n        let day = date_vec[1].parse::<i32>().unwrap();\n\
    \        let year = date_vec[2].parse::<i32>().unwrap();\n        if year % 4\
    \ == 0 && year % 100 != 0 || year % 400 == 0 {\n            if month == 2 && day\
    \ >= 1 && day <= 29 {\n                return true;\n            }\n        }\n\
    \        if month == 1 || month == 3 || month == 5 || month == 7 || month == 8\
    \ || month == 10 || month == 12 {\n            if day >= 1 && day <= 31 {\n  \
    \              return true;\n            }\n        }\n        if month == 4 ||\
    \ month == 6 || month == 9 || month == 11 {\n            if day >= 1 && day <=\
    \ 30 {\n                return true;\n            }\n        }\n    }\n    false",
  "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_vec: Vec<i32> = date_vec.iter().map(|x|\
    \ x.parse::<i32>().unwrap()).collect();\n    if date_vec[0] > 12 || date_vec[0]\
    \ < 1 {\n        return false;\n    }\n    if date_vec[0] == 2 {\n        if date_vec[1]\
    \ > 29 || date_vec[1] < 1 {\n            return false;\n        }\n    } else\
    \ if date_vec[0] == 1 || date_vec[0] == 3 || date_vec[0] == 5 || date_vec[0] ==\
    \ 7 || date_vec[0] == 8 || date_vec[0] == 10 || date_vec[0] == 12 {\n        if\
    \ date_vec[1] > 31 || date_vec[1] < 1 {\n            return false;\n        }\n\
    \    } else {\n        if date_vec[1] > 30 || date_vec[1] < 1 {\n            return\
    \ false;\n        }\n    }\n    return true;", "    let mut date_iter = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_iter {\n\
    \        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day:\
    \ i32 = date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    if year < 0 {\n     \
    \   return false;\n    }\n    true", "    let mut valid = true;\n    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     valid = false;\n    } else {\n        let month = date_vec[0].parse::<i32>().unwrap();\n\
    \        let day = date_vec[1].parse::<i32>().unwrap();\n        let year = date_vec[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            valid = false;\n        } else\
    \ if day < 1 || day > 31 {\n            valid = false;\n        } else if month\
    \ == 2 && day > 29 {\n            valid = false;\n        } else if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n            valid\
    \ = false;\n        } else if year < 1 {\n            valid = false;\n       \
    \ }\n    }\n    valid", "    let mut valid = false;\n    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() == 3 {\n        let month\
    \ = date_vec[0].parse::<i32>().unwrap();\n        let day = date_vec[1].parse::<i32>().unwrap();\n\
    \        let year = date_vec[2].parse::<i32>().unwrap();\n        if month >=\
    \ 1 && month <= 12 {\n            if month == 1 || month == 3 || month == 5 ||\
    \ month == 7 || month == 8 || month == 10 || month == 12 {\n                if\
    \ day >= 1 && day <= 31 {\n                    valid = true;\n               \
    \ }\n            } else if month == 4 || month == 6 || month == 9 || month ==\
    \ 11 {\n                if day >= 1 && day <= 30 {\n                    valid\
    \ = true;\n                }\n            } else if month == 2 {\n           \
    \     if day >= 1 && day <= 29 {\n                    valid = true;\n        \
    \        }\n            }\n        }\n    }\n    valid", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let date_vec: Vec<&str> =\
    \ date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month: i32 = date_vec[0].parse().unwrap();\n    let day: i32 =\
    \ date_vec[1].parse().unwrap();\n    let year: i32 = date_vec[2].parse().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12 {\n        if day < 1 || day > 31 {\n   \
    \         return false;\n        }\n    } else {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    }\n    true", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if year < 0 {\n        return false;\n    }\n    if month < 1 || month >\
    \ 12 {\n        return false;\n    }\n    if month == 2 {\n        if day < 1\
    \ || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    true", "   \
    \ let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\"\
    ).unwrap();\n    if re.is_match(&date) {\n        let date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n        let month = date_vec[0].parse::<u32>().unwrap();\n  \
    \      let day = date_vec[1].parse::<u32>().unwrap();\n        let year = date_vec[2].parse::<u32>().unwrap();\n\
    \        if year % 4 == 0 && year % 100 != 0 || year % 400 == 0 {\n          \
    \  if month == 2 && day <= 29 {\n                return true;\n            }\n\
    \        }\n        if month == 1 || month == 3 || month == 5 || month == 7 ||\
    \ month == 8 || month == 10 || month == 12 {\n            if day <= 31 {\n   \
    \             return true;\n            }\n        }\n        if month == 4 ||\
    \ month == 6 || month == 9 || month == 11 {\n            if day <= 30 {\n    \
    \            return true;\n            }\n        }\n    }\n    false", "    let\
    \ mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_vec: Vec<u32> = date_vec\n\
    \        .iter()\n        .map(|x| x.parse::<u32>().unwrap())\n        .collect();\n\
    \    if date_vec[0] > 12 || date_vec[0] < 1 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] > 29 || date_vec[1] < 1 {\n\
    \            return false;\n        }\n    } else if date_vec[0] % 2 == 0 {\n\
    \        if date_vec[1] > 30 || date_vec[1] < 1 {\n            return false;\n\
    \        }\n    } else {\n        if date_vec[1] > 31 || date_vec[1] < 1 {\n \
    \           return false;\n        }\n    }\n    true", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let mut date_vec_int: Vec<i32> = Vec::new();\n\
    \    for i in date_vec {\n        match i.parse::<i32>() {\n            Ok(num)\
    \ => date_vec_int.push(num),\n            Err(_) => return false,\n        }\n\
    \    }\n    let mut months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    if date_vec_int[0] > 12 || date_vec_int[0] < 1 {\n        return false;\n\
    \    }\n    if date_vec_int[0] == 2 {\n        if date_vec_int[2] % 4 == 0 {\n\
    \            months[1] = 29;\n        }\n    }\n    if date_vec_int[1] > months[(date_vec_int[0]\
    \ - 1) as usize] || date_vec_int[1] < 1 {\n        return false;\n    }\n    return\
    \ true;", "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n  \
    \  if date_vec.len() != 3 {\n        return false;\n    }\n    let mut month:\
    \ i32 = date_vec[0].parse().unwrap();\n    let mut day: i32 = date_vec[1].parse().unwrap();\n\
    \    let mut year: i32 = date_vec[2].parse().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    if year < 1\
    \ {\n        return false;\n    }\n    true", "    let mut valid = true;\n   \
    \ let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        valid = false;\n    }\n    if valid {\n        let month = date_vec[0].parse::<i32>().unwrap();\n\
    \        let day = date_vec[1].parse::<i32>().unwrap();\n        let year = date_vec[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            valid = false;\n        }\n\
    \        if month == 2 {\n            if day < 1 || day > 29 {\n             \
    \   valid = false;\n            }\n        } else if month == 1 || month == 3\
    \ || month == 5 || month == 7 || month == 8 || month == 10 || month == 12 {\n\
    \            if day < 1 || day > 31 {\n                valid = false;\n      \
    \      }\n        } else {\n            if day < 1 || day > 30 {\n           \
    \     valid = false;\n            }\n        }\n        if year < 1 {\n      \
    \      valid = false;\n        }\n    }\n    valid", "    let re = Regex::new(r\"\
    ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$\").unwrap();\n    if !re.is_match(&date)\
    \ {\n        return false;\n    }\n    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    if month < 1 || month > 12 {\n\
    \        return false;\n    }\n    if day < 1 || day > 31 {\n        return false;\n\
    \    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n    if\
    \ (month == 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n    \
    \    return false;\n    }\n    true", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let mut date_vec: Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ if date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let date_regex\
    \ = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\").unwrap();\n\
    \    if !date_regex.is_match(&date) {\n        return false;\n    }\n    let date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    let month = date_vec[0].parse::<u32>().unwrap();\n\
    \    let day = date_vec[1].parse::<u32>().unwrap();\n    let year = date_vec[2].parse::<u32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if month\
    \ == 2 {\n        if day < 1 || day > 29 {\n            return false;\n      \
    \  }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day < 1 || day > 30 {\n            return false;\n        }\n    }\
    \ else {\n        if day < 1 || day > 31 {\n            return false;\n      \
    \  }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "   \
    \ let mut date_split = date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n\
    \    for i in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month: u32 = match date_vec[0].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ day: u32 = match date_vec[1].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    let year: u32 = match date_vec[2].parse() {\n\
    \        Ok(num) => num,\n        Err(_) => return false,\n    };\n    if month\
    \ < 1 || month > 12 {\n        return false;\n    }\n    if month == 2 {\n   \
    \     if day < 1 || day > 29 {\n            return false;\n        }\n    } else\
    \ if month == 4 || month == 6 || month == 9 || month == 11 {\n        if day <\
    \ 1 || day > 30 {\n            return false;\n        }\n    } else {\n      \
    \  if day < 1 || day > 31 {\n            return false;\n        }\n    }\n   \
    \ if year < 1 {\n        return false;\n    }\n    true", "    let date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: u32 = match date_vec[0].parse() {\n        Ok(num)\
    \ => num,\n        Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_vec[2].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    if month < 1 || month > 12 {\n        return false;\n\
    \    }\n    if month == 2 {\n        if day < 1 || day > 29 {\n            return\
    \ false;\n        }\n    } else if month == 4 || month == 6 || month == 9 || month\
    \ == 11 {\n        if day < 1 || day > 30 {\n            return false;\n     \
    \   }\n    } else {\n        if day < 1 || day > 31 {\n            return false;\n\
    \        }\n    }\n    true", "    let mut valid = true;\n    let mut date_split\
    \ = date.split(\"-\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for\
    \ i in date_split {\n        date_vec.push(i);\n    }\n    if date_vec.len() !=\
    \ 3 {\n        valid = false;\n    } else {\n        let month = date_vec[0].parse::<i32>().unwrap();\n\
    \        let day = date_vec[1].parse::<i32>().unwrap();\n        let year = date_vec[2].parse::<i32>().unwrap();\n\
    \        if month < 1 || month > 12 {\n            valid = false;\n        } else\
    \ if month == 2 {\n            if day < 1 || day > 29 {\n                valid\
    \ = false;\n            }\n        } else if month == 4 || month == 6 || month\
    \ == 9 || month == 11 {\n            if day < 1 || day > 30 {\n              \
    \  valid = false;\n            }\n        } else if day < 1 || day > 31 {\n  \
    \          valid = false;\n        }\n    }\n    valid", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let year = date_vec.pop().unwrap();\n    let month\
    \ = date_vec.pop().unwrap();\n    let day = date_vec.pop().unwrap();\n    if year.len()\
    \ != 4 || month.len() != 2 || day.len() != 2 {\n        return false;\n    }\n\
    \    let year: i32 = year.parse().unwrap();\n    let month: i32 = month.parse().unwrap();\n\
    \    let day: i32 = day.parse().unwrap();\n    if month < 1 || month > 12 {\n\
    \        return false;\n    }\n    if month == 2 {\n        if day < 1 || day\
    \ > 29 {\n            return false;\n        }\n    } else if month == 1 || month\
    \ == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12\
    \ {\n        if day < 1 || day > 31 {\n            return false;\n        }\n\
    \    } else {\n        if day < 1 || day > 30 {\n            return false;\n \
    \       }\n    }\n    return true;", "    let mut date_vec: Vec<&str> = date.split(\"\
    -\").collect();\n    if date_vec.len() != 3 {\n        return false;\n    }\n\
    \    let mut date_vec: Vec<i32> = date_vec.iter().map(|x| x.parse::<i32>().unwrap()).collect();\n\
    \    if date_vec[0] < 1 || date_vec[0] > 12 {\n        return false;\n    }\n\
    \    if date_vec[0] == 2 {\n        if date_vec[1] < 1 || date_vec[1] > 29 {\n\
    \            return false;\n        }\n    } else if date_vec[0] == 1 || date_vec[0]\
    \ == 3 || date_vec[0] == 5 || date_vec[0] == 7 || date_vec[0] == 8 || date_vec[0]\
    \ == 10 || date_vec[0] == 12 {\n        if date_vec[1] < 1 || date_vec[1] > 31\
    \ {\n            return false;\n        }\n    } else {\n        if date_vec[1]\
    \ < 1 || date_vec[1] > 30 {\n            return false;\n        }\n    }\n   \
    \ if date_vec[2] < 1 {\n        return false;\n    }\n    true", "    let mut\
    \ date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() !=\
    \ 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 1 {\n        return false;\n    }\n    true", "  \
    \  let mut date_iter = date.split('-');\n    let mut date_vec: Vec<u32> = Vec::new();\n\
    \    for i in date_iter {\n        match i.parse::<u32>() {\n            Ok(num)\
    \ => date_vec.push(num),\n            Err(_) => return false,\n        }\n   \
    \ }\n    if date_vec.len() != 3 {\n        return false;\n    }\n    let month\
    \ = date_vec[0];\n    let day = date_vec[1];\n    let year = date_vec[2];\n  \
    \  if month > 12 || month < 1 {\n        return false;\n    }\n    if day > 31\
    \ || day < 1 {\n        return false;\n    }\n    if month == 2 && day > 29 {\n\
    \        return false;\n    }\n    if (month == 4 || month == 6 || month == 9\
    \ || month == 11) && day > 30 {\n        return false;\n    }\n    if year < 1000\
    \ || year > 9999 {\n        return false;\n    }\n    true", "    let mut date_vec:\
    \ Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n   \
    \     return false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n\
    \    let day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let mut date_split = date.split(\"\
    -\");\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split\
    \ {\n        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if month == 4 || month == 6 || month ==\
    \ 9 || month == 11 {\n        if day > 30 {\n            return false;\n     \
    \   }\n    }\n    if year < 1 {\n        return false;\n    }\n    return true;",
  "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n\
    \    }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month\
    \ = date_vec[0].parse::<i32>().unwrap();\n    let day = date_vec[1].parse::<i32>().unwrap();\n\
    \    let year = date_vec[2].parse::<i32>().unwrap();\n    if month < 1 || month\
    \ > 12 {\n        return false;\n    }\n    if month == 2 {\n        if day <\
    \ 1 || day > 29 {\n            return false;\n        }\n    } else if month ==\
    \ 4 || month == 6 || month == 9 || month == 11 {\n        if day < 1 || day >\
    \ 30 {\n            return false;\n        }\n    } else {\n        if day < 1\
    \ || day > 31 {\n            return false;\n        }\n    }\n    if year < 1\
    \ {\n        return false;\n    }\n    true", "    let mut date_vec: Vec<&str>\
    \ = date.split(\"-\").collect();\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month = date_vec[0].parse::<i32>().unwrap();\n    let\
    \ day = date_vec[1].parse::<i32>().unwrap();\n    let year = date_vec[2].parse::<i32>().unwrap();\n\
    \    if month < 1 || month > 12 {\n        return false;\n    }\n    if day <\
    \ 1 || day > 31 {\n        return false;\n    }\n    if month == 2 && day > 29\
    \ {\n        return false;\n    }\n    if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) && day > 30 {\n        return false;\n    }\n    if year <\
    \ 0 {\n        return false;\n    }\n    true", "    let re = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if !re.is_match(&date) {\n        return false;\n    }\n\
    \    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month: u32\
    \ = date_vec[0].parse().unwrap();\n    let day: u32 = date_vec[1].parse().unwrap();\n\
    \    let year: u32 = date_vec[2].parse().unwrap();\n    let is_leap_year = (year\
    \ % 4 == 0 && year % 100 != 0) || year % 400 == 0;\n    match month {\n      \
    \  1 | 3 | 5 | 7 | 8 | 10 | 12 => day <= 31,\n        4 | 6 | 9 | 11 => day <=\
    \ 30,\n        2 => {\n            if is_leap_year {\n                day <= 29\n\
    \            } else {\n                day <= 28\n            }\n        }\n \
    \       _ => false,\n    }", "    let mut date_split = date.split(\"-\");\n  \
    \  let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split {\n    \
    \    date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return false;\n\
    \    }\n    let month = date_vec[0].parse::<u32>().unwrap();\n    let day = date_vec[1].parse::<u32>().unwrap();\n\
    \    let year = date_vec[2].parse::<u32>().unwrap();\n    if month > 12 || month\
    \ < 1 {\n        return false;\n    }\n    if day > 31 || day < 1 {\n        return\
    \ false;\n    }\n    if month == 2 && day > 29 {\n        return false;\n    }\n\
    \    if (month == 4 || month == 6 || month == 9 || month == 11) && day > 30 {\n\
    \        return false;\n    }\n    if year < 1000 || year > 9999 {\n        return\
    \ false;\n    }\n    return true;", "    let mut date_split = date.split(\"-\"\
    );\n    let mut date_vec: Vec<&str> = Vec::new();\n    for i in date_split {\n\
    \        date_vec.push(i);\n    }\n    if date_vec.len() != 3 {\n        return\
    \ false;\n    }\n    let month: u32 = match date_vec[0].parse() {\n        Ok(num)\
    \ => num,\n        Err(_) => return false,\n    };\n    let day: u32 = match date_vec[1].parse()\
    \ {\n        Ok(num) => num,\n        Err(_) => return false,\n    };\n    let\
    \ year: u32 = match date_vec[2].parse() {\n        Ok(num) => num,\n        Err(_)\
    \ => return false,\n    };\n    if month < 1 || month > 12 {\n        return false;\n\
    \    }\n    if day < 1 || day > 31 {\n        return false;\n    }\n    if month\
    \ == 2 && day > 29 {\n        return false;\n    }\n    if (month == 4 || month\
    \ == 6 || month == 9 || month == 11) && day > 30 {\n        return false;\n  \
    \  }\n    if year < 2000 || year > 3000 {\n        return false;\n    }\n    true",
  "    let mut date_vec: Vec<&str> = date.split(\"-\").collect();\n    if date_vec.len()\
    \ != 3 {\n        return false;\n    }\n    let month = date_vec[0].parse::<u32>().unwrap();\n\
    \    let day = date_vec[1].parse::<u32>().unwrap();\n    let year = date_vec[2].parse::<u32>().unwrap();\n\
    \    if month > 12 || month < 1 {\n        return false;\n    }\n    if day >\
    \ 31 || day < 1 {\n        return false;\n    }\n    if (month == 4 || month ==\
    \ 6 || month == 9 || month == 11) && day > 30 {\n        return false;\n    }\n\
    \    if month == 2 && day > 29 {\n        return false;\n    }\n    if month ==\
    \ 2 && day == 29 && !is_leap_year(year) {\n        return false;\n    }\n    true",
  "    let date_regex = Regex::new(r\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$\").unwrap();\n    if !date_regex.is_match(&date) {\n        return false;\n\
    \    }\n    let date_vec: Vec<&str> = date.split(\"-\").collect();\n    let month\
    \ = date_vec[0].parse::<u32>().unwrap();\n    let day = date_vec[1].parse::<u32>().unwrap();\n\
    \    if month == 2 {\n        if day > 29 {\n            return false;\n     \
    \   }\n    } else if month == 4 || month == 6 || month == 9 || month == 11 {\n\
    \        if day > 30 {\n            return false;\n        }\n    } else if day\
    \ > 31 {\n        return false;\n    }\n    true"]
stop_tokens:
- "\n}"
